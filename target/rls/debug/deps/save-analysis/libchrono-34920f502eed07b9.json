{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20","program":"/Users/zevkent/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","chrono","--edition=2018","/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=34920f502eed07b9","-C","extra-filename=-34920f502eed07b9","--out-dir","/Users/zevkent/Rust-Chainlink-EA-API/target/rls/debug/deps","-L","dependency=/Users/zevkent/Rust-Chainlink-EA-API/target/rls/debug/deps","--extern","num_integer=/Users/zevkent/Rust-Chainlink-EA-API/target/rls/debug/deps/libnum_integer-f732491ff01ad63b.rmeta","--extern","num_traits=/Users/zevkent/Rust-Chainlink-EA-API/target/rls/debug/deps/libnum_traits-5a870d734e90a107.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/zevkent/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/zevkent/Rust-Chainlink-EA-API/target/rls/debug/deps/libchrono-34920f502eed07b9.rmeta"},"prelude":{"crate_id":{"name":"chrono","disambiguator":[3822156796903495852,0]},"crate_root":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src","external_crates":[{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[10014640881818692046,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[15800718316297612287,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[6961639640463363723,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","num":4,"id":{"name":"num_integer","disambiguator":[18321415314517967736,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","num":5,"id":{"name":"num_traits","disambiguator":[9607812822631374760,0]}}],"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":76,"byte_end":23144,"line_start":4,"line_end":542,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":2024},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":20321,"byte_end":20329,"line_start":432,"line_end":432,"column_start":18,"column_end":26},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2058},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":20686,"byte_end":20690,"line_start":445,"line_end":445,"column_start":20,"column_end":24},"alias_span":null,"name":"Date","value":"","parent":{"krate":0,"index":96}},{"kind":"Use","ref_id":{"krate":0,"index":1887},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":20901,"byte_end":20912,"line_start":453,"line_end":453,"column_start":20,"column_end":31},"alias_span":null,"name":"SubsecRound","value":"","parent":{"krate":0,"index":96}},{"kind":"Use","ref_id":{"krate":0,"index":2089},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":20956,"byte_end":20964,"line_start":455,"line_end":455,"column_start":21,"column_end":29},"alias_span":null,"name":"DateTime","value":"","parent":{"krate":0,"index":96}},{"kind":"Use","ref_id":{"krate":0,"index":2065},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":20966,"byte_end":20979,"line_start":455,"line_end":455,"column_start":31,"column_end":44},"alias_span":null,"name":"SecondsFormat","value":"","parent":{"krate":0,"index":96}},{"kind":"Use","ref_id":{"krate":0,"index":1987},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":21024,"byte_end":21032,"line_start":457,"line_end":457,"column_start":21,"column_end":29},"alias_span":null,"name":"Datelike","value":"","parent":{"krate":0,"index":96}},{"kind":"Use","ref_id":{"krate":0,"index":2673},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":21034,"byte_end":21039,"line_start":457,"line_end":457,"column_start":31,"column_end":36},"alias_span":null,"name":"Month","value":"","parent":{"krate":0,"index":96}},{"kind":"Use","ref_id":{"krate":0,"index":2006},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":21041,"byte_end":21049,"line_start":457,"line_end":457,"column_start":38,"column_end":46},"alias_span":null,"name":"Timelike","value":"","parent":{"krate":0,"index":96}},{"kind":"Use","ref_id":{"krate":0,"index":2629},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":21051,"byte_end":21058,"line_start":457,"line_end":457,"column_start":48,"column_end":55},"alias_span":null,"name":"Weekday","value":"","parent":{"krate":0,"index":96}},{"kind":"Use","ref_id":{"krate":0,"index":2551},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":21103,"byte_end":21114,"line_start":459,"line_end":459,"column_start":21,"column_end":32},"alias_span":null,"name":"FixedOffset","value":"","parent":{"krate":0,"index":96}},{"kind":"Use","ref_id":{"krate":0,"index":2566},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":21116,"byte_end":21119,"line_start":459,"line_end":459,"column_start":34,"column_end":37},"alias_span":null,"name":"Utc","value":"","parent":{"krate":0,"index":96}},{"kind":"Use","ref_id":{"krate":0,"index":2567},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":21116,"byte_end":21119,"line_start":459,"line_end":459,"column_start":34,"column_end":37},"alias_span":null,"name":"Utc","value":"","parent":{"krate":0,"index":96}},{"kind":"Use","ref_id":{"krate":0,"index":2397},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":21164,"byte_end":21173,"line_start":461,"line_end":461,"column_start":21,"column_end":30},"alias_span":null,"name":"NaiveDate","value":"","parent":{"krate":0,"index":96}},{"kind":"Use","ref_id":{"krate":0,"index":2458},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":21175,"byte_end":21188,"line_start":461,"line_end":461,"column_start":32,"column_end":45},"alias_span":null,"name":"NaiveDateTime","value":"","parent":{"krate":0,"index":96}},{"kind":"Use","ref_id":{"krate":0,"index":2531},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":21190,"byte_end":21199,"line_start":461,"line_end":461,"column_start":47,"column_end":56},"alias_span":null,"name":"NaiveTime","value":"","parent":{"krate":0,"index":96}},{"kind":"Use","ref_id":{"krate":0,"index":1812},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":21244,"byte_end":21250,"line_start":463,"line_end":463,"column_start":21,"column_end":27},"alias_span":null,"name":"Offset","value":"","parent":{"krate":0,"index":96}},{"kind":"Use","ref_id":{"krate":0,"index":1814},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":21252,"byte_end":21260,"line_start":463,"line_end":463,"column_start":29,"column_end":37},"alias_span":null,"name":"TimeZone","value":"","parent":{"krate":0,"index":96}},{"kind":"Use","ref_id":{"krate":0,"index":2058},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":21486,"byte_end":21490,"line_start":478,"line_end":478,"column_start":16,"column_end":20},"alias_span":null,"name":"Date","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":203},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":21492,"byte_end":21500,"line_start":478,"line_end":478,"column_start":22,"column_end":30},"alias_span":null,"name":"MAX_DATE","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":202},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":21502,"byte_end":21510,"line_start":478,"line_end":478,"column_start":32,"column_end":40},"alias_span":null,"name":"MIN_DATE","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2089},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":21650,"byte_end":21658,"line_start":484,"line_end":484,"column_start":20,"column_end":28},"alias_span":null,"name":"DateTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2065},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":21660,"byte_end":21673,"line_start":484,"line_end":484,"column_start":30,"column_end":43},"alias_span":null,"name":"SecondsFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":417},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":21675,"byte_end":21687,"line_start":484,"line_end":484,"column_start":45,"column_end":57},"alias_span":null,"name":"MAX_DATETIME","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":416},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":21689,"byte_end":21701,"line_start":484,"line_end":484,"column_start":59,"column_end":71},"alias_span":null,"name":"MIN_DATETIME","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":815},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":114483,"byte_end":114488,"line_start":58,"line_end":58,"column_start":16,"column_end":21},"alias_span":null,"name":"parse","value":"","parent":{"krate":0,"index":566}},{"kind":"Use","ref_id":{"krate":0,"index":2340},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":114506,"byte_end":114512,"line_start":59,"line_end":59,"column_start":17,"column_end":23},"alias_span":null,"name":"Parsed","value":"","parent":{"krate":0,"index":566}},{"kind":"Use","ref_id":{"krate":0,"index":2373},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":114622,"byte_end":114635,"line_start":63,"line_end":63,"column_start":19,"column_end":32},"alias_span":null,"name":"StrftimeItems","value":"","parent":{"krate":0,"index":566}},{"kind":"Use","ref_id":{"krate":0,"index":2297},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":21817,"byte_end":21827,"line_start":490,"line_end":490,"column_start":18,"column_end":28},"alias_span":null,"name":"ParseError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":613},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":21829,"byte_end":21840,"line_start":490,"line_end":490,"column_start":30,"column_end":41},"alias_span":null,"name":"ParseResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2397},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/mod.rs","byte_start":292399,"byte_end":292408,"line_start":14,"line_end":14,"column_start":22,"column_end":31},"alias_span":null,"name":"NaiveDate","value":"","parent":{"krate":0,"index":968}},{"kind":"Use","ref_id":{"krate":0,"index":2392},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/mod.rs","byte_start":292410,"byte_end":292419,"line_start":14,"line_end":14,"column_start":33,"column_end":42},"alias_span":null,"name":"NaiveWeek","value":"","parent":{"krate":0,"index":968}},{"kind":"Use","ref_id":{"krate":0,"index":1077},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/mod.rs","byte_start":292421,"byte_end":292429,"line_start":14,"line_end":14,"column_start":44,"column_end":52},"alias_span":null,"name":"MAX_DATE","value":"","parent":{"krate":0,"index":968}},{"kind":"Use","ref_id":{"krate":0,"index":1076},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/mod.rs","byte_start":292431,"byte_end":292439,"line_start":14,"line_end":14,"column_start":54,"column_end":62},"alias_span":null,"name":"MIN_DATE","value":"","parent":{"krate":0,"index":968}},{"kind":"Use","ref_id":{"krate":0,"index":2458},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/mod.rs","byte_start":292597,"byte_end":292610,"line_start":19,"line_end":19,"column_start":26,"column_end":39},"alias_span":null,"name":"NaiveDateTime","value":"","parent":{"krate":0,"index":968}},{"kind":"Use","ref_id":{"krate":0,"index":1276},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/mod.rs","byte_start":292612,"byte_end":292624,"line_start":19,"line_end":19,"column_start":41,"column_end":53},"alias_span":null,"name":"MAX_DATETIME","value":"","parent":{"krate":0,"index":968}},{"kind":"Use","ref_id":{"krate":0,"index":1275},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/mod.rs","byte_start":292626,"byte_end":292638,"line_start":19,"line_end":19,"column_start":55,"column_end":67},"alias_span":null,"name":"MIN_DATETIME","value":"","parent":{"krate":0,"index":968}},{"kind":"Use","ref_id":{"krate":0,"index":2515},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/mod.rs","byte_start":292664,"byte_end":292671,"line_start":20,"line_end":20,"column_start":24,"column_end":31},"alias_span":null,"name":"IsoWeek","value":"","parent":{"krate":0,"index":968}},{"kind":"Use","ref_id":{"krate":0,"index":2531},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/mod.rs","byte_start":292693,"byte_end":292702,"line_start":21,"line_end":21,"column_start":21,"column_end":30},"alias_span":null,"name":"NaiveTime","value":"","parent":{"krate":0,"index":968}},{"kind":"Use","ref_id":{"krate":0,"index":2515},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":21893,"byte_end":21900,"line_start":494,"line_end":494,"column_start":17,"column_end":24},"alias_span":null,"name":"IsoWeek","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2397},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":21902,"byte_end":21911,"line_start":494,"line_end":494,"column_start":26,"column_end":35},"alias_span":null,"name":"NaiveDate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2458},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":21913,"byte_end":21926,"line_start":494,"line_end":494,"column_start":37,"column_end":50},"alias_span":null,"name":"NaiveDateTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2531},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":21928,"byte_end":21937,"line_start":494,"line_end":494,"column_start":52,"column_end":61},"alias_span":null,"name":"NaiveTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2392},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":21939,"byte_end":21948,"line_start":494,"line_end":494,"column_start":63,"column_end":72},"alias_span":null,"name":"NaiveWeek","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2551},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":555511,"byte_end":555522,"line_start":29,"line_end":29,"column_start":22,"column_end":33},"alias_span":null,"name":"FixedOffset","value":"","parent":{"krate":0,"index":1629}},{"kind":"Use","ref_id":{"krate":0,"index":2566},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":555645,"byte_end":555648,"line_start":37,"line_end":37,"column_start":20,"column_end":23},"alias_span":null,"name":"Utc","value":"","parent":{"krate":0,"index":1629}},{"kind":"Use","ref_id":{"krate":0,"index":2567},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":555645,"byte_end":555648,"line_start":37,"line_end":37,"column_start":20,"column_end":23},"alias_span":null,"name":"Utc","value":"","parent":{"krate":0,"index":1629}},{"kind":"Use","ref_id":{"krate":0,"index":2551},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":22070,"byte_end":22081,"line_start":501,"line_end":501,"column_start":18,"column_end":29},"alias_span":null,"name":"FixedOffset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2577},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":22083,"byte_end":22094,"line_start":501,"line_end":501,"column_start":31,"column_end":42},"alias_span":null,"name":"LocalResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1812},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":22096,"byte_end":22102,"line_start":501,"line_end":501,"column_start":44,"column_end":50},"alias_span":null,"name":"Offset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1814},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":22104,"byte_end":22112,"line_start":501,"line_end":501,"column_start":52,"column_end":60},"alias_span":null,"name":"TimeZone","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2566},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":22114,"byte_end":22117,"line_start":501,"line_end":501,"column_start":62,"column_end":65},"alias_span":null,"name":"Utc","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2567},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":22114,"byte_end":22117,"line_start":501,"line_end":501,"column_start":62,"column_end":65},"alias_span":null,"name":"Utc","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1895},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":22148,"byte_end":22161,"line_start":504,"line_end":504,"column_start":17,"column_end":30},"alias_span":null,"name":"DurationRound","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2611},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":22163,"byte_end":22176,"line_start":504,"line_end":504,"column_start":32,"column_end":45},"alias_span":null,"name":"RoundingError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1887},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":22178,"byte_end":22189,"line_start":504,"line_end":504,"column_start":47,"column_end":58},"alias_span":null,"name":"SubsecRound","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2665},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":22224,"byte_end":22241,"line_start":507,"line_end":507,"column_start":19,"column_end":36},"alias_span":null,"name":"ParseWeekdayError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2629},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":22243,"byte_end":22250,"line_start":507,"line_end":507,"column_start":38,"column_end":45},"alias_span":null,"name":"Weekday","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2673},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":22281,"byte_end":22286,"line_start":510,"line_end":510,"column_start":17,"column_end":22},"alias_span":null,"name":"Month","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2724},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":22288,"byte_end":22294,"line_start":510,"line_end":510,"column_start":24,"column_end":30},"alias_span":null,"name":"Months","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2725},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":22288,"byte_end":22294,"line_start":510,"line_end":510,"column_start":24,"column_end":30},"alias_span":null,"name":"Months","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2744},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":22296,"byte_end":22311,"line_start":510,"line_end":510,"column_start":32,"column_end":47},"alias_span":null,"name":"ParseMonthError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1987},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":22344,"byte_end":22352,"line_start":513,"line_end":513,"column_start":18,"column_end":26},"alias_span":null,"name":"Datelike","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2006},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":22354,"byte_end":22362,"line_start":513,"line_end":513,"column_start":28,"column_end":36},"alias_span":null,"name":"Timelike","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":76,"byte_end":23144,"line_start":4,"line_end":542,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":318},{"krate":0,"index":321},{"krate":0,"index":324},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":557},{"krate":0,"index":560},{"krate":0,"index":563},{"krate":0,"index":566},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":965},{"krate":0,"index":968},{"krate":0,"index":1613},{"krate":0,"index":1614},{"krate":0,"index":1617},{"krate":0,"index":1620},{"krate":0,"index":1623},{"krate":0,"index":1626},{"krate":0,"index":1629},{"krate":0,"index":1839},{"krate":0,"index":1840},{"krate":0,"index":1843},{"krate":0,"index":1846},{"krate":0,"index":1849},{"krate":0,"index":1852},{"krate":0,"index":1853},{"krate":0,"index":1855},{"krate":0,"index":1915},{"krate":0,"index":1916},{"krate":0,"index":1919},{"krate":0,"index":1922},{"krate":0,"index":1925},{"krate":0,"index":1945},{"krate":0,"index":1946},{"krate":0,"index":1949},{"krate":0,"index":1952},{"krate":0,"index":1969},{"krate":0,"index":1970},{"krate":0,"index":1973},{"krate":0,"index":1974},{"krate":0,"index":1976},{"krate":0,"index":1979},{"krate":0,"index":2017},{"krate":0,"index":2018},{"krate":0,"index":2021}],"decl_id":null,"docs":" # Chrono: Date and Time for Rust","sig":null,"attributes":[{"value":"/ # Chrono: Date and Time for Rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":76,"byte_end":112,"line_start":4,"line_end":4,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":113,"byte_end":116,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ It aims to be a feature-complete superset of","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":117,"byte_end":165,"line_start":6,"line_end":6,"column_start":1,"column_end":49}},{"value":"/ the [time](https://github.com/rust-lang-deprecated/time) library.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":166,"byte_end":235,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/ In particular,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":236,"byte_end":254,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":255,"byte_end":258,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * Chrono strictly adheres to ISO 8601.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":259,"byte_end":301,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"/ * Chrono is timezone-aware by default, with separate timezone-naive types.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":302,"byte_end":380,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ * Chrono is space-optimal and (while not being the primary goal) reasonably efficient.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":381,"byte_end":471,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":472,"byte_end":475,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ There were several previous attempts to bring a good date and time library to Rust,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":476,"byte_end":563,"line_start":14,"line_end":14,"column_start":1,"column_end":88}},{"value":"/ which Chrono builds upon and should acknowledge:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":564,"byte_end":616,"line_start":15,"line_end":15,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":617,"byte_end":620,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ * [Initial research on","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":621,"byte_end":647,"line_start":17,"line_end":17,"column_start":1,"column_end":27}},{"value":"/    the wiki](https://github.com/rust-lang/rust-wiki-backup/blob/master/Lib-datetime.md)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":648,"byte_end":739,"line_start":18,"line_end":18,"column_start":1,"column_end":92}},{"value":"/ * Dietrich Epp's [datetime-rs](https://github.com/depp/datetime-rs)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":740,"byte_end":811,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/ * Luis de Bethencourt's [rust-datetime](https://github.com/luisbg/rust-datetime)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":812,"byte_end":896,"line_start":20,"line_end":20,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":897,"byte_end":900,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Any significant changes to Chrono are documented in","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":901,"byte_end":956,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"/ the [`CHANGELOG.md`](https://github.com/chronotope/chrono/blob/main/CHANGELOG.md) file.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":957,"byte_end":1048,"line_start":23,"line_end":23,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":1049,"byte_end":1052,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":1053,"byte_end":1065,"line_start":25,"line_end":25,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":1066,"byte_end":1069,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Put this in your `Cargo.toml`:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":1070,"byte_end":1104,"line_start":27,"line_end":27,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":1105,"byte_end":1108,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":1109,"byte_end":1120,"line_start":29,"line_end":29,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":1121,"byte_end":1139,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"/ chrono = \"0.4\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":1140,"byte_end":1158,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":1159,"byte_end":1166,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":1167,"byte_end":1170,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ### Features","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":1171,"byte_end":1187,"line_start":34,"line_end":34,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":1188,"byte_end":1191,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Chrono supports various runtime environments and operating systems, and has","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":1192,"byte_end":1271,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ several features that may be enabled or disabled.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":1272,"byte_end":1325,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":1326,"byte_end":1329,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Default features:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":1330,"byte_end":1351,"line_start":39,"line_end":39,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":1352,"byte_end":1355,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ - `alloc`: Enable features that depend on allocation (primarily string formatting)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":1356,"byte_end":1442,"line_start":41,"line_end":41,"column_start":1,"column_end":87}},{"value":"/ - `std`: Enables functionality that depends on the standard library. This","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":1443,"byte_end":1520,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/   is a superset of `alloc` and adds interoperation with standard library types","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":1521,"byte_end":1603,"line_start":43,"line_end":43,"column_start":1,"column_end":83}},{"value":"/   and traits.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":1604,"byte_end":1621,"line_start":44,"line_end":44,"column_start":1,"column_end":18}},{"value":"/ - `clock`: Enables reading the system time (`now`) that depends on the standard library for","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":1622,"byte_end":1717,"line_start":45,"line_end":45,"column_start":1,"column_end":96}},{"value":"/ UNIX-like operating systems and the Windows API (`winapi`) for Windows.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":1718,"byte_end":1793,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":1794,"byte_end":1797,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Optional features:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":1798,"byte_end":1820,"line_start":48,"line_end":48,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":1821,"byte_end":1824,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ - [`serde`][]: Enable serialization/deserialization via serde.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":1825,"byte_end":1891,"line_start":50,"line_end":50,"column_start":1,"column_end":67}},{"value":"/ - `unstable-locales`: Enable localization. This adds various methods with a","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":1892,"byte_end":1971,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/   `_localized` suffix. The implementation and API may change or even be","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":1972,"byte_end":2047,"line_start":52,"line_end":52,"column_start":1,"column_end":76}},{"value":"/   removed in a patch release. Feedback welcome.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":2048,"byte_end":2099,"line_start":53,"line_end":53,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":2100,"byte_end":2103,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ [`serde`]: https://github.com/serde-rs/serde","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":2104,"byte_end":2152,"line_start":55,"line_end":55,"column_start":1,"column_end":49}},{"value":"/ [wasm-bindgen]: https://github.com/rustwasm/wasm-bindgen","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":2153,"byte_end":2213,"line_start":56,"line_end":56,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":2214,"byte_end":2217,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ See the [cargo docs][] for examples of specifying features.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":2218,"byte_end":2281,"line_start":58,"line_end":58,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":2282,"byte_end":2285,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ [cargo docs]: https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#choosing-features","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":2286,"byte_end":2392,"line_start":60,"line_end":60,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":2393,"byte_end":2396,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Overview","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":2397,"byte_end":2412,"line_start":62,"line_end":62,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":2413,"byte_end":2416,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ### Duration","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":2417,"byte_end":2433,"line_start":64,"line_end":64,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":2434,"byte_end":2437,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Chrono currently uses its own [`Duration`] type to represent the magnitude","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":2438,"byte_end":2516,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ of a time span. Since this has the same name as the newer, standard type for","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":2517,"byte_end":2597,"line_start":67,"line_end":67,"column_start":1,"column_end":81}},{"value":"/ duration, the reference will refer this type as `OldDuration`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":2598,"byte_end":2664,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":2665,"byte_end":2668,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ Note that this is an \"accurate\" duration represented as seconds and","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":2669,"byte_end":2740,"line_start":70,"line_end":70,"column_start":1,"column_end":72}},{"value":"/ nanoseconds and does not represent \"nominal\" components such as days or","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":2741,"byte_end":2816,"line_start":71,"line_end":71,"column_start":1,"column_end":76}},{"value":"/ months.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":2817,"byte_end":2828,"line_start":72,"line_end":72,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":2829,"byte_end":2832,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ When the `oldtime` feature is enabled, [`Duration`] is an alias for the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":2833,"byte_end":2908,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ [`time::Duration`](https://docs.rs/time/0.1.40/time/struct.Duration.html)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":2909,"byte_end":2986,"line_start":75,"line_end":75,"column_start":1,"column_end":78}},{"value":"/ type from v0.1 of the time crate. time v0.1 is deprecated, so new code","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":2987,"byte_end":3061,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"/ should disable the `oldtime` feature and use the `chrono::Duration` type","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":3062,"byte_end":3138,"line_start":77,"line_end":77,"column_start":1,"column_end":77}},{"value":"/ instead. The `oldtime` feature is enabled by default for backwards","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":3139,"byte_end":3209,"line_start":78,"line_end":78,"column_start":1,"column_end":71}},{"value":"/ compatibility, but future versions of Chrono are likely to remove the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":3210,"byte_end":3283,"line_start":79,"line_end":79,"column_start":1,"column_end":74}},{"value":"/ feature entirely.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":3284,"byte_end":3305,"line_start":80,"line_end":80,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":3306,"byte_end":3309,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ Chrono does not yet natively support","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":3310,"byte_end":3350,"line_start":82,"line_end":82,"column_start":1,"column_end":41}},{"value":"/ the standard [`Duration`](https://doc.rust-lang.org/std/time/struct.Duration.html) type,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":3351,"byte_end":3443,"line_start":83,"line_end":83,"column_start":1,"column_end":93}},{"value":"/ but it will be supported in the future.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":3444,"byte_end":3487,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/ Meanwhile you can convert between two types with","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":3488,"byte_end":3540,"line_start":85,"line_end":85,"column_start":1,"column_end":53}},{"value":"/ [`Duration::from_std`](https://docs.rs/time/0.1.40/time/struct.Duration.html#method.from_std)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":3541,"byte_end":3638,"line_start":86,"line_end":86,"column_start":1,"column_end":98}},{"value":"/ and","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":3639,"byte_end":3646,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/ [`Duration::to_std`](https://docs.rs/time/0.1.40/time/struct.Duration.html#method.to_std)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":3647,"byte_end":3740,"line_start":88,"line_end":88,"column_start":1,"column_end":94}},{"value":"/ methods.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":3741,"byte_end":3753,"line_start":89,"line_end":89,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":3754,"byte_end":3757,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ### Date and Time","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":3758,"byte_end":3779,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":3780,"byte_end":3783,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ Chrono provides a","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":3784,"byte_end":3805,"line_start":93,"line_end":93,"column_start":1,"column_end":22}},{"value":"/ [**`DateTime`**](./struct.DateTime.html)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":3806,"byte_end":3850,"line_start":94,"line_end":94,"column_start":1,"column_end":45}},{"value":"/ type to represent a date and a time in a timezone.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":3851,"byte_end":3905,"line_start":95,"line_end":95,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":3906,"byte_end":3909,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ For more abstract moment-in-time tracking such as internal timekeeping","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":3910,"byte_end":3984,"line_start":97,"line_end":97,"column_start":1,"column_end":75}},{"value":"/ that is unconcerned with timezones, consider","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":3985,"byte_end":4033,"line_start":98,"line_end":98,"column_start":1,"column_end":49}},{"value":"/ [`time::SystemTime`](https://doc.rust-lang.org/std/time/struct.SystemTime.html),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":4034,"byte_end":4118,"line_start":99,"line_end":99,"column_start":1,"column_end":85}},{"value":"/ which tracks your system clock, or","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":4119,"byte_end":4157,"line_start":100,"line_end":100,"column_start":1,"column_end":39}},{"value":"/ [`time::Instant`](https://doc.rust-lang.org/std/time/struct.Instant.html), which","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":4158,"byte_end":4242,"line_start":101,"line_end":101,"column_start":1,"column_end":85}},{"value":"/ is an opaque but monotonically-increasing representation of a moment in time.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":4243,"byte_end":4324,"line_start":102,"line_end":102,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":4325,"byte_end":4328,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ `DateTime` is timezone-aware and must be constructed from","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":4329,"byte_end":4390,"line_start":104,"line_end":104,"column_start":1,"column_end":62}},{"value":"/ the [**`TimeZone`**](./offset/trait.TimeZone.html) object,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":4391,"byte_end":4453,"line_start":105,"line_end":105,"column_start":1,"column_end":63}},{"value":"/ which defines how the local date is converted to and back from the UTC date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":4454,"byte_end":4534,"line_start":106,"line_end":106,"column_start":1,"column_end":81}},{"value":"/ There are three well-known `TimeZone` implementations:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":4535,"byte_end":4593,"line_start":107,"line_end":107,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":4594,"byte_end":4597,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ * [**`Utc`**](./offset/struct.Utc.html) specifies the UTC time zone. It is most efficient.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":4598,"byte_end":4692,"line_start":109,"line_end":109,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":4693,"byte_end":4696,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ * [**`Local`**](./offset/struct.Local.html) specifies the system local time zone.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":4697,"byte_end":4782,"line_start":111,"line_end":111,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":4783,"byte_end":4786,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ * [**`FixedOffset`**](./offset/struct.FixedOffset.html) specifies","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":4787,"byte_end":4856,"line_start":113,"line_end":113,"column_start":1,"column_end":70}},{"value":"/   an arbitrary, fixed time zone such as UTC+09:00 or UTC-10:30.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":4857,"byte_end":4924,"line_start":114,"line_end":114,"column_start":1,"column_end":68}},{"value":"/   This often results from the parsed textual date and time.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":4925,"byte_end":4988,"line_start":115,"line_end":115,"column_start":1,"column_end":64}},{"value":"/   Since it stores the most information and does not depend on the system environment,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":4989,"byte_end":5078,"line_start":116,"line_end":116,"column_start":1,"column_end":90}},{"value":"/   you would want to normalize other `TimeZone`s into this type.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":5079,"byte_end":5146,"line_start":117,"line_end":117,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":5147,"byte_end":5150,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ `DateTime`s with different `TimeZone` types are distinct and do not mix,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":5151,"byte_end":5227,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/ but can be converted to each other using","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":5228,"byte_end":5272,"line_start":120,"line_end":120,"column_start":1,"column_end":45}},{"value":"/ the [`DateTime::with_timezone`](./struct.DateTime.html#method.with_timezone) method.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":5273,"byte_end":5361,"line_start":121,"line_end":121,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":5362,"byte_end":5365,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ You can get the current date and time in the UTC time zone","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":5366,"byte_end":5428,"line_start":123,"line_end":123,"column_start":1,"column_end":63}},{"value":"/ ([`Utc::now()`](./offset/struct.Utc.html#method.now))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":5429,"byte_end":5486,"line_start":124,"line_end":124,"column_start":1,"column_end":58}},{"value":"/ or in the local time zone","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":5487,"byte_end":5516,"line_start":125,"line_end":125,"column_start":1,"column_end":30}},{"value":"/ ([`Local::now()`](./offset/struct.Local.html#method.now)).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":5517,"byte_end":5579,"line_start":126,"line_end":126,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":5580,"byte_end":5583,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":5584,"byte_end":5595,"line_start":128,"line_end":128,"column_start":1,"column_end":12}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":5596,"byte_end":5623,"line_start":129,"line_end":129,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":5624,"byte_end":5627,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ let utc: DateTime<Utc> = Utc::now();       // e.g. `2014-11-28T12:45:59.324310806Z`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":5628,"byte_end":5715,"line_start":131,"line_end":131,"column_start":1,"column_end":88}},{"value":"/ let local: DateTime<Local> = Local::now(); // e.g. `2014-11-28T21:45:59.324310806+09:00`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":5716,"byte_end":5808,"line_start":132,"line_end":132,"column_start":1,"column_end":93}},{"value":"/ # let _ = utc; let _ = local;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":5809,"byte_end":5842,"line_start":133,"line_end":133,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":5843,"byte_end":5850,"line_start":134,"line_end":134,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":5851,"byte_end":5854,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ Alternatively, you can create your own date and time.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":5855,"byte_end":5912,"line_start":136,"line_end":136,"column_start":1,"column_end":58}},{"value":"/ This is a bit verbose due to Rust's lack of function and method overloading,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":5913,"byte_end":5993,"line_start":137,"line_end":137,"column_start":1,"column_end":81}},{"value":"/ but in turn we get a rich combination of initialization methods.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":5994,"byte_end":6062,"line_start":138,"line_end":138,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":6063,"byte_end":6066,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":6067,"byte_end":6078,"line_start":140,"line_end":140,"column_start":1,"column_end":12}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":6079,"byte_end":6106,"line_start":141,"line_end":141,"column_start":1,"column_end":28}},{"value":"/ use chrono::offset::LocalResult;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":6107,"byte_end":6143,"line_start":142,"line_end":142,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":6144,"byte_end":6147,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ let dt = Utc.ymd(2014, 7, 8).and_hms(9, 10, 11); // `2014-07-08T09:10:11Z`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":6148,"byte_end":6226,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ // July 8 is 188th day of the year 2014 (`o` for \"ordinal\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":6227,"byte_end":6290,"line_start":145,"line_end":145,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(dt, Utc.yo(2014, 189).and_hms(9, 10, 11));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":6291,"byte_end":6348,"line_start":146,"line_end":146,"column_start":1,"column_end":58}},{"value":"/ // July 8 is Tuesday in ISO week 28 of the year 2014.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":6349,"byte_end":6406,"line_start":147,"line_end":147,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(dt, Utc.isoywd(2014, 28, Weekday::Tue).and_hms(9, 10, 11));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":6407,"byte_end":6481,"line_start":148,"line_end":148,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":6482,"byte_end":6485,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ let dt = Utc.ymd(2014, 7, 8).and_hms_milli(9, 10, 11, 12); // `2014-07-08T09:10:11.012Z`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":6486,"byte_end":6578,"line_start":150,"line_end":150,"column_start":1,"column_end":93}},{"value":"/ assert_eq!(dt, Utc.ymd(2014, 7, 8).and_hms_micro(9, 10, 11, 12_000));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":6579,"byte_end":6652,"line_start":151,"line_end":151,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(dt, Utc.ymd(2014, 7, 8).and_hms_nano(9, 10, 11, 12_000_000));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":6653,"byte_end":6729,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":6730,"byte_end":6733,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ // dynamic verification","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":6734,"byte_end":6761,"line_start":154,"line_end":154,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(Utc.ymd_opt(2014, 7, 8).and_hms_opt(21, 15, 33),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":6762,"byte_end":6825,"line_start":155,"line_end":155,"column_start":1,"column_end":64}},{"value":"/            LocalResult::Single(Utc.ymd(2014, 7, 8).and_hms(21, 15, 33)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":6826,"byte_end":6903,"line_start":156,"line_end":156,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(Utc.ymd_opt(2014, 7, 8).and_hms_opt(80, 15, 33), LocalResult::None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":6904,"byte_end":6987,"line_start":157,"line_end":157,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(Utc.ymd_opt(2014, 7, 38).and_hms_opt(21, 15, 33), LocalResult::None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":6988,"byte_end":7072,"line_start":158,"line_end":158,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":7073,"byte_end":7076,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ // other time zone objects can be used to construct a local datetime.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":7077,"byte_end":7150,"line_start":160,"line_end":160,"column_start":1,"column_end":74}},{"value":"/ // obviously, `local_dt` is normally different from `dt`, but `fixed_dt` should be identical.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":7151,"byte_end":7248,"line_start":161,"line_end":161,"column_start":1,"column_end":98}},{"value":"/ let local_dt = Local.ymd(2014, 7, 8).and_hms_milli(9, 10, 11, 12);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":7249,"byte_end":7319,"line_start":162,"line_end":162,"column_start":1,"column_end":71}},{"value":"/ let fixed_dt = FixedOffset::east(9 * 3600).ymd(2014, 7, 8).and_hms_milli(18, 10, 11, 12);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":7320,"byte_end":7413,"line_start":163,"line_end":163,"column_start":1,"column_end":94}},{"value":"/ assert_eq!(dt, fixed_dt);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":7414,"byte_end":7443,"line_start":164,"line_end":164,"column_start":1,"column_end":30}},{"value":"/ # let _ = local_dt;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":7444,"byte_end":7467,"line_start":165,"line_end":165,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":7468,"byte_end":7475,"line_start":166,"line_end":166,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":7476,"byte_end":7479,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ Various properties are available to the date and time, and can be altered individually.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":7480,"byte_end":7571,"line_start":168,"line_end":168,"column_start":1,"column_end":92}},{"value":"/ Most of them are defined in the traits [`Datelike`](./trait.Datelike.html) and","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":7572,"byte_end":7654,"line_start":169,"line_end":169,"column_start":1,"column_end":83}},{"value":"/ [`Timelike`](./trait.Timelike.html) which you should `use` before.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":7655,"byte_end":7725,"line_start":170,"line_end":170,"column_start":1,"column_end":71}},{"value":"/ Addition and subtraction is also supported.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":7726,"byte_end":7773,"line_start":171,"line_end":171,"column_start":1,"column_end":48}},{"value":"/ The following illustrates most supported operations to the date and time:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":7774,"byte_end":7851,"line_start":172,"line_end":172,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":7852,"byte_end":7855,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":7856,"byte_end":7867,"line_start":174,"line_end":174,"column_start":1,"column_end":12}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":7868,"byte_end":7895,"line_start":175,"line_end":175,"column_start":1,"column_end":28}},{"value":"/ use chrono::Duration;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":7896,"byte_end":7921,"line_start":176,"line_end":176,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":7922,"byte_end":7925,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ // assume this returned `2014-11-28T21:45:59.324310806+09:00`:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":7926,"byte_end":7992,"line_start":178,"line_end":178,"column_start":1,"column_end":67}},{"value":"/ let dt = FixedOffset::east(9*3600).ymd(2014, 11, 28).and_hms_nano(21, 45, 59, 324310806);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":7993,"byte_end":8086,"line_start":179,"line_end":179,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":8087,"byte_end":8090,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ // property accessors","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":8091,"byte_end":8116,"line_start":181,"line_end":181,"column_start":1,"column_end":26}},{"value":"/ assert_eq!((dt.year(), dt.month(), dt.day()), (2014, 11, 28));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":8117,"byte_end":8183,"line_start":182,"line_end":182,"column_start":1,"column_end":67}},{"value":"/ assert_eq!((dt.month0(), dt.day0()), (10, 27)); // for unfortunate souls","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":8184,"byte_end":8260,"line_start":183,"line_end":183,"column_start":1,"column_end":77}},{"value":"/ assert_eq!((dt.hour(), dt.minute(), dt.second()), (21, 45, 59));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":8261,"byte_end":8329,"line_start":184,"line_end":184,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(dt.weekday(), Weekday::Fri);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":8330,"byte_end":8373,"line_start":185,"line_end":185,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(dt.weekday().number_from_monday(), 5); // Mon=1, ..., Sun=7","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":8374,"byte_end":8448,"line_start":186,"line_end":186,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(dt.ordinal(), 332); // the day of year","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":8449,"byte_end":8502,"line_start":187,"line_end":187,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(dt.num_days_from_ce(), 735565); // the number of days from and including Jan 1, 1","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":8503,"byte_end":8599,"line_start":188,"line_end":188,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":8600,"byte_end":8603,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ // time zone accessor and manipulation","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":8604,"byte_end":8646,"line_start":190,"line_end":190,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(dt.offset().fix().local_minus_utc(), 9 * 3600);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":8647,"byte_end":8709,"line_start":191,"line_end":191,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(dt.timezone(), FixedOffset::east(9 * 3600));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":8710,"byte_end":8769,"line_start":192,"line_end":192,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(dt.with_timezone(&Utc), Utc.ymd(2014, 11, 28).and_hms_nano(12, 45, 59, 324310806));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":8770,"byte_end":8868,"line_start":193,"line_end":193,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":8869,"byte_end":8872,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ // a sample of property manipulations (validates dynamically)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":8873,"byte_end":8938,"line_start":195,"line_end":195,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(dt.with_day(29).unwrap().weekday(), Weekday::Sat); // 2014-11-29 is Saturday","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":8939,"byte_end":9030,"line_start":196,"line_end":196,"column_start":1,"column_end":92}},{"value":"/ assert_eq!(dt.with_day(32), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":9031,"byte_end":9069,"line_start":197,"line_end":197,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(dt.with_year(-300).unwrap().num_days_from_ce(), -109606); // November 29, 301 BCE","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":9070,"byte_end":9166,"line_start":198,"line_end":198,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":9167,"byte_end":9170,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ // arithmetic operations","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":9171,"byte_end":9199,"line_start":200,"line_end":200,"column_start":1,"column_end":29}},{"value":"/ let dt1 = Utc.ymd(2014, 11, 14).and_hms(8, 9, 10);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":9200,"byte_end":9254,"line_start":201,"line_end":201,"column_start":1,"column_end":55}},{"value":"/ let dt2 = Utc.ymd(2014, 11, 14).and_hms(10, 9, 8);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":9255,"byte_end":9309,"line_start":202,"line_end":202,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(dt1.signed_duration_since(dt2), Duration::seconds(-2 * 3600 + 2));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":9310,"byte_end":9391,"line_start":203,"line_end":203,"column_start":1,"column_end":82}},{"value":"/ assert_eq!(dt2.signed_duration_since(dt1), Duration::seconds(2 * 3600 - 2));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":9392,"byte_end":9472,"line_start":204,"line_end":204,"column_start":1,"column_end":81}},{"value":"/ assert_eq!(Utc.ymd(1970, 1, 1).and_hms(0, 0, 0) + Duration::seconds(1_000_000_000),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":9473,"byte_end":9560,"line_start":205,"line_end":205,"column_start":1,"column_end":88}},{"value":"/            Utc.ymd(2001, 9, 9).and_hms(1, 46, 40));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":9561,"byte_end":9616,"line_start":206,"line_end":206,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(Utc.ymd(1970, 1, 1).and_hms(0, 0, 0) - Duration::seconds(1_000_000_000),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":9617,"byte_end":9704,"line_start":207,"line_end":207,"column_start":1,"column_end":88}},{"value":"/            Utc.ymd(1938, 4, 24).and_hms(22, 13, 20));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":9705,"byte_end":9762,"line_start":208,"line_end":208,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":9763,"byte_end":9770,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":9771,"byte_end":9774,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ ### Formatting and Parsing","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":9775,"byte_end":9805,"line_start":211,"line_end":211,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":9806,"byte_end":9809,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ Formatting is done via the [`format`](./struct.DateTime.html#method.format) method,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":9810,"byte_end":9897,"line_start":213,"line_end":213,"column_start":1,"column_end":88}},{"value":"/ which format is equivalent to the familiar `strftime` format.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":9898,"byte_end":9963,"line_start":214,"line_end":214,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":9964,"byte_end":9967,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ See [`format::strftime`](./format/strftime/index.html#specifiers)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":9968,"byte_end":10037,"line_start":216,"line_end":216,"column_start":1,"column_end":70}},{"value":"/ documentation for full syntax and list of specifiers.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":10038,"byte_end":10095,"line_start":217,"line_end":217,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":10096,"byte_end":10099,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ The default `to_string` method and `{:?}` specifier also give a reasonable representation.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":10100,"byte_end":10194,"line_start":219,"line_end":219,"column_start":1,"column_end":95}},{"value":"/ Chrono also provides [`to_rfc2822`](./struct.DateTime.html#method.to_rfc2822) and","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":10195,"byte_end":10280,"line_start":220,"line_end":220,"column_start":1,"column_end":86}},{"value":"/ [`to_rfc3339`](./struct.DateTime.html#method.to_rfc3339) methods","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":10281,"byte_end":10349,"line_start":221,"line_end":221,"column_start":1,"column_end":69}},{"value":"/ for well-known formats.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":10350,"byte_end":10377,"line_start":222,"line_end":222,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":10378,"byte_end":10381,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ Chrono now also provides date formatting in almost any language without the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":10382,"byte_end":10461,"line_start":224,"line_end":224,"column_start":1,"column_end":80}},{"value":"/ help of an additional C library. This functionality is under the feature","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":10462,"byte_end":10538,"line_start":225,"line_end":225,"column_start":1,"column_end":77}},{"value":"/ `unstable-locales`:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":10539,"byte_end":10562,"line_start":226,"line_end":226,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":10563,"byte_end":10566,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":10567,"byte_end":10578,"line_start":228,"line_end":228,"column_start":1,"column_end":12}},{"value":"/ chrono = { version = \"0.4\", features = [\"unstable-locales\"] }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":10579,"byte_end":10644,"line_start":229,"line_end":229,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":10645,"byte_end":10652,"line_start":230,"line_end":230,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":10653,"byte_end":10656,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ The `unstable-locales` feature requires and implies at least the `alloc` feature.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":10657,"byte_end":10742,"line_start":232,"line_end":232,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":10743,"byte_end":10746,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":10747,"byte_end":10758,"line_start":234,"line_end":234,"column_start":1,"column_end":12}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":10759,"byte_end":10786,"line_start":235,"line_end":235,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":10787,"byte_end":10790,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ # #[cfg(feature = \"unstable-locales\")]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":10791,"byte_end":10833,"line_start":237,"line_end":237,"column_start":1,"column_end":43}},{"value":"/ # fn test() {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":10834,"byte_end":10851,"line_start":238,"line_end":238,"column_start":1,"column_end":18}},{"value":"/ let dt = Utc.ymd(2014, 11, 28).and_hms(12, 0, 9);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":10852,"byte_end":10905,"line_start":239,"line_end":239,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(dt.format(\"%Y-%m-%d %H:%M:%S\").to_string(), \"2014-11-28 12:00:09\");","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":10906,"byte_end":10988,"line_start":240,"line_end":240,"column_start":1,"column_end":83}},{"value":"/ assert_eq!(dt.format(\"%a %b %e %T %Y\").to_string(), \"Fri Nov 28 12:00:09 2014\");","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":10989,"byte_end":11073,"line_start":241,"line_end":241,"column_start":1,"column_end":85}},{"value":"/ assert_eq!(dt.format_localized(\"%A %e %B %Y, %T\", Locale::fr_BE).to_string(), \"vendredi 28 novembre 2014, 12:00:09\");","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":11074,"byte_end":11195,"line_start":242,"line_end":242,"column_start":1,"column_end":122}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":11196,"byte_end":11199,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(dt.format(\"%a %b %e %T %Y\").to_string(), dt.format(\"%c\").to_string());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":11200,"byte_end":11285,"line_start":244,"line_end":244,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(dt.to_string(), \"2014-11-28 12:00:09 UTC\");","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":11286,"byte_end":11344,"line_start":245,"line_end":245,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(dt.to_rfc2822(), \"Fri, 28 Nov 2014 12:00:09 +0000\");","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":11345,"byte_end":11412,"line_start":246,"line_end":246,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(dt.to_rfc3339(), \"2014-11-28T12:00:09+00:00\");","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":11413,"byte_end":11474,"line_start":247,"line_end":247,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(format!(\"{:?}\", dt), \"2014-11-28T12:00:09Z\");","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":11475,"byte_end":11535,"line_start":248,"line_end":248,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":11536,"byte_end":11539,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ // Note that milli/nanoseconds are only printed if they are non-zero","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":11540,"byte_end":11612,"line_start":250,"line_end":250,"column_start":1,"column_end":73}},{"value":"/ let dt_nano = Utc.ymd(2014, 11, 28).and_hms_nano(12, 0, 9, 1);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":11613,"byte_end":11679,"line_start":251,"line_end":251,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(format!(\"{:?}\", dt_nano), \"2014-11-28T12:00:09.000000001Z\");","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":11680,"byte_end":11755,"line_start":252,"line_end":252,"column_start":1,"column_end":76}},{"value":"/ # }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":11756,"byte_end":11763,"line_start":253,"line_end":253,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(not(feature = \"unstable-locales\"))]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":11764,"byte_end":11811,"line_start":254,"line_end":254,"column_start":1,"column_end":48}},{"value":"/ # fn test() {}","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":11812,"byte_end":11830,"line_start":255,"line_end":255,"column_start":1,"column_end":19}},{"value":"/ # if cfg!(feature = \"unstable-locales\") {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":11831,"byte_end":11876,"line_start":256,"line_end":256,"column_start":1,"column_end":46}},{"value":"/ #    test();","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":11877,"byte_end":11893,"line_start":257,"line_end":257,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":11894,"byte_end":11901,"line_start":258,"line_end":258,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":11902,"byte_end":11909,"line_start":259,"line_end":259,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":11910,"byte_end":11913,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ Parsing can be done with three methods:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":11914,"byte_end":11957,"line_start":261,"line_end":261,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":11958,"byte_end":11961,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ 1. The standard [`FromStr`](https://doc.rust-lang.org/std/str/trait.FromStr.html) trait","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":11962,"byte_end":12053,"line_start":263,"line_end":263,"column_start":1,"column_end":92}},{"value":"/    (and [`parse`](https://doc.rust-lang.org/std/primitive.str.html#method.parse) method","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":12054,"byte_end":12145,"line_start":264,"line_end":264,"column_start":1,"column_end":92}},{"value":"/    on a string) can be used for parsing `DateTime<FixedOffset>`, `DateTime<Utc>` and","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":12146,"byte_end":12234,"line_start":265,"line_end":265,"column_start":1,"column_end":89}},{"value":"/    `DateTime<Local>` values. This parses what the `{:?}`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":12235,"byte_end":12295,"line_start":266,"line_end":266,"column_start":1,"column_end":61}},{"value":"/    ([`std::fmt::Debug`](https://doc.rust-lang.org/std/fmt/trait.Debug.html))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":12296,"byte_end":12376,"line_start":267,"line_end":267,"column_start":1,"column_end":81}},{"value":"/    format specifier prints, and requires the offset to be present.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":12377,"byte_end":12447,"line_start":268,"line_end":268,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":12448,"byte_end":12451,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ 2. [`DateTime::parse_from_str`](./struct.DateTime.html#method.parse_from_str) parses","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":12452,"byte_end":12540,"line_start":270,"line_end":270,"column_start":1,"column_end":89}},{"value":"/    a date and time with offsets and returns `DateTime<FixedOffset>`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":12541,"byte_end":12613,"line_start":271,"line_end":271,"column_start":1,"column_end":73}},{"value":"/    This should be used when the offset is a part of input and the caller cannot guess that.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":12614,"byte_end":12709,"line_start":272,"line_end":272,"column_start":1,"column_end":96}},{"value":"/    It *cannot* be used when the offset can be missing.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":12710,"byte_end":12768,"line_start":273,"line_end":273,"column_start":1,"column_end":59}},{"value":"/    [`DateTime::parse_from_rfc2822`](./struct.DateTime.html#method.parse_from_rfc2822)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":12769,"byte_end":12858,"line_start":274,"line_end":274,"column_start":1,"column_end":90}},{"value":"/    and","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":12859,"byte_end":12869,"line_start":275,"line_end":275,"column_start":1,"column_end":11}},{"value":"/    [`DateTime::parse_from_rfc3339`](./struct.DateTime.html#method.parse_from_rfc3339)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":12870,"byte_end":12959,"line_start":276,"line_end":276,"column_start":1,"column_end":90}},{"value":"/    are similar but for well-known formats.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":12960,"byte_end":13006,"line_start":277,"line_end":277,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":13007,"byte_end":13010,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/ 3. [`Offset::datetime_from_str`](./offset/trait.TimeZone.html#method.datetime_from_str) is","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":13011,"byte_end":13105,"line_start":279,"line_end":279,"column_start":1,"column_end":95}},{"value":"/    similar but returns `DateTime` of given offset.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":13106,"byte_end":13160,"line_start":280,"line_end":280,"column_start":1,"column_end":55}},{"value":"/    When the explicit offset is missing from the input, it simply uses given offset.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":13161,"byte_end":13248,"line_start":281,"line_end":281,"column_start":1,"column_end":88}},{"value":"/    It issues an error when the input contains an explicit offset different","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":13249,"byte_end":13327,"line_start":282,"line_end":282,"column_start":1,"column_end":79}},{"value":"/    from the current offset.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":13328,"byte_end":13359,"line_start":283,"line_end":283,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":13360,"byte_end":13363,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ More detailed control over the parsing process is available via","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":13364,"byte_end":13431,"line_start":285,"line_end":285,"column_start":1,"column_end":68}},{"value":"/ [`format`](./format/index.html) module.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":13432,"byte_end":13475,"line_start":286,"line_end":286,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":13476,"byte_end":13479,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":13480,"byte_end":13491,"line_start":288,"line_end":288,"column_start":1,"column_end":12}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":13492,"byte_end":13519,"line_start":289,"line_end":289,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":13520,"byte_end":13523,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ let dt = Utc.ymd(2014, 11, 28).and_hms(12, 0, 9);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":13524,"byte_end":13577,"line_start":291,"line_end":291,"column_start":1,"column_end":54}},{"value":"/ let fixed_dt = dt.with_timezone(&FixedOffset::east(9*3600));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":13578,"byte_end":13642,"line_start":292,"line_end":292,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":13643,"byte_end":13646,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ // method 1","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":13647,"byte_end":13662,"line_start":294,"line_end":294,"column_start":1,"column_end":16}},{"value":"/ assert_eq!(\"2014-11-28T12:00:09Z\".parse::<DateTime<Utc>>(), Ok(dt.clone()));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":13663,"byte_end":13743,"line_start":295,"line_end":295,"column_start":1,"column_end":81}},{"value":"/ assert_eq!(\"2014-11-28T21:00:09+09:00\".parse::<DateTime<Utc>>(), Ok(dt.clone()));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":13744,"byte_end":13829,"line_start":296,"line_end":296,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(\"2014-11-28T21:00:09+09:00\".parse::<DateTime<FixedOffset>>(), Ok(fixed_dt.clone()));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":13830,"byte_end":13929,"line_start":297,"line_end":297,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":13930,"byte_end":13933,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ // method 2","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":13934,"byte_end":13949,"line_start":299,"line_end":299,"column_start":1,"column_end":16}},{"value":"/ assert_eq!(DateTime::parse_from_str(\"2014-11-28 21:00:09 +09:00\", \"%Y-%m-%d %H:%M:%S %z\"),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":13950,"byte_end":14044,"line_start":300,"line_end":300,"column_start":1,"column_end":95}},{"value":"/            Ok(fixed_dt.clone()));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":14045,"byte_end":14082,"line_start":301,"line_end":301,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(DateTime::parse_from_rfc2822(\"Fri, 28 Nov 2014 21:00:09 +0900\"),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":14083,"byte_end":14162,"line_start":302,"line_end":302,"column_start":1,"column_end":80}},{"value":"/            Ok(fixed_dt.clone()));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":14163,"byte_end":14200,"line_start":303,"line_end":303,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(DateTime::parse_from_rfc3339(\"2014-11-28T21:00:09+09:00\"), Ok(fixed_dt.clone()));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":14201,"byte_end":14297,"line_start":304,"line_end":304,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":14298,"byte_end":14301,"line_start":305,"line_end":305,"column_start":1,"column_end":4}},{"value":"/ // method 3","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":14302,"byte_end":14317,"line_start":306,"line_end":306,"column_start":1,"column_end":16}},{"value":"/ assert_eq!(Utc.datetime_from_str(\"2014-11-28 12:00:09\", \"%Y-%m-%d %H:%M:%S\"), Ok(dt.clone()));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":14318,"byte_end":14416,"line_start":307,"line_end":307,"column_start":1,"column_end":99}},{"value":"/ assert_eq!(Utc.datetime_from_str(\"Fri Nov 28 12:00:09 2014\", \"%a %b %e %T %Y\"), Ok(dt.clone()));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":14417,"byte_end":14517,"line_start":308,"line_end":308,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":14518,"byte_end":14521,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ // oops, the year is missing!","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":14522,"byte_end":14555,"line_start":310,"line_end":310,"column_start":1,"column_end":34}},{"value":"/ assert!(Utc.datetime_from_str(\"Fri Nov 28 12:00:09\", \"%a %b %e %T %Y\").is_err());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":14556,"byte_end":14641,"line_start":311,"line_end":311,"column_start":1,"column_end":86}},{"value":"/ // oops, the format string does not include the year at all!","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":14642,"byte_end":14706,"line_start":312,"line_end":312,"column_start":1,"column_end":65}},{"value":"/ assert!(Utc.datetime_from_str(\"Fri Nov 28 12:00:09\", \"%a %b %e %T\").is_err());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":14707,"byte_end":14789,"line_start":313,"line_end":313,"column_start":1,"column_end":83}},{"value":"/ // oops, the weekday is incorrect!","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":14790,"byte_end":14828,"line_start":314,"line_end":314,"column_start":1,"column_end":39}},{"value":"/ assert!(Utc.datetime_from_str(\"Sat Nov 28 12:00:09 2014\", \"%a %b %e %T %Y\").is_err());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":14829,"byte_end":14919,"line_start":315,"line_end":315,"column_start":1,"column_end":91}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":14920,"byte_end":14927,"line_start":316,"line_end":316,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":14928,"byte_end":14931,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/ Again : See [`format::strftime`](./format/strftime/index.html#specifiers)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":14932,"byte_end":15009,"line_start":318,"line_end":318,"column_start":1,"column_end":78}},{"value":"/ documentation for full syntax and list of specifiers.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":15010,"byte_end":15067,"line_start":319,"line_end":319,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":15068,"byte_end":15071,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ ### Conversion from and to EPOCH timestamps","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":15072,"byte_end":15119,"line_start":321,"line_end":321,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":15120,"byte_end":15123,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ Use [`Utc.timestamp(seconds, nanoseconds)`](./offset/trait.TimeZone.html#method.timestamp)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":15124,"byte_end":15218,"line_start":323,"line_end":323,"column_start":1,"column_end":95}},{"value":"/ to construct a [`DateTime<Utc>`](./struct.DateTime.html) from a UNIX timestamp","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":15219,"byte_end":15301,"line_start":324,"line_end":324,"column_start":1,"column_end":83}},{"value":"/ (seconds, nanoseconds that passed since January 1st 1970).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":15302,"byte_end":15364,"line_start":325,"line_end":325,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":15365,"byte_end":15368,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ Use [`DateTime.timestamp`](./struct.DateTime.html#method.timestamp) to get the timestamp (in seconds)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":15369,"byte_end":15474,"line_start":327,"line_end":327,"column_start":1,"column_end":106}},{"value":"/ from a [`DateTime`](./struct.DateTime.html). Additionally, you can use","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":15475,"byte_end":15549,"line_start":328,"line_end":328,"column_start":1,"column_end":75}},{"value":"/ [`DateTime.timestamp_subsec_nanos`](./struct.DateTime.html#method.timestamp_subsec_nanos)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":15550,"byte_end":15643,"line_start":329,"line_end":329,"column_start":1,"column_end":94}},{"value":"/ to get the number of additional number of nanoseconds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":15644,"byte_end":15702,"line_start":330,"line_end":330,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":15703,"byte_end":15706,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":15707,"byte_end":15718,"line_start":332,"line_end":332,"column_start":1,"column_end":12}},{"value":"/ // We need the trait in scope to use Utc::timestamp().","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":15719,"byte_end":15777,"line_start":333,"line_end":333,"column_start":1,"column_end":59}},{"value":"/ use chrono::{DateTime, TimeZone, Utc};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":15778,"byte_end":15820,"line_start":334,"line_end":334,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":15821,"byte_end":15824,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ // Construct a datetime from epoch:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":15825,"byte_end":15864,"line_start":336,"line_end":336,"column_start":1,"column_end":40}},{"value":"/ let dt = Utc.timestamp(1_500_000_000, 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":15865,"byte_end":15910,"line_start":337,"line_end":337,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(dt.to_rfc2822(), \"Fri, 14 Jul 2017 02:40:00 +0000\");","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":15911,"byte_end":15978,"line_start":338,"line_end":338,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":15979,"byte_end":15982,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ // Get epoch value from a datetime:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":15983,"byte_end":16022,"line_start":340,"line_end":340,"column_start":1,"column_end":40}},{"value":"/ let dt = DateTime::parse_from_rfc2822(\"Fri, 14 Jul 2017 02:40:00 +0000\").unwrap();","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":16023,"byte_end":16109,"line_start":341,"line_end":341,"column_start":1,"column_end":87}},{"value":"/ assert_eq!(dt.timestamp(), 1_500_000_000);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":16110,"byte_end":16156,"line_start":342,"line_end":342,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":16157,"byte_end":16164,"line_start":343,"line_end":343,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":16165,"byte_end":16168,"line_start":344,"line_end":344,"column_start":1,"column_end":4}},{"value":"/ ### Individual date","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":16169,"byte_end":16192,"line_start":345,"line_end":345,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":16193,"byte_end":16196,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ Chrono also provides an individual date type ([**`Date`**](./struct.Date.html)).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":16197,"byte_end":16281,"line_start":347,"line_end":347,"column_start":1,"column_end":85}},{"value":"/ It also has time zones attached, and have to be constructed via time zones.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":16282,"byte_end":16361,"line_start":348,"line_end":348,"column_start":1,"column_end":80}},{"value":"/ Most operations available to `DateTime` are also available to `Date` whenever appropriate.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":16362,"byte_end":16456,"line_start":349,"line_end":349,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":16457,"byte_end":16460,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":16461,"byte_end":16472,"line_start":351,"line_end":351,"column_start":1,"column_end":12}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":16473,"byte_end":16500,"line_start":352,"line_end":352,"column_start":1,"column_end":28}},{"value":"/ use chrono::offset::LocalResult;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":16501,"byte_end":16537,"line_start":353,"line_end":353,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":16538,"byte_end":16541,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ # // these *may* fail, but only very rarely. just rerun the test if you were that unfortunate ;)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":16542,"byte_end":16642,"line_start":355,"line_end":355,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(Utc::today(), Utc::now().date());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":16643,"byte_end":16691,"line_start":356,"line_end":356,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(Local::today(), Local::now().date());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":16692,"byte_end":16744,"line_start":357,"line_end":357,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":16745,"byte_end":16748,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Utc.ymd(2014, 11, 28).weekday(), Weekday::Fri);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":16749,"byte_end":16811,"line_start":359,"line_end":359,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(Utc.ymd_opt(2014, 11, 31), LocalResult::None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":16812,"byte_end":16873,"line_start":360,"line_end":360,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(Utc.ymd(2014, 11, 28).and_hms_milli(7, 8, 9, 10).format(\"%H%M%S\").to_string(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":16874,"byte_end":16967,"line_start":361,"line_end":361,"column_start":1,"column_end":94}},{"value":"/            \"070809\");","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":16968,"byte_end":16993,"line_start":362,"line_end":362,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":16994,"byte_end":17001,"line_start":363,"line_end":363,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":17002,"byte_end":17005,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/ There is no timezone-aware `Time` due to the lack of usefulness and also the complexity.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":17006,"byte_end":17098,"line_start":365,"line_end":365,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":17099,"byte_end":17102,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ `DateTime` has [`date`](./struct.DateTime.html#method.date) method","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":17103,"byte_end":17173,"line_start":367,"line_end":367,"column_start":1,"column_end":71}},{"value":"/ which returns a `Date` which represents its date component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":17174,"byte_end":17237,"line_start":368,"line_end":368,"column_start":1,"column_end":64}},{"value":"/ There is also a [`time`](./struct.DateTime.html#method.time) method,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":17238,"byte_end":17310,"line_start":369,"line_end":369,"column_start":1,"column_end":73}},{"value":"/ which simply returns a naive local time described below.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":17311,"byte_end":17371,"line_start":370,"line_end":370,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":17372,"byte_end":17375,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/ ### Naive date and time","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":17376,"byte_end":17403,"line_start":372,"line_end":372,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":17404,"byte_end":17407,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/ Chrono provides naive counterparts to `Date`, (non-existent) `Time` and `DateTime`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":17408,"byte_end":17494,"line_start":374,"line_end":374,"column_start":1,"column_end":87}},{"value":"/ as [**`NaiveDate`**](./naive/struct.NaiveDate.html),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":17495,"byte_end":17551,"line_start":375,"line_end":375,"column_start":1,"column_end":57}},{"value":"/ [**`NaiveTime`**](./naive/struct.NaiveTime.html) and","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":17552,"byte_end":17608,"line_start":376,"line_end":376,"column_start":1,"column_end":57}},{"value":"/ [**`NaiveDateTime`**](./naive/struct.NaiveDateTime.html) respectively.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":17609,"byte_end":17683,"line_start":377,"line_end":377,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":17684,"byte_end":17687,"line_start":378,"line_end":378,"column_start":1,"column_end":4}},{"value":"/ They have almost equivalent interfaces as their timezone-aware twins,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":17688,"byte_end":17761,"line_start":379,"line_end":379,"column_start":1,"column_end":74}},{"value":"/ but are not associated to time zones obviously and can be quite low-level.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":17762,"byte_end":17840,"line_start":380,"line_end":380,"column_start":1,"column_end":79}},{"value":"/ They are mostly useful for building blocks for higher-level types.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":17841,"byte_end":17911,"line_start":381,"line_end":381,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":17912,"byte_end":17915,"line_start":382,"line_end":382,"column_start":1,"column_end":4}},{"value":"/ Timezone-aware `DateTime` and `Date` types have two methods returning naive versions:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":17916,"byte_end":18005,"line_start":383,"line_end":383,"column_start":1,"column_end":90}},{"value":"/ [`naive_local`](./struct.DateTime.html#method.naive_local) returns","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":18006,"byte_end":18076,"line_start":384,"line_end":384,"column_start":1,"column_end":71}},{"value":"/ a view to the naive local time,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":18077,"byte_end":18112,"line_start":385,"line_end":385,"column_start":1,"column_end":36}},{"value":"/ and [`naive_utc`](./struct.DateTime.html#method.naive_utc) returns","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":18113,"byte_end":18183,"line_start":386,"line_end":386,"column_start":1,"column_end":71}},{"value":"/ a view to the naive UTC time.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":18184,"byte_end":18217,"line_start":387,"line_end":387,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":18218,"byte_end":18221,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/ ## Limitations","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":18222,"byte_end":18240,"line_start":389,"line_end":389,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":18241,"byte_end":18244,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"/ Only proleptic Gregorian calendar (i.e. extended to support older dates) is supported.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":18245,"byte_end":18335,"line_start":391,"line_end":391,"column_start":1,"column_end":91}},{"value":"/ Be very careful if you really have to deal with pre-20C dates, they can be in Julian or others.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":18336,"byte_end":18435,"line_start":392,"line_end":392,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":18436,"byte_end":18439,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/ Date types are limited in about +/- 262,000 years from the common epoch.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":18440,"byte_end":18516,"line_start":394,"line_end":394,"column_start":1,"column_end":77}},{"value":"/ Time types are limited in the nanosecond accuracy.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":18517,"byte_end":18571,"line_start":395,"line_end":395,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":18572,"byte_end":18575,"line_start":396,"line_end":396,"column_start":1,"column_end":4}},{"value":"/ [Leap seconds are supported in the representation but","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":18576,"byte_end":18633,"line_start":397,"line_end":397,"column_start":1,"column_end":58}},{"value":"/ Chrono doesn't try to make use of them](./naive/struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":18634,"byte_end":18730,"line_start":398,"line_end":398,"column_start":1,"column_end":97}},{"value":"/ (The main reason is that leap seconds are not really predictable.)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":18731,"byte_end":18801,"line_start":399,"line_end":399,"column_start":1,"column_end":71}},{"value":"/ Almost *every* operation over the possible leap seconds will ignore them.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":18802,"byte_end":18879,"line_start":400,"line_end":400,"column_start":1,"column_end":78}},{"value":"/ Consider using `NaiveDateTime` with the implicit TAI (International Atomic Time) scale","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":18880,"byte_end":18970,"line_start":401,"line_end":401,"column_start":1,"column_end":91}},{"value":"/ if you want.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":18971,"byte_end":18987,"line_start":402,"line_end":402,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":18988,"byte_end":18991,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ Chrono inherently does not support an inaccurate or partial date and time representation.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":18992,"byte_end":19085,"line_start":404,"line_end":404,"column_start":1,"column_end":94}},{"value":"/ Any operation that can be ambiguous will return `None` in such cases.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":19086,"byte_end":19159,"line_start":405,"line_end":405,"column_start":1,"column_end":74}},{"value":"/ For example, \"a month later\" of 2014-01-30 is not well-defined","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":19160,"byte_end":19226,"line_start":406,"line_end":406,"column_start":1,"column_end":67}},{"value":"/ and consequently `Utc.ymd(2014, 1, 30).with_month(2)` returns `None`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":19227,"byte_end":19300,"line_start":407,"line_end":407,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":19301,"byte_end":19304,"line_start":408,"line_end":408,"column_start":1,"column_end":4}},{"value":"/ Non ISO week handling is not yet supported.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":19305,"byte_end":19352,"line_start":409,"line_end":409,"column_start":1,"column_end":48}},{"value":"/ For now you can use the [chrono_ext](https://crates.io/crates/chrono_ext)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":19353,"byte_end":19430,"line_start":410,"line_end":410,"column_start":1,"column_end":78}},{"value":"/ crate ([sources](https://github.com/bcourtine/chrono-ext/)).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":19431,"byte_end":19495,"line_start":411,"line_end":411,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":19496,"byte_end":19499,"line_start":412,"line_end":412,"column_start":1,"column_end":4}},{"value":"/ Advanced time zone handling is not yet supported.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":19500,"byte_end":19553,"line_start":413,"line_end":413,"column_start":1,"column_end":54}},{"value":"/ For now you can try the [Chrono-tz](https://github.com/chronotope/chrono-tz/) crate instead.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":19554,"byte_end":19650,"line_start":414,"line_end":414,"column_start":1,"column_end":97}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":19799,"byte_end":19821,"line_start":418,"line_end":418,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":19822,"byte_end":19861,"line_start":419,"line_end":419,"column_start":1,"column_end":40}},{"value":"warn(unreachable_pub)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":19862,"byte_end":19887,"line_start":420,"line_end":420,"column_start":1,"column_end":26}},{"value":"deny(dead_code)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":19888,"byte_end":19907,"line_start":421,"line_end":421,"column_start":1,"column_end":20}},{"value":"no_std","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":19953,"byte_end":19959,"line_start":422,"line_end":422,"column_start":46,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":2024},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":25026,"byte_end":25034,"line_start":55,"line_end":55,"column_start":12,"column_end":20},"name":"Duration","qualname":"::oldtime::Duration","value":"Duration {  }","parent":null,"children":[{"krate":0,"index":2025},{"krate":0,"index":2026}],"decl_id":null,"docs":" ISO 8601 time duration with nanosecond precision.","sig":null,"attributes":[{"value":"/ ISO 8601 time duration with nanosecond precision.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":24740,"byte_end":24793,"line_start":50,"line_end":50,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":24794,"byte_end":24797,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ This also allows for the negative duration; see individual methods for details.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":24798,"byte_end":24881,"line_start":52,"line_end":52,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":25793,"byte_end":25798,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"weeks","qualname":"<Duration>::weeks","value":"fn weeks(i64) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Duration` with given number of weeks.\n Equivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks.\n Panics when the duration is out of bounds.\n","sig":null,"attributes":[{"value":"/ Makes a new `Duration` with given number of weeks.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":25572,"byte_end":25626,"line_start":73,"line_end":73,"column_start":5,"column_end":59}},{"value":"/ Equivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":25631,"byte_end":25716,"line_start":74,"line_end":74,"column_start":5,"column_end":90}},{"value":"/ Panics when the duration is out of bounds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":25721,"byte_end":25767,"line_start":75,"line_end":75,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":25772,"byte_end":25781,"line_start":76,"line_end":76,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":26176,"byte_end":26180,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"days","qualname":"<Duration>::days","value":"fn days(i64) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Duration` with given number of days.\n Equivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks.\n Panics when the duration is out of bounds.\n","sig":null,"attributes":[{"value":"/ Makes a new `Duration` with given number of days.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":25961,"byte_end":26014,"line_start":82,"line_end":82,"column_start":5,"column_end":58}},{"value":"/ Equivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":26019,"byte_end":26099,"line_start":83,"line_end":83,"column_start":5,"column_end":85}},{"value":"/ Panics when the duration is out of bounds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":26104,"byte_end":26150,"line_start":84,"line_end":84,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":26155,"byte_end":26164,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":26551,"byte_end":26556,"line_start":95,"line_end":95,"column_start":12,"column_end":17},"name":"hours","qualname":"<Duration>::hours","value":"fn hours(i64) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Duration` with given number of hours.\n Equivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks.\n Panics when the duration is out of bounds.\n","sig":null,"attributes":[{"value":"/ Makes a new `Duration` with given number of hours.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":26339,"byte_end":26393,"line_start":91,"line_end":91,"column_start":5,"column_end":59}},{"value":"/ Equivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":26398,"byte_end":26474,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/ Panics when the duration is out of bounds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":26479,"byte_end":26525,"line_start":93,"line_end":93,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":26530,"byte_end":26539,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":26930,"byte_end":26937,"line_start":104,"line_end":104,"column_start":12,"column_end":19},"name":"minutes","qualname":"<Duration>::minutes","value":"fn minutes(i64) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Duration` with given number of minutes.\n Equivalent to `Duration::seconds(minutes * 60)` with overflow checks.\n Panics when the duration is out of bounds.\n","sig":null,"attributes":[{"value":"/ Makes a new `Duration` with given number of minutes.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":26719,"byte_end":26775,"line_start":100,"line_end":100,"column_start":5,"column_end":61}},{"value":"/ Equivalent to `Duration::seconds(minutes * 60)` with overflow checks.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":26780,"byte_end":26853,"line_start":101,"line_end":101,"column_start":5,"column_end":78}},{"value":"/ Panics when the duration is out of bounds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":26858,"byte_end":26904,"line_start":102,"line_end":102,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":26909,"byte_end":26918,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":27296,"byte_end":27303,"line_start":113,"line_end":113,"column_start":12,"column_end":19},"name":"seconds","qualname":"<Duration>::seconds","value":"fn seconds(i64) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Duration` with given number of seconds.\n Panics when the duration is more than `i64::MAX` seconds\n or less than `i64::MIN` seconds.\n","sig":null,"attributes":[{"value":"/ Makes a new `Duration` with given number of seconds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":27108,"byte_end":27164,"line_start":109,"line_end":109,"column_start":5,"column_end":61}},{"value":"/ Panics when the duration is more than `i64::MAX` seconds","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":27169,"byte_end":27229,"line_start":110,"line_end":110,"column_start":5,"column_end":65}},{"value":"/ or less than `i64::MIN` seconds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":27234,"byte_end":27270,"line_start":111,"line_end":111,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":27275,"byte_end":27284,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":27591,"byte_end":27603,"line_start":123,"line_end":123,"column_start":12,"column_end":24},"name":"milliseconds","qualname":"<Duration>::milliseconds","value":"fn milliseconds(i64) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Duration` with given number of milliseconds.\n","sig":null,"attributes":[{"value":"/ Makes a new `Duration` with given number of milliseconds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":27504,"byte_end":27565,"line_start":121,"line_end":121,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":27570,"byte_end":27579,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":27911,"byte_end":27923,"line_start":131,"line_end":131,"column_start":12,"column_end":24},"name":"microseconds","qualname":"<Duration>::microseconds","value":"fn microseconds(i64) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Duration` with given number of microseconds.\n","sig":null,"attributes":[{"value":"/ Makes a new `Duration` with given number of microseconds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":27824,"byte_end":27885,"line_start":129,"line_end":129,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":27890,"byte_end":27899,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":28230,"byte_end":28241,"line_start":139,"line_end":139,"column_start":12,"column_end":23},"name":"nanoseconds","qualname":"<Duration>::nanoseconds","value":"fn nanoseconds(i64) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Duration` with given number of nanoseconds.\n","sig":null,"attributes":[{"value":"/ Makes a new `Duration` with given number of nanoseconds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":28144,"byte_end":28204,"line_start":137,"line_end":137,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":28209,"byte_end":28218,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":28493,"byte_end":28502,"line_start":146,"line_end":146,"column_start":12,"column_end":21},"name":"num_weeks","qualname":"<Duration>::num_weeks","value":"fn num_weeks(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of whole weeks in the duration.\n","sig":null,"attributes":[{"value":"/ Returns the total number of whole weeks in the duration.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":28407,"byte_end":28467,"line_start":144,"line_end":144,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":28472,"byte_end":28481,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":28629,"byte_end":28637,"line_start":151,"line_end":151,"column_start":12,"column_end":20},"name":"num_days","qualname":"<Duration>::num_days","value":"fn num_days(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of whole days in the duration.\n","sig":null,"attributes":[{"value":"/ Returns the total number of whole days in the duration.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":28558,"byte_end":28617,"line_start":150,"line_end":150,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":28793,"byte_end":28802,"line_start":157,"line_end":157,"column_start":12,"column_end":21},"name":"num_hours","qualname":"<Duration>::num_hours","value":"fn num_hours(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of whole hours in the duration.\n","sig":null,"attributes":[{"value":"/ Returns the total number of whole hours in the duration.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":28707,"byte_end":28767,"line_start":155,"line_end":155,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":28772,"byte_end":28781,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":28961,"byte_end":28972,"line_start":163,"line_end":163,"column_start":12,"column_end":23},"name":"num_minutes","qualname":"<Duration>::num_minutes","value":"fn num_minutes(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of whole minutes in the duration.\n","sig":null,"attributes":[{"value":"/ Returns the total number of whole minutes in the duration.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":28873,"byte_end":28935,"line_start":161,"line_end":161,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":28940,"byte_end":28949,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":29119,"byte_end":29130,"line_start":168,"line_end":168,"column_start":12,"column_end":23},"name":"num_seconds","qualname":"<Duration>::num_seconds","value":"fn num_seconds(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of whole seconds in the duration.\n","sig":null,"attributes":[{"value":"/ Returns the total number of whole seconds in the duration.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":29045,"byte_end":29107,"line_start":167,"line_end":167,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":29783,"byte_end":29799,"line_start":189,"line_end":189,"column_start":12,"column_end":28},"name":"num_milliseconds","qualname":"<Duration>::num_milliseconds","value":"fn num_milliseconds(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of whole milliseconds in the duration,\n","sig":null,"attributes":[{"value":"/ Returns the total number of whole milliseconds in the duration,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":29704,"byte_end":29771,"line_start":188,"line_end":188,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":30291,"byte_end":30307,"line_start":199,"line_end":199,"column_start":12,"column_end":28},"name":"num_microseconds","qualname":"<Duration>::num_microseconds","value":"fn num_microseconds(&Self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of whole microseconds in the duration,\n or `None` on overflow (exceeding 2^63 microseconds in either direction).\n","sig":null,"attributes":[{"value":"/ Returns the total number of whole microseconds in the duration,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":30131,"byte_end":30198,"line_start":197,"line_end":197,"column_start":5,"column_end":72}},{"value":"/ or `None` on overflow (exceeding 2^63 microseconds in either direction).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":30203,"byte_end":30279,"line_start":198,"line_end":198,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":30697,"byte_end":30712,"line_start":207,"line_end":207,"column_start":12,"column_end":27},"name":"num_nanoseconds","qualname":"<Duration>::num_nanoseconds","value":"fn num_nanoseconds(&Self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of whole nanoseconds in the duration,\n or `None` on overflow (exceeding 2^63 nanoseconds in either direction).\n","sig":null,"attributes":[{"value":"/ Returns the total number of whole nanoseconds in the duration,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":30539,"byte_end":30605,"line_start":205,"line_end":205,"column_start":5,"column_end":71}},{"value":"/ or `None` on overflow (exceeding 2^63 nanoseconds in either direction).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":30610,"byte_end":30685,"line_start":206,"line_end":206,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":31005,"byte_end":31016,"line_start":214,"line_end":214,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Duration>::checked_add","value":"fn checked_add(&Self, &Duration) -> Option<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Add two durations, returning `None` if overflow occurred.\n","sig":null,"attributes":[{"value":"/ Add two durations, returning `None` if overflow occurred.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":30932,"byte_end":30993,"line_start":213,"line_end":213,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":31659,"byte_end":31670,"line_start":232,"line_end":232,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Duration>::checked_sub","value":"fn checked_sub(&Self, &Duration) -> Option<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Subtract two durations, returning `None` if overflow occurred.\n","sig":null,"attributes":[{"value":"/ Subtract two durations, returning `None` if overflow occurred.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":31581,"byte_end":31647,"line_start":231,"line_end":231,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":32309,"byte_end":32312,"line_start":251,"line_end":251,"column_start":12,"column_end":15},"name":"abs","qualname":"<Duration>::abs","value":"fn abs(&Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the duration as an absolute (non-negative) value.\n","sig":null,"attributes":[{"value":"/ Returns the duration as an absolute (non-negative) value.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":32222,"byte_end":32283,"line_start":249,"line_end":249,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":32288,"byte_end":32297,"line_start":250,"line_end":250,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":32659,"byte_end":32668,"line_start":261,"line_end":261,"column_start":12,"column_end":21},"name":"min_value","qualname":"<Duration>::min_value","value":"fn min_value() -> Duration","parent":null,"children":[],"decl_id":null,"docs":" The minimum possible `Duration`: `i64::MIN` milliseconds.\n","sig":null,"attributes":[{"value":"/ The minimum possible `Duration`: `i64::MIN` milliseconds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":32572,"byte_end":32633,"line_start":259,"line_end":259,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":32638,"byte_end":32647,"line_start":260,"line_end":260,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":32795,"byte_end":32804,"line_start":267,"line_end":267,"column_start":12,"column_end":21},"name":"max_value","qualname":"<Duration>::max_value","value":"fn max_value() -> Duration","parent":null,"children":[],"decl_id":null,"docs":" The maximum possible `Duration`: `i64::MAX` milliseconds.\n","sig":null,"attributes":[{"value":"/ The maximum possible `Duration`: `i64::MAX` milliseconds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":32708,"byte_end":32769,"line_start":265,"line_end":265,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":32774,"byte_end":32783,"line_start":266,"line_end":266,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":32944,"byte_end":32948,"line_start":273,"line_end":273,"column_start":12,"column_end":16},"name":"zero","qualname":"<Duration>::zero","value":"fn zero() -> Duration","parent":null,"children":[],"decl_id":null,"docs":" A duration where the stored seconds and nanoseconds are equal to zero.\n","sig":null,"attributes":[{"value":"/ A duration where the stored seconds and nanoseconds are equal to zero.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":32844,"byte_end":32918,"line_start":271,"line_end":271,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":32923,"byte_end":32932,"line_start":272,"line_end":272,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":33102,"byte_end":33109,"line_start":279,"line_end":279,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<Duration>::is_zero","value":"fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the duration equals `Duration::zero()`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the duration equals `Duration::zero()`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":33015,"byte_end":33076,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":33081,"byte_end":33090,"line_start":278,"line_end":278,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":33382,"byte_end":33390,"line_start":287,"line_end":287,"column_start":12,"column_end":20},"name":"from_std","qualname":"<Duration>::from_std","value":"fn from_std(StdDuration) -> Result<Duration, OutOfRangeError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `time::Duration` object from `std::time::Duration`","sig":null,"attributes":[{"value":"/ Creates a `time::Duration` object from `std::time::Duration`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":33180,"byte_end":33244,"line_start":283,"line_end":283,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":33249,"byte_end":33252,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ This function errors when original duration is larger than the maximum","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":33257,"byte_end":33331,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ value supported for this type.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":33336,"byte_end":33370,"line_start":286,"line_end":286,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":34047,"byte_end":34053,"line_start":303,"line_end":303,"column_start":12,"column_end":18},"name":"to_std","qualname":"<Duration>::to_std","value":"fn to_std(&Self) -> Result<StdDuration, OutOfRangeError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `std::time::Duration` object from `time::Duration`","sig":null,"attributes":[{"value":"/ Creates a `std::time::Duration` object from `time::Duration`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":33823,"byte_end":33887,"line_start":299,"line_end":299,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":33892,"byte_end":33895,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ This function errors when duration is less than zero. As standard","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":33900,"byte_end":33969,"line_start":301,"line_end":301,"column_start":5,"column_end":74}},{"value":"/ library implementation is limited to non-negative values.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":33974,"byte_end":34035,"line_start":302,"line_end":302,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":34334,"byte_end":34337,"line_start":315,"line_end":315,"column_start":8,"column_end":11},"name":"neg","qualname":"<Duration as core::ops::Neg>::neg","value":"fn neg(Self) -> Duration","parent":{"krate":1,"index":3245},"children":[],"decl_id":{"krate":1,"index":3247},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":34317,"byte_end":34326,"line_start":314,"line_end":314,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":34616,"byte_end":34619,"line_start":327,"line_end":327,"column_start":8,"column_end":11},"name":"add","qualname":"<Duration as core::ops::Add>::add","value":"fn add(Self, Duration) -> Duration","parent":{"krate":1,"index":3218},"children":[],"decl_id":{"krate":1,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":34968,"byte_end":34971,"line_start":341,"line_end":341,"column_start":8,"column_end":11},"name":"sub","qualname":"<Duration as core::ops::Sub>::sub","value":"fn sub(Self, Duration) -> Duration","parent":{"krate":1,"index":3223},"children":[],"decl_id":{"krate":1,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":35312,"byte_end":35315,"line_start":355,"line_end":355,"column_start":8,"column_end":11},"name":"mul","qualname":"<Duration as core::ops::Mul>::mul","value":"fn mul(Self, i32) -> Duration","parent":{"krate":1,"index":3228},"children":[],"decl_id":{"krate":1,"index":3231},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":35751,"byte_end":35754,"line_start":367,"line_end":367,"column_start":8,"column_end":11},"name":"div","qualname":"<Duration as core::ops::Div>::div","value":"fn div(Self, i32) -> Duration","parent":{"krate":1,"index":3233},"children":[],"decl_id":{"krate":1,"index":3236},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":36865,"byte_end":36868,"line_start":402,"line_end":402,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Duration as core::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9909},"children":[],"decl_id":{"krate":1,"index":9910},"docs":" Format a duration using the [ISO 8601] format","sig":null,"attributes":[{"value":"/ Format a duration using the [ISO 8601] format","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":36731,"byte_end":36780,"line_start":399,"line_end":399,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":36785,"byte_end":36788,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ [ISO 8601]: https://en.wikipedia.org/wiki/ISO_8601#Durations","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":36793,"byte_end":36857,"line_start":401,"line_end":401,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":2043},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":38228,"byte_end":38243,"line_start":439,"line_end":439,"column_start":12,"column_end":27},"name":"OutOfRangeError","qualname":"::oldtime::OutOfRangeError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents error when converting `Duration` to/from a standard library\n implementation","sig":null,"attributes":[{"value":"/ Represents error when converting `Duration` to/from a standard library","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":37905,"byte_end":37979,"line_start":432,"line_end":432,"column_start":1,"column_end":75}},{"value":"/ implementation","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":37980,"byte_end":37998,"line_start":433,"line_end":433,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":37999,"byte_end":38002,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ The `std::time::Duration` supports a range from zero to `u64::MAX`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":38003,"byte_end":38073,"line_start":435,"line_end":435,"column_start":1,"column_end":71}},{"value":"/ *seconds*, while this module supports signed range of up to","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":38074,"byte_end":38137,"line_start":436,"line_end":436,"column_start":1,"column_end":64}},{"value":"/ `i64::MAX` of *milliseconds*.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":38138,"byte_end":38171,"line_start":437,"line_end":437,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":38297,"byte_end":38300,"line_start":442,"line_end":442,"column_start":8,"column_end":11},"name":"fmt","qualname":"<OutOfRangeError as core::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9909},"children":[],"decl_id":{"krate":1,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":96},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":20635,"byte_end":20642,"line_start":443,"line_end":443,"column_start":9,"column_end":16},"name":"prelude","qualname":"::prelude","value":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":137},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":144}],"decl_id":null,"docs":" A convenience module appropriate for glob imports (`use chrono::prelude::*;`).\n","sig":null,"attributes":[{"value":"/ A convenience module appropriate for glob imports (`use chrono::prelude::*;`).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":20544,"byte_end":20626,"line_start":442,"line_end":442,"column_start":1,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":2058},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":54390,"byte_end":54394,"line_start":58,"line_end":58,"column_start":12,"column_end":16},"name":"Date","qualname":"::date::Date","value":"Date {  }","parent":null,"children":[{"krate":0,"index":2060},{"krate":0,"index":2061}],"decl_id":null,"docs":" ISO 8601 calendar date with time zone.","sig":null,"attributes":[{"value":"/ ISO 8601 calendar date with time zone.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":52733,"byte_end":52775,"line_start":25,"line_end":25,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":52776,"byte_end":52779,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ You almost certainly want to be using a [`NaiveDate`] instead of this type.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":52780,"byte_end":52859,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":52860,"byte_end":52863,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This type primarily exists to aid in the construction of DateTimes that","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":52864,"byte_end":52939,"line_start":29,"line_end":29,"column_start":1,"column_end":76}},{"value":"/ have a timezone by way of the [`TimeZone`] datelike constructors (e.g.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":52940,"byte_end":53014,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ [`TimeZone::ymd`]).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":53015,"byte_end":53038,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":53039,"byte_end":53042,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This type should be considered ambiguous at best, due to the inherent lack","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":53043,"byte_end":53121,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ of precision required for the time zone resolution.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":53122,"byte_end":53177,"line_start":34,"line_end":34,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":53178,"byte_end":53181,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ There are some guarantees on the usage of `Date<Tz>`:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":53182,"byte_end":53239,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":53240,"byte_end":53243,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ - If properly constructed via [`TimeZone::ymd`] and others without an error,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":53244,"byte_end":53324,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/   the corresponding local date should exist for at least a moment.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":53325,"byte_end":53395,"line_start":39,"line_end":39,"column_start":1,"column_end":71}},{"value":"/   (It may still have a gap from the offset changes.)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":53396,"byte_end":53452,"line_start":40,"line_end":40,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":53453,"byte_end":53456,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ - The `TimeZone` is free to assign *any* [`Offset`](crate::offset::Offset) to the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":53457,"byte_end":53542,"line_start":42,"line_end":42,"column_start":1,"column_end":86}},{"value":"/   local date, as long as that offset did occur in given day.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":53543,"byte_end":53607,"line_start":43,"line_end":43,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":53608,"byte_end":53611,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/   For example, if `2015-03-08T01:59-08:00` is followed by `2015-03-08T03:00-07:00`,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":53612,"byte_end":53699,"line_start":45,"line_end":45,"column_start":1,"column_end":88}},{"value":"/   it may produce either `2015-03-08-08:00` or `2015-03-08-07:00`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":53700,"byte_end":53768,"line_start":46,"line_end":46,"column_start":1,"column_end":69}},{"value":"/   but *not* `2015-03-08+00:00` and others.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":53769,"byte_end":53815,"line_start":47,"line_end":47,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":53816,"byte_end":53819,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ - Once constructed as a full `DateTime`, [`DateTime::date`] and other associated","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":53820,"byte_end":53904,"line_start":49,"line_end":49,"column_start":1,"column_end":85}},{"value":"/   methods should return those for the original `Date`. For example, if `dt =","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":53905,"byte_end":53985,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"/   tz.ymd(y,m,d).hms(h,n,s)` were valid, `dt.date() == tz.ymd(y,m,d)`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":53986,"byte_end":54059,"line_start":51,"line_end":51,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":54060,"byte_end":54063,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ - The date is timezone-agnostic up to one day (i.e. practically always),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":54064,"byte_end":54140,"line_start":53,"line_end":53,"column_start":1,"column_end":77}},{"value":"/   so the local date and UTC date should be equal for most cases","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":54141,"byte_end":54208,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/   even though the raw calculation between `NaiveDate` and `Duration` may not.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":54209,"byte_end":54290,"line_start":55,"line_end":55,"column_start":1,"column_end":82}}]},{"kind":"Const","id":{"krate":0,"index":202},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":54591,"byte_end":54599,"line_start":66,"line_end":66,"column_start":11,"column_end":19},"name":"MIN_DATE","qualname":"::date::MIN_DATE","value":"Date<Utc>","parent":null,"children":[],"decl_id":null,"docs":" The minimum possible `Date`.\n","sig":null,"attributes":[{"value":"/ The minimum possible `Date`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":54459,"byte_end":54491,"line_start":63,"line_end":63,"column_start":1,"column_end":33}},{"value":"allow(deprecated)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":54492,"byte_end":54512,"line_start":64,"line_end":64,"column_start":1,"column_end":21}},{"value":"deprecated(since = \"0.4.20\", note = \"Use Date::MIN_UTC instead\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":54513,"byte_end":54580,"line_start":65,"line_end":65,"column_start":1,"column_end":68}}]},{"kind":"Const","id":{"krate":0,"index":203},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":54767,"byte_end":54775,"line_start":70,"line_end":70,"column_start":11,"column_end":19},"name":"MAX_DATE","qualname":"::date::MAX_DATE","value":"Date<Utc>","parent":null,"children":[],"decl_id":null,"docs":" The maximum possible `Date`.\n","sig":null,"attributes":[{"value":"/ The maximum possible `Date`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":54635,"byte_end":54667,"line_start":67,"line_end":67,"column_start":1,"column_end":33}},{"value":"allow(deprecated)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":54668,"byte_end":54688,"line_start":68,"line_end":68,"column_start":1,"column_end":21}},{"value":"deprecated(since = \"0.4.20\", note = \"Use Date::MAX_UTC instead\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":54689,"byte_end":54756,"line_start":69,"line_end":69,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":55100,"byte_end":55108,"line_start":78,"line_end":78,"column_start":12,"column_end":20},"name":"from_utc","qualname":"<Date<Tz>>::from_utc","value":"fn from_utc(NaiveDate, Tz::Offset) -> Date<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Date` with given *UTC* date and offset.\n The local date should be constructed via the `TimeZone` trait.\n","sig":null,"attributes":[{"value":"/ Makes a new `Date` with given *UTC* date and offset.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":54846,"byte_end":54902,"line_start":73,"line_end":73,"column_start":5,"column_end":61}},{"value":"/ The local date should be constructed via the `TimeZone` trait.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":54907,"byte_end":54973,"line_start":74,"line_end":74,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":55079,"byte_end":55088,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":55395,"byte_end":55403,"line_start":87,"line_end":87,"column_start":12,"column_end":20},"name":"and_time","qualname":"<Date<Tz>>::and_time","value":"fn and_time(&Self, NaiveTime) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date and given `NaiveTime`.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date and given `NaiveTime`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":55201,"byte_end":55272,"line_start":82,"line_end":82,"column_start":5,"column_end":76}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":55277,"byte_end":55325,"line_start":83,"line_end":83,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":55330,"byte_end":55333,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid datetime.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":55338,"byte_end":55369,"line_start":85,"line_end":85,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":55374,"byte_end":55383,"line_start":86,"line_end":86,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":55800,"byte_end":55807,"line_start":97,"line_end":97,"column_start":12,"column_end":19},"name":"and_hms","qualname":"<Date<Tz>>::and_hms","value":"fn and_hms(&Self, u32, u32, u32) -> DateTime<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute and second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute and second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":55585,"byte_end":55659,"line_start":92,"line_end":92,"column_start":5,"column_end":79}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":55664,"byte_end":55712,"line_start":93,"line_end":93,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":55717,"byte_end":55720,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute and/or second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":55725,"byte_end":55774,"line_start":95,"line_end":95,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":55779,"byte_end":55788,"line_start":96,"line_end":96,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":56162,"byte_end":56173,"line_start":106,"line_end":106,"column_start":12,"column_end":23},"name":"and_hms_opt","qualname":"<Date<Tz>>::and_hms_opt","value":"fn and_hms_opt(&Self, u32, u32, u32) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute and second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute and second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":55939,"byte_end":56013,"line_start":101,"line_end":101,"column_start":5,"column_end":79}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":56018,"byte_end":56066,"line_start":102,"line_end":102,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":56071,"byte_end":56074,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute and/or second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":56079,"byte_end":56136,"line_start":104,"line_end":104,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":56141,"byte_end":56150,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":56660,"byte_end":56673,"line_start":116,"line_end":116,"column_start":12,"column_end":25},"name":"and_hms_milli","qualname":"<Date<Tz>>::and_hms_milli","value":"fn and_hms_milli(&Self, u32, u32, u32, u32) -> DateTime<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\n The millisecond part can exceed 1,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and millisecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":56334,"byte_end":56421,"line_start":110,"line_end":110,"column_start":5,"column_end":92}},{"value":"/ The millisecond part can exceed 1,000 in order to represent the leap second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":56426,"byte_end":56506,"line_start":111,"line_end":111,"column_start":5,"column_end":85}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":56511,"byte_end":56559,"line_start":112,"line_end":112,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":56564,"byte_end":56567,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or millisecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":56572,"byte_end":56634,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":56639,"byte_end":56648,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":57164,"byte_end":57181,"line_start":126,"line_end":126,"column_start":12,"column_end":29},"name":"and_hms_milli_opt","qualname":"<Date<Tz>>::and_hms_milli_opt","value":"fn and_hms_milli_opt(&Self, u32, u32, u32, u32) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\n The millisecond part can exceed 1,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and millisecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":56830,"byte_end":56917,"line_start":120,"line_end":120,"column_start":5,"column_end":92}},{"value":"/ The millisecond part can exceed 1,000 in order to represent the leap second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":56922,"byte_end":57002,"line_start":121,"line_end":121,"column_start":5,"column_end":85}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":57007,"byte_end":57055,"line_start":122,"line_end":122,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":57060,"byte_end":57063,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or millisecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":57068,"byte_end":57138,"line_start":124,"line_end":124,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":57143,"byte_end":57152,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":57744,"byte_end":57757,"line_start":142,"line_end":142,"column_start":12,"column_end":25},"name":"and_hms_micro","qualname":"<Date<Tz>>::and_hms_micro","value":"fn and_hms_micro(&Self, u32, u32, u32, u32) -> DateTime<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\n The microsecond part can exceed 1,000,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and microsecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":57414,"byte_end":57501,"line_start":136,"line_end":136,"column_start":5,"column_end":92}},{"value":"/ The microsecond part can exceed 1,000,000 in order to represent the leap second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":57506,"byte_end":57590,"line_start":137,"line_end":137,"column_start":5,"column_end":89}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":57595,"byte_end":57643,"line_start":138,"line_end":138,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":57648,"byte_end":57651,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or microsecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":57656,"byte_end":57718,"line_start":140,"line_end":140,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":57723,"byte_end":57732,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":58252,"byte_end":58269,"line_start":152,"line_end":152,"column_start":12,"column_end":29},"name":"and_hms_micro_opt","qualname":"<Date<Tz>>::and_hms_micro_opt","value":"fn and_hms_micro_opt(&Self, u32, u32, u32, u32) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\n The microsecond part can exceed 1,000,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and microsecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":57914,"byte_end":58001,"line_start":146,"line_end":146,"column_start":5,"column_end":92}},{"value":"/ The microsecond part can exceed 1,000,000 in order to represent the leap second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":58006,"byte_end":58090,"line_start":147,"line_end":147,"column_start":5,"column_end":89}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":58095,"byte_end":58143,"line_start":148,"line_end":148,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":58148,"byte_end":58151,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or microsecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":58156,"byte_end":58226,"line_start":150,"line_end":150,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":58231,"byte_end":58240,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":58833,"byte_end":58845,"line_start":168,"line_end":168,"column_start":12,"column_end":24},"name":"and_hms_nano","qualname":"<Date<Tz>>::and_hms_nano","value":"fn and_hms_nano(&Self, u32, u32, u32, u32) -> DateTime<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\n The nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":58502,"byte_end":58588,"line_start":162,"line_end":162,"column_start":5,"column_end":91}},{"value":"/ The nanosecond part can exceed 1,000,000,000 in order to represent the leap second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":58593,"byte_end":58680,"line_start":163,"line_end":163,"column_start":5,"column_end":92}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":58685,"byte_end":58733,"line_start":164,"line_end":164,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":58738,"byte_end":58741,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or nanosecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":58746,"byte_end":58807,"line_start":166,"line_end":166,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":58812,"byte_end":58821,"line_start":167,"line_end":167,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":59338,"byte_end":59354,"line_start":178,"line_end":178,"column_start":12,"column_end":28},"name":"and_hms_nano_opt","qualname":"<Date<Tz>>::and_hms_nano_opt","value":"fn and_hms_nano_opt(&Self, u32, u32, u32, u32) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\n The nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":58999,"byte_end":59085,"line_start":172,"line_end":172,"column_start":5,"column_end":91}},{"value":"/ The nanosecond part can exceed 1,000,000,000 in order to represent the leap second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":59090,"byte_end":59177,"line_start":173,"line_end":173,"column_start":5,"column_end":92}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":59182,"byte_end":59230,"line_start":174,"line_end":174,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":59235,"byte_end":59238,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or nanosecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":59243,"byte_end":59312,"line_start":176,"line_end":176,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":59317,"byte_end":59326,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":59718,"byte_end":59722,"line_start":192,"line_end":192,"column_start":12,"column_end":16},"name":"succ","qualname":"<Date<Tz>>::succ","value":"fn succ(&Self) -> Date<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Date` for the next date.","sig":null,"attributes":[{"value":"/ Makes a new `Date` for the next date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":59584,"byte_end":59625,"line_start":188,"line_end":188,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":59630,"byte_end":59633,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Panics when `self` is the last representable date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":59638,"byte_end":59692,"line_start":190,"line_end":190,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":59697,"byte_end":59706,"line_start":191,"line_end":191,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":59944,"byte_end":59952,"line_start":200,"line_end":200,"column_start":12,"column_end":20},"name":"succ_opt","qualname":"<Date<Tz>>::succ_opt","value":"fn succ_opt(&Self) -> Option<Date<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Date` for the next date.","sig":null,"attributes":[{"value":"/ Makes a new `Date` for the next date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":59802,"byte_end":59843,"line_start":196,"line_end":196,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":59848,"byte_end":59851,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when `self` is the last representable date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":59856,"byte_end":59918,"line_start":198,"line_end":198,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":59923,"byte_end":59932,"line_start":199,"line_end":199,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":60212,"byte_end":60216,"line_start":208,"line_end":208,"column_start":12,"column_end":16},"name":"pred","qualname":"<Date<Tz>>::pred","value":"fn pred(&Self) -> Date<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Date` for the prior date.","sig":null,"attributes":[{"value":"/ Makes a new `Date` for the prior date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":60076,"byte_end":60118,"line_start":204,"line_end":204,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":60123,"byte_end":60126,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ Panics when `self` is the first representable date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":60131,"byte_end":60186,"line_start":206,"line_end":206,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":60191,"byte_end":60200,"line_start":207,"line_end":207,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":60440,"byte_end":60448,"line_start":216,"line_end":216,"column_start":12,"column_end":20},"name":"pred_opt","qualname":"<Date<Tz>>::pred_opt","value":"fn pred_opt(&Self) -> Option<Date<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Date` for the prior date.","sig":null,"attributes":[{"value":"/ Makes a new `Date` for the prior date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":60296,"byte_end":60338,"line_start":212,"line_end":212,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":60343,"byte_end":60346,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when `self` is the first representable date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":60351,"byte_end":60414,"line_start":214,"line_end":214,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":60419,"byte_end":60428,"line_start":215,"line_end":215,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":60642,"byte_end":60648,"line_start":222,"line_end":222,"column_start":12,"column_end":18},"name":"offset","qualname":"<Date<Tz>>::offset","value":"fn offset(&Self) -> &Tz::Offset","parent":null,"children":[],"decl_id":null,"docs":" Retrieves an associated offset from UTC.\n","sig":null,"attributes":[{"value":"/ Retrieves an associated offset from UTC.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":60572,"byte_end":60616,"line_start":220,"line_end":220,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":60621,"byte_end":60630,"line_start":221,"line_end":221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":60769,"byte_end":60777,"line_start":228,"line_end":228,"column_start":12,"column_end":20},"name":"timezone","qualname":"<Date<Tz>>::timezone","value":"fn timezone(&Self) -> Tz","parent":null,"children":[],"decl_id":null,"docs":" Retrieves an associated time zone.\n","sig":null,"attributes":[{"value":"/ Retrieves an associated time zone.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":60705,"byte_end":60743,"line_start":226,"line_end":226,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":60748,"byte_end":60757,"line_start":227,"line_end":227,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":61003,"byte_end":61016,"line_start":235,"line_end":235,"column_start":12,"column_end":25},"name":"with_timezone","qualname":"<Date<Tz>>::with_timezone","value":"fn with_timezone<Tz2>(&Self, &Tz2) -> Date<Tz2> where Tz2: TimeZone","parent":null,"children":[],"decl_id":null,"docs":" Changes the associated time zone.\n This does not change the actual `Date` (but will change the string representation).\n","sig":null,"attributes":[{"value":"/ Changes the associated time zone.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":60848,"byte_end":60885,"line_start":232,"line_end":232,"column_start":5,"column_end":42}},{"value":"/ This does not change the actual `Date` (but will change the string representation).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":60890,"byte_end":60977,"line_start":233,"line_end":233,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":60982,"byte_end":60991,"line_start":234,"line_end":234,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":61248,"byte_end":61266,"line_start":243,"line_end":243,"column_start":12,"column_end":30},"name":"checked_add_signed","qualname":"<Date<Tz>>::checked_add_signed","value":"fn checked_add_signed(Self, OldDuration) -> Option<Date<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Adds given `Duration` to the current date.","sig":null,"attributes":[{"value":"/ Adds given `Duration` to the current date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":61112,"byte_end":61158,"line_start":239,"line_end":239,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":61163,"byte_end":61166,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when it will result in overflow.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":61171,"byte_end":61222,"line_start":241,"line_end":241,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":61227,"byte_end":61236,"line_start":242,"line_end":242,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":61580,"byte_end":61598,"line_start":252,"line_end":252,"column_start":12,"column_end":30},"name":"checked_sub_signed","qualname":"<Date<Tz>>::checked_sub_signed","value":"fn checked_sub_signed(Self, OldDuration) -> Option<Date<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Subtracts given `Duration` from the current date.","sig":null,"attributes":[{"value":"/ Subtracts given `Duration` from the current date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":61437,"byte_end":61490,"line_start":248,"line_end":248,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":61495,"byte_end":61498,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when it will result in overflow.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":61503,"byte_end":61554,"line_start":250,"line_end":250,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":61559,"byte_end":61568,"line_start":251,"line_end":251,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":62020,"byte_end":62041,"line_start":263,"line_end":263,"column_start":12,"column_end":33},"name":"signed_duration_since","qualname":"<Date<Tz>>::signed_duration_since","value":"fn signed_duration_since<Tz2>(Self, Date<Tz2>) -> OldDuration where\nTz2: TimeZone","parent":null,"children":[],"decl_id":null,"docs":" Subtracts another `Date` from the current date.\n Returns a `Duration` of integral numbers.","sig":null,"attributes":[{"value":"/ Subtracts another `Date` from the current date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":61769,"byte_end":61820,"line_start":257,"line_end":257,"column_start":5,"column_end":56}},{"value":"/ Returns a `Duration` of integral numbers.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":61825,"byte_end":61870,"line_start":258,"line_end":258,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":61875,"byte_end":61878,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This does not overflow or underflow at all,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":61883,"byte_end":61930,"line_start":260,"line_end":260,"column_start":5,"column_end":52}},{"value":"/ as all possible output fits in the range of `Duration`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":61935,"byte_end":61994,"line_start":261,"line_end":261,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":61999,"byte_end":62008,"line_start":262,"line_end":262,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":62224,"byte_end":62233,"line_start":269,"line_end":269,"column_start":12,"column_end":21},"name":"naive_utc","qualname":"<Date<Tz>>::naive_utc","value":"fn naive_utc(&Self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Returns a view to the naive UTC date.\n","sig":null,"attributes":[{"value":"/ Returns a view to the naive UTC date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":62157,"byte_end":62198,"line_start":267,"line_end":267,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":62203,"byte_end":62212,"line_start":268,"line_end":268,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":62543,"byte_end":62554,"line_start":279,"line_end":279,"column_start":12,"column_end":23},"name":"naive_local","qualname":"<Date<Tz>>::naive_local","value":"fn naive_local(&Self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Returns a view to the naive local date.","sig":null,"attributes":[{"value":"/ Returns a view to the naive local date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":62285,"byte_end":62328,"line_start":273,"line_end":273,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":62333,"byte_end":62336,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ This is technically the same as [`naive_utc`](#method.naive_utc)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":62341,"byte_end":62409,"line_start":275,"line_end":275,"column_start":5,"column_end":73}},{"value":"/ because the offset is restricted to never exceed one day,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":62414,"byte_end":62475,"line_start":276,"line_end":276,"column_start":5,"column_end":66}},{"value":"/ but provided for the consistency.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":62480,"byte_end":62517,"line_start":277,"line_end":277,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":62522,"byte_end":62531,"line_start":278,"line_end":278,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":62691,"byte_end":62702,"line_start":284,"line_end":284,"column_start":12,"column_end":23},"name":"years_since","qualname":"<Date<Tz>>::years_since","value":"fn years_since(&Self, Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of whole years from the given `base` until `self`.\n","sig":null,"attributes":[{"value":"/ Returns the number of whole years from the given `base` until `self`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":62606,"byte_end":62679,"line_start":283,"line_end":283,"column_start":5,"column_end":78}}]},{"kind":"Const","id":{"krate":0,"index":237},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":63056,"byte_end":63063,"line_start":297,"line_end":297,"column_start":15,"column_end":22},"name":"MIN_UTC","qualname":"::date::Date::<Tz>::MIN_UTC","value":"Date<Utc>","parent":{"krate":0,"index":204},"children":[],"decl_id":null,"docs":" The minimum possible `Date`.\n","sig":null,"attributes":[{"value":"/ The minimum possible `Date`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":63009,"byte_end":63041,"line_start":296,"line_end":296,"column_start":5,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":238},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":63172,"byte_end":63179,"line_start":299,"line_end":299,"column_start":15,"column_end":22},"name":"MAX_UTC","qualname":"::date::Date::<Tz>::MAX_UTC","value":"Date<Utc>","parent":{"krate":0,"index":204},"children":[],"decl_id":null,"docs":" The maximum possible `Date`.\n","sig":null,"attributes":[{"value":"/ The maximum possible `Date`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":63125,"byte_end":63157,"line_start":298,"line_end":298,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":65673,"byte_end":65677,"line_start":380,"line_end":380,"column_start":8,"column_end":12},"name":"year","qualname":"<Date<Tz> as traits::Datelike>::year","value":"fn year(&Self) -> i32","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1988},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":65656,"byte_end":65665,"line_start":379,"line_end":379,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":65755,"byte_end":65760,"line_start":384,"line_end":384,"column_start":8,"column_end":13},"name":"month","qualname":"<Date<Tz> as traits::Datelike>::month","value":"fn month(&Self) -> u32","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1990},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":65738,"byte_end":65747,"line_start":383,"line_end":383,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":65839,"byte_end":65845,"line_start":388,"line_end":388,"column_start":8,"column_end":14},"name":"month0","qualname":"<Date<Tz> as traits::Datelike>::month0","value":"fn month0(&Self) -> u32","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1991},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":65822,"byte_end":65831,"line_start":387,"line_end":387,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":65925,"byte_end":65928,"line_start":392,"line_end":392,"column_start":8,"column_end":11},"name":"day","qualname":"<Date<Tz> as traits::Datelike>::day","value":"fn day(&Self) -> u32","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1992},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":65908,"byte_end":65917,"line_start":391,"line_end":391,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":66005,"byte_end":66009,"line_start":396,"line_end":396,"column_start":8,"column_end":12},"name":"day0","qualname":"<Date<Tz> as traits::Datelike>::day0","value":"fn day0(&Self) -> u32","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1993},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":65988,"byte_end":65997,"line_start":395,"line_end":395,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":66087,"byte_end":66094,"line_start":400,"line_end":400,"column_start":8,"column_end":15},"name":"ordinal","qualname":"<Date<Tz> as traits::Datelike>::ordinal","value":"fn ordinal(&Self) -> u32","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1994},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":66070,"byte_end":66079,"line_start":399,"line_end":399,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":66175,"byte_end":66183,"line_start":404,"line_end":404,"column_start":8,"column_end":16},"name":"ordinal0","qualname":"<Date<Tz> as traits::Datelike>::ordinal0","value":"fn ordinal0(&Self) -> u32","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1995},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":66158,"byte_end":66167,"line_start":403,"line_end":403,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":66265,"byte_end":66272,"line_start":408,"line_end":408,"column_start":8,"column_end":15},"name":"weekday","qualname":"<Date<Tz> as traits::Datelike>::weekday","value":"fn weekday(&Self) -> Weekday","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1996},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":66248,"byte_end":66257,"line_start":407,"line_end":407,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":66357,"byte_end":66365,"line_start":412,"line_end":412,"column_start":8,"column_end":16},"name":"iso_week","qualname":"<Date<Tz> as traits::Datelike>::iso_week","value":"fn iso_week(&Self) -> IsoWeek","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1997},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":66340,"byte_end":66349,"line_start":411,"line_end":411,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":66452,"byte_end":66461,"line_start":417,"line_end":417,"column_start":8,"column_end":17},"name":"with_year","qualname":"<Date<Tz> as traits::Datelike>::with_year","value":"fn with_year(&Self, i32) -> Option<Date<Tz>>","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1998},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":66435,"byte_end":66444,"line_start":416,"line_end":416,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":66583,"byte_end":66593,"line_start":422,"line_end":422,"column_start":8,"column_end":18},"name":"with_month","qualname":"<Date<Tz> as traits::Datelike>::with_month","value":"fn with_month(&Self, u32) -> Option<Date<Tz>>","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1999},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":66566,"byte_end":66575,"line_start":421,"line_end":421,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":66718,"byte_end":66729,"line_start":427,"line_end":427,"column_start":8,"column_end":19},"name":"with_month0","qualname":"<Date<Tz> as traits::Datelike>::with_month0","value":"fn with_month0(&Self, u32) -> Option<Date<Tz>>","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":2000},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":66701,"byte_end":66710,"line_start":426,"line_end":426,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":66857,"byte_end":66865,"line_start":432,"line_end":432,"column_start":8,"column_end":16},"name":"with_day","qualname":"<Date<Tz> as traits::Datelike>::with_day","value":"fn with_day(&Self, u32) -> Option<Date<Tz>>","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":2001},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":66840,"byte_end":66849,"line_start":431,"line_end":431,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":66984,"byte_end":66993,"line_start":437,"line_end":437,"column_start":8,"column_end":17},"name":"with_day0","qualname":"<Date<Tz> as traits::Datelike>::with_day0","value":"fn with_day0(&Self, u32) -> Option<Date<Tz>>","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":2002},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":66967,"byte_end":66976,"line_start":436,"line_end":436,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":67115,"byte_end":67127,"line_start":442,"line_end":442,"column_start":8,"column_end":20},"name":"with_ordinal","qualname":"<Date<Tz> as traits::Datelike>::with_ordinal","value":"fn with_ordinal(&Self, u32) -> Option<Date<Tz>>","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":2003},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":67098,"byte_end":67107,"line_start":441,"line_end":441,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":67258,"byte_end":67271,"line_start":447,"line_end":447,"column_start":8,"column_end":21},"name":"with_ordinal0","qualname":"<Date<Tz> as traits::Datelike>::with_ordinal0","value":"fn with_ordinal0(&Self, u32) -> Option<Date<Tz>>","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":2004},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":67241,"byte_end":67250,"line_start":446,"line_end":446,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":67691,"byte_end":67693,"line_start":457,"line_end":457,"column_start":8,"column_end":10},"name":"eq","qualname":"<Date<Tz> as core::cmp::PartialEq>::eq","value":"fn eq(&Self, &Date<Tz2>) -> bool","parent":{"krate":1,"index":2802},"children":[],"decl_id":{"krate":1,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":67862,"byte_end":67873,"line_start":465,"line_end":465,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<Date<Tz> as core::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &Date<Tz>) -> Option<Ordering>","parent":{"krate":1,"index":2848},"children":[],"decl_id":{"krate":1,"index":2850},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":68018,"byte_end":68021,"line_start":471,"line_end":471,"column_start":8,"column_end":11},"name":"cmp","qualname":"<Date<Tz> as core::cmp::Ord>::cmp","value":"fn cmp(&Self, &Date<Tz>) -> Ordering","parent":{"krate":1,"index":2838},"children":[],"decl_id":{"krate":1,"index":2839},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":68157,"byte_end":68161,"line_start":477,"line_end":477,"column_start":8,"column_end":12},"name":"hash","qualname":"<Date<Tz> as core::hash::Hash>::hash","value":"fn hash<H>(&Self, &mut H) where H: hash::Hasher","parent":{"krate":1,"index":10115},"children":[],"decl_id":{"krate":1,"index":10116},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":68343,"byte_end":68346,"line_start":486,"line_end":486,"column_start":8,"column_end":11},"name":"add","qualname":"<Date<Tz> as core::ops::Add>::add","value":"fn add(Self, OldDuration) -> Date<Tz>","parent":{"krate":1,"index":3218},"children":[],"decl_id":{"krate":1,"index":3221},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":68326,"byte_end":68335,"line_start":485,"line_end":485,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":68548,"byte_end":68558,"line_start":493,"line_end":493,"column_start":8,"column_end":18},"name":"add_assign","qualname":"<Date<Tz> as core::ops::AddAssign>::add_assign","value":"fn add_assign(&mut Self, OldDuration)","parent":{"krate":1,"index":3249},"children":[],"decl_id":{"krate":1,"index":3251},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":68531,"byte_end":68540,"line_start":492,"line_end":492,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":68794,"byte_end":68797,"line_start":502,"line_end":502,"column_start":8,"column_end":11},"name":"sub","qualname":"<Date<Tz> as core::ops::Sub>::sub","value":"fn sub(Self, OldDuration) -> Date<Tz>","parent":{"krate":1,"index":3223},"children":[],"decl_id":{"krate":1,"index":3226},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":68777,"byte_end":68786,"line_start":501,"line_end":501,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":68999,"byte_end":69009,"line_start":509,"line_end":509,"column_start":8,"column_end":18},"name":"sub_assign","qualname":"<Date<Tz> as core::ops::SubAssign>::sub_assign","value":"fn sub_assign(&mut Self, OldDuration)","parent":{"krate":1,"index":3253},"children":[],"decl_id":{"krate":1,"index":3255},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":68982,"byte_end":68991,"line_start":508,"line_end":508,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":69245,"byte_end":69248,"line_start":518,"line_end":518,"column_start":8,"column_end":11},"name":"sub","qualname":"<Date<Tz> as core::ops::Sub>::sub","value":"fn sub(Self, Date<Tz>) -> OldDuration","parent":{"krate":1,"index":3223},"children":[],"decl_id":{"krate":1,"index":3226},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":69228,"byte_end":69237,"line_start":517,"line_end":517,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":69388,"byte_end":69391,"line_start":524,"line_end":524,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Date<Tz> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9902},"children":[],"decl_id":{"krate":1,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":69602,"byte_end":69605,"line_start":533,"line_end":533,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Date<Tz> as core::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9909},"children":[],"decl_id":{"krate":1,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2066},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":74532,"byte_end":74536,"line_start":55,"line_end":55,"column_start":5,"column_end":9},"name":"Secs","qualname":"::datetime::SecondsFormat::Secs","value":"SecondsFormat::Secs","parent":{"krate":0,"index":2065},"children":[],"decl_id":null,"docs":" Format whole seconds only, with no decimal point nor subseconds.\n","sig":null,"attributes":[{"value":"/ Format whole seconds only, with no decimal point nor subseconds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":74459,"byte_end":74527,"line_start":54,"line_end":54,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2068},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":74675,"byte_end":74681,"line_start":59,"line_end":59,"column_start":5,"column_end":11},"name":"Millis","qualname":"::datetime::SecondsFormat::Millis","value":"SecondsFormat::Millis","parent":{"krate":0,"index":2065},"children":[],"decl_id":null,"docs":" Use fixed 3 subsecond digits. This corresponds to\n [Fixed::Nanosecond3](format/enum.Fixed.html#variant.Nanosecond3).\n","sig":null,"attributes":[{"value":"/ Use fixed 3 subsecond digits. This corresponds to","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":74543,"byte_end":74596,"line_start":57,"line_end":57,"column_start":5,"column_end":58}},{"value":"/ [Fixed::Nanosecond3](format/enum.Fixed.html#variant.Nanosecond3).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":74601,"byte_end":74670,"line_start":58,"line_end":58,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2070},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":74820,"byte_end":74826,"line_start":63,"line_end":63,"column_start":5,"column_end":11},"name":"Micros","qualname":"::datetime::SecondsFormat::Micros","value":"SecondsFormat::Micros","parent":{"krate":0,"index":2065},"children":[],"decl_id":null,"docs":" Use fixed 6 subsecond digits. This corresponds to\n [Fixed::Nanosecond6](format/enum.Fixed.html#variant.Nanosecond6).\n","sig":null,"attributes":[{"value":"/ Use fixed 6 subsecond digits. This corresponds to","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":74688,"byte_end":74741,"line_start":61,"line_end":61,"column_start":5,"column_end":58}},{"value":"/ [Fixed::Nanosecond6](format/enum.Fixed.html#variant.Nanosecond6).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":74746,"byte_end":74815,"line_start":62,"line_end":62,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2072},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":74965,"byte_end":74970,"line_start":67,"line_end":67,"column_start":5,"column_end":10},"name":"Nanos","qualname":"::datetime::SecondsFormat::Nanos","value":"SecondsFormat::Nanos","parent":{"krate":0,"index":2065},"children":[],"decl_id":null,"docs":" Use fixed 9 subsecond digits. This corresponds to\n [Fixed::Nanosecond9](format/enum.Fixed.html#variant.Nanosecond9).\n","sig":null,"attributes":[{"value":"/ Use fixed 9 subsecond digits. This corresponds to","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":74833,"byte_end":74886,"line_start":65,"line_end":65,"column_start":5,"column_end":58}},{"value":"/ [Fixed::Nanosecond9](format/enum.Fixed.html#variant.Nanosecond9).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":74891,"byte_end":74960,"line_start":66,"line_end":66,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2074},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":75206,"byte_end":75212,"line_start":72,"line_end":72,"column_start":5,"column_end":11},"name":"AutoSi","qualname":"::datetime::SecondsFormat::AutoSi","value":"SecondsFormat::AutoSi","parent":{"krate":0,"index":2065},"children":[],"decl_id":null,"docs":" Automatically select one of `Secs`, `Millis`, `Micros`, or `Nanos` to\n display all available non-zero sub-second digits.  This corresponds to\n [Fixed::Nanosecond](format/enum.Fixed.html#variant.Nanosecond).\n","sig":null,"attributes":[{"value":"/ Automatically select one of `Secs`, `Millis`, `Micros`, or `Nanos` to","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":74977,"byte_end":75050,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/ display all available non-zero sub-second digits.  This corresponds to","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":75055,"byte_end":75129,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ [Fixed::Nanosecond](format/enum.Fixed.html#variant.Nanosecond).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":75134,"byte_end":75201,"line_start":71,"line_end":71,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2076},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":75272,"byte_end":75287,"line_start":76,"line_end":76,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::datetime::SecondsFormat::__NonExhaustive","value":"SecondsFormat::__NonExhaustive","parent":{"krate":0,"index":2065},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2065},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":74439,"byte_end":74452,"line_start":53,"line_end":53,"column_start":10,"column_end":23},"name":"SecondsFormat","qualname":"::datetime::SecondsFormat","value":"enum SecondsFormat { Secs, Millis, Micros, Nanos, AutoSi, __NonExhaustive, }","parent":null,"children":[{"krate":0,"index":2066},{"krate":0,"index":2068},{"krate":0,"index":2070},{"krate":0,"index":2072},{"krate":0,"index":2074},{"krate":0,"index":2076}],"decl_id":null,"docs":" Specific formatting options for seconds. This may be extended in the\n future, so exhaustive matching in external code is not recommended.","sig":null,"attributes":[{"value":"/ Specific formatting options for seconds. This may be extended in the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":74176,"byte_end":74248,"line_start":48,"line_end":48,"column_start":1,"column_end":73}},{"value":"/ future, so exhaustive matching in external code is not recommended.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":74249,"byte_end":74320,"line_start":49,"line_end":49,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":74321,"byte_end":74324,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ See the `TimeZone::to_rfc3339_opts` function for usage.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":74325,"byte_end":74384,"line_start":51,"line_end":51,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":2089},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":75656,"byte_end":75664,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"DateTime","qualname":"::datetime::DateTime","value":"DateTime {  }","parent":null,"children":[{"krate":0,"index":2091},{"krate":0,"index":2092}],"decl_id":null,"docs":" ISO 8601 combined date and time with time zone.","sig":null,"attributes":[{"value":"/ ISO 8601 combined date and time with time zone.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":75292,"byte_end":75343,"line_start":79,"line_end":79,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":75344,"byte_end":75347,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ There are some constructors implemented here (the `from_*` methods), but","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":75348,"byte_end":75424,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"/ the general-purpose constructors are all via the methods on the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":75425,"byte_end":75492,"line_start":82,"line_end":82,"column_start":1,"column_end":68}},{"value":"/ [`TimeZone`](./offset/trait.TimeZone.html) implementations.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":75493,"byte_end":75556,"line_start":83,"line_end":83,"column_start":1,"column_end":64}}]},{"kind":"Const","id":{"krate":0,"index":416},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":75861,"byte_end":75873,"line_start":93,"line_end":93,"column_start":11,"column_end":23},"name":"MIN_DATETIME","qualname":"::datetime::MIN_DATETIME","value":"DateTime<Utc>","parent":null,"children":[],"decl_id":null,"docs":" The minimum possible `DateTime<Utc>`.\n","sig":null,"attributes":[{"value":"/ The minimum possible `DateTime<Utc>`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":75737,"byte_end":75778,"line_start":91,"line_end":91,"column_start":1,"column_end":42}},{"value":"deprecated(since = \"0.4.20\", note = \"Use DateTime::MIN_UTC instead\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":75779,"byte_end":75850,"line_start":92,"line_end":92,"column_start":1,"column_end":72}}]},{"kind":"Const","id":{"krate":0,"index":417},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":76041,"byte_end":76053,"line_start":96,"line_end":96,"column_start":11,"column_end":23},"name":"MAX_DATETIME","qualname":"::datetime::MAX_DATETIME","value":"DateTime<Utc>","parent":null,"children":[],"decl_id":null,"docs":" The maximum possible `DateTime<Utc>`.\n","sig":null,"attributes":[{"value":"/ The maximum possible `DateTime<Utc>`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":75917,"byte_end":75958,"line_start":94,"line_end":94,"column_start":1,"column_end":42}},{"value":"deprecated(since = \"0.4.20\", note = \"Use DateTime::MAX_UTC instead\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":75959,"byte_end":76030,"line_start":95,"line_end":95,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":76663,"byte_end":76671,"line_start":113,"line_end":113,"column_start":12,"column_end":20},"name":"from_utc","qualname":"<DateTime<Tz>>::from_utc","value":"fn from_utc(NaiveDateTime, Tz::Offset) -> DateTime<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` with given *UTC* datetime and offset.\n The local datetime should be constructed via the `TimeZone` trait.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` with given *UTC* datetime and offset.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":76136,"byte_end":76200,"line_start":99,"line_end":99,"column_start":5,"column_end":69}},{"value":"/ The local datetime should be constructed via the `TimeZone` trait.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":76205,"byte_end":76275,"line_start":100,"line_end":100,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":76280,"byte_end":76283,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":76288,"byte_end":76301,"line_start":102,"line_end":102,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":76306,"byte_end":76309,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":76314,"byte_end":76321,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/ use chrono::{DateTime, TimeZone, NaiveDateTime, Utc};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":76326,"byte_end":76383,"line_start":105,"line_end":105,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":76388,"byte_end":76391,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ let dt = DateTime::<Utc>::from_utc(NaiveDateTime::from_timestamp(61, 0), Utc);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":76396,"byte_end":76478,"line_start":107,"line_end":107,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(Utc.timestamp(61, 0), dt);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":76483,"byte_end":76524,"line_start":108,"line_end":108,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":76529,"byte_end":76536,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":76642,"byte_end":76651,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":77923,"byte_end":77933,"line_start":142,"line_end":142,"column_start":12,"column_end":22},"name":"from_local","qualname":"<DateTime<Tz>>::from_local","value":"fn from_local(NaiveDateTime, Tz::Offset) -> DateTime<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` with given **local** datetime and offset that\n presents local timezone.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` with given **local** datetime and offset that","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":76784,"byte_end":76856,"line_start":117,"line_end":117,"column_start":5,"column_end":77}},{"value":"/ presents local timezone.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":76861,"byte_end":76889,"line_start":118,"line_end":118,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":76894,"byte_end":76897,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":76902,"byte_end":76915,"line_start":120,"line_end":120,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":76920,"byte_end":76923,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":76928,"byte_end":76935,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ use chrono::DateTime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":76940,"byte_end":76965,"line_start":123,"line_end":123,"column_start":5,"column_end":30}},{"value":"/ use chrono::naive::NaiveDate;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":76970,"byte_end":77003,"line_start":124,"line_end":124,"column_start":5,"column_end":38}},{"value":"/ use chrono::offset::{Utc, FixedOffset};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":77008,"byte_end":77051,"line_start":125,"line_end":125,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":77056,"byte_end":77059,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ let naivedatetime_utc = NaiveDate::from_ymd(2000, 1, 12).and_hms(2, 0, 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":77064,"byte_end":77142,"line_start":127,"line_end":127,"column_start":5,"column_end":83}},{"value":"/ let datetime_utc = DateTime::<Utc>::from_utc(naivedatetime_utc, Utc);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":77147,"byte_end":77220,"line_start":128,"line_end":128,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":77225,"byte_end":77228,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ let timezone_east = FixedOffset::east(8 * 60 * 60);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":77233,"byte_end":77288,"line_start":130,"line_end":130,"column_start":5,"column_end":60}},{"value":"/ let naivedatetime_east = NaiveDate::from_ymd(2000, 1, 12).and_hms(10, 0, 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":77293,"byte_end":77373,"line_start":131,"line_end":131,"column_start":5,"column_end":85}},{"value":"/ let datetime_east = DateTime::<FixedOffset>::from_local(naivedatetime_east, timezone_east);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":77378,"byte_end":77473,"line_start":132,"line_end":132,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":77478,"byte_end":77481,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ let timezone_west = FixedOffset::west(7 * 60 * 60);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":77486,"byte_end":77541,"line_start":134,"line_end":134,"column_start":5,"column_end":60}},{"value":"/ let naivedatetime_west = NaiveDate::from_ymd(2000, 1, 11).and_hms(19, 0, 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":77546,"byte_end":77626,"line_start":135,"line_end":135,"column_start":5,"column_end":85}},{"value":"/ let datetime_west = DateTime::<FixedOffset>::from_local(naivedatetime_west, timezone_west);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":77631,"byte_end":77726,"line_start":136,"line_end":136,"column_start":5,"column_end":100}},{"value":"/ assert_eq!(datetime_east, datetime_utc.with_timezone(&timezone_east));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":77732,"byte_end":77806,"line_start":138,"line_end":138,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(datetime_west, datetime_utc.with_timezone(&timezone_west));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":77811,"byte_end":77885,"line_start":139,"line_end":139,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":77890,"byte_end":77897,"line_start":140,"line_end":140,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":77902,"byte_end":77911,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":78660,"byte_end":78664,"line_start":165,"line_end":165,"column_start":12,"column_end":16},"name":"date","qualname":"<DateTime<Tz>>::date","value":"fn date(&Self) -> Date<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a date component","sig":null,"attributes":[{"value":"/ Retrieves a date component","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":78113,"byte_end":78143,"line_start":148,"line_end":148,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":78148,"byte_end":78151,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ Unless you are immediately planning on turning this into a `DateTime`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":78156,"byte_end":78229,"line_start":150,"line_end":150,"column_start":5,"column_end":78}},{"value":"/ with the same Timezone you should use the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":78234,"byte_end":78279,"line_start":151,"line_end":151,"column_start":5,"column_end":50}},{"value":"/ [`date_naive`](DateTime::date_naive) method.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":78284,"byte_end":78332,"line_start":152,"line_end":152,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":78337,"byte_end":78340,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":78345,"byte_end":78352,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":78357,"byte_end":78384,"line_start":155,"line_end":155,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":78389,"byte_end":78392,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ let date: Date<Utc> = Utc.ymd(2020, 1, 1);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":78397,"byte_end":78443,"line_start":157,"line_end":157,"column_start":5,"column_end":51}},{"value":"/ let dt: DateTime<Utc> = date.and_hms(0, 0, 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":78448,"byte_end":78498,"line_start":158,"line_end":158,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":78503,"byte_end":78506,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(dt.date(), date);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":78511,"byte_end":78543,"line_start":160,"line_end":160,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":78548,"byte_end":78551,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(dt.date().and_hms(1, 1, 1), date.and_hms(1, 1, 1));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":78556,"byte_end":78622,"line_start":162,"line_end":162,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":78627,"byte_end":78634,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":78639,"byte_end":78648,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":79335,"byte_end":79345,"line_start":182,"line_end":182,"column_start":12,"column_end":22},"name":"date_naive","qualname":"<DateTime<Tz>>::date_naive","value":"fn date_naive(&Self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the Date without an associated timezone","sig":null,"attributes":[{"value":"/ Retrieves the Date without an associated timezone","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":78768,"byte_end":78821,"line_start":169,"line_end":169,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":78826,"byte_end":78829,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ [`NaiveDate`] is a more well-defined type, and has more traits implemented on it,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":78834,"byte_end":78919,"line_start":171,"line_end":171,"column_start":5,"column_end":90}},{"value":"/ so should be preferred to [`Date`] any time you truly want to operate on Dates.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":78924,"byte_end":79007,"line_start":172,"line_end":172,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":79012,"byte_end":79015,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":79020,"byte_end":79027,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":79032,"byte_end":79059,"line_start":175,"line_end":175,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":79064,"byte_end":79067,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ let date: DateTime<Utc> = Utc.ymd(2020, 1, 1).and_hms(0, 0, 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":79072,"byte_end":79139,"line_start":177,"line_end":177,"column_start":5,"column_end":72}},{"value":"/ let other: DateTime<FixedOffset> = FixedOffset::east(23).ymd(2020, 1, 1).and_hms(0, 0, 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":79144,"byte_end":79238,"line_start":178,"line_end":178,"column_start":5,"column_end":99}},{"value":"/ assert_eq!(date.date_naive(), other.date_naive());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":79243,"byte_end":79297,"line_start":179,"line_end":179,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":79302,"byte_end":79309,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":79314,"byte_end":79323,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":79610,"byte_end":79614,"line_start":190,"line_end":190,"column_start":12,"column_end":16},"name":"time","qualname":"<DateTime<Tz>>::time","value":"fn time(&Self) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a time component.\n Unlike `date`, this is not associated to the time zone.\n","sig":null,"attributes":[{"value":"/ Retrieves a time component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":79489,"byte_end":79520,"line_start":187,"line_end":187,"column_start":5,"column_end":36}},{"value":"/ Unlike `date`, this is not associated to the time zone.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":79525,"byte_end":79584,"line_start":188,"line_end":188,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":79589,"byte_end":79598,"line_start":189,"line_end":189,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":79831,"byte_end":79840,"line_start":197,"line_end":197,"column_start":12,"column_end":21},"name":"timestamp","qualname":"<DateTime<Tz>>::timestamp","value":"fn timestamp(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap seconds since January 1, 1970 0:00:00 UTC\n (aka \"UNIX timestamp\").\n","sig":null,"attributes":[{"value":"/ Returns the number of non-leap seconds since January 1, 1970 0:00:00 UTC","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":79697,"byte_end":79773,"line_start":194,"line_end":194,"column_start":5,"column_end":81}},{"value":"/ (aka \"UNIX timestamp\").","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":79778,"byte_end":79805,"line_start":195,"line_end":195,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":79810,"byte_end":79819,"line_start":196,"line_end":196,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":80659,"byte_end":80675,"line_start":221,"line_end":221,"column_start":12,"column_end":28},"name":"timestamp_millis","qualname":"<DateTime<Tz>>::timestamp_millis","value":"fn timestamp_millis(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap-milliseconds since January 1, 1970 UTC","sig":null,"attributes":[{"value":"/ Returns the number of non-leap-milliseconds since January 1, 1970 UTC","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":79902,"byte_end":79975,"line_start":201,"line_end":201,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":79980,"byte_end":79983,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ Note that this does reduce the number of years that can be represented","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":79988,"byte_end":80062,"line_start":203,"line_end":203,"column_start":5,"column_end":79}},{"value":"/ from ~584 Billion to ~584 Million. (If this is a problem, please file","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":80067,"byte_end":80140,"line_start":204,"line_end":204,"column_start":5,"column_end":78}},{"value":"/ an issue to let me know what domain needs millisecond precision over","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":80145,"byte_end":80217,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ billions of years, I'm curious.)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":80222,"byte_end":80258,"line_start":206,"line_end":206,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":80263,"byte_end":80266,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":80271,"byte_end":80284,"line_start":208,"line_end":208,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":80289,"byte_end":80292,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":80297,"byte_end":80304,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ use chrono::Utc;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":80309,"byte_end":80329,"line_start":211,"line_end":211,"column_start":5,"column_end":25}},{"value":"/ use chrono::TimeZone;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":80334,"byte_end":80359,"line_start":212,"line_end":212,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":80364,"byte_end":80367,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ let dt = Utc.ymd(1970, 1, 1).and_hms_milli(0, 0, 1, 444);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":80372,"byte_end":80433,"line_start":214,"line_end":214,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(dt.timestamp_millis(), 1_444);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":80438,"byte_end":80483,"line_start":215,"line_end":215,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":80488,"byte_end":80491,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ let dt = Utc.ymd(2001, 9, 9).and_hms_milli(1, 46, 40, 555);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":80496,"byte_end":80559,"line_start":217,"line_end":217,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(dt.timestamp_millis(), 1_000_000_000_555);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":80564,"byte_end":80621,"line_start":218,"line_end":218,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":80626,"byte_end":80633,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":80638,"byte_end":80647,"line_start":220,"line_end":220,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":81502,"byte_end":81518,"line_start":245,"line_end":245,"column_start":12,"column_end":28},"name":"timestamp_micros","qualname":"<DateTime<Tz>>::timestamp_micros","value":"fn timestamp_micros(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap-microseconds since January 1, 1970 UTC","sig":null,"attributes":[{"value":"/ Returns the number of non-leap-microseconds since January 1, 1970 UTC","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":80744,"byte_end":80817,"line_start":225,"line_end":225,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":80822,"byte_end":80825,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ Note that this does reduce the number of years that can be represented","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":80830,"byte_end":80904,"line_start":227,"line_end":227,"column_start":5,"column_end":79}},{"value":"/ from ~584 Billion to ~584 Thousand. (If this is a problem, please file","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":80909,"byte_end":80983,"line_start":228,"line_end":228,"column_start":5,"column_end":79}},{"value":"/ an issue to let me know what domain needs microsecond precision over","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":80988,"byte_end":81060,"line_start":229,"line_end":229,"column_start":5,"column_end":77}},{"value":"/ millennia, I'm curious.)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":81065,"byte_end":81093,"line_start":230,"line_end":230,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":81098,"byte_end":81101,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":81106,"byte_end":81119,"line_start":232,"line_end":232,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":81124,"byte_end":81127,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":81132,"byte_end":81139,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/ use chrono::Utc;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":81144,"byte_end":81164,"line_start":235,"line_end":235,"column_start":5,"column_end":25}},{"value":"/ use chrono::TimeZone;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":81169,"byte_end":81194,"line_start":236,"line_end":236,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":81199,"byte_end":81202,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ let dt = Utc.ymd(1970, 1, 1).and_hms_micro(0, 0, 1, 444);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":81207,"byte_end":81268,"line_start":238,"line_end":238,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(dt.timestamp_micros(), 1_000_444);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":81273,"byte_end":81322,"line_start":239,"line_end":239,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":81327,"byte_end":81330,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ let dt = Utc.ymd(2001, 9, 9).and_hms_micro(1, 46, 40, 555);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":81335,"byte_end":81398,"line_start":241,"line_end":241,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(dt.timestamp_micros(), 1_000_000_000_000_555);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":81403,"byte_end":81464,"line_start":242,"line_end":242,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":81469,"byte_end":81476,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":81481,"byte_end":81490,"line_start":244,"line_end":244,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":82338,"byte_end":82353,"line_start":269,"line_end":269,"column_start":12,"column_end":27},"name":"timestamp_nanos","qualname":"<DateTime<Tz>>::timestamp_nanos","value":"fn timestamp_nanos(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap-nanoseconds since January 1, 1970 UTC","sig":null,"attributes":[{"value":"/ Returns the number of non-leap-nanoseconds since January 1, 1970 UTC","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":81587,"byte_end":81659,"line_start":249,"line_end":249,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":81664,"byte_end":81667,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ Note that this does reduce the number of years that can be represented","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":81672,"byte_end":81746,"line_start":251,"line_end":251,"column_start":5,"column_end":79}},{"value":"/ from ~584 Billion to ~584. (If this is a problem, please file","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":81751,"byte_end":81816,"line_start":252,"line_end":252,"column_start":5,"column_end":70}},{"value":"/ an issue to let me know what domain needs nanosecond precision over","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":81821,"byte_end":81892,"line_start":253,"line_end":253,"column_start":5,"column_end":76}},{"value":"/ millennia, I'm curious.)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":81897,"byte_end":81925,"line_start":254,"line_end":254,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":81930,"byte_end":81933,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":81938,"byte_end":81951,"line_start":256,"line_end":256,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":81956,"byte_end":81959,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":81964,"byte_end":81971,"line_start":258,"line_end":258,"column_start":5,"column_end":12}},{"value":"/ use chrono::Utc;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":81976,"byte_end":81996,"line_start":259,"line_end":259,"column_start":5,"column_end":25}},{"value":"/ use chrono::TimeZone;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":82001,"byte_end":82026,"line_start":260,"line_end":260,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":82031,"byte_end":82034,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ let dt = Utc.ymd(1970, 1, 1).and_hms_nano(0, 0, 1, 444);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":82039,"byte_end":82099,"line_start":262,"line_end":262,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(dt.timestamp_nanos(), 1_000_000_444);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":82104,"byte_end":82156,"line_start":263,"line_end":263,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":82161,"byte_end":82164,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ let dt = Utc.ymd(2001, 9, 9).and_hms_nano(1, 46, 40, 555);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":82169,"byte_end":82231,"line_start":265,"line_end":265,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(dt.timestamp_nanos(), 1_000_000_000_000_000_555);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":82236,"byte_end":82300,"line_start":266,"line_end":266,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":82305,"byte_end":82312,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":82317,"byte_end":82326,"line_start":268,"line_end":268,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":82683,"byte_end":82706,"line_start":279,"line_end":279,"column_start":12,"column_end":35},"name":"timestamp_subsec_millis","qualname":"<DateTime<Tz>>::timestamp_subsec_millis","value":"fn timestamp_subsec_millis(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of milliseconds since the last second boundary","sig":null,"attributes":[{"value":"/ Returns the number of milliseconds since the last second boundary","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":82421,"byte_end":82490,"line_start":273,"line_end":273,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":82495,"byte_end":82498,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ warning: in event of a leap second, this may exceed 999","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":82503,"byte_end":82562,"line_start":275,"line_end":275,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":82567,"byte_end":82570,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ note: this is not the number of milliseconds since January 1, 1970 0:00:00 UTC","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":82575,"byte_end":82657,"line_start":277,"line_end":277,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":82662,"byte_end":82671,"line_start":278,"line_end":278,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":83048,"byte_end":83071,"line_start":289,"line_end":289,"column_start":12,"column_end":35},"name":"timestamp_subsec_micros","qualname":"<DateTime<Tz>>::timestamp_subsec_micros","value":"fn timestamp_subsec_micros(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of microseconds since the last second boundary","sig":null,"attributes":[{"value":"/ Returns the number of microseconds since the last second boundary","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":82782,"byte_end":82851,"line_start":283,"line_end":283,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":82856,"byte_end":82859,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ warning: in event of a leap second, this may exceed 999_999","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":82864,"byte_end":82927,"line_start":285,"line_end":285,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":82932,"byte_end":82935,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ note: this is not the number of microseconds since January 1, 1970 0:00:00 UTC","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":82940,"byte_end":83022,"line_start":287,"line_end":287,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":83027,"byte_end":83036,"line_start":288,"line_end":288,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":83415,"byte_end":83437,"line_start":299,"line_end":299,"column_start":12,"column_end":34},"name":"timestamp_subsec_nanos","qualname":"<DateTime<Tz>>::timestamp_subsec_nanos","value":"fn timestamp_subsec_nanos(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of nanoseconds since the last second boundary","sig":null,"attributes":[{"value":"/ Returns the number of nanoseconds since the last second boundary","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":83147,"byte_end":83215,"line_start":293,"line_end":293,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":83220,"byte_end":83223,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ warning: in event of a leap second, this may exceed 999_999_999","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":83228,"byte_end":83295,"line_start":295,"line_end":295,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":83300,"byte_end":83303,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ note: this is not the number of nanoseconds since January 1, 1970 0:00:00 UTC","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":83308,"byte_end":83389,"line_start":297,"line_end":297,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":83394,"byte_end":83403,"line_start":298,"line_end":298,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":83582,"byte_end":83588,"line_start":305,"line_end":305,"column_start":12,"column_end":18},"name":"offset","qualname":"<DateTime<Tz>>::offset","value":"fn offset(&Self) -> &Tz::Offset","parent":null,"children":[],"decl_id":null,"docs":" Retrieves an associated offset from UTC.\n","sig":null,"attributes":[{"value":"/ Retrieves an associated offset from UTC.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":83512,"byte_end":83556,"line_start":303,"line_end":303,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":83561,"byte_end":83570,"line_start":304,"line_end":304,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":83709,"byte_end":83717,"line_start":311,"line_end":311,"column_start":12,"column_end":20},"name":"timezone","qualname":"<DateTime<Tz>>::timezone","value":"fn timezone(&Self) -> Tz","parent":null,"children":[],"decl_id":null,"docs":" Retrieves an associated time zone.\n","sig":null,"attributes":[{"value":"/ Retrieves an associated time zone.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":83645,"byte_end":83683,"line_start":309,"line_end":309,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":83688,"byte_end":83697,"line_start":310,"line_end":310,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":83967,"byte_end":83980,"line_start":318,"line_end":318,"column_start":12,"column_end":25},"name":"with_timezone","qualname":"<DateTime<Tz>>::with_timezone","value":"fn with_timezone<Tz2>(&Self, &Tz2) -> DateTime<Tz2> where Tz2: TimeZone","parent":null,"children":[],"decl_id":null,"docs":" Changes the associated time zone.\n The returned `DateTime` references the same instant of time from the perspective of the provided time zone.\n","sig":null,"attributes":[{"value":"/ Changes the associated time zone.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":83788,"byte_end":83825,"line_start":315,"line_end":315,"column_start":5,"column_end":42}},{"value":"/ The returned `DateTime` references the same instant of time from the perspective of the provided time zone.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":83830,"byte_end":83941,"line_start":316,"line_end":316,"column_start":5,"column_end":116}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":83946,"byte_end":83955,"line_start":317,"line_end":317,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":84233,"byte_end":84251,"line_start":326,"line_end":326,"column_start":12,"column_end":30},"name":"checked_add_signed","qualname":"<DateTime<Tz>>::checked_add_signed","value":"fn checked_add_signed(Self, OldDuration) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Adds given `Duration` to the current date and time.","sig":null,"attributes":[{"value":"/ Adds given `Duration` to the current date and time.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":84088,"byte_end":84143,"line_start":322,"line_end":322,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":84148,"byte_end":84151,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when it will result in overflow.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":84156,"byte_end":84207,"line_start":324,"line_end":324,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":84212,"byte_end":84221,"line_start":325,"line_end":325,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":84617,"byte_end":84635,"line_start":336,"line_end":336,"column_start":12,"column_end":30},"name":"checked_sub_signed","qualname":"<DateTime<Tz>>::checked_sub_signed","value":"fn checked_sub_signed(Self, OldDuration) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Subtracts given `Duration` from the current date and time.","sig":null,"attributes":[{"value":"/ Subtracts given `Duration` from the current date and time.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":84465,"byte_end":84527,"line_start":332,"line_end":332,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":84532,"byte_end":84535,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when it will result in overflow.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":84540,"byte_end":84591,"line_start":334,"line_end":334,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":84596,"byte_end":84605,"line_start":335,"line_end":335,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":84991,"byte_end":85012,"line_start":345,"line_end":345,"column_start":12,"column_end":33},"name":"signed_duration_since","qualname":"<DateTime<Tz>>::signed_duration_since","value":"fn signed_duration_since<Tz2>(Self, DateTime<Tz2>) -> OldDuration where\nTz2: TimeZone","parent":null,"children":[],"decl_id":null,"docs":" Subtracts another `DateTime` from the current date and time.\n This does not overflow or underflow at all.\n","sig":null,"attributes":[{"value":"/ Subtracts another `DateTime` from the current date and time.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":84849,"byte_end":84913,"line_start":342,"line_end":342,"column_start":5,"column_end":69}},{"value":"/ This does not overflow or underflow at all.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":84918,"byte_end":84965,"line_start":343,"line_end":343,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":84970,"byte_end":84979,"line_start":344,"line_end":344,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":85211,"byte_end":85220,"line_start":351,"line_end":351,"column_start":12,"column_end":21},"name":"naive_utc","qualname":"<DateTime<Tz>>::naive_utc","value":"fn naive_utc(&Self) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Returns a view to the naive UTC datetime.\n","sig":null,"attributes":[{"value":"/ Returns a view to the naive UTC datetime.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":85140,"byte_end":85185,"line_start":349,"line_end":349,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":85190,"byte_end":85199,"line_start":350,"line_end":350,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":85353,"byte_end":85364,"line_start":357,"line_end":357,"column_start":12,"column_end":23},"name":"naive_local","qualname":"<DateTime<Tz>>::naive_local","value":"fn naive_local(&Self) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Returns a view to the naive local datetime.\n","sig":null,"attributes":[{"value":"/ Returns a view to the naive local datetime.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":85280,"byte_end":85327,"line_start":355,"line_end":355,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":85332,"byte_end":85341,"line_start":356,"line_end":356,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":85522,"byte_end":85533,"line_start":362,"line_end":362,"column_start":12,"column_end":23},"name":"years_since","qualname":"<DateTime<Tz>>::years_since","value":"fn years_since(&Self, Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the elapsed years from now to the given [`DateTime`].\n","sig":null,"attributes":[{"value":"/ Retrieve the elapsed years from now to the given [`DateTime`].","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":85444,"byte_end":85510,"line_start":361,"line_end":361,"column_start":5,"column_end":71}}]},{"kind":"Const","id":{"krate":0,"index":443},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":86012,"byte_end":86019,"line_start":379,"line_end":379,"column_start":15,"column_end":22},"name":"MIN_UTC","qualname":"::datetime::DateTime::<Tz>::MIN_UTC","value":"DateTime<Utc>","parent":{"krate":0,"index":418},"children":[],"decl_id":null,"docs":" The minimum possible `DateTime<Utc>`.\n","sig":null,"attributes":[{"value":"/ The minimum possible `DateTime<Utc>`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":85956,"byte_end":85997,"line_start":378,"line_end":378,"column_start":5,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":444},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":86153,"byte_end":86160,"line_start":381,"line_end":381,"column_start":15,"column_end":22},"name":"MAX_UTC","qualname":"::datetime::DateTime::<Tz>::MAX_UTC","value":"DateTime<Utc>","parent":{"krate":0,"index":418},"children":[],"decl_id":null,"docs":" The maximum possible `DateTime<Utc>`.\n","sig":null,"attributes":[{"value":"/ The maximum possible `DateTime<Utc>`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":86097,"byte_end":86138,"line_start":380,"line_end":380,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":86277,"byte_end":86284,"line_start":385,"line_end":385,"column_start":8,"column_end":15},"name":"default","qualname":"<DateTime<Utc> as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3128},"children":[],"decl_id":{"krate":1,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":86567,"byte_end":86574,"line_start":398,"line_end":398,"column_start":8,"column_end":15},"name":"default","qualname":"<DateTime<FixedOffset> as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3128},"children":[],"decl_id":{"krate":1,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":87071,"byte_end":87075,"line_start":409,"line_end":409,"column_start":8,"column_end":12},"name":"from","qualname":"<DateTime<FixedOffset> as core::convert::From>::from","value":"fn from(DateTime<Utc>) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":" Convert this `DateTime<Utc>` instance into a `DateTime<FixedOffset>` instance.","sig":null,"attributes":[{"value":"/ Convert this `DateTime<Utc>` instance into a `DateTime<FixedOffset>` instance.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":86807,"byte_end":86889,"line_start":405,"line_end":405,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":86894,"byte_end":86897,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Conversion is done via [`DateTime::with_timezone`]. Note that the converted value returned by","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":86902,"byte_end":86999,"line_start":407,"line_end":407,"column_start":5,"column_end":102}},{"value":"/ this will be created with a fixed timezone offset of 0.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":87004,"byte_end":87063,"line_start":408,"line_end":408,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":87942,"byte_end":87946,"line_start":431,"line_end":431,"column_start":8,"column_end":12},"name":"from","qualname":"<DateTime<Utc> as core::convert::From>::from","value":"fn from(DateTime<FixedOffset>) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":" Convert this `DateTime<FixedOffset>` instance into a `DateTime<Utc>` instance.","sig":null,"attributes":[{"value":"/ Convert this `DateTime<FixedOffset>` instance into a `DateTime<Utc>` instance.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":87731,"byte_end":87813,"line_start":427,"line_end":427,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":87818,"byte_end":87821,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ Conversion is performed via [`DateTime::with_timezone`], accounting for the timezone","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":87826,"byte_end":87914,"line_start":429,"line_end":429,"column_start":5,"column_end":93}},{"value":"/ difference.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":87919,"byte_end":87934,"line_start":430,"line_end":430,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":90402,"byte_end":90420,"line_start":494,"line_end":494,"column_start":12,"column_end":30},"name":"parse_from_rfc2822","qualname":"<DateTime<FixedOffset>>::parse_from_rfc2822","value":"fn parse_from_rfc2822(&str) -> ParseResult<DateTime<FixedOffset>>","parent":null,"children":[],"decl_id":null,"docs":" Parses an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`,\n then returns a new [`DateTime`] with a parsed [`FixedOffset`].","sig":null,"attributes":[{"value":"/ Parses an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":89825,"byte_end":89910,"line_start":481,"line_end":481,"column_start":5,"column_end":90}},{"value":"/ then returns a new [`DateTime`] with a parsed [`FixedOffset`].","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":89915,"byte_end":89981,"line_start":482,"line_end":482,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":89986,"byte_end":89989,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ RFC 2822 is the internet message standard that specifies the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":89994,"byte_end":90058,"line_start":484,"line_end":484,"column_start":5,"column_end":69}},{"value":"/ representation of times in HTTP and email headers.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":90063,"byte_end":90117,"line_start":485,"line_end":485,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":90122,"byte_end":90125,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":90130,"byte_end":90137,"line_start":487,"line_end":487,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{DateTime, FixedOffset, TimeZone};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":90142,"byte_end":90194,"line_start":488,"line_end":488,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":90199,"byte_end":90214,"line_start":489,"line_end":489,"column_start":5,"column_end":20}},{"value":"/     DateTime::parse_from_rfc2822(\"Wed, 18 Feb 2015 23:16:09 GMT\").unwrap(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":90219,"byte_end":90298,"line_start":490,"line_end":490,"column_start":5,"column_end":84}},{"value":"/     FixedOffset::east(0).ymd(2015, 2, 18).and_hms(23, 16, 9)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":90303,"byte_end":90367,"line_start":491,"line_end":491,"column_start":5,"column_end":69}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":90372,"byte_end":90378,"line_start":492,"line_end":492,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":90383,"byte_end":90390,"line_start":493,"line_end":493,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":91041,"byte_end":91059,"line_start":506,"line_end":506,"column_start":12,"column_end":30},"name":"parse_from_rfc3339","qualname":"<DateTime<FixedOffset>>::parse_from_rfc3339","value":"fn parse_from_rfc3339(&str) -> ParseResult<DateTime<FixedOffset>>","parent":null,"children":[],"decl_id":null,"docs":" Parses an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`,\n then returns a new [`DateTime`] with a parsed [`FixedOffset`].","sig":null,"attributes":[{"value":"/ Parses an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":90668,"byte_end":90761,"line_start":501,"line_end":501,"column_start":5,"column_end":98}},{"value":"/ then returns a new [`DateTime`] with a parsed [`FixedOffset`].","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":90766,"byte_end":90832,"line_start":502,"line_end":502,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":90837,"byte_end":90840,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ Why isn't this named `parse_from_iso8601`? That's because ISO 8601 allows some freedom","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":90845,"byte_end":90935,"line_start":504,"line_end":504,"column_start":5,"column_end":95}},{"value":"/ over the syntax and RFC 3339 exercises that freedom to rigidly define a fixed format.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":90940,"byte_end":91029,"line_start":505,"line_end":505,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":92205,"byte_end":92219,"line_start":535,"line_end":535,"column_start":12,"column_end":26},"name":"parse_from_str","qualname":"<DateTime<FixedOffset>>::parse_from_str","value":"fn parse_from_str(&str, &str) -> ParseResult<DateTime<FixedOffset>>","parent":null,"children":[],"decl_id":null,"docs":" Parses a string with the specified format string and returns a new\n [`DateTime`] with a parsed [`FixedOffset`].","sig":null,"attributes":[{"value":"/ Parses a string with the specified format string and returns a new","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":91307,"byte_end":91377,"line_start":513,"line_end":513,"column_start":5,"column_end":75}},{"value":"/ [`DateTime`] with a parsed [`FixedOffset`].","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":91382,"byte_end":91429,"line_start":514,"line_end":514,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":91434,"byte_end":91437,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ See the [`crate::format::strftime`] module on the supported escape","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":91442,"byte_end":91512,"line_start":516,"line_end":516,"column_start":5,"column_end":75}},{"value":"/ sequences.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":91517,"byte_end":91531,"line_start":517,"line_end":517,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":91536,"byte_end":91539,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ See also [`TimeZone::datetime_from_str`] which gives a local","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":91544,"byte_end":91608,"line_start":519,"line_end":519,"column_start":5,"column_end":69}},{"value":"/ [`DateTime`] on specific time zone.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":91613,"byte_end":91652,"line_start":520,"line_end":520,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":91657,"byte_end":91660,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ Note that this method *requires a timezone* in the string. See","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":91665,"byte_end":91731,"line_start":522,"line_end":522,"column_start":5,"column_end":71}},{"value":"/ [`NaiveDateTime::parse_from_str`]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":91736,"byte_end":91773,"line_start":523,"line_end":523,"column_start":5,"column_end":42}},{"value":"/ for a version that does not require a timezone in the to-be-parsed str.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":91778,"byte_end":91853,"line_start":524,"line_end":524,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":91858,"byte_end":91861,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":91866,"byte_end":91879,"line_start":526,"line_end":526,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":91884,"byte_end":91887,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":91892,"byte_end":91903,"line_start":528,"line_end":528,"column_start":5,"column_end":16}},{"value":"/ use chrono::{DateTime, FixedOffset, TimeZone};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":91908,"byte_end":91958,"line_start":529,"line_end":529,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":91963,"byte_end":91966,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ let dt = DateTime::parse_from_str(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":91971,"byte_end":92009,"line_start":531,"line_end":531,"column_start":5,"column_end":43}},{"value":"/     \"1983 Apr 13 12:09:14.274 +0000\", \"%Y %b %d %H:%M:%S%.3f %z\");","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":92014,"byte_end":92084,"line_start":532,"line_end":532,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(dt, Ok(FixedOffset::east(0).ymd(1983, 4, 13).and_hms_milli(12, 9, 14, 274)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":92089,"byte_end":92181,"line_start":533,"line_end":533,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":92186,"byte_end":92193,"line_start":534,"line_end":534,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":98121,"byte_end":98125,"line_start":697,"line_end":697,"column_start":8,"column_end":12},"name":"year","qualname":"<DateTime<Tz> as traits::Datelike>::year","value":"fn year(&Self) -> i32","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1988},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":98104,"byte_end":98113,"line_start":696,"line_end":696,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":98203,"byte_end":98208,"line_start":701,"line_end":701,"column_start":8,"column_end":13},"name":"month","qualname":"<DateTime<Tz> as traits::Datelike>::month","value":"fn month(&Self) -> u32","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1990},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":98186,"byte_end":98195,"line_start":700,"line_end":700,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":98287,"byte_end":98293,"line_start":705,"line_end":705,"column_start":8,"column_end":14},"name":"month0","qualname":"<DateTime<Tz> as traits::Datelike>::month0","value":"fn month0(&Self) -> u32","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1991},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":98270,"byte_end":98279,"line_start":704,"line_end":704,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":98373,"byte_end":98376,"line_start":709,"line_end":709,"column_start":8,"column_end":11},"name":"day","qualname":"<DateTime<Tz> as traits::Datelike>::day","value":"fn day(&Self) -> u32","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1992},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":98356,"byte_end":98365,"line_start":708,"line_end":708,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":98453,"byte_end":98457,"line_start":713,"line_end":713,"column_start":8,"column_end":12},"name":"day0","qualname":"<DateTime<Tz> as traits::Datelike>::day0","value":"fn day0(&Self) -> u32","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1993},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":98436,"byte_end":98445,"line_start":712,"line_end":712,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":98535,"byte_end":98542,"line_start":717,"line_end":717,"column_start":8,"column_end":15},"name":"ordinal","qualname":"<DateTime<Tz> as traits::Datelike>::ordinal","value":"fn ordinal(&Self) -> u32","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1994},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":98518,"byte_end":98527,"line_start":716,"line_end":716,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":98623,"byte_end":98631,"line_start":721,"line_end":721,"column_start":8,"column_end":16},"name":"ordinal0","qualname":"<DateTime<Tz> as traits::Datelike>::ordinal0","value":"fn ordinal0(&Self) -> u32","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1995},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":98606,"byte_end":98615,"line_start":720,"line_end":720,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":98713,"byte_end":98720,"line_start":725,"line_end":725,"column_start":8,"column_end":15},"name":"weekday","qualname":"<DateTime<Tz> as traits::Datelike>::weekday","value":"fn weekday(&Self) -> Weekday","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1996},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":98696,"byte_end":98705,"line_start":724,"line_end":724,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":98805,"byte_end":98813,"line_start":729,"line_end":729,"column_start":8,"column_end":16},"name":"iso_week","qualname":"<DateTime<Tz> as traits::Datelike>::iso_week","value":"fn iso_week(&Self) -> IsoWeek","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1997},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":98788,"byte_end":98797,"line_start":728,"line_end":728,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":98900,"byte_end":98909,"line_start":734,"line_end":734,"column_start":8,"column_end":17},"name":"with_year","qualname":"<DateTime<Tz> as traits::Datelike>::with_year","value":"fn with_year(&Self, i32) -> Option<DateTime<Tz>>","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1998},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":98883,"byte_end":98892,"line_start":733,"line_end":733,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":99043,"byte_end":99053,"line_start":739,"line_end":739,"column_start":8,"column_end":18},"name":"with_month","qualname":"<DateTime<Tz> as traits::Datelike>::with_month","value":"fn with_month(&Self, u32) -> Option<DateTime<Tz>>","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1999},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":99026,"byte_end":99035,"line_start":738,"line_end":738,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":99190,"byte_end":99201,"line_start":744,"line_end":744,"column_start":8,"column_end":19},"name":"with_month0","qualname":"<DateTime<Tz> as traits::Datelike>::with_month0","value":"fn with_month0(&Self, u32) -> Option<DateTime<Tz>>","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":2000},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":99173,"byte_end":99182,"line_start":743,"line_end":743,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":99341,"byte_end":99349,"line_start":749,"line_end":749,"column_start":8,"column_end":16},"name":"with_day","qualname":"<DateTime<Tz> as traits::Datelike>::with_day","value":"fn with_day(&Self, u32) -> Option<DateTime<Tz>>","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":2001},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":99324,"byte_end":99333,"line_start":748,"line_end":748,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":99480,"byte_end":99489,"line_start":754,"line_end":754,"column_start":8,"column_end":17},"name":"with_day0","qualname":"<DateTime<Tz> as traits::Datelike>::with_day0","value":"fn with_day0(&Self, u32) -> Option<DateTime<Tz>>","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":2002},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":99463,"byte_end":99472,"line_start":753,"line_end":753,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":99623,"byte_end":99635,"line_start":759,"line_end":759,"column_start":8,"column_end":20},"name":"with_ordinal","qualname":"<DateTime<Tz> as traits::Datelike>::with_ordinal","value":"fn with_ordinal(&Self, u32) -> Option<DateTime<Tz>>","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":2003},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":99606,"byte_end":99615,"line_start":758,"line_end":758,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":99778,"byte_end":99791,"line_start":764,"line_end":764,"column_start":8,"column_end":21},"name":"with_ordinal0","qualname":"<DateTime<Tz> as traits::Datelike>::with_ordinal0","value":"fn with_ordinal0(&Self, u32) -> Option<DateTime<Tz>>","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":2004},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":99761,"byte_end":99770,"line_start":763,"line_end":763,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":99986,"byte_end":99990,"line_start":771,"line_end":771,"column_start":8,"column_end":12},"name":"hour","qualname":"<DateTime<Tz> as traits::Timelike>::hour","value":"fn hour(&Self) -> u32","parent":{"krate":0,"index":2006},"children":[],"decl_id":{"krate":0,"index":2007},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":99969,"byte_end":99978,"line_start":770,"line_end":770,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":100068,"byte_end":100074,"line_start":775,"line_end":775,"column_start":8,"column_end":14},"name":"minute","qualname":"<DateTime<Tz> as traits::Timelike>::minute","value":"fn minute(&Self) -> u32","parent":{"krate":0,"index":2006},"children":[],"decl_id":{"krate":0,"index":2009},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":100051,"byte_end":100060,"line_start":774,"line_end":774,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":100154,"byte_end":100160,"line_start":779,"line_end":779,"column_start":8,"column_end":14},"name":"second","qualname":"<DateTime<Tz> as traits::Timelike>::second","value":"fn second(&Self) -> u32","parent":{"krate":0,"index":2006},"children":[],"decl_id":{"krate":0,"index":2010},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":100137,"byte_end":100146,"line_start":778,"line_end":778,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":100240,"byte_end":100250,"line_start":783,"line_end":783,"column_start":8,"column_end":18},"name":"nanosecond","qualname":"<DateTime<Tz> as traits::Timelike>::nanosecond","value":"fn nanosecond(&Self) -> u32","parent":{"krate":0,"index":2006},"children":[],"decl_id":{"krate":0,"index":2011},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":100223,"byte_end":100232,"line_start":782,"line_end":782,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":100335,"byte_end":100344,"line_start":788,"line_end":788,"column_start":8,"column_end":17},"name":"with_hour","qualname":"<DateTime<Tz> as traits::Timelike>::with_hour","value":"fn with_hour(&Self, u32) -> Option<DateTime<Tz>>","parent":{"krate":0,"index":2006},"children":[],"decl_id":{"krate":0,"index":2012},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":100318,"byte_end":100327,"line_start":787,"line_end":787,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":100478,"byte_end":100489,"line_start":793,"line_end":793,"column_start":8,"column_end":19},"name":"with_minute","qualname":"<DateTime<Tz> as traits::Timelike>::with_minute","value":"fn with_minute(&Self, u32) -> Option<DateTime<Tz>>","parent":{"krate":0,"index":2006},"children":[],"decl_id":{"krate":0,"index":2013},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":100461,"byte_end":100470,"line_start":792,"line_end":792,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":100623,"byte_end":100634,"line_start":798,"line_end":798,"column_start":8,"column_end":19},"name":"with_second","qualname":"<DateTime<Tz> as traits::Timelike>::with_second","value":"fn with_second(&Self, u32) -> Option<DateTime<Tz>>","parent":{"krate":0,"index":2006},"children":[],"decl_id":{"krate":0,"index":2014},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":100606,"byte_end":100615,"line_start":797,"line_end":797,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":100768,"byte_end":100783,"line_start":803,"line_end":803,"column_start":8,"column_end":23},"name":"with_nanosecond","qualname":"<DateTime<Tz> as traits::Timelike>::with_nanosecond","value":"fn with_nanosecond(&Self, u32) -> Option<DateTime<Tz>>","parent":{"krate":0,"index":2006},"children":[],"decl_id":{"krate":0,"index":2015},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":100751,"byte_end":100760,"line_start":802,"line_end":802,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":101225,"byte_end":101227,"line_start":813,"line_end":813,"column_start":8,"column_end":10},"name":"eq","qualname":"<DateTime<Tz> as core::cmp::PartialEq>::eq","value":"fn eq(&Self, &DateTime<Tz2>) -> bool","parent":{"krate":1,"index":2802},"children":[],"decl_id":{"krate":1,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":102020,"byte_end":102031,"line_start":836,"line_end":836,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<DateTime<Tz> as core::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &DateTime<Tz2>) -> Option<Ordering>","parent":{"krate":1,"index":2848},"children":[],"decl_id":{"krate":1,"index":2850},"docs":" Compare two DateTimes based on their true time, ignoring time zones","sig":null,"attributes":[{"value":"/ Compare two DateTimes based on their true time, ignoring time zones","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":101443,"byte_end":101514,"line_start":821,"line_end":821,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":101519,"byte_end":101522,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":101527,"byte_end":101540,"line_start":823,"line_end":823,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":101545,"byte_end":101548,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":101553,"byte_end":101560,"line_start":825,"line_end":825,"column_start":5,"column_end":12}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":101565,"byte_end":101592,"line_start":826,"line_end":826,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":101597,"byte_end":101600,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ let earlier = Utc.ymd(2015, 5, 15).and_hms(2, 0, 0).with_timezone(&FixedOffset::west(1 * 3600));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":101605,"byte_end":101705,"line_start":828,"line_end":828,"column_start":5,"column_end":105}},{"value":"/ let later   = Utc.ymd(2015, 5, 15).and_hms(3, 0, 0).with_timezone(&FixedOffset::west(5 * 3600));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":101710,"byte_end":101810,"line_start":829,"line_end":829,"column_start":5,"column_end":105}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":101815,"byte_end":101818,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(earlier.to_string(), \"2015-05-15 01:00:00 -01:00\");","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":101823,"byte_end":101889,"line_start":831,"line_end":831,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(later.to_string(), \"2015-05-14 22:00:00 -05:00\");","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":101894,"byte_end":101958,"line_start":832,"line_end":832,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":101963,"byte_end":101966,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ assert!(later > earlier);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":101971,"byte_end":102000,"line_start":834,"line_end":834,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":102005,"byte_end":102012,"line_start":835,"line_end":835,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":102193,"byte_end":102196,"line_start":842,"line_end":842,"column_start":8,"column_end":11},"name":"cmp","qualname":"<DateTime<Tz> as core::cmp::Ord>::cmp","value":"fn cmp(&Self, &DateTime<Tz>) -> Ordering","parent":{"krate":1,"index":2838},"children":[],"decl_id":{"krate":1,"index":2839},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":102348,"byte_end":102352,"line_start":848,"line_end":848,"column_start":8,"column_end":12},"name":"hash","qualname":"<DateTime<Tz> as core::hash::Hash>::hash","value":"fn hash<H>(&Self, &mut H) where H: hash::Hasher","parent":{"krate":1,"index":10115},"children":[],"decl_id":{"krate":1,"index":10116},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":102546,"byte_end":102549,"line_start":857,"line_end":857,"column_start":8,"column_end":11},"name":"add","qualname":"<DateTime<Tz> as core::ops::Add>::add","value":"fn add(Self, OldDuration) -> DateTime<Tz>","parent":{"krate":1,"index":3218},"children":[],"decl_id":{"krate":1,"index":3221},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":102529,"byte_end":102538,"line_start":856,"line_end":856,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":102763,"byte_end":102773,"line_start":864,"line_end":864,"column_start":8,"column_end":18},"name":"add_assign","qualname":"<DateTime<Tz> as core::ops::AddAssign>::add_assign","value":"fn add_assign(&mut Self, OldDuration)","parent":{"krate":1,"index":3249},"children":[],"decl_id":{"krate":1,"index":3251},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":102746,"byte_end":102755,"line_start":863,"line_end":863,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":103123,"byte_end":103126,"line_start":876,"line_end":876,"column_start":8,"column_end":11},"name":"sub","qualname":"<DateTime<Tz> as core::ops::Sub>::sub","value":"fn sub(Self, OldDuration) -> DateTime<Tz>","parent":{"krate":1,"index":3223},"children":[],"decl_id":{"krate":1,"index":3226},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":103106,"byte_end":103115,"line_start":875,"line_end":875,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":103340,"byte_end":103350,"line_start":883,"line_end":883,"column_start":8,"column_end":18},"name":"sub_assign","qualname":"<DateTime<Tz> as core::ops::SubAssign>::sub_assign","value":"fn sub_assign(&mut Self, OldDuration)","parent":{"krate":1,"index":3253},"children":[],"decl_id":{"krate":1,"index":3255},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":103323,"byte_end":103332,"line_start":882,"line_end":882,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":103699,"byte_end":103702,"line_start":895,"line_end":895,"column_start":8,"column_end":11},"name":"sub","qualname":"<DateTime<Tz> as core::ops::Sub>::sub","value":"fn sub(Self, DateTime<Tz>) -> OldDuration","parent":{"krate":1,"index":3223},"children":[],"decl_id":{"krate":1,"index":3226},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":103682,"byte_end":103691,"line_start":894,"line_end":894,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":103850,"byte_end":103853,"line_start":901,"line_end":901,"column_start":8,"column_end":11},"name":"fmt","qualname":"<DateTime<Tz> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9902},"children":[],"decl_id":{"krate":1,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":104068,"byte_end":104071,"line_start":910,"line_end":910,"column_start":8,"column_end":11},"name":"fmt","qualname":"<DateTime<Tz> as core::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9909},"children":[],"decl_id":{"krate":1,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":104702,"byte_end":104710,"line_start":929,"line_end":929,"column_start":8,"column_end":16},"name":"from_str","qualname":"<DateTime<Utc> as core::str::FromStr>::from_str","value":"fn from_str(&str) -> ParseResult<DateTime<Utc>>","parent":{"krate":1,"index":12556},"children":[],"decl_id":{"krate":1,"index":12558},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":566},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"format","qualname":"::format","value":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","parent":null,"children":[{"krate":0,"index":567},{"krate":0,"index":570},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":577},{"krate":0,"index":580},{"krate":0,"index":583},{"krate":0,"index":586},{"krate":0,"index":589},{"krate":0,"index":592},{"krate":0,"index":2096},{"krate":0,"index":2098},{"krate":0,"index":2100},{"krate":0,"index":2101},{"krate":0,"index":2103},{"krate":0,"index":2104},{"krate":0,"index":2106},{"krate":0,"index":2107},{"krate":0,"index":2109},{"krate":0,"index":2116},{"krate":0,"index":2117},{"krate":0,"index":2119},{"krate":0,"index":2120},{"krate":0,"index":2122},{"krate":0,"index":2123},{"krate":0,"index":2125},{"krate":0,"index":2127},{"krate":0,"index":2171},{"krate":0,"index":2173},{"krate":0,"index":2174},{"krate":0,"index":2177},{"krate":0,"index":2178},{"krate":0,"index":2180},{"krate":0,"index":595},{"krate":0,"index":597},{"krate":0,"index":599},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":2182},{"krate":0,"index":2220},{"krate":0,"index":2222},{"krate":0,"index":2223},{"krate":0,"index":2226},{"krate":0,"index":2227},{"krate":0,"index":2229},{"krate":0,"index":2231},{"krate":0,"index":2233},{"krate":0,"index":2235},{"krate":0,"index":2237},{"krate":0,"index":2238},{"krate":0,"index":2241},{"krate":0,"index":2242},{"krate":0,"index":2244},{"krate":0,"index":2253},{"krate":0,"index":2255},{"krate":0,"index":2257},{"krate":0,"index":2258},{"krate":0,"index":2260},{"krate":0,"index":2261},{"krate":0,"index":2263},{"krate":0,"index":2280},{"krate":0,"index":2283},{"krate":0,"index":2285},{"krate":0,"index":2289},{"krate":0,"index":2291},{"krate":0,"index":2294},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":2297},{"krate":0,"index":2300},{"krate":0,"index":2302},{"krate":0,"index":2304},{"krate":0,"index":2305},{"krate":0,"index":2308},{"krate":0,"index":2309},{"krate":0,"index":2311},{"krate":0,"index":611},{"krate":0,"index":2312},{"krate":0,"index":2329},{"krate":0,"index":2331},{"krate":0,"index":2333},{"krate":0,"index":2334},{"krate":0,"index":2336},{"krate":0,"index":2337},{"krate":0,"index":2339},{"krate":0,"index":613},{"krate":0,"index":615},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":733},{"krate":0,"index":848},{"krate":0,"index":914},{"krate":0,"index":955},{"krate":0,"index":958}],"decl_id":null,"docs":" Formatting (and parsing) utilities for date and time.","sig":null,"attributes":[{"value":"/ Formatting (and parsing) utilities for date and time.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":112468,"byte_end":112525,"line_start":4,"line_end":4,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":112526,"byte_end":112529,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module provides the common types and routines to implement,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":112530,"byte_end":112598,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/ for example, [`DateTime::format`](../struct.DateTime.html#method.format) or","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":112599,"byte_end":112678,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ [`DateTime::parse_from_str`](../struct.DateTime.html#method.parse_from_str) methods.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":112679,"byte_end":112767,"line_start":8,"line_end":8,"column_start":1,"column_end":89}},{"value":"/ For most cases you should use these high-level interfaces.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":112768,"byte_end":112830,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":112831,"byte_end":112834,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Internally the formatting and parsing shares the same abstract **formatting items**,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":112835,"byte_end":112923,"line_start":11,"line_end":11,"column_start":1,"column_end":89}},{"value":"/ which are just an [`Iterator`](https://doc.rust-lang.org/std/iter/trait.Iterator.html) of","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":112924,"byte_end":113017,"line_start":12,"line_end":12,"column_start":1,"column_end":94}},{"value":"/ the [`Item`](./enum.Item.html) type.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":113018,"byte_end":113058,"line_start":13,"line_end":13,"column_start":1,"column_end":41}},{"value":"/ They are generated from more readable **format strings**;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":113059,"byte_end":113120,"line_start":14,"line_end":14,"column_start":1,"column_end":62}},{"value":"/ currently Chrono supports a built-in syntax closely resembling","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":113121,"byte_end":113187,"line_start":15,"line_end":15,"column_start":1,"column_end":67}},{"value":"/ C's `strftime` format. The available options can be found [here](./strftime/index.html).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":113188,"byte_end":113280,"line_start":16,"line_end":16,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":113281,"byte_end":113284,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":113285,"byte_end":113298,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":113299,"byte_end":113310,"line_start":19,"line_end":19,"column_start":1,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":113311,"byte_end":113339,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":113340,"byte_end":113367,"line_start":21,"line_end":21,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":113368,"byte_end":113371,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let date_time = Utc.ymd(2020, 11, 10).and_hms(0, 1, 32);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":113372,"byte_end":113432,"line_start":23,"line_end":23,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":113433,"byte_end":113436,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let formatted = format!(\"{}\", date_time.format(\"%Y-%m-%d %H:%M:%S\"));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":113437,"byte_end":113510,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(formatted, \"2020-11-10 00:01:32\");","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":113511,"byte_end":113560,"line_start":26,"line_end":26,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":113561,"byte_end":113564,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let parsed = Utc.datetime_from_str(&formatted, \"%Y-%m-%d %H:%M:%S\")?;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":113565,"byte_end":113638,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(parsed, date_time);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":113639,"byte_end":113673,"line_start":29,"line_end":29,"column_start":1,"column_end":35}},{"value":"/ # Ok::<(), chrono::ParseError>(())","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":113674,"byte_end":113712,"line_start":30,"line_end":30,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":113713,"byte_end":113720,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2110},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":114963,"byte_end":114967,"line_start":77,"line_end":77,"column_start":5,"column_end":9},"name":"None","qualname":"::format::Pad::None","value":"Pad::None","parent":{"krate":0,"index":2109},"children":[],"decl_id":null,"docs":" No padding.\n","sig":null,"attributes":[{"value":"/ No padding.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":114943,"byte_end":114958,"line_start":76,"line_end":76,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2112},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":115001,"byte_end":115005,"line_start":79,"line_end":79,"column_start":5,"column_end":9},"name":"Zero","qualname":"::format::Pad::Zero","value":"Pad::Zero","parent":{"krate":0,"index":2109},"children":[],"decl_id":null,"docs":" Zero (`0`) padding.\n","sig":null,"attributes":[{"value":"/ Zero (`0`) padding.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":114973,"byte_end":114996,"line_start":78,"line_end":78,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2114},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":115034,"byte_end":115039,"line_start":81,"line_end":81,"column_start":5,"column_end":10},"name":"Space","qualname":"::format::Pad::Space","value":"Pad::Space","parent":{"krate":0,"index":2109},"children":[],"decl_id":null,"docs":" Space padding.\n","sig":null,"attributes":[{"value":"/ Space padding.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":115011,"byte_end":115029,"line_start":80,"line_end":80,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":2109},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":114933,"byte_end":114936,"line_start":75,"line_end":75,"column_start":10,"column_end":13},"name":"Pad","qualname":"::format::Pad","value":"enum Pad { None, Zero, Space, }","parent":null,"children":[{"krate":0,"index":2110},{"krate":0,"index":2112},{"krate":0,"index":2114}],"decl_id":null,"docs":" Padding characters for numeric items.\n","sig":null,"attributes":[{"value":"/ Padding characters for numeric items.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":114837,"byte_end":114878,"line_start":73,"line_end":73,"column_start":1,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2128},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":115935,"byte_end":115939,"line_start":101,"line_end":101,"column_start":5,"column_end":9},"name":"Year","qualname":"::format::Numeric::Year","value":"Numeric::Year","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" Full Gregorian year (FW=4, PW=∞).\n May accept years before 1 BCE or after 9999 CE, given an initial sign.\n","sig":null,"attributes":[{"value":"/ Full Gregorian year (FW=4, PW=∞).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":115812,"byte_end":115851,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ May accept years before 1 BCE or after 9999 CE, given an initial sign.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":115856,"byte_end":115930,"line_start":100,"line_end":100,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2130},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":116041,"byte_end":116051,"line_start":103,"line_end":103,"column_start":5,"column_end":15},"name":"YearDiv100","qualname":"::format::Numeric::YearDiv100","value":"Numeric::YearDiv100","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" Gregorian year divided by 100 (century number; FW=PW=2). Implies the non-negative year.\n","sig":null,"attributes":[{"value":"/ Gregorian year divided by 100 (century number; FW=PW=2). Implies the non-negative year.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":115945,"byte_end":116036,"line_start":102,"line_end":102,"column_start":5,"column_end":96}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2132},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":116122,"byte_end":116132,"line_start":105,"line_end":105,"column_start":5,"column_end":15},"name":"YearMod100","qualname":"::format::Numeric::YearMod100","value":"Numeric::YearMod100","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" Gregorian year modulo 100 (FW=PW=2). Cannot be negative.\n","sig":null,"attributes":[{"value":"/ Gregorian year modulo 100 (FW=PW=2). Cannot be negative.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":116057,"byte_end":116117,"line_start":104,"line_end":104,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2134},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":116267,"byte_end":116274,"line_start":108,"line_end":108,"column_start":5,"column_end":12},"name":"IsoYear","qualname":"::format::Numeric::IsoYear","value":"Numeric::IsoYear","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" Year in the ISO week date (FW=4, PW=∞).\n May accept years before 1 BCE or after 9999 CE, given an initial sign.\n","sig":null,"attributes":[{"value":"/ Year in the ISO week date (FW=4, PW=∞).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":116138,"byte_end":116183,"line_start":106,"line_end":106,"column_start":5,"column_end":48}},{"value":"/ May accept years before 1 BCE or after 9999 CE, given an initial sign.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":116188,"byte_end":116262,"line_start":107,"line_end":107,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2136},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":116372,"byte_end":116385,"line_start":110,"line_end":110,"column_start":5,"column_end":18},"name":"IsoYearDiv100","qualname":"::format::Numeric::IsoYearDiv100","value":"Numeric::IsoYearDiv100","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" Year in the ISO week date, divided by 100 (FW=PW=2). Implies the non-negative year.\n","sig":null,"attributes":[{"value":"/ Year in the ISO week date, divided by 100 (FW=PW=2). Implies the non-negative year.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":116280,"byte_end":116367,"line_start":109,"line_end":109,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2138},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":116468,"byte_end":116481,"line_start":112,"line_end":112,"column_start":5,"column_end":18},"name":"IsoYearMod100","qualname":"::format::Numeric::IsoYearMod100","value":"Numeric::IsoYearMod100","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" Year in the ISO week date, modulo 100 (FW=PW=2). Cannot be negative.\n","sig":null,"attributes":[{"value":"/ Year in the ISO week date, modulo 100 (FW=PW=2). Cannot be negative.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":116391,"byte_end":116463,"line_start":111,"line_end":111,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2140},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":116512,"byte_end":116517,"line_start":114,"line_end":114,"column_start":5,"column_end":10},"name":"Month","qualname":"::format::Numeric::Month","value":"Numeric::Month","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" Month (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ Month (FW=PW=2).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":116487,"byte_end":116507,"line_start":113,"line_end":113,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2142},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":116559,"byte_end":116562,"line_start":116,"line_end":116,"column_start":5,"column_end":8},"name":"Day","qualname":"::format::Numeric::Day","value":"Numeric::Day","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" Day of the month (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ Day of the month (FW=PW=2).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":116523,"byte_end":116554,"line_start":115,"line_end":115,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2144},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":116655,"byte_end":116666,"line_start":118,"line_end":118,"column_start":5,"column_end":16},"name":"WeekFromSun","qualname":"::format::Numeric::WeekFromSun","value":"Numeric::WeekFromSun","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" Week number, where the week 1 starts at the first Sunday of January (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ Week number, where the week 1 starts at the first Sunday of January (FW=PW=2).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":116568,"byte_end":116650,"line_start":117,"line_end":117,"column_start":5,"column_end":87}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2146},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":116759,"byte_end":116770,"line_start":120,"line_end":120,"column_start":5,"column_end":16},"name":"WeekFromMon","qualname":"::format::Numeric::WeekFromMon","value":"Numeric::WeekFromMon","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" Week number, where the week 1 starts at the first Monday of January (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ Week number, where the week 1 starts at the first Monday of January (FW=PW=2).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":116672,"byte_end":116754,"line_start":119,"line_end":119,"column_start":5,"column_end":87}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2148},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":116828,"byte_end":116835,"line_start":122,"line_end":122,"column_start":5,"column_end":12},"name":"IsoWeek","qualname":"::format::Numeric::IsoWeek","value":"Numeric::IsoWeek","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" Week number in the ISO week date (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ Week number in the ISO week date (FW=PW=2).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":116776,"byte_end":116823,"line_start":121,"line_end":121,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2150},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":116911,"byte_end":116925,"line_start":124,"line_end":124,"column_start":5,"column_end":19},"name":"NumDaysFromSun","qualname":"::format::Numeric::NumDaysFromSun","value":"Numeric::NumDaysFromSun","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" Day of the week, where Sunday = 0 and Saturday = 6 (FW=PW=1).\n","sig":null,"attributes":[{"value":"/ Day of the week, where Sunday = 0 and Saturday = 6 (FW=PW=1).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":116841,"byte_end":116906,"line_start":123,"line_end":123,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2152},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":116999,"byte_end":117013,"line_start":126,"line_end":126,"column_start":5,"column_end":19},"name":"WeekdayFromMon","qualname":"::format::Numeric::WeekdayFromMon","value":"Numeric::WeekdayFromMon","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" Day of the week, where Monday = 1 and Sunday = 7 (FW=PW=1).\n","sig":null,"attributes":[{"value":"/ Day of the week, where Monday = 1 and Sunday = 7 (FW=PW=1).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":116931,"byte_end":116994,"line_start":125,"line_end":125,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2154},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":117054,"byte_end":117061,"line_start":128,"line_end":128,"column_start":5,"column_end":12},"name":"Ordinal","qualname":"::format::Numeric::Ordinal","value":"Numeric::Ordinal","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" Day of the year (FW=PW=3).\n","sig":null,"attributes":[{"value":"/ Day of the year (FW=PW=3).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":117019,"byte_end":117049,"line_start":127,"line_end":127,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2156},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":117120,"byte_end":117124,"line_start":130,"line_end":130,"column_start":5,"column_end":9},"name":"Hour","qualname":"::format::Numeric::Hour","value":"Numeric::Hour","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" Hour number in the 24-hour clocks (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ Hour number in the 24-hour clocks (FW=PW=2).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":117067,"byte_end":117115,"line_start":129,"line_end":129,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2158},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":117183,"byte_end":117189,"line_start":132,"line_end":132,"column_start":5,"column_end":11},"name":"Hour12","qualname":"::format::Numeric::Hour12","value":"Numeric::Hour12","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" Hour number in the 12-hour clocks (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ Hour number in the 12-hour clocks (FW=PW=2).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":117130,"byte_end":117178,"line_start":131,"line_end":131,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2160},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":117262,"byte_end":117268,"line_start":134,"line_end":134,"column_start":5,"column_end":11},"name":"Minute","qualname":"::format::Numeric::Minute","value":"Numeric::Minute","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" The number of minutes since the last whole hour (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ The number of minutes since the last whole hour (FW=PW=2).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":117195,"byte_end":117257,"line_start":133,"line_end":133,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2162},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":117343,"byte_end":117349,"line_start":136,"line_end":136,"column_start":5,"column_end":11},"name":"Second","qualname":"::format::Numeric::Second","value":"Numeric::Second","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" The number of seconds since the last whole minute (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ The number of seconds since the last whole minute (FW=PW=2).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":117274,"byte_end":117338,"line_start":135,"line_end":135,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2164},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":117552,"byte_end":117562,"line_start":140,"line_end":140,"column_start":5,"column_end":15},"name":"Nanosecond","qualname":"::format::Numeric::Nanosecond","value":"Numeric::Nanosecond","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" The number of nanoseconds since the last whole second (FW=PW=9).\n Note that this is *not* left-aligned;\n see also [`Fixed::Nanosecond`](./enum.Fixed.html#variant.Nanosecond).\n","sig":null,"attributes":[{"value":"/ The number of nanoseconds since the last whole second (FW=PW=9).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":117355,"byte_end":117423,"line_start":137,"line_end":137,"column_start":5,"column_end":73}},{"value":"/ Note that this is *not* left-aligned;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":117428,"byte_end":117469,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ see also [`Fixed::Nanosecond`](./enum.Fixed.html#variant.Nanosecond).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":117474,"byte_end":117547,"line_start":139,"line_end":139,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2166},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":117742,"byte_end":117751,"line_start":143,"line_end":143,"column_start":5,"column_end":14},"name":"Timestamp","qualname":"::format::Numeric::Timestamp","value":"Numeric::Timestamp","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" The number of non-leap seconds since the midnight UTC on January 1, 1970 (FW=1, PW=∞).\n For formatting, it assumes UTC upon the absence of time zone offset.\n","sig":null,"attributes":[{"value":"/ The number of non-leap seconds since the midnight UTC on January 1, 1970 (FW=1, PW=∞).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":117568,"byte_end":117660,"line_start":141,"line_end":141,"column_start":5,"column_end":95}},{"value":"/ For formatting, it assumes UTC upon the absence of time zone offset.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":117665,"byte_end":117737,"line_start":142,"line_end":142,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2168},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":117970,"byte_end":117978,"line_start":149,"line_end":149,"column_start":5,"column_end":13},"name":"Internal","qualname":"::format::Numeric::Internal","value":"Numeric::Internal(InternalNumeric)","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" Internal uses only.","sig":null,"attributes":[{"value":"/ Internal uses only.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":117758,"byte_end":117781,"line_start":145,"line_end":145,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":117786,"byte_end":117789,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This item exists so that one can add additional internal-only formatting","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":117794,"byte_end":117870,"line_start":147,"line_end":147,"column_start":5,"column_end":81}},{"value":"/ without breaking major compatibility (as enum variants cannot be selectively private).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":117875,"byte_end":117965,"line_start":148,"line_end":148,"column_start":5,"column_end":95}}]},{"kind":"Field","id":{"krate":0,"index":2170},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":117979,"byte_end":117994,"line_start":149,"line_end":149,"column_start":14,"column_end":29},"name":"0","qualname":"::format::Numeric::Internal::0","value":"format::InternalNumeric","parent":{"krate":0,"index":2168},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2127},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":115798,"byte_end":115805,"line_start":98,"line_end":98,"column_start":10,"column_end":17},"name":"Numeric","qualname":"::format::Numeric","value":"enum Numeric {\n    Year,\n    YearDiv100,\n    YearMod100,\n    IsoYear,\n    IsoYearDiv100,\n    IsoYearMod100,\n    Month,\n    Day,\n    WeekFromSun,\n    WeekFromMon,\n    IsoWeek,\n    NumDaysFromSun,\n    WeekdayFromMon,\n    Ordinal,\n    Hour,\n    Hour12,\n    Minute,\n    Second,\n    Nanosecond,\n    Timestamp,\n    Internal(InternalNumeric),\n}","parent":null,"children":[{"krate":0,"index":2128},{"krate":0,"index":2130},{"krate":0,"index":2132},{"krate":0,"index":2134},{"krate":0,"index":2136},{"krate":0,"index":2138},{"krate":0,"index":2140},{"krate":0,"index":2142},{"krate":0,"index":2144},{"krate":0,"index":2146},{"krate":0,"index":2148},{"krate":0,"index":2150},{"krate":0,"index":2152},{"krate":0,"index":2154},{"krate":0,"index":2156},{"krate":0,"index":2158},{"krate":0,"index":2160},{"krate":0,"index":2162},{"krate":0,"index":2164},{"krate":0,"index":2166},{"krate":0,"index":2168}],"decl_id":null,"docs":" Numeric item types.\n They have associated formatting width (FW) and parsing width (PW).","sig":null,"attributes":[{"value":"/ Numeric item types.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":115044,"byte_end":115067,"line_start":84,"line_end":84,"column_start":1,"column_end":24}},{"value":"/ They have associated formatting width (FW) and parsing width (PW).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":115068,"byte_end":115138,"line_start":85,"line_end":85,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":115139,"byte_end":115142,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ The **formatting width** is the minimal width to be formatted.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":115143,"byte_end":115209,"line_start":87,"line_end":87,"column_start":1,"column_end":67}},{"value":"/ If the number is too short, and the padding is not [`Pad::None`](./enum.Pad.html#variant.None),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":115210,"byte_end":115309,"line_start":88,"line_end":88,"column_start":1,"column_end":100}},{"value":"/ then it is left-padded.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":115310,"byte_end":115337,"line_start":89,"line_end":89,"column_start":1,"column_end":28}},{"value":"/ If the number is too long or (in some cases) negative, it is printed as is.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":115338,"byte_end":115417,"line_start":90,"line_end":90,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":115418,"byte_end":115421,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ The **parsing width** is the maximal width to be scanned.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":115422,"byte_end":115483,"line_start":92,"line_end":92,"column_start":1,"column_end":62}},{"value":"/ The parser only tries to consume from one to given number of digits (greedily).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":115484,"byte_end":115567,"line_start":93,"line_end":93,"column_start":1,"column_end":84}},{"value":"/ It also trims the preceding whitespace if any.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":115568,"byte_end":115618,"line_start":94,"line_end":94,"column_start":1,"column_end":51}},{"value":"/ It cannot parse the negative number, so some date and time cannot be formatted then","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":115619,"byte_end":115706,"line_start":95,"line_end":95,"column_start":1,"column_end":88}},{"value":"/ parsed with the same formatting items.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":115707,"byte_end":115749,"line_start":96,"line_end":96,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":595},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":118086,"byte_end":118101,"line_start":153,"line_end":153,"column_start":12,"column_end":27},"name":"InternalNumeric","qualname":"::format::InternalNumeric","value":"InternalNumeric {  }","parent":null,"children":[{"krate":0,"index":596}],"decl_id":null,"docs":" An opaque type representing numeric item types for internal uses only.\n","sig":null,"attributes":[{"value":"/ An opaque type representing numeric item types for internal uses only.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":118000,"byte_end":118074,"line_start":152,"line_end":152,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":118165,"byte_end":118170,"line_start":158,"line_end":158,"column_start":8,"column_end":13},"name":"clone","qualname":"<InternalNumeric as core::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":1,"index":2772},"children":[],"decl_id":{"krate":1,"index":2773},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":118270,"byte_end":118272,"line_start":164,"line_end":164,"column_start":8,"column_end":10},"name":"eq","qualname":"<InternalNumeric as core::cmp::PartialEq>::eq","value":"fn eq(&Self, &InternalNumeric) -> bool","parent":{"krate":1,"index":2802},"children":[],"decl_id":{"krate":1,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":118431,"byte_end":118434,"line_start":172,"line_end":172,"column_start":8,"column_end":11},"name":"fmt","qualname":"<InternalNumeric as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9902},"children":[],"decl_id":{"krate":1,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2183},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":118899,"byte_end":118913,"line_start":186,"line_end":186,"column_start":5,"column_end":19},"name":"ShortMonthName","qualname":"::format::Fixed::ShortMonthName","value":"Fixed::ShortMonthName","parent":{"krate":0,"index":2182},"children":[],"decl_id":null,"docs":" Abbreviated month names.","sig":null,"attributes":[{"value":"/ Abbreviated month names.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":118766,"byte_end":118794,"line_start":183,"line_end":183,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":118799,"byte_end":118802,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ Prints a three-letter-long name in the title case, reads the same name in any case.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":118807,"byte_end":118894,"line_start":185,"line_end":185,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2185},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":119046,"byte_end":119059,"line_start":190,"line_end":190,"column_start":5,"column_end":18},"name":"LongMonthName","qualname":"::format::Fixed::LongMonthName","value":"Fixed::LongMonthName","parent":{"krate":0,"index":2182},"children":[],"decl_id":null,"docs":" Full month names.","sig":null,"attributes":[{"value":"/ Full month names.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":118919,"byte_end":118940,"line_start":187,"line_end":187,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":118945,"byte_end":118948,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ Prints a full name in the title case, reads either a short or full name in any case.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":118953,"byte_end":119041,"line_start":189,"line_end":189,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2187},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":119208,"byte_end":119224,"line_start":194,"line_end":194,"column_start":5,"column_end":21},"name":"ShortWeekdayName","qualname":"::format::Fixed::ShortWeekdayName","value":"Fixed::ShortWeekdayName","parent":{"krate":0,"index":2182},"children":[],"decl_id":null,"docs":" Abbreviated day of the week names.","sig":null,"attributes":[{"value":"/ Abbreviated day of the week names.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":119065,"byte_end":119103,"line_start":191,"line_end":191,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":119108,"byte_end":119111,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ Prints a three-letter-long name in the title case, reads the same name in any case.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":119116,"byte_end":119203,"line_start":193,"line_end":193,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2189},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":119367,"byte_end":119382,"line_start":198,"line_end":198,"column_start":5,"column_end":20},"name":"LongWeekdayName","qualname":"::format::Fixed::LongWeekdayName","value":"Fixed::LongWeekdayName","parent":{"krate":0,"index":2182},"children":[],"decl_id":null,"docs":" Full day of the week names.","sig":null,"attributes":[{"value":"/ Full day of the week names.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":119230,"byte_end":119261,"line_start":195,"line_end":195,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":119266,"byte_end":119269,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ Prints a full name in the title case, reads either a short or full name in any case.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":119274,"byte_end":119362,"line_start":197,"line_end":197,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2191},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":119460,"byte_end":119469,"line_start":202,"line_end":202,"column_start":5,"column_end":14},"name":"LowerAmPm","qualname":"::format::Fixed::LowerAmPm","value":"Fixed::LowerAmPm","parent":{"krate":0,"index":2182},"children":[],"decl_id":null,"docs":" AM/PM.","sig":null,"attributes":[{"value":"/ AM/PM.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":119388,"byte_end":119398,"line_start":199,"line_end":199,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":119403,"byte_end":119406,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Prints in lower case, reads in any case.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":119411,"byte_end":119455,"line_start":201,"line_end":201,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2193},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":119547,"byte_end":119556,"line_start":206,"line_end":206,"column_start":5,"column_end":14},"name":"UpperAmPm","qualname":"::format::Fixed::UpperAmPm","value":"Fixed::UpperAmPm","parent":{"krate":0,"index":2182},"children":[],"decl_id":null,"docs":" AM/PM.","sig":null,"attributes":[{"value":"/ AM/PM.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":119475,"byte_end":119485,"line_start":203,"line_end":203,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":119490,"byte_end":119493,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Prints in upper case, reads in any case.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":119498,"byte_end":119542,"line_start":205,"line_end":205,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2195},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":119803,"byte_end":119813,"line_start":210,"line_end":210,"column_start":5,"column_end":15},"name":"Nanosecond","qualname":"::format::Fixed::Nanosecond","value":"Fixed::Nanosecond","parent":{"krate":0,"index":2182},"children":[],"decl_id":null,"docs":" An optional dot plus one or more digits for left-aligned nanoseconds.\n May print nothing, 3, 6 or 9 digits according to the available accuracy.\n See also [`Numeric::Nanosecond`](./enum.Numeric.html#variant.Nanosecond).\n","sig":null,"attributes":[{"value":"/ An optional dot plus one or more digits for left-aligned nanoseconds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":119562,"byte_end":119635,"line_start":207,"line_end":207,"column_start":5,"column_end":78}},{"value":"/ May print nothing, 3, 6 or 9 digits according to the available accuracy.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":119640,"byte_end":119716,"line_start":208,"line_end":208,"column_start":5,"column_end":81}},{"value":"/ See also [`Numeric::Nanosecond`](./enum.Numeric.html#variant.Nanosecond).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":119721,"byte_end":119798,"line_start":209,"line_end":209,"column_start":5,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2197},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":119903,"byte_end":119914,"line_start":212,"line_end":212,"column_start":5,"column_end":16},"name":"Nanosecond3","qualname":"::format::Fixed::Nanosecond3","value":"Fixed::Nanosecond3","parent":{"krate":0,"index":2182},"children":[],"decl_id":null,"docs":" Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 3.\n","sig":null,"attributes":[{"value":"/ Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 3.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":119819,"byte_end":119898,"line_start":211,"line_end":211,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2199},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":120004,"byte_end":120015,"line_start":214,"line_end":214,"column_start":5,"column_end":16},"name":"Nanosecond6","qualname":"::format::Fixed::Nanosecond6","value":"Fixed::Nanosecond6","parent":{"krate":0,"index":2182},"children":[],"decl_id":null,"docs":" Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 6.\n","sig":null,"attributes":[{"value":"/ Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 6.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":119920,"byte_end":119999,"line_start":213,"line_end":213,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2201},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":120105,"byte_end":120116,"line_start":216,"line_end":216,"column_start":5,"column_end":16},"name":"Nanosecond9","qualname":"::format::Fixed::Nanosecond9","value":"Fixed::Nanosecond9","parent":{"krate":0,"index":2182},"children":[],"decl_id":null,"docs":" Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 9.\n","sig":null,"attributes":[{"value":"/ Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 9.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":120021,"byte_end":120100,"line_start":215,"line_end":215,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2203},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":120237,"byte_end":120249,"line_start":220,"line_end":220,"column_start":5,"column_end":17},"name":"TimezoneName","qualname":"::format::Fixed::TimezoneName","value":"Fixed::TimezoneName","parent":{"krate":0,"index":2182},"children":[],"decl_id":null,"docs":" Timezone name.","sig":null,"attributes":[{"value":"/ Timezone name.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":120122,"byte_end":120140,"line_start":217,"line_end":217,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":120145,"byte_end":120148,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ It does not support parsing, its use in the parser is an immediate failure.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":120153,"byte_end":120232,"line_start":219,"line_end":219,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2205},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":120584,"byte_end":120603,"line_start":226,"line_end":226,"column_start":5,"column_end":24},"name":"TimezoneOffsetColon","qualname":"::format::Fixed::TimezoneOffsetColon","value":"Fixed::TimezoneOffsetColon","parent":{"krate":0,"index":2182},"children":[],"decl_id":null,"docs":" Offset from the local time to UTC (`+09:00` or `-04:00` or `+00:00`).","sig":null,"attributes":[{"value":"/ Offset from the local time to UTC (`+09:00` or `-04:00` or `+00:00`).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":120255,"byte_end":120328,"line_start":221,"line_end":221,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":120333,"byte_end":120336,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ In the parser, the colon can be omitted and/or surrounded with any amount of whitespace.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":120341,"byte_end":120433,"line_start":223,"line_end":223,"column_start":5,"column_end":97}},{"value":"/ The offset is limited from `-24:00` to `+24:00`,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":120438,"byte_end":120490,"line_start":224,"line_end":224,"column_start":5,"column_end":57}},{"value":"/ which is the same as [`FixedOffset`](../offset/struct.FixedOffset.html)'s range.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":120495,"byte_end":120579,"line_start":225,"line_end":225,"column_start":5,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2207},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":120995,"byte_end":121015,"line_start":233,"line_end":233,"column_start":5,"column_end":25},"name":"TimezoneOffsetColonZ","qualname":"::format::Fixed::TimezoneOffsetColonZ","value":"Fixed::TimezoneOffsetColonZ","parent":{"krate":0,"index":2182},"children":[],"decl_id":null,"docs":" Offset from the local time to UTC (`+09:00` or `-04:00` or `Z`).","sig":null,"attributes":[{"value":"/ Offset from the local time to UTC (`+09:00` or `-04:00` or `Z`).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":120609,"byte_end":120677,"line_start":227,"line_end":227,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":120682,"byte_end":120685,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ In the parser, the colon can be omitted and/or surrounded with any amount of whitespace,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":120690,"byte_end":120782,"line_start":229,"line_end":229,"column_start":5,"column_end":97}},{"value":"/ and `Z` can be either in upper case or in lower case.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":120787,"byte_end":120844,"line_start":230,"line_end":230,"column_start":5,"column_end":62}},{"value":"/ The offset is limited from `-24:00` to `+24:00`,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":120849,"byte_end":120901,"line_start":231,"line_end":231,"column_start":5,"column_end":57}},{"value":"/ which is the same as [`FixedOffset`](../offset/struct.FixedOffset.html)'s range.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":120906,"byte_end":120990,"line_start":232,"line_end":232,"column_start":5,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2209},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":121154,"byte_end":121168,"line_start":236,"line_end":236,"column_start":5,"column_end":19},"name":"TimezoneOffset","qualname":"::format::Fixed::TimezoneOffset","value":"Fixed::TimezoneOffset","parent":{"krate":0,"index":2182},"children":[],"decl_id":null,"docs":" Same as [`TimezoneOffsetColon`](#variant.TimezoneOffsetColon) but prints no colon.\n Parsing allows an optional colon.\n","sig":null,"attributes":[{"value":"/ Same as [`TimezoneOffsetColon`](#variant.TimezoneOffsetColon) but prints no colon.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":121021,"byte_end":121107,"line_start":234,"line_end":234,"column_start":5,"column_end":91}},{"value":"/ Parsing allows an optional colon.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":121112,"byte_end":121149,"line_start":235,"line_end":235,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2211},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":121309,"byte_end":121324,"line_start":239,"line_end":239,"column_start":5,"column_end":20},"name":"TimezoneOffsetZ","qualname":"::format::Fixed::TimezoneOffsetZ","value":"Fixed::TimezoneOffsetZ","parent":{"krate":0,"index":2182},"children":[],"decl_id":null,"docs":" Same as [`TimezoneOffsetColonZ`](#variant.TimezoneOffsetColonZ) but prints no colon.\n Parsing allows an optional colon.\n","sig":null,"attributes":[{"value":"/ Same as [`TimezoneOffsetColonZ`](#variant.TimezoneOffsetColonZ) but prints no colon.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":121174,"byte_end":121262,"line_start":237,"line_end":237,"column_start":5,"column_end":93}},{"value":"/ Parsing allows an optional colon.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":121267,"byte_end":121304,"line_start":238,"line_end":238,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2213},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":121417,"byte_end":121424,"line_start":241,"line_end":241,"column_start":5,"column_end":12},"name":"RFC2822","qualname":"::format::Fixed::RFC2822","value":"Fixed::RFC2822","parent":{"krate":0,"index":2182},"children":[],"decl_id":null,"docs":" RFC 2822 date and time syntax. Commonly used for email and MIME date and time.\n","sig":null,"attributes":[{"value":"/ RFC 2822 date and time syntax. Commonly used for email and MIME date and time.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":121330,"byte_end":121412,"line_start":240,"line_end":240,"column_start":5,"column_end":87}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2215},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":121480,"byte_end":121487,"line_start":243,"line_end":243,"column_start":5,"column_end":12},"name":"RFC3339","qualname":"::format::Fixed::RFC3339","value":"Fixed::RFC3339","parent":{"krate":0,"index":2182},"children":[],"decl_id":null,"docs":" RFC 3339 & ISO 8601 date and time syntax.\n","sig":null,"attributes":[{"value":"/ RFC 3339 & ISO 8601 date and time syntax.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":121430,"byte_end":121475,"line_start":242,"line_end":242,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2217},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":121706,"byte_end":121714,"line_start":249,"line_end":249,"column_start":5,"column_end":13},"name":"Internal","qualname":"::format::Fixed::Internal","value":"Fixed::Internal(InternalFixed)","parent":{"krate":0,"index":2182},"children":[],"decl_id":null,"docs":" Internal uses only.","sig":null,"attributes":[{"value":"/ Internal uses only.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":121494,"byte_end":121517,"line_start":245,"line_end":245,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":121522,"byte_end":121525,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ This item exists so that one can add additional internal-only formatting","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":121530,"byte_end":121606,"line_start":247,"line_end":247,"column_start":5,"column_end":81}},{"value":"/ without breaking major compatibility (as enum variants cannot be selectively private).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":121611,"byte_end":121701,"line_start":248,"line_end":248,"column_start":5,"column_end":95}}]},{"kind":"Field","id":{"krate":0,"index":2219},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":121715,"byte_end":121728,"line_start":249,"line_end":249,"column_start":14,"column_end":27},"name":"0","qualname":"::format::Fixed::Internal::0","value":"format::InternalFixed","parent":{"krate":0,"index":2217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2182},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":118754,"byte_end":118759,"line_start":182,"line_end":182,"column_start":10,"column_end":15},"name":"Fixed","qualname":"::format::Fixed","value":"enum Fixed {\n    ShortMonthName,\n    LongMonthName,\n    ShortWeekdayName,\n    LongWeekdayName,\n    LowerAmPm,\n    UpperAmPm,\n    Nanosecond,\n    Nanosecond3,\n    Nanosecond6,\n    Nanosecond9,\n    TimezoneName,\n    TimezoneOffsetColon,\n    TimezoneOffsetColonZ,\n    TimezoneOffset,\n    TimezoneOffsetZ,\n    RFC2822,\n    RFC3339,\n    Internal(InternalFixed),\n}","parent":null,"children":[{"krate":0,"index":2183},{"krate":0,"index":2185},{"krate":0,"index":2187},{"krate":0,"index":2189},{"krate":0,"index":2191},{"krate":0,"index":2193},{"krate":0,"index":2195},{"krate":0,"index":2197},{"krate":0,"index":2199},{"krate":0,"index":2201},{"krate":0,"index":2203},{"krate":0,"index":2205},{"krate":0,"index":2207},{"krate":0,"index":2209},{"krate":0,"index":2211},{"krate":0,"index":2213},{"krate":0,"index":2215},{"krate":0,"index":2217}],"decl_id":null,"docs":" Fixed-format item types.","sig":null,"attributes":[{"value":"/ Fixed-format item types.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":118531,"byte_end":118559,"line_start":177,"line_end":177,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":118560,"byte_end":118563,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ They have their own rules of formatting and parsing.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":118564,"byte_end":118620,"line_start":179,"line_end":179,"column_start":1,"column_end":57}},{"value":"/ Otherwise noted, they print in the specified cases but parse case-insensitively.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":118621,"byte_end":118705,"line_start":180,"line_end":180,"column_start":1,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":2231},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":121864,"byte_end":121877,"line_start":254,"line_end":254,"column_start":12,"column_end":25},"name":"InternalFixed","qualname":"::format::InternalFixed","value":"InternalFixed {  }","parent":null,"children":[{"krate":0,"index":2232}],"decl_id":null,"docs":" An opaque type representing fixed-format item types for internal uses only.\n","sig":null,"attributes":[{"value":"/ An opaque type representing fixed-format item types for internal uses only.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":121734,"byte_end":121813,"line_start":252,"line_end":252,"column_start":1,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2265},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":122893,"byte_end":122900,"line_start":281,"line_end":281,"column_start":5,"column_end":12},"name":"Literal","qualname":"::format::Item::Literal","value":"Item::Literal(&'a str)","parent":{"krate":0,"index":2263},"children":[],"decl_id":null,"docs":" A literally printed and parsed text.\n","sig":null,"attributes":[{"value":"/ A literally printed and parsed text.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":122848,"byte_end":122888,"line_start":280,"line_end":280,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":2267},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":122901,"byte_end":122908,"line_start":281,"line_end":281,"column_start":13,"column_end":20},"name":"0","qualname":"::format::Item::Literal::0","value":"&'a str","parent":{"krate":0,"index":2265},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2268},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":123138,"byte_end":123143,"line_start":286,"line_end":286,"column_start":5,"column_end":10},"name":"Space","qualname":"::format::Item::Space","value":"Item::Space(&'a str)","parent":{"krate":0,"index":2263},"children":[],"decl_id":null,"docs":" Whitespace. Prints literally but reads zero or more whitespace.\n","sig":null,"attributes":[{"value":"/ Whitespace. Prints literally but reads zero or more whitespace.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":123066,"byte_end":123133,"line_start":285,"line_end":285,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":2270},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":123144,"byte_end":123151,"line_start":286,"line_end":286,"column_start":11,"column_end":18},"name":"0","qualname":"::format::Item::Space::0","value":"&'a str","parent":{"krate":0,"index":2268},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2271},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":123468,"byte_end":123475,"line_start":292,"line_end":292,"column_start":5,"column_end":12},"name":"Numeric","qualname":"::format::Item::Numeric","value":"Item::Numeric(Numeric, Pad)","parent":{"krate":0,"index":2263},"children":[],"decl_id":null,"docs":" Numeric item. Can be optionally padded to the maximal length (if any) when formatting;\n the parser simply ignores any padded whitespace and zeroes.\n","sig":null,"attributes":[{"value":"/ Numeric item. Can be optionally padded to the maximal length (if any) when formatting;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":123305,"byte_end":123395,"line_start":290,"line_end":290,"column_start":5,"column_end":95}},{"value":"/ the parser simply ignores any padded whitespace and zeroes.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":123400,"byte_end":123463,"line_start":291,"line_end":291,"column_start":5,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":2273},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":123476,"byte_end":123483,"line_start":292,"line_end":292,"column_start":13,"column_end":20},"name":"0","qualname":"::format::Item::Numeric::0","value":"format::Numeric","parent":{"krate":0,"index":2271},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2274},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":123485,"byte_end":123488,"line_start":292,"line_end":292,"column_start":22,"column_end":25},"name":"1","qualname":"::format::Item::Numeric::1","value":"format::Pad","parent":{"krate":0,"index":2271},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2275},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":123522,"byte_end":123527,"line_start":294,"line_end":294,"column_start":5,"column_end":10},"name":"Fixed","qualname":"::format::Item::Fixed","value":"Item::Fixed(Fixed)","parent":{"krate":0,"index":2263},"children":[],"decl_id":null,"docs":" Fixed-format item.\n","sig":null,"attributes":[{"value":"/ Fixed-format item.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":123495,"byte_end":123517,"line_start":293,"line_end":293,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":2277},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":123528,"byte_end":123533,"line_start":294,"line_end":294,"column_start":11,"column_end":16},"name":"0","qualname":"::format::Item::Fixed::0","value":"format::Fixed","parent":{"krate":0,"index":2275},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2278},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":123616,"byte_end":123621,"line_start":296,"line_end":296,"column_start":5,"column_end":10},"name":"Error","qualname":"::format::Item::Error","value":"Item::Error","parent":{"krate":0,"index":2263},"children":[],"decl_id":null,"docs":" Issues a formatting error. Used to signal an invalid format string.\n","sig":null,"attributes":[{"value":"/ Issues a formatting error. Used to signal an invalid format string.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":123540,"byte_end":123611,"line_start":295,"line_end":295,"column_start":5,"column_end":76}}]},{"kind":"Enum","id":{"krate":0,"index":2263},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":122833,"byte_end":122837,"line_start":279,"line_end":279,"column_start":10,"column_end":14},"name":"Item","qualname":"::format::Item","value":"enum Item<'a> {\n    Literal(&'a str),\n    Space(&'a str),\n    Numeric(Numeric, Pad),\n    Fixed(Fixed),\n    Error,\n}","parent":null,"children":[{"krate":0,"index":2265},{"krate":0,"index":2268},{"krate":0,"index":2271},{"krate":0,"index":2275},{"krate":0,"index":2278}],"decl_id":null,"docs":" A single formatting item. This is used for both formatting and parsing.\n","sig":null,"attributes":[{"value":"/ A single formatting item. This is used for both formatting and parsing.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":122709,"byte_end":122784,"line_start":277,"line_end":277,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2297},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":124369,"byte_end":124379,"line_start":337,"line_end":337,"column_start":12,"column_end":22},"name":"ParseError","qualname":"::format::ParseError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error from the `parse` function.\n","sig":null,"attributes":[{"value":"/ An error from the `parse` function.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":124273,"byte_end":124312,"line_start":335,"line_end":335,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":124463,"byte_end":124467,"line_start":341,"line_end":341,"column_start":12,"column_end":16},"name":"kind","qualname":"<ParseError>::kind","value":"fn kind(&Self) -> ParseErrorKind","parent":null,"children":[],"decl_id":null,"docs":" The category of parse error\n","sig":null,"attributes":[{"value":"/ The category of parse error","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":124420,"byte_end":124451,"line_start":340,"line_end":340,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2313},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":124673,"byte_end":124683,"line_start":350,"line_end":350,"column_start":5,"column_end":15},"name":"OutOfRange","qualname":"::format::ParseErrorKind::OutOfRange","value":"ParseErrorKind::OutOfRange","parent":{"krate":0,"index":2312},"children":[],"decl_id":null,"docs":" Given field is out of permitted range.\n","sig":null,"attributes":[{"value":"/ Given field is out of permitted range.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":124626,"byte_end":124668,"line_start":349,"line_end":349,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2315},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":124961,"byte_end":124971,"line_start":356,"line_end":356,"column_start":5,"column_end":15},"name":"Impossible","qualname":"::format::ParseErrorKind::Impossible","value":"ParseErrorKind::Impossible","parent":{"krate":0,"index":2312},"children":[],"decl_id":null,"docs":" There is no possible date and time value with given set of fields.","sig":null,"attributes":[{"value":"/ There is no possible date and time value with given set of fields.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":124690,"byte_end":124760,"line_start":352,"line_end":352,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":124765,"byte_end":124768,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ This does not include the out-of-range conditions, which are trivially invalid.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":124773,"byte_end":124856,"line_start":354,"line_end":354,"column_start":5,"column_end":88}},{"value":"/ It includes the case that there are one or more fields that are inconsistent to each other.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":124861,"byte_end":124956,"line_start":355,"line_end":355,"column_start":5,"column_end":100}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2317},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":125337,"byte_end":125346,"line_start":363,"line_end":363,"column_start":5,"column_end":14},"name":"NotEnough","qualname":"::format::ParseErrorKind::NotEnough","value":"ParseErrorKind::NotEnough","parent":{"krate":0,"index":2312},"children":[],"decl_id":null,"docs":" Given set of fields is not enough to make a requested date and time value.","sig":null,"attributes":[{"value":"/ Given set of fields is not enough to make a requested date and time value.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":124978,"byte_end":125056,"line_start":358,"line_end":358,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":125061,"byte_end":125064,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ Note that there *may* be a case that given fields constrain the possible values so much","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":125069,"byte_end":125160,"line_start":360,"line_end":360,"column_start":5,"column_end":96}},{"value":"/ that there is a unique possible value. Chrono only tries to be correct for","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":125165,"byte_end":125243,"line_start":361,"line_end":361,"column_start":5,"column_end":83}},{"value":"/ most useful sets of fields however, as such constraint solving can be expensive.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":125248,"byte_end":125332,"line_start":362,"line_end":362,"column_start":5,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2319},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":125442,"byte_end":125449,"line_start":366,"line_end":366,"column_start":5,"column_end":12},"name":"Invalid","qualname":"::format::ParseErrorKind::Invalid","value":"ParseErrorKind::Invalid","parent":{"krate":0,"index":2312},"children":[],"decl_id":null,"docs":" The input string has some invalid character sequence for given formatting items.\n","sig":null,"attributes":[{"value":"/ The input string has some invalid character sequence for given formatting items.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":125353,"byte_end":125437,"line_start":365,"line_end":365,"column_start":5,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2321},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":125509,"byte_end":125517,"line_start":369,"line_end":369,"column_start":5,"column_end":13},"name":"TooShort","qualname":"::format::ParseErrorKind::TooShort","value":"ParseErrorKind::TooShort","parent":{"krate":0,"index":2312},"children":[],"decl_id":null,"docs":" The input string has been prematurely ended.\n","sig":null,"attributes":[{"value":"/ The input string has been prematurely ended.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":125456,"byte_end":125504,"line_start":368,"line_end":368,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2323},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":125600,"byte_end":125607,"line_start":372,"line_end":372,"column_start":5,"column_end":12},"name":"TooLong","qualname":"::format::ParseErrorKind::TooLong","value":"ParseErrorKind::TooLong","parent":{"krate":0,"index":2312},"children":[],"decl_id":null,"docs":" All formatting items have been read but there is a remaining input.\n","sig":null,"attributes":[{"value":"/ All formatting items have been read but there is a remaining input.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":125524,"byte_end":125595,"line_start":371,"line_end":371,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2325},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":125712,"byte_end":125721,"line_start":375,"line_end":375,"column_start":5,"column_end":14},"name":"BadFormat","qualname":"::format::ParseErrorKind::BadFormat","value":"ParseErrorKind::BadFormat","parent":{"krate":0,"index":2312},"children":[],"decl_id":null,"docs":" There was an error on the formatting string, or there were non-supported formating items.\n","sig":null,"attributes":[{"value":"/ There was an error on the formatting string, or there were non-supported formating items.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":125614,"byte_end":125707,"line_start":374,"line_end":374,"column_start":5,"column_end":98}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2327},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":125832,"byte_end":125847,"line_start":379,"line_end":379,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::format::ParseErrorKind::__Nonexhaustive","value":"ParseErrorKind::__Nonexhaustive","parent":{"krate":0,"index":2312},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2312},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":124605,"byte_end":124619,"line_start":348,"line_end":348,"column_start":10,"column_end":24},"name":"ParseErrorKind","qualname":"::format::ParseErrorKind","value":"enum ParseErrorKind {\n    OutOfRange,\n    Impossible,\n    NotEnough,\n    Invalid,\n    TooShort,\n    TooLong,\n    BadFormat,\n    __Nonexhaustive,\n}","parent":null,"children":[{"krate":0,"index":2313},{"krate":0,"index":2315},{"krate":0,"index":2317},{"krate":0,"index":2319},{"krate":0,"index":2321},{"krate":0,"index":2323},{"krate":0,"index":2325},{"krate":0,"index":2327}],"decl_id":null,"docs":" The category of parse error\n","sig":null,"attributes":[{"value":"/ The category of parse error","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":124519,"byte_end":124550,"line_start":346,"line_end":346,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":613},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":125898,"byte_end":125909,"line_start":383,"line_end":383,"column_start":10,"column_end":21},"name":"ParseResult","qualname":"::format::ParseResult","value":"Result<T, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Same as `Result<T, ParseError>`.\n","sig":null,"attributes":[{"value":"/ Same as `Result<T, ParseError>`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":125852,"byte_end":125888,"line_start":382,"line_end":382,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":125981,"byte_end":125984,"line_start":386,"line_end":386,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ParseError as core::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9909},"children":[],"decl_id":{"krate":1,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2340},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":149431,"byte_end":149437,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"name":"Parsed","qualname":"::format::parsed::Parsed","value":"Parsed { year, year_div_100, year_mod_100, isoyear, isoyear_div_100, isoyear_mod_100, month, week_from_sun, week_from_mon, isoweek, weekday, ordinal, day, hour_div_12, hour_mod_12, minute, second, nanosecond, timestamp, offset }","parent":null,"children":[{"krate":0,"index":2341},{"krate":0,"index":2342},{"krate":0,"index":2343},{"krate":0,"index":2344},{"krate":0,"index":2345},{"krate":0,"index":2346},{"krate":0,"index":2347},{"krate":0,"index":2348},{"krate":0,"index":2349},{"krate":0,"index":2350},{"krate":0,"index":2351},{"krate":0,"index":2352},{"krate":0,"index":2353},{"krate":0,"index":2354},{"krate":0,"index":2355},{"krate":0,"index":2356},{"krate":0,"index":2357},{"krate":0,"index":2358},{"krate":0,"index":2359},{"krate":0,"index":2360},{"krate":0,"index":2361}],"decl_id":null,"docs":" Parsed parts of date and time. There are two classes of methods:","sig":null,"attributes":[{"value":"/ Parsed parts of date and time. There are two classes of methods:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":148943,"byte_end":149011,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":149012,"byte_end":149015,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ - `set_*` methods try to set given field(s) while checking for the consistency.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":149016,"byte_end":149099,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/   It may or may not check for the range constraint immediately (for efficiency reasons).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":149100,"byte_end":149192,"line_start":21,"line_end":21,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":149193,"byte_end":149196,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ - `to_*` methods try to make a concrete date and time value out of set fields.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":149197,"byte_end":149279,"line_start":23,"line_end":23,"column_start":1,"column_end":83}},{"value":"/   It fully checks any remaining out-of-range conditions and inconsistent/impossible fields.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":149280,"byte_end":149375,"line_start":24,"line_end":24,"column_start":1,"column_end":96}}]},{"kind":"Field","id":{"krate":0,"index":2341},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":149614,"byte_end":149618,"line_start":31,"line_end":31,"column_start":9,"column_end":13},"name":"year","qualname":"::format::parsed::Parsed::year","value":"core::option::Option<i32>","parent":{"krate":0,"index":2340},"children":[],"decl_id":null,"docs":" Year.","sig":null,"attributes":[{"value":"/ Year.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":149444,"byte_end":149453,"line_start":27,"line_end":27,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":149458,"byte_end":149461,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This can be negative unlike [`year_div_100`](#structfield.year_div_100)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":149466,"byte_end":149541,"line_start":29,"line_end":29,"column_start":5,"column_end":80}},{"value":"/ and [`year_mod_100`](#structfield.year_mod_100) fields.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":149546,"byte_end":149605,"line_start":30,"line_end":30,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":2342},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":149922,"byte_end":149934,"line_start":38,"line_end":38,"column_start":9,"column_end":21},"name":"year_div_100","qualname":"::format::parsed::Parsed::year_div_100","value":"core::option::Option<i32>","parent":{"krate":0,"index":2340},"children":[],"decl_id":null,"docs":" Year divided by 100. Implies that the year is >= 1 BCE when set.","sig":null,"attributes":[{"value":"/ Year divided by 100. Implies that the year is >= 1 BCE when set.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":149638,"byte_end":149706,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":149711,"byte_end":149714,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Due to the common usage, if this field is missing but","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":149719,"byte_end":149776,"line_start":35,"line_end":35,"column_start":5,"column_end":62}},{"value":"/ [`year_mod_100`](#structfield.year_mod_100) is present,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":149781,"byte_end":149840,"line_start":36,"line_end":36,"column_start":5,"column_end":64}},{"value":"/ it is inferred to 19 when `year_mod_100 >= 70` and 20 otherwise.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":149845,"byte_end":149913,"line_start":37,"line_end":37,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":2343},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":150027,"byte_end":150039,"line_start":41,"line_end":41,"column_start":9,"column_end":21},"name":"year_mod_100","qualname":"::format::parsed::Parsed::year_mod_100","value":"core::option::Option<i32>","parent":{"krate":0,"index":2340},"children":[],"decl_id":null,"docs":" Year modulo 100. Implies that the year is >= 1 BCE when set.\n","sig":null,"attributes":[{"value":"/ Year modulo 100. Implies that the year is >= 1 BCE when set.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":149954,"byte_end":150018,"line_start":40,"line_end":40,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":2344},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":150306,"byte_end":150313,"line_start":47,"line_end":47,"column_start":9,"column_end":16},"name":"isoyear","qualname":"::format::parsed::Parsed::isoyear","value":"core::option::Option<i32>","parent":{"krate":0,"index":2340},"children":[],"decl_id":null,"docs":" Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date).","sig":null,"attributes":[{"value":"/ Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":150059,"byte_end":150133,"line_start":43,"line_end":43,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":150138,"byte_end":150141,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This can be negative unlike [`isoyear_div_100`](#structfield.isoyear_div_100) and","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":150146,"byte_end":150231,"line_start":45,"line_end":45,"column_start":5,"column_end":90}},{"value":"/ [`isoyear_mod_100`](#structfield.isoyear_mod_100) fields.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":150236,"byte_end":150297,"line_start":46,"line_end":46,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":2345},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":150700,"byte_end":150715,"line_start":55,"line_end":55,"column_start":9,"column_end":24},"name":"isoyear_div_100","qualname":"::format::parsed::Parsed::isoyear_div_100","value":"core::option::Option<i32>","parent":{"krate":0,"index":2340},"children":[],"decl_id":null,"docs":" Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date), divided by 100.\n Implies that the year is >= 1 BCE when set.","sig":null,"attributes":[{"value":"/ Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date), divided by 100.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":150333,"byte_end":150423,"line_start":49,"line_end":49,"column_start":5,"column_end":95}},{"value":"/ Implies that the year is >= 1 BCE when set.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":150428,"byte_end":150475,"line_start":50,"line_end":50,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":150480,"byte_end":150483,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Due to the common usage, if this field is missing but","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":150488,"byte_end":150545,"line_start":52,"line_end":52,"column_start":5,"column_end":62}},{"value":"/ [`isoyear_mod_100`](#structfield.isoyear_mod_100) is present,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":150550,"byte_end":150615,"line_start":53,"line_end":53,"column_start":5,"column_end":70}},{"value":"/ it is inferred to 19 when `isoyear_mod_100 >= 70` and 20 otherwise.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":150620,"byte_end":150691,"line_start":54,"line_end":54,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":2346},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":150882,"byte_end":150897,"line_start":59,"line_end":59,"column_start":9,"column_end":24},"name":"isoyear_mod_100","qualname":"::format::parsed::Parsed::isoyear_mod_100","value":"core::option::Option<i32>","parent":{"krate":0,"index":2340},"children":[],"decl_id":null,"docs":" Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date), modulo 100.\n Implies that the year is >= 1 BCE when set.\n","sig":null,"attributes":[{"value":"/ Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date), modulo 100.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":150735,"byte_end":150821,"line_start":57,"line_end":57,"column_start":5,"column_end":91}},{"value":"/ Implies that the year is >= 1 BCE when set.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":150826,"byte_end":150873,"line_start":58,"line_end":58,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2347},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":150944,"byte_end":150949,"line_start":62,"line_end":62,"column_start":9,"column_end":14},"name":"month","qualname":"::format::parsed::Parsed::month","value":"core::option::Option<u32>","parent":{"krate":0,"index":2340},"children":[],"decl_id":null,"docs":" Month (1--12).\n","sig":null,"attributes":[{"value":"/ Month (1--12).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":150917,"byte_end":150935,"line_start":61,"line_end":61,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":2348},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":151104,"byte_end":151117,"line_start":66,"line_end":66,"column_start":9,"column_end":22},"name":"week_from_sun","qualname":"::format::parsed::Parsed::week_from_sun","value":"core::option::Option<u32>","parent":{"krate":0,"index":2340},"children":[],"decl_id":null,"docs":" Week number, where the week 1 starts at the first Sunday of January\n (0--53, 1--53 or 1--52 depending on the year).\n","sig":null,"attributes":[{"value":"/ Week number, where the week 1 starts at the first Sunday of January","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":150969,"byte_end":151040,"line_start":64,"line_end":64,"column_start":5,"column_end":76}},{"value":"/ (0--53, 1--53 or 1--52 depending on the year).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":151045,"byte_end":151095,"line_start":65,"line_end":65,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":2349},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":151272,"byte_end":151285,"line_start":70,"line_end":70,"column_start":9,"column_end":22},"name":"week_from_mon","qualname":"::format::parsed::Parsed::week_from_mon","value":"core::option::Option<u32>","parent":{"krate":0,"index":2340},"children":[],"decl_id":null,"docs":" Week number, where the week 1 starts at the first Monday of January\n (0--53, 1--53 or 1--52 depending on the year).\n","sig":null,"attributes":[{"value":"/ Week number, where the week 1 starts at the first Monday of January","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":151137,"byte_end":151208,"line_start":68,"line_end":68,"column_start":5,"column_end":76}},{"value":"/ (0--53, 1--53 or 1--52 depending on the year).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":151213,"byte_end":151263,"line_start":69,"line_end":69,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":2350},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":151425,"byte_end":151432,"line_start":74,"line_end":74,"column_start":9,"column_end":16},"name":"isoweek","qualname":"::format::parsed::Parsed::isoweek","value":"core::option::Option<u32>","parent":{"krate":0,"index":2340},"children":[],"decl_id":null,"docs":" [ISO week number](../naive/struct.NaiveDate.html#week-date)\n (1--52 or 1--53 depending on the year).\n","sig":null,"attributes":[{"value":"/ [ISO week number](../naive/struct.NaiveDate.html#week-date)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":151305,"byte_end":151368,"line_start":72,"line_end":72,"column_start":5,"column_end":68}},{"value":"/ (1--52 or 1--53 depending on the year).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":151373,"byte_end":151416,"line_start":73,"line_end":73,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":2351},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":151481,"byte_end":151488,"line_start":77,"line_end":77,"column_start":9,"column_end":16},"name":"weekday","qualname":"::format::parsed::Parsed::weekday","value":"core::option::Option<weekday::Weekday>","parent":{"krate":0,"index":2340},"children":[],"decl_id":null,"docs":" Day of the week.\n","sig":null,"attributes":[{"value":"/ Day of the week.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":151452,"byte_end":151472,"line_start":76,"line_end":76,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":2352},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":151582,"byte_end":151589,"line_start":80,"line_end":80,"column_start":9,"column_end":16},"name":"ordinal","qualname":"::format::parsed::Parsed::ordinal","value":"core::option::Option<u32>","parent":{"krate":0,"index":2340},"children":[],"decl_id":null,"docs":" Day of the year (1--365 or 1--366 depending on the year).\n","sig":null,"attributes":[{"value":"/ Day of the year (1--365 or 1--366 depending on the year).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":151512,"byte_end":151573,"line_start":79,"line_end":79,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":2353},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":151693,"byte_end":151696,"line_start":83,"line_end":83,"column_start":9,"column_end":12},"name":"day","qualname":"::format::parsed::Parsed::day","value":"core::option::Option<u32>","parent":{"krate":0,"index":2340},"children":[],"decl_id":null,"docs":" Day of the month (1--28, 1--29, 1--30 or 1--31 depending on the month).\n","sig":null,"attributes":[{"value":"/ Day of the month (1--28, 1--29, 1--30 or 1--31 depending on the month).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":151609,"byte_end":151684,"line_start":82,"line_end":82,"column_start":5,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":2354},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":151797,"byte_end":151808,"line_start":86,"line_end":86,"column_start":9,"column_end":20},"name":"hour_div_12","qualname":"::format::parsed::Parsed::hour_div_12","value":"core::option::Option<u32>","parent":{"krate":0,"index":2340},"children":[],"decl_id":null,"docs":" Hour number divided by 12 (0--1). 0 indicates AM and 1 indicates PM.\n","sig":null,"attributes":[{"value":"/ Hour number divided by 12 (0--1). 0 indicates AM and 1 indicates PM.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":151716,"byte_end":151788,"line_start":85,"line_end":85,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":2355},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":151871,"byte_end":151882,"line_start":89,"line_end":89,"column_start":9,"column_end":20},"name":"hour_mod_12","qualname":"::format::parsed::Parsed::hour_mod_12","value":"core::option::Option<u32>","parent":{"krate":0,"index":2340},"children":[],"decl_id":null,"docs":" Hour number modulo 12 (0--11).\n","sig":null,"attributes":[{"value":"/ Hour number modulo 12 (0--11).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":151828,"byte_end":151862,"line_start":88,"line_end":88,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":2356},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":151937,"byte_end":151943,"line_start":92,"line_end":92,"column_start":9,"column_end":15},"name":"minute","qualname":"::format::parsed::Parsed::minute","value":"core::option::Option<u32>","parent":{"krate":0,"index":2340},"children":[],"decl_id":null,"docs":" Minute number (0--59).\n","sig":null,"attributes":[{"value":"/ Minute number (0--59).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":151902,"byte_end":151928,"line_start":91,"line_end":91,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":2357},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":152027,"byte_end":152033,"line_start":95,"line_end":95,"column_start":9,"column_end":15},"name":"second","qualname":"::format::parsed::Parsed::second","value":"core::option::Option<u32>","parent":{"krate":0,"index":2340},"children":[],"decl_id":null,"docs":" Second number (0--60, accounting for leap seconds).\n","sig":null,"attributes":[{"value":"/ Second number (0--60, accounting for leap seconds).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":151963,"byte_end":152018,"line_start":94,"line_end":94,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":2358},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":152132,"byte_end":152142,"line_start":98,"line_end":98,"column_start":9,"column_end":19},"name":"nanosecond","qualname":"::format::parsed::Parsed::nanosecond","value":"core::option::Option<u32>","parent":{"krate":0,"index":2340},"children":[],"decl_id":null,"docs":" The number of nanoseconds since the whole second (0--999,999,999).\n","sig":null,"attributes":[{"value":"/ The number of nanoseconds since the whole second (0--999,999,999).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":152053,"byte_end":152123,"line_start":97,"line_end":97,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":2359},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":152345,"byte_end":152354,"line_start":103,"line_end":103,"column_start":9,"column_end":18},"name":"timestamp","qualname":"::format::parsed::Parsed::timestamp","value":"core::option::Option<i64>","parent":{"krate":0,"index":2340},"children":[],"decl_id":null,"docs":" The number of non-leap seconds since the midnight UTC on January 1, 1970.","sig":null,"attributes":[{"value":"/ The number of non-leap seconds since the midnight UTC on January 1, 1970.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":152162,"byte_end":152239,"line_start":100,"line_end":100,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":152244,"byte_end":152247,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ This can be off by one if [`second`](#structfield.second) is 60 (a leap second).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":152252,"byte_end":152336,"line_start":102,"line_end":102,"column_start":5,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":2360},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":152433,"byte_end":152439,"line_start":106,"line_end":106,"column_start":9,"column_end":15},"name":"offset","qualname":"::format::parsed::Parsed::offset","value":"core::option::Option<i32>","parent":{"krate":0,"index":2340},"children":[],"decl_id":null,"docs":" Offset from the local time to UTC, in seconds.\n","sig":null,"attributes":[{"value":"/ Offset from the local time to UTC, in seconds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":152374,"byte_end":152424,"line_start":105,"line_end":105,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":153074,"byte_end":153077,"line_start":130,"line_end":130,"column_start":12,"column_end":15},"name":"new","qualname":"<Parsed>::new","value":"fn new() -> Parsed","parent":null,"children":[],"decl_id":null,"docs":" Returns the initial value of parsed parts.\n","sig":null,"attributes":[{"value":"/ Returns the initial value of parsed parts.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":153016,"byte_end":153062,"line_start":129,"line_end":129,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":153227,"byte_end":153235,"line_start":136,"line_end":136,"column_start":12,"column_end":20},"name":"set_year","qualname":"<Parsed>::set_year","value":"fn set_year(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`year`](#structfield.year) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`year`](#structfield.year) field from given value.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":153129,"byte_end":153201,"line_start":134,"line_end":134,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":153206,"byte_end":153215,"line_start":135,"line_end":135,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":153484,"byte_end":153500,"line_start":142,"line_end":142,"column_start":12,"column_end":28},"name":"set_year_div_100","qualname":"<Parsed>::set_year_div_100","value":"fn set_year_div_100(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`year_div_100`](#structfield.year_div_100) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`year_div_100`](#structfield.year_div_100) field from given value.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":153370,"byte_end":153458,"line_start":140,"line_end":140,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":153463,"byte_end":153472,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":153828,"byte_end":153844,"line_start":151,"line_end":151,"column_start":12,"column_end":28},"name":"set_year_mod_100","qualname":"<Parsed>::set_year_mod_100","value":"fn set_year_mod_100(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`year_mod_100`](#structfield.year_mod_100) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`year_mod_100`](#structfield.year_mod_100) field from given value.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":153714,"byte_end":153802,"line_start":149,"line_end":149,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":153807,"byte_end":153816,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":154162,"byte_end":154173,"line_start":160,"line_end":160,"column_start":12,"column_end":23},"name":"set_isoyear","qualname":"<Parsed>::set_isoyear","value":"fn set_isoyear(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`isoyear`](#structfield.isoyear) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`isoyear`](#structfield.isoyear) field from given value.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":154058,"byte_end":154136,"line_start":158,"line_end":158,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":154141,"byte_end":154150,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":154431,"byte_end":154450,"line_start":166,"line_end":166,"column_start":12,"column_end":31},"name":"set_isoyear_div_100","qualname":"<Parsed>::set_isoyear_div_100","value":"fn set_isoyear_div_100(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`isoyear_div_100`](#structfield.isoyear_div_100) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`isoyear_div_100`](#structfield.isoyear_div_100) field from given value.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":154311,"byte_end":154405,"line_start":164,"line_end":164,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":154410,"byte_end":154419,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":154787,"byte_end":154806,"line_start":175,"line_end":175,"column_start":12,"column_end":31},"name":"set_isoyear_mod_100","qualname":"<Parsed>::set_isoyear_mod_100","value":"fn set_isoyear_mod_100(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`isoyear_mod_100`](#structfield.isoyear_mod_100) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`isoyear_mod_100`](#structfield.isoyear_mod_100) field from given value.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":154667,"byte_end":154761,"line_start":173,"line_end":173,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":154766,"byte_end":154775,"line_start":174,"line_end":174,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":155123,"byte_end":155132,"line_start":184,"line_end":184,"column_start":12,"column_end":21},"name":"set_month","qualname":"<Parsed>::set_month","value":"fn set_month(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`month`](#structfield.month) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`month`](#structfield.month) field from given value.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":155023,"byte_end":155097,"line_start":182,"line_end":182,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":155102,"byte_end":155111,"line_start":183,"line_end":183,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":155384,"byte_end":155401,"line_start":190,"line_end":190,"column_start":12,"column_end":29},"name":"set_week_from_sun","qualname":"<Parsed>::set_week_from_sun","value":"fn set_week_from_sun(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`week_from_sun`](#structfield.week_from_sun) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`week_from_sun`](#structfield.week_from_sun) field from given value.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":155268,"byte_end":155358,"line_start":188,"line_end":188,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":155363,"byte_end":155372,"line_start":189,"line_end":189,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":155661,"byte_end":155678,"line_start":196,"line_end":196,"column_start":12,"column_end":29},"name":"set_week_from_mon","qualname":"<Parsed>::set_week_from_mon","value":"fn set_week_from_mon(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`week_from_mon`](#structfield.week_from_mon) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`week_from_mon`](#structfield.week_from_mon) field from given value.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":155545,"byte_end":155635,"line_start":194,"line_end":194,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":155640,"byte_end":155649,"line_start":195,"line_end":195,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":155926,"byte_end":155937,"line_start":202,"line_end":202,"column_start":12,"column_end":23},"name":"set_isoweek","qualname":"<Parsed>::set_isoweek","value":"fn set_isoweek(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`isoweek`](#structfield.isoweek) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`isoweek`](#structfield.isoweek) field from given value.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":155822,"byte_end":155900,"line_start":200,"line_end":200,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":155905,"byte_end":155914,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":156179,"byte_end":156190,"line_start":208,"line_end":208,"column_start":12,"column_end":23},"name":"set_weekday","qualname":"<Parsed>::set_weekday","value":"fn set_weekday(&mut Self, Weekday) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`weekday`](#structfield.weekday) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`weekday`](#structfield.weekday) field from given value.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":156075,"byte_end":156153,"line_start":206,"line_end":206,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":156158,"byte_end":156167,"line_start":207,"line_end":207,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":156406,"byte_end":156417,"line_start":214,"line_end":214,"column_start":12,"column_end":23},"name":"set_ordinal","qualname":"<Parsed>::set_ordinal","value":"fn set_ordinal(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`ordinal`](#structfield.ordinal) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`ordinal`](#structfield.ordinal) field from given value.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":156302,"byte_end":156380,"line_start":212,"line_end":212,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":156385,"byte_end":156394,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":156651,"byte_end":156658,"line_start":220,"line_end":220,"column_start":12,"column_end":19},"name":"set_day","qualname":"<Parsed>::set_day","value":"fn set_day(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`day`](#structfield.day) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`day`](#structfield.day) field from given value.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":156555,"byte_end":156625,"line_start":218,"line_end":218,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":156630,"byte_end":156639,"line_start":219,"line_end":219,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":156944,"byte_end":156952,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"name":"set_ampm","qualname":"<Parsed>::set_ampm","value":"fn set_ampm(&mut Self, bool) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`hour_div_12`](#structfield.hour_div_12) field from given value.\n (`false` for AM, `true` for PM)\n","sig":null,"attributes":[{"value":"/ Tries to set the [`hour_div_12`](#structfield.hour_div_12) field from given value.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":156792,"byte_end":156878,"line_start":224,"line_end":224,"column_start":5,"column_end":91}},{"value":"/ (`false` for AM, `true` for PM)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":156883,"byte_end":156918,"line_start":225,"line_end":225,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":156923,"byte_end":156932,"line_start":226,"line_end":226,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":157229,"byte_end":157239,"line_start":234,"line_end":234,"column_start":12,"column_end":22},"name":"set_hour12","qualname":"<Parsed>::set_hour12","value":"fn set_hour12(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`hour_mod_12`](#structfield.hour_mod_12) field from\n given hour number in 12-hour clocks.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`hour_mod_12`](#structfield.hour_mod_12) field from","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":157085,"byte_end":157158,"line_start":231,"line_end":231,"column_start":5,"column_end":78}},{"value":"/ given hour number in 12-hour clocks.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":157163,"byte_end":157203,"line_start":232,"line_end":232,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":157208,"byte_end":157217,"line_start":233,"line_end":233,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":157616,"byte_end":157624,"line_start":244,"line_end":244,"column_start":12,"column_end":20},"name":"set_hour","qualname":"<Parsed>::set_hour","value":"fn set_hour(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set both [`hour_div_12`](#structfield.hour_div_12) and\n [`hour_mod_12`](#structfield.hour_mod_12) fields from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set both [`hour_div_12`](#structfield.hour_div_12) and","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":157448,"byte_end":157515,"line_start":241,"line_end":241,"column_start":5,"column_end":72}},{"value":"/ [`hour_mod_12`](#structfield.hour_mod_12) fields from given value.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":157520,"byte_end":157590,"line_start":242,"line_end":242,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":157595,"byte_end":157604,"line_start":243,"line_end":243,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":157968,"byte_end":157978,"line_start":253,"line_end":253,"column_start":12,"column_end":22},"name":"set_minute","qualname":"<Parsed>::set_minute","value":"fn set_minute(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`minute`](#structfield.minute) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`minute`](#structfield.minute) field from given value.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":157866,"byte_end":157942,"line_start":251,"line_end":251,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":157947,"byte_end":157956,"line_start":252,"line_end":252,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":158217,"byte_end":158227,"line_start":259,"line_end":259,"column_start":12,"column_end":22},"name":"set_second","qualname":"<Parsed>::set_second","value":"fn set_second(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`second`](#structfield.second) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`second`](#structfield.second) field from given value.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":158115,"byte_end":158191,"line_start":257,"line_end":257,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":158196,"byte_end":158205,"line_start":258,"line_end":258,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":158474,"byte_end":158488,"line_start":265,"line_end":265,"column_start":12,"column_end":26},"name":"set_nanosecond","qualname":"<Parsed>::set_nanosecond","value":"fn set_nanosecond(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`nanosecond`](#structfield.nanosecond) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`nanosecond`](#structfield.nanosecond) field from given value.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":158364,"byte_end":158448,"line_start":263,"line_end":263,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":158453,"byte_end":158462,"line_start":264,"line_end":264,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":158737,"byte_end":158750,"line_start":271,"line_end":271,"column_start":12,"column_end":25},"name":"set_timestamp","qualname":"<Parsed>::set_timestamp","value":"fn set_timestamp(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`timestamp`](#structfield.timestamp) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`timestamp`](#structfield.timestamp) field from given value.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":158629,"byte_end":158711,"line_start":269,"line_end":269,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":158716,"byte_end":158725,"line_start":270,"line_end":270,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":158962,"byte_end":158972,"line_start":277,"line_end":277,"column_start":12,"column_end":22},"name":"set_offset","qualname":"<Parsed>::set_offset","value":"fn set_offset(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`offset`](#structfield.offset) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`offset`](#structfield.offset) field from given value.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":158860,"byte_end":158936,"line_start":275,"line_end":275,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":158941,"byte_end":158950,"line_start":276,"line_end":276,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":159616,"byte_end":159629,"line_start":292,"line_end":292,"column_start":12,"column_end":25},"name":"to_naive_date","qualname":"<Parsed>::to_naive_date","value":"fn to_naive_date(&Self) -> ParseResult<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed naive date out of given fields.","sig":null,"attributes":[{"value":"/ Returns a parsed naive date out of given fields.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":159109,"byte_end":159161,"line_start":281,"line_end":281,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":159166,"byte_end":159169,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This method is able to determine the date from given subset of fields:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":159174,"byte_end":159248,"line_start":283,"line_end":283,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":159253,"byte_end":159256,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ - Year, month, day.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":159261,"byte_end":159284,"line_start":285,"line_end":285,"column_start":5,"column_end":28}},{"value":"/ - Year, day of the year (ordinal).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":159289,"byte_end":159327,"line_start":286,"line_end":286,"column_start":5,"column_end":43}},{"value":"/ - Year, week number counted from Sunday or Monday, day of the week.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":159332,"byte_end":159403,"line_start":287,"line_end":287,"column_start":5,"column_end":76}},{"value":"/ - ISO week date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":159408,"byte_end":159428,"line_start":288,"line_end":288,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":159433,"byte_end":159436,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ Gregorian year and ISO week date year can have their century number (`*_div_100`) omitted,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":159441,"byte_end":159535,"line_start":290,"line_end":290,"column_start":5,"column_end":99}},{"value":"/ the two-digit year is used to guess the century number then.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":159540,"byte_end":159604,"line_start":291,"line_end":291,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":168948,"byte_end":168961,"line_start":500,"line_end":500,"column_start":12,"column_end":25},"name":"to_naive_time","qualname":"<Parsed>::to_naive_time","value":"fn to_naive_time(&Self) -> ParseResult<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed naive time out of given fields.","sig":null,"attributes":[{"value":"/ Returns a parsed naive time out of given fields.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":168545,"byte_end":168597,"line_start":491,"line_end":491,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":168602,"byte_end":168605,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ This method is able to determine the time from given subset of fields:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":168610,"byte_end":168684,"line_start":493,"line_end":493,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":168689,"byte_end":168692,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ - Hour, minute. (second and nanosecond assumed to be 0)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":168697,"byte_end":168756,"line_start":495,"line_end":495,"column_start":5,"column_end":64}},{"value":"/ - Hour, minute, second. (nanosecond assumed to be 0)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":168761,"byte_end":168817,"line_start":496,"line_end":496,"column_start":5,"column_end":61}},{"value":"/ - Hour, minute, second, nanosecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":168822,"byte_end":168861,"line_start":497,"line_end":497,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":168866,"byte_end":168869,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ It is able to handle leap seconds when given second is 60.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":168874,"byte_end":168936,"line_start":499,"line_end":499,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":170744,"byte_end":170773,"line_start":542,"line_end":542,"column_start":12,"column_end":41},"name":"to_naive_datetime_with_offset","qualname":"<Parsed>::to_naive_datetime_with_offset","value":"fn to_naive_datetime_with_offset(&Self, i32) -> ParseResult<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed naive date and time out of given fields,\n except for the [`offset`](#structfield.offset) field (assumed to have a given value).\n This is required for parsing a local time or other known-timezone inputs.","sig":null,"attributes":[{"value":"/ Returns a parsed naive date and time out of given fields,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":170259,"byte_end":170320,"line_start":535,"line_end":535,"column_start":5,"column_end":66}},{"value":"/ except for the [`offset`](#structfield.offset) field (assumed to have a given value).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":170325,"byte_end":170414,"line_start":536,"line_end":536,"column_start":5,"column_end":94}},{"value":"/ This is required for parsing a local time or other known-timezone inputs.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":170419,"byte_end":170496,"line_start":537,"line_end":537,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":170501,"byte_end":170504,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ This method is able to determine the combined date and time","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":170509,"byte_end":170572,"line_start":539,"line_end":539,"column_start":5,"column_end":68}},{"value":"/ from date and time fields or a single [`timestamp`](#structfield.timestamp) field.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":170577,"byte_end":170663,"line_start":540,"line_end":540,"column_start":5,"column_end":91}},{"value":"/ Either way those fields have to be consistent to each other.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":170668,"byte_end":170732,"line_start":541,"line_end":541,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":174191,"byte_end":174206,"line_start":615,"line_end":615,"column_start":12,"column_end":27},"name":"to_fixed_offset","qualname":"<Parsed>::to_fixed_offset","value":"fn to_fixed_offset(&Self) -> ParseResult<FixedOffset>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed fixed time zone offset out of given fields.\n","sig":null,"attributes":[{"value":"/ Returns a parsed fixed time zone offset out of given fields.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":174115,"byte_end":174179,"line_start":614,"line_end":614,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":174678,"byte_end":174689,"line_start":625,"line_end":625,"column_start":12,"column_end":23},"name":"to_datetime","qualname":"<Parsed>::to_datetime","value":"fn to_datetime(&Self) -> ParseResult<DateTime<FixedOffset>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed timezone-aware date and time out of given fields.","sig":null,"attributes":[{"value":"/ Returns a parsed timezone-aware date and time out of given fields.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":174327,"byte_end":174397,"line_start":619,"line_end":619,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":174402,"byte_end":174405,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ This method is able to determine the combined date and time","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":174410,"byte_end":174473,"line_start":621,"line_end":621,"column_start":5,"column_end":68}},{"value":"/ from date and time fields or a single [`timestamp`](#structfield.timestamp) field,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":174478,"byte_end":174564,"line_start":622,"line_end":622,"column_start":5,"column_end":91}},{"value":"/ plus a time zone offset.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":174569,"byte_end":174597,"line_start":623,"line_end":623,"column_start":5,"column_end":33}},{"value":"/ Either way those fields have to be consistent to each other.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":174602,"byte_end":174666,"line_start":624,"line_end":624,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":175955,"byte_end":175980,"line_start":651,"line_end":651,"column_start":12,"column_end":37},"name":"to_datetime_with_timezone","qualname":"<Parsed>::to_datetime_with_timezone","value":"fn to_datetime_with_timezone<Tz>(&Self, &Tz) -> ParseResult<DateTime<Tz>>\nwhere Tz: TimeZone","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed timezone-aware date and time out of given fields,\n with an additional `TimeZone` used to interpret and validate the local date.","sig":null,"attributes":[{"value":"/ Returns a parsed timezone-aware date and time out of given fields,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":175398,"byte_end":175468,"line_start":642,"line_end":642,"column_start":5,"column_end":75}},{"value":"/ with an additional `TimeZone` used to interpret and validate the local date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":175473,"byte_end":175553,"line_start":643,"line_end":643,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":175558,"byte_end":175561,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ This method is able to determine the combined date and time","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":175566,"byte_end":175629,"line_start":645,"line_end":645,"column_start":5,"column_end":68}},{"value":"/ from date and time fields or a single [`timestamp`](#structfield.timestamp) field,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":175634,"byte_end":175720,"line_start":646,"line_end":646,"column_start":5,"column_end":91}},{"value":"/ plus a time zone offset.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":175725,"byte_end":175753,"line_start":647,"line_end":647,"column_start":5,"column_end":33}},{"value":"/ Either way those fields have to be consistent to each other.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":175758,"byte_end":175822,"line_start":648,"line_end":648,"column_start":5,"column_end":69}},{"value":"/ If parsed fields include an UTC offset, it also has to be consistent to","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":175827,"byte_end":175902,"line_start":649,"line_end":649,"column_start":5,"column_end":80}},{"value":"/ [`offset`](#structfield.offset).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":175907,"byte_end":175943,"line_start":650,"line_end":650,"column_start":5,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":815},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parse.rs","byte_start":213538,"byte_end":213543,"line_start":243,"line_end":243,"column_start":8,"column_end":13},"name":"parse","qualname":"::format::parse::parse","value":"fn parse<'a, I, B>(&mut Parsed, &str, I) -> ParseResult<()> where\nI: Iterator<Item = B>, B: Borrow<Item>","parent":null,"children":[],"decl_id":null,"docs":" Tries to parse given string into `parsed` with given formatting items.\n Returns `Ok` when the entire string has been parsed (otherwise `parsed` should not be used).\n There should be no trailing string after parsing;\n use a stray [`Item::Space`](./enum.Item.html#variant.Space) to trim whitespaces.","sig":null,"attributes":[{"value":"/ Tries to parse given string into `parsed` with given formatting items.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parse.rs","byte_start":212635,"byte_end":212709,"line_start":227,"line_end":227,"column_start":1,"column_end":75}},{"value":"/ Returns `Ok` when the entire string has been parsed (otherwise `parsed` should not be used).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parse.rs","byte_start":212710,"byte_end":212806,"line_start":228,"line_end":228,"column_start":1,"column_end":97}},{"value":"/ There should be no trailing string after parsing;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parse.rs","byte_start":212807,"byte_end":212860,"line_start":229,"line_end":229,"column_start":1,"column_end":54}},{"value":"/ use a stray [`Item::Space`](./enum.Item.html#variant.Space) to trim whitespaces.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parse.rs","byte_start":212861,"byte_end":212945,"line_start":230,"line_end":230,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parse.rs","byte_start":212946,"byte_end":212949,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ This particular date and time parser is:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parse.rs","byte_start":212950,"byte_end":212994,"line_start":232,"line_end":232,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parse.rs","byte_start":212995,"byte_end":212998,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ - Greedy. It will consume the longest possible prefix.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parse.rs","byte_start":212999,"byte_end":213057,"line_start":234,"line_end":234,"column_start":1,"column_end":59}},{"value":"/   For example, `April` is always consumed entirely when the long month name is requested;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parse.rs","byte_start":213058,"byte_end":213151,"line_start":235,"line_end":235,"column_start":1,"column_end":94}},{"value":"/   it equally accepts `Apr`, but prefers the longer prefix in this case.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parse.rs","byte_start":213152,"byte_end":213227,"line_start":236,"line_end":236,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parse.rs","byte_start":213228,"byte_end":213231,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ - Padding-agnostic (for numeric items).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parse.rs","byte_start":213232,"byte_end":213275,"line_start":238,"line_end":238,"column_start":1,"column_end":44}},{"value":"/   The [`Pad`](./enum.Pad.html) field is completely ignored,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parse.rs","byte_start":213276,"byte_end":213339,"line_start":239,"line_end":239,"column_start":1,"column_end":64}},{"value":"/   so one can prepend any number of whitespace then any number of zeroes before numbers.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parse.rs","byte_start":213340,"byte_end":213431,"line_start":240,"line_end":240,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parse.rs","byte_start":213432,"byte_end":213435,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"/ - (Still) obeying the intrinsic parsing width. This allows, for example, parsing `HHMMSS`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parse.rs","byte_start":213436,"byte_end":213530,"line_start":242,"line_end":242,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parse.rs","byte_start":223107,"byte_end":223115,"line_start":481,"line_end":481,"column_start":8,"column_end":16},"name":"from_str","qualname":"<DateTime<FixedOffset> as core::str::FromStr>::from_str","value":"fn from_str(&str) -> ParseResult<DateTime<FixedOffset>>","parent":{"krate":1,"index":12556},"children":[],"decl_id":{"krate":1,"index":12558},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":914},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/strftime.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"strftime","qualname":"::format::strftime","value":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/strftime.rs","parent":null,"children":[{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":919},{"krate":0,"index":922},{"krate":0,"index":925},{"krate":0,"index":928},{"krate":0,"index":931},{"krate":0,"index":934},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":2373},{"krate":0,"index":2380},{"krate":0,"index":2383},{"krate":0,"index":939},{"krate":0,"index":945},{"krate":0,"index":946}],"decl_id":null,"docs":"`strftime`/`strptime`-inspired date and time formatting syntax.","sig":null,"attributes":[{"value":"*\n`strftime`/`strptime`-inspired date and time formatting syntax.\n\n## Specifiers\n\nThe following specifiers are available both to formatting and parsing.\n\n| Spec. | Example  | Description                                                                |\n|-------|----------|----------------------------------------------------------------------------|\n|       |          | **DATE SPECIFIERS:**                                                       |\n| `%Y`  | `2001`   | The full proleptic Gregorian year, zero-padded to 4 digits. [^1]           |\n| `%C`  | `20`     | The proleptic Gregorian year divided by 100, zero-padded to 2 digits. [^2] |\n| `%y`  | `01`     | The proleptic Gregorian year modulo 100, zero-padded to 2 digits. [^2]     |\n|       |          |                                                                            |\n| `%m`  | `07`     | Month number (01--12), zero-padded to 2 digits.                            |\n| `%b`  | `Jul`    | Abbreviated month name. Always 3 letters.                                  |\n| `%B`  | `July`   | Full month name. Also accepts corresponding abbreviation in parsing.       |\n| `%h`  | `Jul`    | Same as `%b`.                                                              |\n|       |          |                                                                            |\n| `%d`  | `08`     | Day number (01--31), zero-padded to 2 digits.                              |\n| `%e`  | ` 8`     | Same as `%d` but space-padded. Same as `%_d`.                              |\n|       |          |                                                                            |\n| `%a`  | `Sun`    | Abbreviated weekday name. Always 3 letters.                                |\n| `%A`  | `Sunday` | Full weekday name. Also accepts corresponding abbreviation in parsing.     |\n| `%w`  | `0`      | Sunday = 0, Monday = 1, ..., Saturday = 6.                                 |\n| `%u`  | `7`      | Monday = 1, Tuesday = 2, ..., Sunday = 7. (ISO 8601)                       |\n|       |          |                                                                            |\n| `%U`  | `28`     | Week number starting with Sunday (00--53), zero-padded to 2 digits. [^3]   |\n| `%W`  | `27`     | Same as `%U`, but week 1 starts with the first Monday in that year instead.|\n|       |          |                                                                            |\n| `%G`  | `2001`   | Same as `%Y` but uses the year number in ISO 8601 week date. [^4]          |\n| `%g`  | `01`     | Same as `%y` but uses the year number in ISO 8601 week date. [^4]          |\n| `%V`  | `27`     | Same as `%U` but uses the week number in ISO 8601 week date (01--53). [^4] |\n|       |          |                                                                            |\n| `%j`  | `189`    | Day of the year (001--366), zero-padded to 3 digits.                       |\n|       |          |                                                                            |\n| `%D`  | `07/08/01`    | Month-day-year format. Same as `%m/%d/%y`.                            |\n| `%x`  | `07/08/01`    | Locale's date representation (e.g., 12/31/99).                        |\n| `%F`  | `2001-07-08`  | Year-month-day format (ISO 8601). Same as `%Y-%m-%d`.                 |\n| `%v`  | ` 8-Jul-2001` | Day-month-year format. Same as `%e-%b-%Y`.                            |\n|       |          |                                                                            |\n|       |          | **TIME SPECIFIERS:**                                                       |\n| `%H`  | `00`     | Hour number (00--23), zero-padded to 2 digits.                             |\n| `%k`  | ` 0`     | Same as `%H` but space-padded. Same as `%_H`.                              |\n| `%I`  | `12`     | Hour number in 12-hour clocks (01--12), zero-padded to 2 digits.           |\n| `%l`  | `12`     | Same as `%I` but space-padded. Same as `%_I`.                              |\n|       |          |                                                                            |\n| `%P`  | `am`     | `am` or `pm` in 12-hour clocks.                                            |\n| `%p`  | `AM`     | `AM` or `PM` in 12-hour clocks.                                            |\n|       |          |                                                                            |\n| `%M`  | `34`     | Minute number (00--59), zero-padded to 2 digits.                           |\n| `%S`  | `60`     | Second number (00--60), zero-padded to 2 digits. [^5]                      |\n| `%f`  | `026490000`   | The fractional seconds (in nanoseconds) since last whole second. [^8] |\n| `%.f` | `.026490`| Similar to `.%f` but left-aligned. These all consume the leading dot. [^8] |\n| `%.3f`| `.026`        | Similar to `.%f` but left-aligned but fixed to a length of 3. [^8]    |\n| `%.6f`| `.026490`     | Similar to `.%f` but left-aligned but fixed to a length of 6. [^8]    |\n| `%.9f`| `.026490000`  | Similar to `.%f` but left-aligned but fixed to a length of 9. [^8]    |\n| `%3f` | `026`         | Similar to `%.3f` but without the leading dot. [^8]                   |\n| `%6f` | `026490`      | Similar to `%.6f` but without the leading dot. [^8]                   |\n| `%9f` | `026490000`   | Similar to `%.9f` but without the leading dot. [^8]                   |\n|       |               |                                                                       |\n| `%R`  | `00:34`       | Hour-minute format. Same as `%H:%M`.                                  |\n| `%T`  | `00:34:60`    | Hour-minute-second format. Same as `%H:%M:%S`.                        |\n| `%X`  | `00:34:60`    | Locale's time representation (e.g., 23:13:48).                        |\n| `%r`  | `12:34:60 AM` | Hour-minute-second format in 12-hour clocks. Same as `%I:%M:%S %p`.   |\n|       |          |                                                                            |\n|       |          | **TIME ZONE SPECIFIERS:**                                                  |\n| `%Z`  | `ACST`   | Local time zone name. Skips all non-whitespace characters during parsing. [^9] |\n| `%z`  | `+0930`  | Offset from the local time to UTC (with UTC being `+0000`).                |\n| `%:z` | `+09:30` | Same as `%z` but with a colon.                                             |\n| `%#z` | `+09`    | *Parsing only:* Same as `%z` but allows minutes to be missing or present.  |\n|       |          |                                                                            |\n|       |          | **DATE & TIME SPECIFIERS:**                                                |\n|`%c`|`Sun Jul  8 00:34:60 2001`|Locale's date and time (e.g., Thu Mar  3 23:05:25 2005).       |\n| `%+`  | `2001-07-08T00:34:60.026490+09:30` | ISO 8601 / RFC 3339 date & time format. [^6]     |\n|       |               |                                                                       |\n| `%s`  | `994518299`   | UNIX timestamp, the number of seconds since 1970-01-01 00:00 UTC. [^7]|\n|       |          |                                                                            |\n|       |          | **SPECIAL SPECIFIERS:**                                                    |\n| `%t`  |          | Literal tab (`\\t`).                                                        |\n| `%n`  |          | Literal newline (`\\n`).                                                    |\n| `%%`  |          | Literal percent sign.                                                      |\n\nIt is possible to override the default padding behavior of numeric specifiers `%?`.\nThis is not allowed for other specifiers and will result in the `BAD_FORMAT` error.\n\nModifier | Description\n-------- | -----------\n`%-?`    | Suppresses any padding including spaces and zeroes. (e.g. `%j` = `012`, `%-j` = `12`)\n`%_?`    | Uses spaces as a padding. (e.g. `%j` = `012`, `%_j` = ` 12`)\n`%0?`    | Uses zeroes as a padding. (e.g. `%e` = ` 9`, `%0e` = `09`)\n\nNotes:\n\n[^1]: `%Y`:\n   Negative years are allowed in formatting but not in parsing.\n\n[^2]: `%C`, `%y`:\n   This is floor division, so 100 BCE (year number -99) will print `-1` and `99` respectively.\n\n[^3]: `%U`:\n   Week 1 starts with the first Sunday in that year.\n   It is possible to have week 0 for days before the first Sunday.\n\n[^4]: `%G`, `%g`, `%V`:\n   Week 1 is the first week with at least 4 days in that year.\n   Week 0 does not exist, so this should be used with `%G` or `%g`.\n\n[^5]: `%S`:\n   It accounts for leap seconds, so `60` is possible.\n\n[^6]: `%+`: Same as `%Y-%m-%dT%H:%M:%S%.f%:z`, i.e. 0, 3, 6 or 9 fractional\n   digits for seconds and colons in the time zone offset.\n   <br>\n   <br>\n   The typical `strftime` implementations have different (and locale-dependent)\n   formats for this specifier. While Chrono's format for `%+` is far more\n   stable, it is best to avoid this specifier if you want to control the exact\n   output.\n\n[^7]: `%s`:\n   This is not padded and can be negative.\n   For the purpose of Chrono, it only accounts for non-leap seconds\n   so it slightly differs from ISO C `strftime` behavior.\n\n[^8]: `%f`, `%.f`, `%.3f`, `%.6f`, `%.9f`, `%3f`, `%6f`, `%9f`:\n   <br>\n   The default `%f` is right-aligned and always zero-padded to 9 digits\n   for the compatibility with glibc and others,\n   so it always counts the number of nanoseconds since the last whole second.\n   E.g. 7ms after the last second will print `007000000`,\n   and parsing `7000000` will yield the same.\n   <br>\n   <br>\n   The variant `%.f` is left-aligned and print 0, 3, 6 or 9 fractional digits\n   according to the precision.\n   E.g. 70ms after the last second under `%.f` will print `.070` (note: not `.07`),\n   and parsing `.07`, `.070000` etc. will yield the same.\n   Note that they can print or read nothing if the fractional part is zero or\n   the next character is not `.`.\n   <br>\n   <br>\n   The variant `%.3f`, `%.6f` and `%.9f` are left-aligned and print 3, 6 or 9 fractional digits\n   according to the number preceding `f`.\n   E.g. 70ms after the last second under `%.3f` will print `.070` (note: not `.07`),\n   and parsing `.07`, `.070000` etc. will yield the same.\n   Note that they can read nothing if the fractional part is zero or\n   the next character is not `.` however will print with the specified length.\n   <br>\n   <br>\n   The variant `%3f`, `%6f` and `%9f` are left-aligned and print 3, 6 or 9 fractional digits\n   according to the number preceding `f`, but without the leading dot.\n   E.g. 70ms after the last second under `%3f` will print `070` (note: not `07`),\n   and parsing `07`, `070000` etc. will yield the same.\n   Note that they can read nothing if the fractional part is zero.\n\n[^9]: `%Z`:\n   Offset will not be populated from the parsed data, nor will it be validated.\n   Timezone is completely ignored. Similar to the glibc `strptime` treatment of\n   this format code.\n   <br>\n   <br>\n   It is not possible to reliably convert from an abbreviation to an offset,\n   for example CDT can mean either Central Daylight Time (North America) or\n   China Daylight Time.\n*/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/strftime.rs","byte_start":261411,"byte_end":272481,"line_start":4,"line_end":169,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":2373},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/strftime.rs","byte_start":273345,"byte_end":273358,"line_start":201,"line_end":201,"column_start":12,"column_end":25},"name":"StrftimeItems","qualname":"::format::strftime::StrftimeItems","value":"StrftimeItems {  }","parent":null,"children":[{"krate":0,"index":2375},{"krate":0,"index":2376},{"krate":0,"index":2377},{"krate":0,"index":2378},{"krate":0,"index":2379}],"decl_id":null,"docs":" Parsing iterator for `strftime`-like format strings.\n","sig":null,"attributes":[{"value":"/ Parsing iterator for `strftime`-like format strings.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/strftime.rs","byte_start":273253,"byte_end":273309,"line_start":199,"line_end":199,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/strftime.rs","byte_start":273948,"byte_end":273951,"line_start":218,"line_end":218,"column_start":12,"column_end":15},"name":"new","qualname":"<StrftimeItems>::new","value":"fn new(&'a str) -> StrftimeItems","parent":null,"children":[],"decl_id":null,"docs":" Creates a new parsing iterator from the `strftime`-like format string.\n","sig":null,"attributes":[{"value":"/ Creates a new parsing iterator from the `strftime`-like format string.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/strftime.rs","byte_start":273862,"byte_end":273936,"line_start":217,"line_end":217,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":949},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/strftime.rs","byte_start":275292,"byte_end":275296,"line_start":262,"line_end":262,"column_start":8,"column_end":12},"name":"next","qualname":"<StrftimeItems as core::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Item>","parent":{"krate":1,"index":8186},"children":[],"decl_id":{"krate":1,"index":8188},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":957},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":145652,"byte_end":145660,"line_start":876,"line_end":876,"column_start":8,"column_end":16},"name":"from_str","qualname":"<Weekday as core::str::FromStr>::from_str","value":"fn from_str(&str) -> Result<Self, Self::Err>","parent":{"krate":1,"index":12556},"children":[],"decl_id":{"krate":1,"index":12558},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":147607,"byte_end":147615,"line_start":950,"line_end":950,"column_start":8,"column_end":16},"name":"from_str","qualname":"<Month as core::str::FromStr>::from_str","value":"fn from_str(&str) -> Result<Self, Self::Err>","parent":{"krate":1,"index":12556},"children":[],"decl_id":{"krate":1,"index":12558},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":968},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"naive","qualname":"::naive","value":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/mod.rs","parent":null,"children":[{"krate":0,"index":969},{"krate":0,"index":1186},{"krate":0,"index":1360},{"krate":0,"index":1448},{"krate":0,"index":1469},{"krate":0,"index":1584},{"krate":0,"index":1585},{"krate":0,"index":1588},{"krate":0,"index":1591},{"krate":0,"index":1594},{"krate":0,"index":1597},{"krate":0,"index":1598},{"krate":0,"index":1601},{"krate":0,"index":1604},{"krate":0,"index":1607},{"krate":0,"index":1610}],"decl_id":null,"docs":" Date and time types unconcerned with timezones.","sig":null,"attributes":[{"value":"/ Date and time types unconcerned with timezones.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/mod.rs","byte_start":292050,"byte_end":292101,"line_start":1,"line_end":1,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/mod.rs","byte_start":292102,"byte_end":292105,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ They are primarily building blocks for other types","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/mod.rs","byte_start":292106,"byte_end":292160,"line_start":3,"line_end":3,"column_start":1,"column_end":55}},{"value":"/ (e.g. [`TimeZone`](../offset/trait.TimeZone.html)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/mod.rs","byte_start":292161,"byte_end":292216,"line_start":4,"line_end":4,"column_start":1,"column_end":56}},{"value":"/ but can be also used for the simpler date and time handling.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/mod.rs","byte_start":292217,"byte_end":292281,"line_start":5,"line_end":5,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":2392},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":295326,"byte_end":295335,"line_start":57,"line_end":57,"column_start":12,"column_end":21},"name":"NaiveWeek","qualname":"::naive::date::NaiveWeek","value":"NaiveWeek {  }","parent":null,"children":[{"krate":0,"index":2393},{"krate":0,"index":2394}],"decl_id":null,"docs":" A week represented by a [`NaiveDate`] and a [`Weekday`] which is the first\n day of the week.\n","sig":null,"attributes":[{"value":"/ A week represented by a [`NaiveDate`] and a [`Weekday`] which is the first","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":295198,"byte_end":295276,"line_start":54,"line_end":54,"column_start":1,"column_end":79}},{"value":"/ day of the week.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":295277,"byte_end":295297,"line_start":55,"line_end":55,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1073},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":295736,"byte_end":295745,"line_start":75,"line_end":75,"column_start":12,"column_end":21},"name":"first_day","qualname":"<NaiveWeek>::first_day","value":"fn first_day(&Self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Returns a date representing the first day of the week.","sig":null,"attributes":[{"value":"/ Returns a date representing the first day of the week.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":295403,"byte_end":295461,"line_start":63,"line_end":63,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":295466,"byte_end":295469,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":295474,"byte_end":295488,"line_start":65,"line_end":65,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":295493,"byte_end":295496,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":295501,"byte_end":295508,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Weekday};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":295513,"byte_end":295550,"line_start":68,"line_end":68,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":295555,"byte_end":295558,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ let date = NaiveDate::from_ymd(2022, 4, 18);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":295563,"byte_end":295611,"line_start":70,"line_end":70,"column_start":5,"column_end":53}},{"value":"/ let week = date.week(Weekday::Mon);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":295616,"byte_end":295655,"line_start":71,"line_end":71,"column_start":5,"column_end":44}},{"value":"/ assert!(week.first_day() <= date);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":295660,"byte_end":295698,"line_start":72,"line_end":72,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":295703,"byte_end":295710,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":295715,"byte_end":295724,"line_start":74,"line_end":74,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1074},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":296351,"byte_end":296359,"line_start":94,"line_end":94,"column_start":12,"column_end":20},"name":"last_day","qualname":"<NaiveWeek>::last_day","value":"fn last_day(&Self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Returns a date representing the last day of the week.","sig":null,"attributes":[{"value":"/ Returns a date representing the last day of the week.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":296020,"byte_end":296077,"line_start":82,"line_end":82,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":296082,"byte_end":296085,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":296090,"byte_end":296104,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":296109,"byte_end":296112,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":296117,"byte_end":296124,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Weekday};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":296129,"byte_end":296166,"line_start":87,"line_end":87,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":296171,"byte_end":296174,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let date = NaiveDate::from_ymd(2022, 4, 18);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":296179,"byte_end":296227,"line_start":89,"line_end":89,"column_start":5,"column_end":53}},{"value":"/ let week = date.week(Weekday::Mon);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":296232,"byte_end":296271,"line_start":90,"line_end":90,"column_start":5,"column_end":44}},{"value":"/ assert!(week.last_day() >= date);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":296276,"byte_end":296313,"line_start":91,"line_end":91,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":296318,"byte_end":296325,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":296330,"byte_end":296339,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1075},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":296952,"byte_end":296956,"line_start":113,"line_end":113,"column_start":12,"column_end":16},"name":"days","qualname":"<NaiveWeek>::days","value":"fn days(&Self) -> RangeInclusive<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`RangeInclusive<T>`] representing the whole week bounded by\n [first_day](./struct.NaiveWeek.html#method.first_day) and\n [last_day](./struct.NaiveWeek.html#method.last_day) functions.","sig":null,"attributes":[{"value":"/ Returns a [`RangeInclusive<T>`] representing the whole week bounded by","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":296438,"byte_end":296512,"line_start":98,"line_end":98,"column_start":5,"column_end":79}},{"value":"/ [first_day](./struct.NaiveWeek.html#method.first_day) and","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":296517,"byte_end":296578,"line_start":99,"line_end":99,"column_start":5,"column_end":66}},{"value":"/ [last_day](./struct.NaiveWeek.html#method.last_day) functions.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":296583,"byte_end":296649,"line_start":100,"line_end":100,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":296654,"byte_end":296657,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":296662,"byte_end":296676,"line_start":102,"line_end":102,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":296681,"byte_end":296684,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":296689,"byte_end":296696,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Weekday};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":296701,"byte_end":296738,"line_start":105,"line_end":105,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":296743,"byte_end":296746,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ let date = NaiveDate::from_ymd(2022, 4, 18);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":296751,"byte_end":296799,"line_start":107,"line_end":107,"column_start":5,"column_end":53}},{"value":"/ let week = date.week(Weekday::Mon);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":296804,"byte_end":296843,"line_start":108,"line_end":108,"column_start":5,"column_end":44}},{"value":"/ let days = week.days();","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":296848,"byte_end":296875,"line_start":109,"line_end":109,"column_start":5,"column_end":32}},{"value":"/ assert!(days.contains(&date));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":296880,"byte_end":296914,"line_start":110,"line_end":110,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":296919,"byte_end":296926,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":296931,"byte_end":296940,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2397},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":299696,"byte_end":299705,"line_start":168,"line_end":168,"column_start":12,"column_end":21},"name":"NaiveDate","qualname":"::naive::date::NaiveDate","value":"NaiveDate {  }","parent":null,"children":[{"krate":0,"index":2398}],"decl_id":null,"docs":" ISO 8601 calendar date without timezone.\n Allows for every [proleptic Gregorian date](#calendar-date)\n from Jan 1, 262145 BCE to Dec 31, 262143 CE.\n Also supports the conversion from ISO 8601 ordinal and week date.","sig":null,"attributes":[{"value":"/ ISO 8601 calendar date without timezone.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":297047,"byte_end":297091,"line_start":118,"line_end":118,"column_start":1,"column_end":45}},{"value":"/ Allows for every [proleptic Gregorian date](#calendar-date)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":297092,"byte_end":297155,"line_start":119,"line_end":119,"column_start":1,"column_end":64}},{"value":"/ from Jan 1, 262145 BCE to Dec 31, 262143 CE.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":297156,"byte_end":297204,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/ Also supports the conversion from ISO 8601 ordinal and week date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":297205,"byte_end":297274,"line_start":121,"line_end":121,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":297275,"byte_end":297278,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ # Calendar Date","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":297279,"byte_end":297298,"line_start":123,"line_end":123,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":297299,"byte_end":297302,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ The ISO 8601 **calendar date** follows the proleptic Gregorian calendar.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":297303,"byte_end":297379,"line_start":125,"line_end":125,"column_start":1,"column_end":77}},{"value":"/ It is like a normal civil calendar but note some slight differences:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":297380,"byte_end":297452,"line_start":126,"line_end":126,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":297453,"byte_end":297456,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ * Dates before the Gregorian calendar's inception in 1582 are defined via the extrapolation.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":297457,"byte_end":297553,"line_start":128,"line_end":128,"column_start":1,"column_end":97}},{"value":"/   Be careful, as historical dates are often noted in the Julian calendar and others","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":297554,"byte_end":297641,"line_start":129,"line_end":129,"column_start":1,"column_end":88}},{"value":"/   and the transition to Gregorian may differ across countries (as late as early 20C).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":297642,"byte_end":297731,"line_start":130,"line_end":130,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":297732,"byte_end":297735,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/   (Some example: Both Shakespeare from Britain and Cervantes from Spain seemingly died","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":297736,"byte_end":297826,"line_start":132,"line_end":132,"column_start":1,"column_end":91}},{"value":"/   on the same calendar date---April 23, 1616---but in the different calendar.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":297827,"byte_end":297908,"line_start":133,"line_end":133,"column_start":1,"column_end":82}},{"value":"/   Britain used the Julian calendar at that time, so Shakespeare's death is later.)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":297909,"byte_end":297995,"line_start":134,"line_end":134,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":297996,"byte_end":297999,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ * ISO 8601 calendars has the year 0, which is 1 BCE (a year before 1 CE).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":298000,"byte_end":298077,"line_start":136,"line_end":136,"column_start":1,"column_end":78}},{"value":"/   If you need a typical BCE/BC and CE/AD notation for year numbers,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":298078,"byte_end":298149,"line_start":137,"line_end":137,"column_start":1,"column_end":72}},{"value":"/   use the [`Datelike::year_ce`](../trait.Datelike.html#method.year_ce) method.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":298150,"byte_end":298232,"line_start":138,"line_end":138,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":298233,"byte_end":298236,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ # Week Date","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":298237,"byte_end":298252,"line_start":140,"line_end":140,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":298253,"byte_end":298256,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ The ISO 8601 **week date** is a triple of year number, week number","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":298257,"byte_end":298327,"line_start":142,"line_end":142,"column_start":1,"column_end":71}},{"value":"/ and [day of the week](../enum.Weekday.html) with the following rules:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":298328,"byte_end":298401,"line_start":143,"line_end":143,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":298402,"byte_end":298405,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ * A week consists of Monday through Sunday, and is always numbered within some year.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":298406,"byte_end":298494,"line_start":145,"line_end":145,"column_start":1,"column_end":89}},{"value":"/   The week number ranges from 1 to 52 or 53 depending on the year.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":298495,"byte_end":298565,"line_start":146,"line_end":146,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":298566,"byte_end":298569,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ * The week 1 of given year is defined as the first week containing January 4 of that year,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":298570,"byte_end":298664,"line_start":148,"line_end":148,"column_start":1,"column_end":95}},{"value":"/   or equivalently, the first week containing four or more days in that year.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":298665,"byte_end":298745,"line_start":149,"line_end":149,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":298746,"byte_end":298749,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ * The year number in the week date may *not* correspond to the actual Gregorian year.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":298750,"byte_end":298839,"line_start":151,"line_end":151,"column_start":1,"column_end":90}},{"value":"/   For example, January 3, 2016 (Sunday) was on the last (53rd) week of 2015.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":298840,"byte_end":298920,"line_start":152,"line_end":152,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":298921,"byte_end":298924,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ Chrono's date types default to the ISO 8601 [calendar date](#calendar-date),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":298925,"byte_end":299005,"line_start":154,"line_end":154,"column_start":1,"column_end":81}},{"value":"/ but [`Datelike::iso_week`](../trait.Datelike.html#tymethod.iso_week) and","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":299006,"byte_end":299082,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ [`Datelike::weekday`](../trait.Datelike.html#tymethod.weekday) methods","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":299083,"byte_end":299157,"line_start":156,"line_end":156,"column_start":1,"column_end":75}},{"value":"/ can be used to get the corresponding week date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":299158,"byte_end":299209,"line_start":157,"line_end":157,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":299210,"byte_end":299213,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ # Ordinal Date","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":299214,"byte_end":299232,"line_start":159,"line_end":159,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":299233,"byte_end":299236,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The ISO 8601 **ordinal date** is a pair of year number and day of the year (\"ordinal\").","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":299237,"byte_end":299328,"line_start":161,"line_end":161,"column_start":1,"column_end":92}},{"value":"/ The ordinal number ranges from 1 to 365 or 366 depending on the year.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":299329,"byte_end":299402,"line_start":162,"line_end":162,"column_start":1,"column_end":74}},{"value":"/ The year number is the same as that of the [calendar date](#calendar-date).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":299403,"byte_end":299482,"line_start":163,"line_end":163,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":299483,"byte_end":299486,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ This is currently the internal format of Chrono's date types.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":299487,"byte_end":299552,"line_start":165,"line_end":165,"column_start":1,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":1076},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":299893,"byte_end":299901,"line_start":174,"line_end":174,"column_start":11,"column_end":19},"name":"MIN_DATE","qualname":"::naive::date::MIN_DATE","value":"NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" The minimum possible `NaiveDate` (January 1, 262145 BCE).\n","sig":null,"attributes":[{"value":"/ The minimum possible `NaiveDate` (January 1, 262145 BCE).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":299752,"byte_end":299813,"line_start":172,"line_end":172,"column_start":1,"column_end":62}},{"value":"deprecated(since = \"0.4.20\", note = \"Use NaiveDate::MIN instead\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":299814,"byte_end":299882,"line_start":173,"line_end":173,"column_start":1,"column_end":69}}]},{"kind":"Const","id":{"krate":0,"index":1077},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":300073,"byte_end":300081,"line_start":177,"line_end":177,"column_start":11,"column_end":19},"name":"MAX_DATE","qualname":"::naive::date::MAX_DATE","value":"NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" The maximum possible `NaiveDate` (December 31, 262143 CE).\n","sig":null,"attributes":[{"value":"/ The maximum possible `NaiveDate` (December 31, 262143 CE).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":299931,"byte_end":299993,"line_start":175,"line_end":175,"column_start":1,"column_end":63}},{"value":"deprecated(since = \"0.4.20\", note = \"Use NaiveDate::MAX instead\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":299994,"byte_end":300062,"line_start":176,"line_end":176,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":302443,"byte_end":302451,"line_start":243,"line_end":243,"column_start":12,"column_end":20},"name":"from_ymd","qualname":"<NaiveDate>::from_ymd","value":"fn from_ymd(i32, u32, u32) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the [calendar date](#calendar-date)\n (year, month and day).","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` from the [calendar date](#calendar-date)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":301715,"byte_end":301783,"line_start":223,"line_end":223,"column_start":5,"column_end":73}},{"value":"/ (year, month and day).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":301788,"byte_end":301814,"line_start":224,"line_end":224,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":301819,"byte_end":301822,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-range date, invalid month and/or day.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":301827,"byte_end":301889,"line_start":226,"line_end":226,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":301894,"byte_end":301897,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":301902,"byte_end":301915,"line_start":228,"line_end":228,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":301920,"byte_end":301923,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":301928,"byte_end":301935,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":301940,"byte_end":301987,"line_start":231,"line_end":231,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":301992,"byte_end":301995,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 3, 14);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":302000,"byte_end":302045,"line_start":233,"line_end":233,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(d.year(), 2015);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":302050,"byte_end":302081,"line_start":234,"line_end":234,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(d.month(), 3);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":302086,"byte_end":302115,"line_start":235,"line_end":235,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(d.day(), 14);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":302120,"byte_end":302148,"line_start":236,"line_end":236,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(d.ordinal(), 73); // day of year","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":302153,"byte_end":302200,"line_start":237,"line_end":237,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(d.iso_week().year(), 2015);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":302205,"byte_end":302247,"line_start":238,"line_end":238,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(d.iso_week().week(), 11);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":302252,"byte_end":302292,"line_start":239,"line_end":239,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(d.weekday(), Weekday::Sat);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":302297,"byte_end":302339,"line_start":240,"line_end":240,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(d.num_days_from_ce(), 735671); // days since January 1, 1 CE","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":302344,"byte_end":302419,"line_start":241,"line_end":241,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":302424,"byte_end":302431,"line_start":242,"line_end":242,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1082},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":303300,"byte_end":303312,"line_start":266,"line_end":266,"column_start":12,"column_end":24},"name":"from_ymd_opt","qualname":"<NaiveDate>::from_ymd_opt","value":"fn from_ymd_opt(i32, u32, u32) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the [calendar date](#calendar-date)\n (year, month and day).","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` from the [calendar date](#calendar-date)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":302600,"byte_end":302668,"line_start":247,"line_end":247,"column_start":5,"column_end":73}},{"value":"/ (year, month and day).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":302673,"byte_end":302699,"line_start":248,"line_end":248,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":302704,"byte_end":302707,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-range date, invalid month and/or day.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":302712,"byte_end":302782,"line_start":250,"line_end":250,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":302787,"byte_end":302790,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":302795,"byte_end":302808,"line_start":252,"line_end":252,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":302813,"byte_end":302816,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":302821,"byte_end":302828,"line_start":254,"line_end":254,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":302833,"byte_end":302859,"line_start":255,"line_end":255,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":302864,"byte_end":302867,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ let from_ymd_opt = NaiveDate::from_ymd_opt;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":302872,"byte_end":302919,"line_start":257,"line_end":257,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":302924,"byte_end":302927,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ assert!(from_ymd_opt(2015, 3, 14).is_some());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":302932,"byte_end":302981,"line_start":259,"line_end":259,"column_start":5,"column_end":54}},{"value":"/ assert!(from_ymd_opt(2015, 0, 14).is_none());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":302986,"byte_end":303035,"line_start":260,"line_end":260,"column_start":5,"column_end":54}},{"value":"/ assert!(from_ymd_opt(2015, 2, 29).is_none());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":303040,"byte_end":303089,"line_start":261,"line_end":261,"column_start":5,"column_end":54}},{"value":"/ assert!(from_ymd_opt(-4, 2, 29).is_some()); // 5 BCE is a leap year","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":303094,"byte_end":303165,"line_start":262,"line_end":262,"column_start":5,"column_end":76}},{"value":"/ assert!(from_ymd_opt(400000, 1, 1).is_none());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":303170,"byte_end":303220,"line_start":263,"line_end":263,"column_start":5,"column_end":55}},{"value":"/ assert!(from_ymd_opt(-400000, 1, 1).is_none());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":303225,"byte_end":303276,"line_start":264,"line_end":264,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":303281,"byte_end":303288,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1083},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":304204,"byte_end":304211,"line_start":291,"line_end":291,"column_start":12,"column_end":19},"name":"from_yo","qualname":"<NaiveDate>::from_yo","value":"fn from_yo(i32, u32) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the [ordinal date](#ordinal-date)\n (year and day of the year).","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` from the [ordinal date](#ordinal-date)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":303491,"byte_end":303557,"line_start":271,"line_end":271,"column_start":5,"column_end":71}},{"value":"/ (year and day of the year).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":303562,"byte_end":303593,"line_start":272,"line_end":272,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":303598,"byte_end":303601,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-range date and/or invalid day of year.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":303606,"byte_end":303669,"line_start":274,"line_end":274,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":303674,"byte_end":303677,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":303682,"byte_end":303695,"line_start":276,"line_end":276,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":303700,"byte_end":303703,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":303708,"byte_end":303715,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":303720,"byte_end":303767,"line_start":279,"line_end":279,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":303772,"byte_end":303775,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_yo(2015, 73);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":303780,"byte_end":303821,"line_start":281,"line_end":281,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(d.ordinal(), 73);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":303826,"byte_end":303858,"line_start":282,"line_end":282,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(d.year(), 2015);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":303863,"byte_end":303894,"line_start":283,"line_end":283,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(d.month(), 3);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":303899,"byte_end":303928,"line_start":284,"line_end":284,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(d.day(), 14);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":303933,"byte_end":303961,"line_start":285,"line_end":285,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(d.iso_week().year(), 2015);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":303966,"byte_end":304008,"line_start":286,"line_end":286,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(d.iso_week().week(), 11);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":304013,"byte_end":304053,"line_start":287,"line_end":287,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(d.weekday(), Weekday::Sat);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":304058,"byte_end":304100,"line_start":288,"line_end":288,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(d.num_days_from_ce(), 735671); // days since January 1, 1 CE","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":304105,"byte_end":304180,"line_start":289,"line_end":289,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":304185,"byte_end":304192,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":305079,"byte_end":305090,"line_start":315,"line_end":315,"column_start":12,"column_end":23},"name":"from_yo_opt","qualname":"<NaiveDate>::from_yo_opt","value":"fn from_yo_opt(i32, u32) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the [ordinal date](#ordinal-date)\n (year and day of the year).","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` from the [ordinal date](#ordinal-date)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":304348,"byte_end":304414,"line_start":295,"line_end":295,"column_start":5,"column_end":71}},{"value":"/ (year and day of the year).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":304419,"byte_end":304450,"line_start":296,"line_end":296,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":304455,"byte_end":304458,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-range date and/or invalid day of year.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":304463,"byte_end":304534,"line_start":298,"line_end":298,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":304539,"byte_end":304542,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":304547,"byte_end":304560,"line_start":300,"line_end":300,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":304565,"byte_end":304568,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":304573,"byte_end":304580,"line_start":302,"line_end":302,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":304585,"byte_end":304611,"line_start":303,"line_end":303,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":304616,"byte_end":304619,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ let from_yo_opt = NaiveDate::from_yo_opt;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":304624,"byte_end":304669,"line_start":305,"line_end":305,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":304674,"byte_end":304677,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ assert!(from_yo_opt(2015, 100).is_some());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":304682,"byte_end":304728,"line_start":307,"line_end":307,"column_start":5,"column_end":51}},{"value":"/ assert!(from_yo_opt(2015, 0).is_none());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":304733,"byte_end":304777,"line_start":308,"line_end":308,"column_start":5,"column_end":49}},{"value":"/ assert!(from_yo_opt(2015, 365).is_some());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":304782,"byte_end":304828,"line_start":309,"line_end":309,"column_start":5,"column_end":51}},{"value":"/ assert!(from_yo_opt(2015, 366).is_none());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":304833,"byte_end":304879,"line_start":310,"line_end":310,"column_start":5,"column_end":51}},{"value":"/ assert!(from_yo_opt(-4, 366).is_some()); // 5 BCE is a leap year","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":304884,"byte_end":304952,"line_start":311,"line_end":311,"column_start":5,"column_end":73}},{"value":"/ assert!(from_yo_opt(400000, 1).is_none());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":304957,"byte_end":305003,"line_start":312,"line_end":312,"column_start":5,"column_end":51}},{"value":"/ assert!(from_yo_opt(-400000, 1).is_none());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":305008,"byte_end":305055,"line_start":313,"line_end":313,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":305060,"byte_end":305067,"line_start":314,"line_end":314,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":306094,"byte_end":306105,"line_start":341,"line_end":341,"column_start":12,"column_end":23},"name":"from_isoywd","qualname":"<NaiveDate>::from_isoywd","value":"fn from_isoywd(i32, u32, Weekday) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the [ISO week date](#week-date)\n (year, week number and day of the week).\n The resulting `NaiveDate` may have a different year from the input year.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` from the [ISO week date](#week-date)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":305256,"byte_end":305320,"line_start":320,"line_end":320,"column_start":5,"column_end":69}},{"value":"/ (year, week number and day of the week).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":305325,"byte_end":305369,"line_start":321,"line_end":321,"column_start":5,"column_end":49}},{"value":"/ The resulting `NaiveDate` may have a different year from the input year.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":305374,"byte_end":305450,"line_start":322,"line_end":322,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":305455,"byte_end":305458,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-range date and/or invalid week number.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":305463,"byte_end":305526,"line_start":324,"line_end":324,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":305531,"byte_end":305534,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":305539,"byte_end":305552,"line_start":326,"line_end":326,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":305557,"byte_end":305560,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":305565,"byte_end":305572,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":305577,"byte_end":305624,"line_start":329,"line_end":329,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":305629,"byte_end":305632,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_isoywd(2015, 11, Weekday::Sat);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":305637,"byte_end":305696,"line_start":331,"line_end":331,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(d.iso_week().year(), 2015);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":305701,"byte_end":305743,"line_start":332,"line_end":332,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(d.iso_week().week(), 11);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":305748,"byte_end":305788,"line_start":333,"line_end":333,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(d.weekday(), Weekday::Sat);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":305793,"byte_end":305835,"line_start":334,"line_end":334,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(d.year(), 2015);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":305840,"byte_end":305871,"line_start":335,"line_end":335,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(d.month(), 3);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":305876,"byte_end":305905,"line_start":336,"line_end":336,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(d.day(), 14);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":305910,"byte_end":305938,"line_start":337,"line_end":337,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(d.ordinal(), 73); // day of year","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":305943,"byte_end":305990,"line_start":338,"line_end":338,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(d.num_days_from_ce(), 735671); // days since January 1, 1 CE","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":305995,"byte_end":306070,"line_start":339,"line_end":339,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":306075,"byte_end":306082,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1086},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":308464,"byte_end":308479,"line_start":389,"line_end":389,"column_start":12,"column_end":27},"name":"from_isoywd_opt","qualname":"<NaiveDate>::from_isoywd_opt","value":"fn from_isoywd_opt(i32, u32, Weekday) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the [ISO week date](#week-date)\n (year, week number and day of the week).\n The resulting `NaiveDate` may have a different year from the input year.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` from the [ISO week date](#week-date)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":306267,"byte_end":306331,"line_start":345,"line_end":345,"column_start":5,"column_end":69}},{"value":"/ (year, week number and day of the week).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":306336,"byte_end":306380,"line_start":346,"line_end":346,"column_start":5,"column_end":49}},{"value":"/ The resulting `NaiveDate` may have a different year from the input year.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":306385,"byte_end":306461,"line_start":347,"line_end":347,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":306466,"byte_end":306469,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-range date and/or invalid week number.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":306474,"byte_end":306545,"line_start":349,"line_end":349,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":306550,"byte_end":306553,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":306558,"byte_end":306571,"line_start":351,"line_end":351,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":306576,"byte_end":306579,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":306584,"byte_end":306591,"line_start":353,"line_end":353,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Weekday};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":306596,"byte_end":306633,"line_start":354,"line_end":354,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":306638,"byte_end":306641,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":306646,"byte_end":306685,"line_start":356,"line_end":356,"column_start":5,"column_end":44}},{"value":"/ let from_isoywd_opt = NaiveDate::from_isoywd_opt;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":306690,"byte_end":306743,"line_start":357,"line_end":357,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":306748,"byte_end":306751,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from_isoywd_opt(2015, 0, Weekday::Sun), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":306756,"byte_end":306817,"line_start":359,"line_end":359,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(from_isoywd_opt(2015, 10, Weekday::Sun), Some(from_ymd(2015, 3, 8)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":306822,"byte_end":306906,"line_start":360,"line_end":360,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(from_isoywd_opt(2015, 30, Weekday::Mon), Some(from_ymd(2015, 7, 20)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":306911,"byte_end":306996,"line_start":361,"line_end":361,"column_start":5,"column_end":90}},{"value":"/ assert_eq!(from_isoywd_opt(2015, 60, Weekday::Mon), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":307001,"byte_end":307063,"line_start":362,"line_end":362,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":307068,"byte_end":307071,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from_isoywd_opt(400000, 10, Weekday::Fri), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":307076,"byte_end":307140,"line_start":364,"line_end":364,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(from_isoywd_opt(-400000, 10, Weekday::Sat), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":307145,"byte_end":307210,"line_start":365,"line_end":365,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":307215,"byte_end":307222,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":307227,"byte_end":307230,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ The year number of ISO week date may differ from that of the calendar date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":307235,"byte_end":307314,"line_start":368,"line_end":368,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":307319,"byte_end":307322,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":307327,"byte_end":307334,"line_start":370,"line_end":370,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{NaiveDate, Weekday};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":307339,"byte_end":307378,"line_start":371,"line_end":371,"column_start":5,"column_end":44}},{"value":"/ # let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":307383,"byte_end":307424,"line_start":372,"line_end":372,"column_start":5,"column_end":46}},{"value":"/ # let from_isoywd_opt = NaiveDate::from_isoywd_opt;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":307429,"byte_end":307484,"line_start":373,"line_end":373,"column_start":5,"column_end":60}},{"value":"/ //           Mo Tu We Th Fr Sa Su","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":307489,"byte_end":307526,"line_start":374,"line_end":374,"column_start":5,"column_end":42}},{"value":"/ // 2014-W52  22 23 24 25 26 27 28    has 4+ days of new year,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":307531,"byte_end":307596,"line_start":375,"line_end":375,"column_start":5,"column_end":70}},{"value":"/ // 2015-W01  29 30 31  1  2  3  4 <- so this is the first week","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":307601,"byte_end":307667,"line_start":376,"line_end":376,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(from_isoywd_opt(2014, 52, Weekday::Sun), Some(from_ymd(2014, 12, 28)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":307672,"byte_end":307758,"line_start":377,"line_end":377,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(from_isoywd_opt(2014, 53, Weekday::Mon), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":307763,"byte_end":307825,"line_start":378,"line_end":378,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(from_isoywd_opt(2015, 1, Weekday::Mon), Some(from_ymd(2014, 12, 29)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":307830,"byte_end":307915,"line_start":379,"line_end":379,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":307920,"byte_end":307923,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ // 2015-W52  21 22 23 24 25 26 27    has 4+ days of old year,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":307928,"byte_end":307993,"line_start":381,"line_end":381,"column_start":5,"column_end":70}},{"value":"/ // 2015-W53  28 29 30 31  1  2  3 <- so this is the last week","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":307998,"byte_end":308063,"line_start":382,"line_end":382,"column_start":5,"column_end":70}},{"value":"/ // 2016-W01   4  5  6  7  8  9 10","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":308068,"byte_end":308105,"line_start":383,"line_end":383,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(from_isoywd_opt(2015, 52, Weekday::Sun), Some(from_ymd(2015, 12, 27)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":308110,"byte_end":308196,"line_start":384,"line_end":384,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(from_isoywd_opt(2015, 53, Weekday::Sun), Some(from_ymd(2016, 1, 3)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":308201,"byte_end":308285,"line_start":385,"line_end":385,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(from_isoywd_opt(2015, 54, Weekday::Mon), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":308290,"byte_end":308352,"line_start":386,"line_end":386,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(from_isoywd_opt(2016, 1, Weekday::Mon), Some(from_ymd(2016, 1, 4)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":308357,"byte_end":308440,"line_start":387,"line_end":387,"column_start":5,"column_end":88}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":308445,"byte_end":308452,"line_start":388,"line_end":388,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":311418,"byte_end":311439,"line_start":464,"line_end":464,"column_start":12,"column_end":33},"name":"from_num_days_from_ce","qualname":"<NaiveDate>::from_num_days_from_ce","value":"fn from_num_days_from_ce(i32) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from a day's number in the proleptic Gregorian calendar, with\n January 1, 1 being day 1.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` from a day's number in the proleptic Gregorian calendar, with","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":309691,"byte_end":309780,"line_start":420,"line_end":420,"column_start":5,"column_end":94}},{"value":"/ January 1, 1 being day 1.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":309785,"byte_end":309814,"line_start":421,"line_end":421,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":309819,"byte_end":309822,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ Panics if the date is out of range.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":309827,"byte_end":309866,"line_start":423,"line_end":423,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":309871,"byte_end":309874,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":309879,"byte_end":309892,"line_start":425,"line_end":425,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":309897,"byte_end":309900,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":309905,"byte_end":309912,"line_start":427,"line_end":427,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":309917,"byte_end":309964,"line_start":428,"line_end":428,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":309969,"byte_end":309972,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_num_days_from_ce(735671);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":309977,"byte_end":310030,"line_start":430,"line_end":430,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(d.num_days_from_ce(), 735671); // days since January 1, 1 CE","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":310035,"byte_end":310110,"line_start":431,"line_end":431,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(d.year(), 2015);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":310115,"byte_end":310146,"line_start":432,"line_end":432,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(d.month(), 3);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":310151,"byte_end":310180,"line_start":433,"line_end":433,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(d.day(), 14);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":310185,"byte_end":310213,"line_start":434,"line_end":434,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(d.ordinal(), 73); // day of year","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":310218,"byte_end":310265,"line_start":435,"line_end":435,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(d.iso_week().year(), 2015);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":310270,"byte_end":310312,"line_start":436,"line_end":436,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(d.iso_week().week(), 11);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":310317,"byte_end":310357,"line_start":437,"line_end":437,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(d.weekday(), Weekday::Sat);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":310362,"byte_end":310404,"line_start":438,"line_end":438,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":310409,"byte_end":310416,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":310421,"byte_end":310424,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ While not directly supported by Chrono,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":310429,"byte_end":310472,"line_start":441,"line_end":441,"column_start":5,"column_end":48}},{"value":"/ it is easy to convert from the Julian day number","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":310477,"byte_end":310529,"line_start":442,"line_end":442,"column_start":5,"column_end":57}},{"value":"/ (January 1, 4713 BCE in the *Julian* calendar being Day 0)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":310534,"byte_end":310596,"line_start":443,"line_end":443,"column_start":5,"column_end":67}},{"value":"/ to Gregorian with this method.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":310601,"byte_end":310635,"line_start":444,"line_end":444,"column_start":5,"column_end":39}},{"value":"/ (Note that this panics when `jd` is out of range.)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":310640,"byte_end":310694,"line_start":445,"line_end":445,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":310699,"byte_end":310702,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":310707,"byte_end":310714,"line_start":447,"line_end":447,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":310719,"byte_end":310745,"line_start":448,"line_end":448,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":310750,"byte_end":310753,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ fn jd_to_date(jd: i32) -> NaiveDate {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":310758,"byte_end":310799,"line_start":450,"line_end":450,"column_start":5,"column_end":46}},{"value":"/     // keep in mind that the Julian day number is 0-based","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":310804,"byte_end":310865,"line_start":451,"line_end":451,"column_start":5,"column_end":66}},{"value":"/     // while this method requires an 1-based number.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":310870,"byte_end":310926,"line_start":452,"line_end":452,"column_start":5,"column_end":61}},{"value":"/     NaiveDate::from_num_days_from_ce(jd - 1721425)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":310931,"byte_end":310985,"line_start":453,"line_end":453,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":310990,"byte_end":310995,"line_start":454,"line_end":454,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":311000,"byte_end":311003,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ // January 1, 4713 BCE in Julian = November 24, 4714 BCE in Gregorian","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":311008,"byte_end":311081,"line_start":456,"line_end":456,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(jd_to_date(0), NaiveDate::from_ymd(-4713, 11, 24));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":311086,"byte_end":311152,"line_start":457,"line_end":457,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":311157,"byte_end":311160,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(jd_to_date(1721426), NaiveDate::from_ymd(1, 1, 1));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":311165,"byte_end":311231,"line_start":459,"line_end":459,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(jd_to_date(2450000), NaiveDate::from_ymd(1995, 10, 9));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":311236,"byte_end":311306,"line_start":460,"line_end":460,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(jd_to_date(2451545), NaiveDate::from_ymd(2000, 1, 1));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":311311,"byte_end":311380,"line_start":461,"line_end":461,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":311385,"byte_end":311392,"line_start":462,"line_end":462,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":311397,"byte_end":311406,"line_start":463,"line_end":463,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":312386,"byte_end":312411,"line_start":488,"line_end":488,"column_start":12,"column_end":37},"name":"from_num_days_from_ce_opt","qualname":"<NaiveDate>::from_num_days_from_ce_opt","value":"fn from_num_days_from_ce_opt(i32) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from a day's number in the proleptic Gregorian calendar, with\n January 1, 1 being day 1.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` from a day's number in the proleptic Gregorian calendar, with","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":311556,"byte_end":311645,"line_start":468,"line_end":468,"column_start":5,"column_end":94}},{"value":"/ January 1, 1 being day 1.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":311650,"byte_end":311679,"line_start":469,"line_end":469,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":311684,"byte_end":311687,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the date is out of range.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":311692,"byte_end":311739,"line_start":471,"line_end":471,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":311744,"byte_end":311747,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":311752,"byte_end":311765,"line_start":473,"line_end":473,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":311770,"byte_end":311773,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":311778,"byte_end":311785,"line_start":475,"line_end":475,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":311790,"byte_end":311816,"line_start":476,"line_end":476,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":311821,"byte_end":311824,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ let from_ndays_opt = NaiveDate::from_num_days_from_ce_opt;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":311829,"byte_end":311891,"line_start":478,"line_end":478,"column_start":5,"column_end":67}},{"value":"/ let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":311896,"byte_end":311935,"line_start":479,"line_end":479,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":311940,"byte_end":311943,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from_ndays_opt(730_000),      Some(from_ymd(1999, 9, 3)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":311948,"byte_end":312021,"line_start":481,"line_end":481,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(from_ndays_opt(1),            Some(from_ymd(1, 1, 1)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":312026,"byte_end":312096,"line_start":482,"line_end":482,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(from_ndays_opt(0),            Some(from_ymd(0, 12, 31)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":312101,"byte_end":312173,"line_start":483,"line_end":483,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(from_ndays_opt(-1),           Some(from_ymd(0, 12, 30)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":312178,"byte_end":312250,"line_start":484,"line_end":484,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(from_ndays_opt(100_000_000),  None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":312255,"byte_end":312306,"line_start":485,"line_end":485,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(from_ndays_opt(-100_000_000), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":312311,"byte_end":312362,"line_start":486,"line_end":486,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":312367,"byte_end":312374,"line_start":487,"line_end":487,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1089},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":314119,"byte_end":314140,"line_start":521,"line_end":521,"column_start":12,"column_end":33},"name":"from_weekday_of_month","qualname":"<NaiveDate>::from_weekday_of_month","value":"fn from_weekday_of_month(i32, u32, Weekday, u8) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` by counting the number of occurrences of a particular day-of-week\n since the beginning of the given month.  For instance, if you want the 2nd Friday of March\n 2017, you would use `NaiveDate::from_weekday_of_month(2017, 3, Weekday::Fri, 2)`.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` by counting the number of occurrences of a particular day-of-week","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":312837,"byte_end":312930,"line_start":496,"line_end":496,"column_start":5,"column_end":98}},{"value":"/ since the beginning of the given month.  For instance, if you want the 2nd Friday of March","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":312935,"byte_end":313029,"line_start":497,"line_end":497,"column_start":5,"column_end":99}},{"value":"/ 2017, you would use `NaiveDate::from_weekday_of_month(2017, 3, Weekday::Fri, 2)`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":313034,"byte_end":313119,"line_start":498,"line_end":498,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":313124,"byte_end":313127,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":313132,"byte_end":313144,"line_start":500,"line_end":500,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":313149,"byte_end":313152,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ The resulting `NaiveDate` is guaranteed to be in `month`.  If `n` is larger than the number","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":313157,"byte_end":313252,"line_start":502,"line_end":502,"column_start":5,"column_end":100}},{"value":"/ of `weekday` in `month` (eg. the 6th Friday of March 2017) then this function will panic.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":313257,"byte_end":313350,"line_start":503,"line_end":503,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":313355,"byte_end":313358,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ `n` is 1-indexed.  Passing `n=0` will cause a panic.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":313363,"byte_end":313419,"line_start":505,"line_end":505,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":313424,"byte_end":313427,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":313432,"byte_end":313445,"line_start":507,"line_end":507,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":313450,"byte_end":313453,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":313458,"byte_end":313465,"line_start":509,"line_end":509,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Weekday};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":313470,"byte_end":313507,"line_start":510,"line_end":510,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":313512,"byte_end":313515,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ let from_weekday_of_month = NaiveDate::from_weekday_of_month;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":313520,"byte_end":313585,"line_start":512,"line_end":512,"column_start":5,"column_end":70}},{"value":"/ let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":313590,"byte_end":313629,"line_start":513,"line_end":513,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":313634,"byte_end":313637,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from_weekday_of_month(2018, 8, Weekday::Wed, 1), from_ymd(2018, 8, 1));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":313642,"byte_end":313728,"line_start":515,"line_end":515,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(from_weekday_of_month(2018, 8, Weekday::Fri, 1), from_ymd(2018, 8, 3));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":313733,"byte_end":313819,"line_start":516,"line_end":516,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(from_weekday_of_month(2018, 8, Weekday::Tue, 2), from_ymd(2018, 8, 14));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":313824,"byte_end":313911,"line_start":517,"line_end":517,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(from_weekday_of_month(2018, 8, Weekday::Fri, 4), from_ymd(2018, 8, 24));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":313916,"byte_end":314003,"line_start":518,"line_end":518,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(from_weekday_of_month(2018, 8, Weekday::Fri, 5), from_ymd(2018, 8, 31));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":314008,"byte_end":314095,"line_start":519,"line_end":519,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":314100,"byte_end":314107,"line_start":520,"line_end":520,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":315013,"byte_end":315038,"line_start":537,"line_end":537,"column_start":12,"column_end":37},"name":"from_weekday_of_month_opt","qualname":"<NaiveDate>::from_weekday_of_month_opt","value":"fn from_weekday_of_month_opt(i32, u32, Weekday, u8) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` by counting the number of occurrences of a particular day-of-week\n since the beginning of the given month.  For instance, if you want the 2nd Friday of March\n 2017, you would use `NaiveDate::from_weekday_of_month(2017, 3, Weekday::Fri, 2)`.  `n` is 1-indexed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` by counting the number of occurrences of a particular day-of-week","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":314313,"byte_end":314406,"line_start":525,"line_end":525,"column_start":5,"column_end":98}},{"value":"/ since the beginning of the given month.  For instance, if you want the 2nd Friday of March","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":314411,"byte_end":314505,"line_start":526,"line_end":526,"column_start":5,"column_end":99}},{"value":"/ 2017, you would use `NaiveDate::from_weekday_of_month(2017, 3, Weekday::Fri, 2)`.  `n` is 1-indexed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":314510,"byte_end":314614,"line_start":527,"line_end":527,"column_start":5,"column_end":109}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":314619,"byte_end":314622,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":314627,"byte_end":314634,"line_start":529,"line_end":529,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Weekday};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":314639,"byte_end":314676,"line_start":530,"line_end":530,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(NaiveDate::from_weekday_of_month_opt(2017, 3, Weekday::Fri, 2),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":314681,"byte_end":314759,"line_start":531,"line_end":531,"column_start":5,"column_end":83}},{"value":"/            NaiveDate::from_ymd_opt(2017, 3, 10))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":314764,"byte_end":314816,"line_start":532,"line_end":532,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":314821,"byte_end":314828,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":314833,"byte_end":314836,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `n` out-of-range; ie. if `n` is larger than the number of `weekday` in","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":314841,"byte_end":314933,"line_start":535,"line_end":535,"column_start":5,"column_end":97}},{"value":"/ `month` (eg. the 6th Friday of March 2017), or if `n == 0`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":314938,"byte_end":315001,"line_start":536,"line_end":536,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1091},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":317050,"byte_end":317064,"line_start":594,"line_end":594,"column_start":12,"column_end":26},"name":"parse_from_str","qualname":"<NaiveDate>::parse_from_str","value":"fn parse_from_str(&str, &str) -> ParseResult<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Parses a string with the specified format string and returns a new `NaiveDate`.\n See the [`format::strftime` module](../format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[{"value":"/ Parses a string with the specified format string and returns a new `NaiveDate`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":315489,"byte_end":315572,"line_start":552,"line_end":552,"column_start":5,"column_end":88}},{"value":"/ See the [`format::strftime` module](../format/strftime/index.html)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":315577,"byte_end":315647,"line_start":553,"line_end":553,"column_start":5,"column_end":75}},{"value":"/ on the supported escape sequences.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":315652,"byte_end":315690,"line_start":554,"line_end":554,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":315695,"byte_end":315698,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":315703,"byte_end":315716,"line_start":556,"line_end":556,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":315721,"byte_end":315724,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":315729,"byte_end":315736,"line_start":558,"line_end":558,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":315741,"byte_end":315767,"line_start":559,"line_end":559,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":315772,"byte_end":315775,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ let parse_from_str = NaiveDate::parse_from_str;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":315780,"byte_end":315831,"line_start":561,"line_end":561,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":315836,"byte_end":315839,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(parse_from_str(\"2015-09-05\", \"%Y-%m-%d\"),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":315844,"byte_end":315900,"line_start":563,"line_end":563,"column_start":5,"column_end":61}},{"value":"/            Ok(NaiveDate::from_ymd(2015, 9, 5)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":315905,"byte_end":315957,"line_start":564,"line_end":564,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(parse_from_str(\"5sep2015\", \"%d%b%Y\"),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":315962,"byte_end":316014,"line_start":565,"line_end":565,"column_start":5,"column_end":57}},{"value":"/            Ok(NaiveDate::from_ymd(2015, 9, 5)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":316019,"byte_end":316071,"line_start":566,"line_end":566,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":316076,"byte_end":316083,"line_start":567,"line_end":567,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":316088,"byte_end":316091,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ Time and offset is ignored for the purpose of parsing.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":316096,"byte_end":316154,"line_start":569,"line_end":569,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":316159,"byte_end":316162,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":316167,"byte_end":316174,"line_start":571,"line_end":571,"column_start":5,"column_end":12}},{"value":"/ # use chrono::NaiveDate;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":316179,"byte_end":316207,"line_start":572,"line_end":572,"column_start":5,"column_end":33}},{"value":"/ # let parse_from_str = NaiveDate::parse_from_str;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":316212,"byte_end":316265,"line_start":573,"line_end":573,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(parse_from_str(\"2014-5-17T12:34:56+09:30\", \"%Y-%m-%dT%H:%M:%S%z\"),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":316270,"byte_end":316351,"line_start":574,"line_end":574,"column_start":5,"column_end":86}},{"value":"/            Ok(NaiveDate::from_ymd(2014, 5, 17)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":316356,"byte_end":316409,"line_start":575,"line_end":575,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":316414,"byte_end":316421,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":316426,"byte_end":316429,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ Out-of-bound dates or insufficient fields are errors.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":316434,"byte_end":316491,"line_start":578,"line_end":578,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":316496,"byte_end":316499,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":316504,"byte_end":316511,"line_start":580,"line_end":580,"column_start":5,"column_end":12}},{"value":"/ # use chrono::NaiveDate;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":316516,"byte_end":316544,"line_start":581,"line_end":581,"column_start":5,"column_end":33}},{"value":"/ # let parse_from_str = NaiveDate::parse_from_str;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":316549,"byte_end":316602,"line_start":582,"line_end":582,"column_start":5,"column_end":58}},{"value":"/ assert!(parse_from_str(\"2015/9\", \"%Y/%m\").is_err());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":316607,"byte_end":316663,"line_start":583,"line_end":583,"column_start":5,"column_end":61}},{"value":"/ assert!(parse_from_str(\"2015/9/31\", \"%Y/%m/%d\").is_err());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":316668,"byte_end":316730,"line_start":584,"line_end":584,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":316735,"byte_end":316742,"line_start":585,"line_end":585,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":316747,"byte_end":316750,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ All parsed fields should be consistent to each other, otherwise it's an error.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":316755,"byte_end":316837,"line_start":587,"line_end":587,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":316842,"byte_end":316845,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":316850,"byte_end":316857,"line_start":589,"line_end":589,"column_start":5,"column_end":12}},{"value":"/ # use chrono::NaiveDate;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":316862,"byte_end":316890,"line_start":590,"line_end":590,"column_start":5,"column_end":33}},{"value":"/ # let parse_from_str = NaiveDate::parse_from_str;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":316895,"byte_end":316948,"line_start":591,"line_end":591,"column_start":5,"column_end":58}},{"value":"/ assert!(parse_from_str(\"Sat, 09 Aug 2013\", \"%a, %d %b %Y\").is_err());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":316953,"byte_end":317026,"line_start":592,"line_end":592,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":317031,"byte_end":317038,"line_start":593,"line_end":593,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1092},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":317892,"byte_end":317910,"line_start":617,"line_end":617,"column_start":12,"column_end":30},"name":"checked_add_months","qualname":"<NaiveDate>::checked_add_months","value":"fn checked_add_months(Self, Months) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Add a duration in [`Months`] to the date","sig":null,"attributes":[{"value":"/ Add a duration in [`Months`] to the date","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":317252,"byte_end":317296,"line_start":600,"line_end":600,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":317301,"byte_end":317304,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ If the day would be out of range for the resulting month, use the last day for that month.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":317309,"byte_end":317403,"line_start":602,"line_end":602,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":317408,"byte_end":317411,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the resulting date would be out of range.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":317416,"byte_end":317479,"line_start":604,"line_end":604,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":317484,"byte_end":317487,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":317492,"byte_end":317499,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{NaiveDate, Months};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":317504,"byte_end":317542,"line_start":607,"line_end":607,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":317547,"byte_end":317562,"line_start":608,"line_end":608,"column_start":5,"column_end":20}},{"value":"/     NaiveDate::from_ymd(2022, 2, 20).checked_add_months(Months::new(6)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":317567,"byte_end":317643,"line_start":609,"line_end":609,"column_start":5,"column_end":81}},{"value":"/     Some(NaiveDate::from_ymd(2022, 8, 20))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":317648,"byte_end":317694,"line_start":610,"line_end":610,"column_start":5,"column_end":51}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":317699,"byte_end":317705,"line_start":611,"line_end":611,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":317710,"byte_end":317725,"line_start":612,"line_end":612,"column_start":5,"column_end":20}},{"value":"/     NaiveDate::from_ymd(2022, 7, 31).checked_add_months(Months::new(2)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":317730,"byte_end":317806,"line_start":613,"line_end":613,"column_start":5,"column_end":81}},{"value":"/     Some(NaiveDate::from_ymd(2022, 9, 30))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":317811,"byte_end":317857,"line_start":614,"line_end":614,"column_start":5,"column_end":51}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":317862,"byte_end":317868,"line_start":615,"line_end":615,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":317873,"byte_end":317880,"line_start":616,"line_end":616,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1093},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":318657,"byte_end":318675,"line_start":641,"line_end":641,"column_start":12,"column_end":30},"name":"checked_sub_months","qualname":"<NaiveDate>::checked_sub_months","value":"fn checked_sub_months(Self, Months) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Subtract a duration in [`Months`] from the date","sig":null,"attributes":[{"value":"/ Subtract a duration in [`Months`] from the date","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":318173,"byte_end":318224,"line_start":628,"line_end":628,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":318229,"byte_end":318232,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ If the day would be out of range for the resulting month, use the last day for that month.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":318237,"byte_end":318331,"line_start":630,"line_end":630,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":318336,"byte_end":318339,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the resulting date would be out of range.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":318344,"byte_end":318407,"line_start":632,"line_end":632,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":318412,"byte_end":318415,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":318420,"byte_end":318427,"line_start":634,"line_end":634,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{NaiveDate, Months};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":318432,"byte_end":318470,"line_start":635,"line_end":635,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":318475,"byte_end":318490,"line_start":636,"line_end":636,"column_start":5,"column_end":20}},{"value":"/     NaiveDate::from_ymd(2022, 2, 20).checked_sub_months(Months::new(6)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":318495,"byte_end":318571,"line_start":637,"line_end":637,"column_start":5,"column_end":81}},{"value":"/     Some(NaiveDate::from_ymd(2021, 8, 20))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":318576,"byte_end":318622,"line_start":638,"line_end":638,"column_start":5,"column_end":51}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":318627,"byte_end":318633,"line_start":639,"line_end":639,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":318638,"byte_end":318645,"line_start":640,"line_end":640,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":320719,"byte_end":320727,"line_start":710,"line_end":710,"column_start":12,"column_end":20},"name":"and_time","qualname":"<NaiveDate>::and_time","value":"fn and_time(&Self, NaiveTime) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date and given `NaiveTime`.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date and given `NaiveTime`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":320260,"byte_end":320336,"line_start":695,"line_end":695,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":320341,"byte_end":320344,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":320349,"byte_end":320362,"line_start":697,"line_end":697,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":320367,"byte_end":320370,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":320375,"byte_end":320382,"line_start":699,"line_end":699,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveTime, NaiveDateTime};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":320387,"byte_end":320441,"line_start":700,"line_end":700,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":320446,"byte_end":320449,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":320454,"byte_end":320498,"line_start":702,"line_end":702,"column_start":5,"column_end":49}},{"value":"/ let t = NaiveTime::from_hms_milli(12, 34, 56, 789);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":320503,"byte_end":320558,"line_start":703,"line_end":703,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":320563,"byte_end":320566,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = d.and_time(t);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":320571,"byte_end":320613,"line_start":705,"line_end":705,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(dt.date(), d);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":320618,"byte_end":320647,"line_start":706,"line_end":706,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(dt.time(), t);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":320652,"byte_end":320681,"line_start":707,"line_end":707,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":320686,"byte_end":320693,"line_start":708,"line_end":708,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":320698,"byte_end":320707,"line_start":709,"line_end":709,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":321541,"byte_end":321548,"line_start":734,"line_end":734,"column_start":12,"column_end":19},"name":"and_hms","qualname":"<NaiveDate>::and_hms","value":"fn and_hms(&Self, u32, u32, u32) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute and second.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date, hour, minute and second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":320822,"byte_end":320901,"line_start":714,"line_end":714,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":320906,"byte_end":320909,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ No [leap second](./struct.NaiveTime.html#leap-second-handling) is allowed here;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":320914,"byte_end":320997,"line_start":716,"line_end":716,"column_start":5,"column_end":88}},{"value":"/ use `NaiveDate::and_hms_*` methods with a subsecond parameter instead.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":321002,"byte_end":321076,"line_start":717,"line_end":717,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":321081,"byte_end":321084,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute and/or second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":321089,"byte_end":321138,"line_start":719,"line_end":719,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":321143,"byte_end":321146,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":321151,"byte_end":321164,"line_start":721,"line_end":721,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":321169,"byte_end":321172,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":321177,"byte_end":321184,"line_start":723,"line_end":723,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike, Timelike, Weekday};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":321189,"byte_end":321261,"line_start":724,"line_end":724,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":321266,"byte_end":321269,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":321274,"byte_end":321318,"line_start":726,"line_end":726,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":321323,"byte_end":321326,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = d.and_hms(12, 34, 56);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":321331,"byte_end":321381,"line_start":728,"line_end":728,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(dt.year(), 2015);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":321386,"byte_end":321418,"line_start":729,"line_end":729,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(dt.weekday(), Weekday::Wed);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":321423,"byte_end":321466,"line_start":730,"line_end":730,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(dt.second(), 56);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":321471,"byte_end":321503,"line_start":731,"line_end":731,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":321508,"byte_end":321515,"line_start":732,"line_end":732,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":321520,"byte_end":321529,"line_start":733,"line_end":733,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":322432,"byte_end":322443,"line_start":757,"line_end":757,"column_start":12,"column_end":23},"name":"and_hms_opt","qualname":"<NaiveDate>::and_hms_opt","value":"fn and_hms_opt(&Self, u32, u32, u32) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute and second.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date, hour, minute and second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":321681,"byte_end":321760,"line_start":738,"line_end":738,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":321765,"byte_end":321768,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ No [leap second](./struct.NaiveTime.html#leap-second-handling) is allowed here;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":321773,"byte_end":321856,"line_start":740,"line_end":740,"column_start":5,"column_end":88}},{"value":"/ use `NaiveDate::and_hms_*_opt` methods with a subsecond parameter instead.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":321861,"byte_end":321939,"line_start":741,"line_end":741,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":321944,"byte_end":321947,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute and/or second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":321952,"byte_end":322009,"line_start":743,"line_end":743,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":322014,"byte_end":322017,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":322022,"byte_end":322035,"line_start":745,"line_end":745,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":322040,"byte_end":322043,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":322048,"byte_end":322055,"line_start":747,"line_end":747,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":322060,"byte_end":322086,"line_start":748,"line_end":748,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":322091,"byte_end":322094,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":322099,"byte_end":322143,"line_start":750,"line_end":750,"column_start":5,"column_end":49}},{"value":"/ assert!(d.and_hms_opt(12, 34, 56).is_some());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":322148,"byte_end":322197,"line_start":751,"line_end":751,"column_start":5,"column_end":54}},{"value":"/ assert!(d.and_hms_opt(12, 34, 60).is_none()); // use `and_hms_milli_opt` instead","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":322202,"byte_end":322286,"line_start":752,"line_end":752,"column_start":5,"column_end":89}},{"value":"/ assert!(d.and_hms_opt(12, 60, 56).is_none());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":322291,"byte_end":322340,"line_start":753,"line_end":753,"column_start":5,"column_end":54}},{"value":"/ assert!(d.and_hms_opt(24, 34, 56).is_none());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":322345,"byte_end":322394,"line_start":754,"line_end":754,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":322399,"byte_end":322406,"line_start":755,"line_end":755,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":322411,"byte_end":322420,"line_start":756,"line_end":756,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1099},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":323380,"byte_end":323393,"line_start":782,"line_end":782,"column_start":12,"column_end":25},"name":"and_hms_milli","qualname":"<NaiveDate>::and_hms_milli","value":"fn and_hms_milli(&Self, u32, u32, u32, u32) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":322600,"byte_end":322692,"line_start":761,"line_end":761,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":322697,"byte_end":322700,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ The millisecond part can exceed 1,000","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":322705,"byte_end":322746,"line_start":763,"line_end":763,"column_start":5,"column_end":46}},{"value":"/ in order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":322751,"byte_end":322841,"line_start":764,"line_end":764,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":322846,"byte_end":322849,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or millisecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":322854,"byte_end":322916,"line_start":766,"line_end":766,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":322921,"byte_end":322924,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":322929,"byte_end":322942,"line_start":768,"line_end":768,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":322947,"byte_end":322950,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":322955,"byte_end":322962,"line_start":770,"line_end":770,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike, Timelike, Weekday};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":322967,"byte_end":323039,"line_start":771,"line_end":771,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":323044,"byte_end":323047,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":323052,"byte_end":323096,"line_start":773,"line_end":773,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":323101,"byte_end":323104,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = d.and_hms_milli(12, 34, 56, 789);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":323109,"byte_end":323170,"line_start":775,"line_end":775,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(dt.year(), 2015);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":323175,"byte_end":323207,"line_start":776,"line_end":776,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(dt.weekday(), Weekday::Wed);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":323212,"byte_end":323255,"line_start":777,"line_end":777,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(dt.second(), 56);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":323260,"byte_end":323292,"line_start":778,"line_end":778,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(dt.nanosecond(), 789_000_000);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":323297,"byte_end":323342,"line_start":779,"line_end":779,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":323347,"byte_end":323354,"line_start":780,"line_end":780,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":323359,"byte_end":323368,"line_start":781,"line_end":781,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1100},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":324464,"byte_end":324481,"line_start":807,"line_end":807,"column_start":12,"column_end":29},"name":"and_hms_milli_opt","qualname":"<NaiveDate>::and_hms_milli_opt","value":"fn and_hms_milli_opt(&Self, u32, u32, u32, u32) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":323551,"byte_end":323643,"line_start":786,"line_end":786,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":323648,"byte_end":323651,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ The millisecond part can exceed 1,000","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":323656,"byte_end":323697,"line_start":788,"line_end":788,"column_start":5,"column_end":46}},{"value":"/ in order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":323702,"byte_end":323792,"line_start":789,"line_end":789,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":323797,"byte_end":323800,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or millisecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":323805,"byte_end":323875,"line_start":791,"line_end":791,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":323880,"byte_end":323883,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":323888,"byte_end":323901,"line_start":793,"line_end":793,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":323906,"byte_end":323909,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":323914,"byte_end":323921,"line_start":795,"line_end":795,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":323926,"byte_end":323952,"line_start":796,"line_end":796,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":323957,"byte_end":323960,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":323965,"byte_end":324009,"line_start":798,"line_end":798,"column_start":5,"column_end":49}},{"value":"/ assert!(d.and_hms_milli_opt(12, 34, 56,   789).is_some());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":324014,"byte_end":324076,"line_start":799,"line_end":799,"column_start":5,"column_end":67}},{"value":"/ assert!(d.and_hms_milli_opt(12, 34, 59, 1_789).is_some()); // leap second","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":324081,"byte_end":324158,"line_start":800,"line_end":800,"column_start":5,"column_end":82}},{"value":"/ assert!(d.and_hms_milli_opt(12, 34, 59, 2_789).is_none());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":324163,"byte_end":324225,"line_start":801,"line_end":801,"column_start":5,"column_end":67}},{"value":"/ assert!(d.and_hms_milli_opt(12, 34, 60,   789).is_none());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":324230,"byte_end":324292,"line_start":802,"line_end":802,"column_start":5,"column_end":67}},{"value":"/ assert!(d.and_hms_milli_opt(12, 60, 56,   789).is_none());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":324297,"byte_end":324359,"line_start":803,"line_end":803,"column_start":5,"column_end":67}},{"value":"/ assert!(d.and_hms_milli_opt(24, 34, 56,   789).is_none());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":324364,"byte_end":324426,"line_start":804,"line_end":804,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":324431,"byte_end":324438,"line_start":805,"line_end":805,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":324443,"byte_end":324452,"line_start":806,"line_end":806,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1102},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":325498,"byte_end":325511,"line_start":838,"line_end":838,"column_start":12,"column_end":25},"name":"and_hms_micro","qualname":"<NaiveDate>::and_hms_micro","value":"fn and_hms_micro(&Self, u32, u32, u32, u32) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":324710,"byte_end":324802,"line_start":817,"line_end":817,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":324807,"byte_end":324810,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ The microsecond part can exceed 1,000,000","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":324815,"byte_end":324860,"line_start":819,"line_end":819,"column_start":5,"column_end":50}},{"value":"/ in order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":324865,"byte_end":324955,"line_start":820,"line_end":820,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":324960,"byte_end":324963,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or microsecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":324968,"byte_end":325030,"line_start":822,"line_end":822,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":325035,"byte_end":325038,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":325043,"byte_end":325056,"line_start":824,"line_end":824,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":325061,"byte_end":325064,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":325069,"byte_end":325076,"line_start":826,"line_end":826,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike, Timelike, Weekday};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":325081,"byte_end":325153,"line_start":827,"line_end":827,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":325158,"byte_end":325161,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":325166,"byte_end":325210,"line_start":829,"line_end":829,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":325215,"byte_end":325218,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = d.and_hms_micro(12, 34, 56, 789_012);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":325223,"byte_end":325288,"line_start":831,"line_end":831,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(dt.year(), 2015);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":325293,"byte_end":325325,"line_start":832,"line_end":832,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(dt.weekday(), Weekday::Wed);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":325330,"byte_end":325373,"line_start":833,"line_end":833,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(dt.second(), 56);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":325378,"byte_end":325410,"line_start":834,"line_end":834,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(dt.nanosecond(), 789_012_000);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":325415,"byte_end":325460,"line_start":835,"line_end":835,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":325465,"byte_end":325472,"line_start":836,"line_end":836,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":325477,"byte_end":325486,"line_start":837,"line_end":837,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1103},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":326610,"byte_end":326627,"line_start":863,"line_end":863,"column_start":12,"column_end":29},"name":"and_hms_micro_opt","qualname":"<NaiveDate>::and_hms_micro_opt","value":"fn and_hms_micro_opt(&Self, u32, u32, u32, u32) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":325669,"byte_end":325761,"line_start":842,"line_end":842,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":325766,"byte_end":325769,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ The microsecond part can exceed 1,000,000","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":325774,"byte_end":325819,"line_start":844,"line_end":844,"column_start":5,"column_end":50}},{"value":"/ in order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":325824,"byte_end":325914,"line_start":845,"line_end":845,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":325919,"byte_end":325922,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or microsecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":325927,"byte_end":325997,"line_start":847,"line_end":847,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":326002,"byte_end":326005,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":326010,"byte_end":326023,"line_start":849,"line_end":849,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":326028,"byte_end":326031,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":326036,"byte_end":326043,"line_start":851,"line_end":851,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":326048,"byte_end":326074,"line_start":852,"line_end":852,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":326079,"byte_end":326082,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":326087,"byte_end":326131,"line_start":854,"line_end":854,"column_start":5,"column_end":49}},{"value":"/ assert!(d.and_hms_micro_opt(12, 34, 56,   789_012).is_some());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":326136,"byte_end":326202,"line_start":855,"line_end":855,"column_start":5,"column_end":71}},{"value":"/ assert!(d.and_hms_micro_opt(12, 34, 59, 1_789_012).is_some()); // leap second","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":326207,"byte_end":326288,"line_start":856,"line_end":856,"column_start":5,"column_end":86}},{"value":"/ assert!(d.and_hms_micro_opt(12, 34, 59, 2_789_012).is_none());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":326293,"byte_end":326359,"line_start":857,"line_end":857,"column_start":5,"column_end":71}},{"value":"/ assert!(d.and_hms_micro_opt(12, 34, 60,   789_012).is_none());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":326364,"byte_end":326430,"line_start":858,"line_end":858,"column_start":5,"column_end":71}},{"value":"/ assert!(d.and_hms_micro_opt(12, 60, 56,   789_012).is_none());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":326435,"byte_end":326501,"line_start":859,"line_end":859,"column_start":5,"column_end":71}},{"value":"/ assert!(d.and_hms_micro_opt(24, 34, 56,   789_012).is_none());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":326506,"byte_end":326572,"line_start":860,"line_end":860,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":326577,"byte_end":326584,"line_start":861,"line_end":861,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":326589,"byte_end":326598,"line_start":862,"line_end":862,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1105},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":327648,"byte_end":327660,"line_start":894,"line_end":894,"column_start":12,"column_end":24},"name":"and_hms_nano","qualname":"<NaiveDate>::and_hms_nano","value":"fn and_hms_nano(&Self, u32, u32, u32, u32) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":326856,"byte_end":326947,"line_start":873,"line_end":873,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":326952,"byte_end":326955,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ The nanosecond part can exceed 1,000,000,000","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":326960,"byte_end":327008,"line_start":875,"line_end":875,"column_start":5,"column_end":53}},{"value":"/ in order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":327013,"byte_end":327103,"line_start":876,"line_end":876,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":327108,"byte_end":327111,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or nanosecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":327116,"byte_end":327177,"line_start":878,"line_end":878,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":327182,"byte_end":327185,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":327190,"byte_end":327203,"line_start":880,"line_end":880,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":327208,"byte_end":327211,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":327216,"byte_end":327223,"line_start":882,"line_end":882,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike, Timelike, Weekday};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":327228,"byte_end":327300,"line_start":883,"line_end":883,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":327305,"byte_end":327308,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":327313,"byte_end":327357,"line_start":885,"line_end":885,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":327362,"byte_end":327365,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = d.and_hms_nano(12, 34, 56, 789_012_345);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":327370,"byte_end":327438,"line_start":887,"line_end":887,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(dt.year(), 2015);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":327443,"byte_end":327475,"line_start":888,"line_end":888,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(dt.weekday(), Weekday::Wed);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":327480,"byte_end":327523,"line_start":889,"line_end":889,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(dt.second(), 56);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":327528,"byte_end":327560,"line_start":890,"line_end":890,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(dt.nanosecond(), 789_012_345);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":327565,"byte_end":327610,"line_start":891,"line_end":891,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":327615,"byte_end":327622,"line_start":892,"line_end":892,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":327627,"byte_end":327636,"line_start":893,"line_end":893,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1106},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":328775,"byte_end":328791,"line_start":919,"line_end":919,"column_start":12,"column_end":28},"name":"and_hms_nano_opt","qualname":"<NaiveDate>::and_hms_nano_opt","value":"fn and_hms_nano_opt(&Self, u32, u32, u32, u32) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":327815,"byte_end":327906,"line_start":898,"line_end":898,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":327911,"byte_end":327914,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ The nanosecond part can exceed 1,000,000,000","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":327919,"byte_end":327967,"line_start":900,"line_end":900,"column_start":5,"column_end":53}},{"value":"/ in order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":327972,"byte_end":328062,"line_start":901,"line_end":901,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":328067,"byte_end":328070,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or nanosecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":328075,"byte_end":328144,"line_start":903,"line_end":903,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":328149,"byte_end":328152,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":328157,"byte_end":328170,"line_start":905,"line_end":905,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":328175,"byte_end":328178,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":328183,"byte_end":328190,"line_start":907,"line_end":907,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":328195,"byte_end":328221,"line_start":908,"line_end":908,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":328226,"byte_end":328229,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":328234,"byte_end":328278,"line_start":910,"line_end":910,"column_start":5,"column_end":49}},{"value":"/ assert!(d.and_hms_nano_opt(12, 34, 56,   789_012_345).is_some());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":328283,"byte_end":328352,"line_start":911,"line_end":911,"column_start":5,"column_end":74}},{"value":"/ assert!(d.and_hms_nano_opt(12, 34, 59, 1_789_012_345).is_some()); // leap second","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":328357,"byte_end":328441,"line_start":912,"line_end":912,"column_start":5,"column_end":89}},{"value":"/ assert!(d.and_hms_nano_opt(12, 34, 59, 2_789_012_345).is_none());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":328446,"byte_end":328515,"line_start":913,"line_end":913,"column_start":5,"column_end":74}},{"value":"/ assert!(d.and_hms_nano_opt(12, 34, 60,   789_012_345).is_none());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":328520,"byte_end":328589,"line_start":914,"line_end":914,"column_start":5,"column_end":74}},{"value":"/ assert!(d.and_hms_nano_opt(12, 60, 56,   789_012_345).is_none());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":328594,"byte_end":328663,"line_start":915,"line_end":915,"column_start":5,"column_end":74}},{"value":"/ assert!(d.and_hms_nano_opt(24, 34, 56,   789_012_345).is_none());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":328668,"byte_end":328737,"line_start":916,"line_end":916,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":328742,"byte_end":328749,"line_start":917,"line_end":917,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":328754,"byte_end":328763,"line_start":918,"line_end":918,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1112},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":330481,"byte_end":330485,"line_start":976,"line_end":976,"column_start":12,"column_end":16},"name":"succ","qualname":"<NaiveDate>::succ","value":"fn succ(&Self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` for the next calendar date.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` for the next calendar date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":329951,"byte_end":330006,"line_start":962,"line_end":962,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":330011,"byte_end":330014,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ Panics when `self` is the last representable date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":330019,"byte_end":330073,"line_start":964,"line_end":964,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":330078,"byte_end":330081,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":330086,"byte_end":330099,"line_start":966,"line_end":966,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":330104,"byte_end":330107,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":330112,"byte_end":330119,"line_start":968,"line_end":968,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":330124,"byte_end":330150,"line_start":969,"line_end":969,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":330155,"byte_end":330158,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015,  6,  3).succ(), NaiveDate::from_ymd(2015, 6, 4));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":330163,"byte_end":330253,"line_start":971,"line_end":971,"column_start":5,"column_end":95}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015,  6, 30).succ(), NaiveDate::from_ymd(2015, 7, 1));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":330258,"byte_end":330348,"line_start":972,"line_end":972,"column_start":5,"column_end":95}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 12, 31).succ(), NaiveDate::from_ymd(2016, 1, 1));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":330353,"byte_end":330443,"line_start":973,"line_end":973,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":330448,"byte_end":330455,"line_start":974,"line_end":974,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":330460,"byte_end":330469,"line_start":975,"line_end":975,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1113},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":330994,"byte_end":331002,"line_start":994,"line_end":994,"column_start":12,"column_end":20},"name":"succ_opt","qualname":"<NaiveDate>::succ_opt","value":"fn succ_opt(&Self) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` for the next calendar date.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` for the next calendar date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":330566,"byte_end":330621,"line_start":980,"line_end":980,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":330626,"byte_end":330629,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when `self` is the last representable date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":330634,"byte_end":330696,"line_start":982,"line_end":982,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":330701,"byte_end":330704,"line_start":983,"line_end":983,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":330709,"byte_end":330722,"line_start":984,"line_end":984,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":330727,"byte_end":330730,"line_start":985,"line_end":985,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":330735,"byte_end":330742,"line_start":986,"line_end":986,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":330747,"byte_end":330773,"line_start":987,"line_end":987,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":330778,"byte_end":330781,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 6, 3).succ_opt(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":330786,"byte_end":330844,"line_start":989,"line_end":989,"column_start":5,"column_end":63}},{"value":"/            Some(NaiveDate::from_ymd(2015, 6, 4)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":330849,"byte_end":330903,"line_start":990,"line_end":990,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(NaiveDate::MAX.succ_opt(), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":330908,"byte_end":330956,"line_start":991,"line_end":991,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":330961,"byte_end":330968,"line_start":992,"line_end":992,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":330973,"byte_end":330982,"line_start":993,"line_end":993,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1115},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":331677,"byte_end":331681,"line_start":1012,"line_end":1012,"column_start":12,"column_end":16},"name":"pred","qualname":"<NaiveDate>::pred","value":"fn pred(&Self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` for the previous calendar date.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` for the previous calendar date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":331142,"byte_end":331201,"line_start":998,"line_end":998,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":331206,"byte_end":331209,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ Panics when `self` is the first representable date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":331214,"byte_end":331269,"line_start":1000,"line_end":1000,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":331274,"byte_end":331277,"line_start":1001,"line_end":1001,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":331282,"byte_end":331295,"line_start":1002,"line_end":1002,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":331300,"byte_end":331303,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":331308,"byte_end":331315,"line_start":1004,"line_end":1004,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":331320,"byte_end":331346,"line_start":1005,"line_end":1005,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":331351,"byte_end":331354,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 6, 3).pred(), NaiveDate::from_ymd(2015,  6,  2));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":331359,"byte_end":331449,"line_start":1007,"line_end":1007,"column_start":5,"column_end":95}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 6, 1).pred(), NaiveDate::from_ymd(2015,  5, 31));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":331454,"byte_end":331544,"line_start":1008,"line_end":1008,"column_start":5,"column_end":95}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 1, 1).pred(), NaiveDate::from_ymd(2014, 12, 31));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":331549,"byte_end":331639,"line_start":1009,"line_end":1009,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":331644,"byte_end":331651,"line_start":1010,"line_end":1010,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":331656,"byte_end":331665,"line_start":1011,"line_end":1011,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1116},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":332195,"byte_end":332203,"line_start":1030,"line_end":1030,"column_start":12,"column_end":20},"name":"pred_opt","qualname":"<NaiveDate>::pred_opt","value":"fn pred_opt(&Self) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` for the previous calendar date.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` for the previous calendar date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":331762,"byte_end":331821,"line_start":1016,"line_end":1016,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":331826,"byte_end":331829,"line_start":1017,"line_end":1017,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when `self` is the first representable date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":331834,"byte_end":331897,"line_start":1018,"line_end":1018,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":331902,"byte_end":331905,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":331910,"byte_end":331923,"line_start":1020,"line_end":1020,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":331928,"byte_end":331931,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":331936,"byte_end":331943,"line_start":1022,"line_end":1022,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":331948,"byte_end":331974,"line_start":1023,"line_end":1023,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":331979,"byte_end":331982,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 6, 3).pred_opt(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":331987,"byte_end":332045,"line_start":1025,"line_end":1025,"column_start":5,"column_end":63}},{"value":"/            Some(NaiveDate::from_ymd(2015, 6, 2)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":332050,"byte_end":332104,"line_start":1026,"line_end":1026,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(NaiveDate::MIN.pred_opt(), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":332109,"byte_end":332157,"line_start":1027,"line_end":1027,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":332162,"byte_end":332169,"line_start":1028,"line_end":1028,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":332174,"byte_end":332183,"line_start":1029,"line_end":1029,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1118},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":333127,"byte_end":333145,"line_start":1052,"line_end":1052,"column_start":12,"column_end":30},"name":"checked_add_signed","qualname":"<NaiveDate>::checked_add_signed","value":"fn checked_add_signed(Self, OldDuration) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Adds the `days` part of given `Duration` to the current date.","sig":null,"attributes":[{"value":"/ Adds the `days` part of given `Duration` to the current date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":332345,"byte_end":332410,"line_start":1034,"line_end":1034,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":332415,"byte_end":332418,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when it will result in overflow.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":332423,"byte_end":332474,"line_start":1036,"line_end":1036,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":332479,"byte_end":332482,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":332487,"byte_end":332500,"line_start":1038,"line_end":1038,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":332505,"byte_end":332508,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":332513,"byte_end":332520,"line_start":1040,"line_end":1040,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Duration, NaiveDate};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":332525,"byte_end":332563,"line_start":1041,"line_end":1041,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":332568,"byte_end":332571,"line_start":1042,"line_end":1042,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 9, 5);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":332576,"byte_end":332620,"line_start":1043,"line_end":1043,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(d.checked_add_signed(Duration::days(40)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":332625,"byte_end":332681,"line_start":1044,"line_end":1044,"column_start":5,"column_end":61}},{"value":"/            Some(NaiveDate::from_ymd(2015, 10, 15)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":332686,"byte_end":332742,"line_start":1045,"line_end":1045,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(d.checked_add_signed(Duration::days(-40)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":332747,"byte_end":332804,"line_start":1046,"line_end":1046,"column_start":5,"column_end":62}},{"value":"/            Some(NaiveDate::from_ymd(2015, 7, 27)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":332809,"byte_end":332864,"line_start":1047,"line_end":1047,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(d.checked_add_signed(Duration::days(1_000_000_000)), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":332869,"byte_end":332943,"line_start":1048,"line_end":1048,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(d.checked_add_signed(Duration::days(-1_000_000_000)), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":332948,"byte_end":333023,"line_start":1049,"line_end":1049,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(NaiveDate::MAX.checked_add_signed(Duration::days(1)), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":333028,"byte_end":333103,"line_start":1050,"line_end":1050,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":333108,"byte_end":333115,"line_start":1051,"line_end":1051,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1119},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":334628,"byte_end":334646,"line_start":1083,"line_end":1083,"column_start":12,"column_end":30},"name":"checked_sub_signed","qualname":"<NaiveDate>::checked_sub_signed","value":"fn checked_sub_signed(Self, OldDuration) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Subtracts the `days` part of given `Duration` from the current date.","sig":null,"attributes":[{"value":"/ Subtracts the `days` part of given `Duration` from the current date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":333839,"byte_end":333911,"line_start":1065,"line_end":1065,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":333916,"byte_end":333919,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when it will result in overflow.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":333924,"byte_end":333975,"line_start":1067,"line_end":1067,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":333980,"byte_end":333983,"line_start":1068,"line_end":1068,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":333988,"byte_end":334001,"line_start":1069,"line_end":1069,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":334006,"byte_end":334009,"line_start":1070,"line_end":1070,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":334014,"byte_end":334021,"line_start":1071,"line_end":1071,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Duration, NaiveDate};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":334026,"byte_end":334064,"line_start":1072,"line_end":1072,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":334069,"byte_end":334072,"line_start":1073,"line_end":1073,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 9, 5);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":334077,"byte_end":334121,"line_start":1074,"line_end":1074,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(d.checked_sub_signed(Duration::days(40)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":334126,"byte_end":334182,"line_start":1075,"line_end":1075,"column_start":5,"column_end":61}},{"value":"/            Some(NaiveDate::from_ymd(2015, 7, 27)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":334187,"byte_end":334242,"line_start":1076,"line_end":1076,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(d.checked_sub_signed(Duration::days(-40)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":334247,"byte_end":334304,"line_start":1077,"line_end":1077,"column_start":5,"column_end":62}},{"value":"/            Some(NaiveDate::from_ymd(2015, 10, 15)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":334309,"byte_end":334365,"line_start":1078,"line_end":1078,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(d.checked_sub_signed(Duration::days(1_000_000_000)), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":334370,"byte_end":334444,"line_start":1079,"line_end":1079,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(d.checked_sub_signed(Duration::days(-1_000_000_000)), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":334449,"byte_end":334524,"line_start":1080,"line_end":1080,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(NaiveDate::MIN.checked_sub_signed(Duration::days(1)), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":334529,"byte_end":334604,"line_start":1081,"line_end":1081,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":334609,"byte_end":334616,"line_start":1082,"line_end":1082,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1120},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":336453,"byte_end":336474,"line_start":1118,"line_end":1118,"column_start":12,"column_end":33},"name":"signed_duration_since","qualname":"<NaiveDate>::signed_duration_since","value":"fn signed_duration_since(Self, NaiveDate) -> OldDuration","parent":null,"children":[],"decl_id":null,"docs":" Subtracts another `NaiveDate` from the current date.\n Returns a `Duration` of integral numbers.","sig":null,"attributes":[{"value":"/ Subtracts another `NaiveDate` from the current date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":335340,"byte_end":335396,"line_start":1096,"line_end":1096,"column_start":5,"column_end":61}},{"value":"/ Returns a `Duration` of integral numbers.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":335401,"byte_end":335446,"line_start":1097,"line_end":1097,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":335451,"byte_end":335454,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ This does not overflow or underflow at all,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":335459,"byte_end":335506,"line_start":1099,"line_end":1099,"column_start":5,"column_end":52}},{"value":"/ as all possible output fits in the range of `Duration`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":335511,"byte_end":335570,"line_start":1100,"line_end":1100,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":335575,"byte_end":335578,"line_start":1101,"line_end":1101,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":335583,"byte_end":335596,"line_start":1102,"line_end":1102,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":335601,"byte_end":335604,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":335609,"byte_end":335616,"line_start":1104,"line_end":1104,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Duration, NaiveDate};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":335621,"byte_end":335659,"line_start":1105,"line_end":1105,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":335664,"byte_end":335667,"line_start":1106,"line_end":1106,"column_start":5,"column_end":8}},{"value":"/ let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":335672,"byte_end":335711,"line_start":1107,"line_end":1107,"column_start":5,"column_end":44}},{"value":"/ let since = NaiveDate::signed_duration_since;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":335716,"byte_end":335765,"line_start":1108,"line_end":1108,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":335770,"byte_end":335773,"line_start":1109,"line_end":1109,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2014, 1, 1)), Duration::zero());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":335778,"byte_end":335862,"line_start":1110,"line_end":1110,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2013, 12, 31)), Duration::days(1));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":335867,"byte_end":335954,"line_start":1111,"line_end":1111,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2014, 1, 2)), Duration::days(-1));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":335959,"byte_end":336045,"line_start":1112,"line_end":1112,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2013, 9, 23)), Duration::days(100));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":336050,"byte_end":336138,"line_start":1113,"line_end":1113,"column_start":5,"column_end":93}},{"value":"/ assert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2013, 1, 1)), Duration::days(365));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":336143,"byte_end":336230,"line_start":1114,"line_end":1114,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2010, 1, 1)), Duration::days(365*4 + 1));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":336235,"byte_end":336328,"line_start":1115,"line_end":1115,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(since(from_ymd(2014, 1, 1), from_ymd(1614, 1, 1)), Duration::days(365*400 + 97));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":336333,"byte_end":336429,"line_start":1116,"line_end":1116,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":336434,"byte_end":336441,"line_start":1117,"line_end":1117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1121},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":340879,"byte_end":340888,"line_start":1232,"line_end":1232,"column_start":12,"column_end":21},"name":"iter_days","qualname":"<NaiveDate>::iter_days","value":"fn iter_days(&Self) -> NaiveDateDaysIterator","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that steps by days across all representable dates.","sig":null,"attributes":[{"value":"/ Returns an iterator that steps by days across all representable dates.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":340068,"byte_end":340142,"line_start":1205,"line_end":1205,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":340147,"byte_end":340150,"line_start":1206,"line_end":1206,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":340155,"byte_end":340168,"line_start":1207,"line_end":1207,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":340173,"byte_end":340176,"line_start":1208,"line_end":1208,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":340181,"byte_end":340188,"line_start":1209,"line_end":1209,"column_start":5,"column_end":12}},{"value":"/ # use chrono::NaiveDate;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":340193,"byte_end":340221,"line_start":1210,"line_end":1210,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":340226,"byte_end":340229,"line_start":1211,"line_end":1211,"column_start":5,"column_end":8}},{"value":"/ let expected = [","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":340234,"byte_end":340254,"line_start":1212,"line_end":1212,"column_start":5,"column_end":25}},{"value":"/     NaiveDate::from_ymd(2016, 2, 27),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":340259,"byte_end":340300,"line_start":1213,"line_end":1213,"column_start":5,"column_end":46}},{"value":"/     NaiveDate::from_ymd(2016, 2, 28),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":340305,"byte_end":340346,"line_start":1214,"line_end":1214,"column_start":5,"column_end":46}},{"value":"/     NaiveDate::from_ymd(2016, 2, 29),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":340351,"byte_end":340392,"line_start":1215,"line_end":1215,"column_start":5,"column_end":46}},{"value":"/     NaiveDate::from_ymd(2016, 3, 1),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":340397,"byte_end":340437,"line_start":1216,"line_end":1216,"column_start":5,"column_end":45}},{"value":"/ ];","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":340442,"byte_end":340448,"line_start":1217,"line_end":1217,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":340453,"byte_end":340456,"line_start":1218,"line_end":1218,"column_start":5,"column_end":8}},{"value":"/ let mut count = 0;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":340461,"byte_end":340483,"line_start":1219,"line_end":1219,"column_start":5,"column_end":27}},{"value":"/ for (idx, d) in NaiveDate::from_ymd(2016, 2, 27).iter_days().take(4).enumerate() {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":340488,"byte_end":340574,"line_start":1220,"line_end":1220,"column_start":5,"column_end":91}},{"value":"/    assert_eq!(d, expected[idx]);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":340579,"byte_end":340615,"line_start":1221,"line_end":1221,"column_start":5,"column_end":41}},{"value":"/    count += 1;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":340620,"byte_end":340638,"line_start":1222,"line_end":1222,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":340643,"byte_end":340648,"line_start":1223,"line_end":1223,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(count, 4);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":340653,"byte_end":340678,"line_start":1224,"line_end":1224,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":340683,"byte_end":340686,"line_start":1225,"line_end":1225,"column_start":5,"column_end":8}},{"value":"/ for d in NaiveDate::from_ymd(2016, 3, 1).iter_days().rev().take(4) {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":340691,"byte_end":340763,"line_start":1226,"line_end":1226,"column_start":5,"column_end":77}},{"value":"/     count -= 1;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":340768,"byte_end":340787,"line_start":1227,"line_end":1227,"column_start":5,"column_end":24}},{"value":"/     assert_eq!(d, expected[count]);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":340792,"byte_end":340831,"line_start":1228,"line_end":1228,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":340836,"byte_end":340841,"line_start":1229,"line_end":1229,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":340846,"byte_end":340853,"line_start":1230,"line_end":1230,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":340858,"byte_end":340867,"line_start":1231,"line_end":1231,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1122},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":341796,"byte_end":341806,"line_start":1263,"line_end":1263,"column_start":12,"column_end":22},"name":"iter_weeks","qualname":"<NaiveDate>::iter_weeks","value":"fn iter_weeks(&Self) -> NaiveDateWeeksIterator","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that steps by weeks across all representable dates.","sig":null,"attributes":[{"value":"/ Returns an iterator that steps by weeks across all representable dates.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":340981,"byte_end":341056,"line_start":1236,"line_end":1236,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":341061,"byte_end":341064,"line_start":1237,"line_end":1237,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":341069,"byte_end":341082,"line_start":1238,"line_end":1238,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":341087,"byte_end":341090,"line_start":1239,"line_end":1239,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":341095,"byte_end":341102,"line_start":1240,"line_end":1240,"column_start":5,"column_end":12}},{"value":"/ # use chrono::NaiveDate;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":341107,"byte_end":341135,"line_start":1241,"line_end":1241,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":341140,"byte_end":341143,"line_start":1242,"line_end":1242,"column_start":5,"column_end":8}},{"value":"/ let expected = [","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":341148,"byte_end":341168,"line_start":1243,"line_end":1243,"column_start":5,"column_end":25}},{"value":"/     NaiveDate::from_ymd(2016, 2, 27),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":341173,"byte_end":341214,"line_start":1244,"line_end":1244,"column_start":5,"column_end":46}},{"value":"/     NaiveDate::from_ymd(2016, 3, 5),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":341219,"byte_end":341259,"line_start":1245,"line_end":1245,"column_start":5,"column_end":45}},{"value":"/     NaiveDate::from_ymd(2016, 3, 12),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":341264,"byte_end":341305,"line_start":1246,"line_end":1246,"column_start":5,"column_end":46}},{"value":"/     NaiveDate::from_ymd(2016, 3, 19),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":341310,"byte_end":341351,"line_start":1247,"line_end":1247,"column_start":5,"column_end":46}},{"value":"/ ];","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":341356,"byte_end":341362,"line_start":1248,"line_end":1248,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":341367,"byte_end":341370,"line_start":1249,"line_end":1249,"column_start":5,"column_end":8}},{"value":"/ let mut count = 0;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":341375,"byte_end":341397,"line_start":1250,"line_end":1250,"column_start":5,"column_end":27}},{"value":"/ for (idx, d) in NaiveDate::from_ymd(2016, 2, 27).iter_weeks().take(4).enumerate() {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":341402,"byte_end":341489,"line_start":1251,"line_end":1251,"column_start":5,"column_end":92}},{"value":"/    assert_eq!(d, expected[idx]);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":341494,"byte_end":341530,"line_start":1252,"line_end":1252,"column_start":5,"column_end":41}},{"value":"/    count += 1;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":341535,"byte_end":341553,"line_start":1253,"line_end":1253,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":341558,"byte_end":341563,"line_start":1254,"line_end":1254,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(count, 4);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":341568,"byte_end":341593,"line_start":1255,"line_end":1255,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":341598,"byte_end":341601,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ for d in NaiveDate::from_ymd(2016, 3, 19).iter_weeks().rev().take(4) {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":341606,"byte_end":341680,"line_start":1257,"line_end":1257,"column_start":5,"column_end":79}},{"value":"/     count -= 1;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":341685,"byte_end":341704,"line_start":1258,"line_end":1258,"column_start":5,"column_end":24}},{"value":"/     assert_eq!(d, expected[count]);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":341709,"byte_end":341748,"line_start":1259,"line_end":1259,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":341753,"byte_end":341758,"line_start":1260,"line_end":1260,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":341763,"byte_end":341770,"line_start":1261,"line_end":1261,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":341775,"byte_end":341784,"line_start":1262,"line_end":1262,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1123},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":342031,"byte_end":342035,"line_start":1270,"line_end":1270,"column_start":12,"column_end":16},"name":"week","qualname":"<NaiveDate>::week","value":"fn week(&Self, Weekday) -> NaiveWeek","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`NaiveWeek`] that the date belongs to, starting with the [`Weekday`]\n specified.\n","sig":null,"attributes":[{"value":"/ Returns the [`NaiveWeek`] that the date belongs to, starting with the [`Weekday`]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":341901,"byte_end":341986,"line_start":1267,"line_end":1267,"column_start":5,"column_end":90}},{"value":"/ specified.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":341991,"byte_end":342005,"line_start":1268,"line_end":1268,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":342010,"byte_end":342019,"line_start":1269,"line_end":1269,"column_start":5,"column_end":14}}]},{"kind":"Const","id":{"krate":0,"index":1124},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":342202,"byte_end":342205,"line_start":1275,"line_end":1275,"column_start":15,"column_end":18},"name":"MIN","qualname":"::naive::date::NaiveDate::MIN","value":"NaiveDate","parent":{"krate":0,"index":1078},"children":[],"decl_id":null,"docs":" The minimum possible `NaiveDate` (January 1, 262145 BCE).\n","sig":null,"attributes":[{"value":"/ The minimum possible `NaiveDate` (January 1, 262145 BCE).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":342126,"byte_end":342187,"line_start":1274,"line_end":1274,"column_start":5,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":1125},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":342363,"byte_end":342366,"line_start":1277,"line_end":1277,"column_start":15,"column_end":18},"name":"MAX","qualname":"::naive::date::NaiveDate::MAX","value":"NaiveDate","parent":{"krate":0,"index":1078},"children":[],"decl_id":null,"docs":" The maximum possible `NaiveDate` (December 31, 262143 CE).\n","sig":null,"attributes":[{"value":"/ The maximum possible `NaiveDate` (December 31, 262143 CE).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":342286,"byte_end":342348,"line_start":1276,"line_end":1276,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1127},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":342823,"byte_end":342827,"line_start":1292,"line_end":1292,"column_start":8,"column_end":12},"name":"year","qualname":"<NaiveDate as traits::Datelike>::year","value":"fn year(&Self) -> i32","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1988},"docs":" Returns the year number in the [calendar date](#calendar-date).","sig":null,"attributes":[{"value":"/ Returns the year number in the [calendar date](#calendar-date).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":342481,"byte_end":342548,"line_start":1281,"line_end":1281,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":342553,"byte_end":342556,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":342561,"byte_end":342574,"line_start":1283,"line_end":1283,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":342579,"byte_end":342582,"line_start":1284,"line_end":1284,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":342587,"byte_end":342594,"line_start":1285,"line_end":1285,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":342599,"byte_end":342637,"line_start":1286,"line_end":1286,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":342642,"byte_end":342645,"line_start":1287,"line_end":1287,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).year(), 2015);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":342650,"byte_end":342711,"line_start":1288,"line_end":1288,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(NaiveDate::from_ymd(-308, 3, 14).year(), -308); // 309 BCE","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":342716,"byte_end":342789,"line_start":1289,"line_end":1289,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":342794,"byte_end":342801,"line_start":1290,"line_end":1290,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":342806,"byte_end":342815,"line_start":1291,"line_end":1291,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1128},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":343238,"byte_end":343243,"line_start":1309,"line_end":1309,"column_start":8,"column_end":13},"name":"month","qualname":"<NaiveDate as traits::Datelike>::month","value":"fn month(&Self) -> u32","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1990},"docs":" Returns the month number starting from 1.","sig":null,"attributes":[{"value":"/ Returns the month number starting from 1.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":342879,"byte_end":342924,"line_start":1296,"line_end":1296,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":342929,"byte_end":342932,"line_start":1297,"line_end":1297,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 1 to 12.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":342937,"byte_end":342978,"line_start":1298,"line_end":1298,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":342983,"byte_end":342986,"line_start":1299,"line_end":1299,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":342991,"byte_end":343004,"line_start":1300,"line_end":1300,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":343009,"byte_end":343012,"line_start":1301,"line_end":1301,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":343017,"byte_end":343024,"line_start":1302,"line_end":1302,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":343029,"byte_end":343067,"line_start":1303,"line_end":1303,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":343072,"byte_end":343075,"line_start":1304,"line_end":1304,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).month(), 9);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":343080,"byte_end":343139,"line_start":1305,"line_end":1305,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(NaiveDate::from_ymd(-308, 3, 14).month(), 3);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":343144,"byte_end":343204,"line_start":1306,"line_end":1306,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":343209,"byte_end":343216,"line_start":1307,"line_end":1307,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":343221,"byte_end":343230,"line_start":1308,"line_end":1308,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1129},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":343659,"byte_end":343665,"line_start":1326,"line_end":1326,"column_start":8,"column_end":14},"name":"month0","qualname":"<NaiveDate as traits::Datelike>::month0","value":"fn month0(&Self) -> u32","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1991},"docs":" Returns the month number starting from 0.","sig":null,"attributes":[{"value":"/ Returns the month number starting from 0.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":343298,"byte_end":343343,"line_start":1313,"line_end":1313,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":343348,"byte_end":343351,"line_start":1314,"line_end":1314,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 11.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":343356,"byte_end":343397,"line_start":1315,"line_end":1315,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":343402,"byte_end":343405,"line_start":1316,"line_end":1316,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":343410,"byte_end":343423,"line_start":1317,"line_end":1317,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":343428,"byte_end":343431,"line_start":1318,"line_end":1318,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":343436,"byte_end":343443,"line_start":1319,"line_end":1319,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":343448,"byte_end":343486,"line_start":1320,"line_end":1320,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":343491,"byte_end":343494,"line_start":1321,"line_end":1321,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).month0(), 8);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":343499,"byte_end":343559,"line_start":1322,"line_end":1322,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(NaiveDate::from_ymd(-308, 3, 14).month0(), 2);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":343564,"byte_end":343625,"line_start":1323,"line_end":1323,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":343630,"byte_end":343637,"line_start":1324,"line_end":1324,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":343642,"byte_end":343651,"line_start":1325,"line_end":1325,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1130},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":345011,"byte_end":345014,"line_start":1366,"line_end":1366,"column_start":8,"column_end":11},"name":"day","qualname":"<NaiveDate as traits::Datelike>::day","value":"fn day(&Self) -> u32","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1992},"docs":" Returns the day of month starting from 1.","sig":null,"attributes":[{"value":"/ Returns the day of month starting from 1.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":343724,"byte_end":343769,"line_start":1330,"line_end":1330,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":343774,"byte_end":343777,"line_start":1331,"line_end":1331,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 1 to 31. (The last day of month differs by months.)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":343782,"byte_end":343866,"line_start":1332,"line_end":1332,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":343871,"byte_end":343874,"line_start":1333,"line_end":1333,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":343879,"byte_end":343892,"line_start":1334,"line_end":1334,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":343897,"byte_end":343900,"line_start":1335,"line_end":1335,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":343905,"byte_end":343912,"line_start":1336,"line_end":1336,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":343917,"byte_end":343955,"line_start":1337,"line_end":1337,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":343960,"byte_end":343963,"line_start":1338,"line_end":1338,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).day(), 8);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":343968,"byte_end":344025,"line_start":1339,"line_end":1339,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(NaiveDate::from_ymd(-308, 3, 14).day(), 14);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":344030,"byte_end":344089,"line_start":1340,"line_end":1340,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":344094,"byte_end":344101,"line_start":1341,"line_end":1341,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":344106,"byte_end":344109,"line_start":1342,"line_end":1342,"column_start":5,"column_end":8}},{"value":"/ Combined with [`NaiveDate::pred`](#method.pred),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":344114,"byte_end":344166,"line_start":1343,"line_end":1343,"column_start":5,"column_end":57}},{"value":"/ one can determine the number of days in a particular month.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":344171,"byte_end":344234,"line_start":1344,"line_end":1344,"column_start":5,"column_end":68}},{"value":"/ (Note that this panics when `year` is out of range.)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":344239,"byte_end":344295,"line_start":1345,"line_end":1345,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":344300,"byte_end":344303,"line_start":1346,"line_end":1346,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":344308,"byte_end":344315,"line_start":1347,"line_end":1347,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":344320,"byte_end":344358,"line_start":1348,"line_end":1348,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":344363,"byte_end":344366,"line_start":1349,"line_end":1349,"column_start":5,"column_end":8}},{"value":"/ fn ndays_in_month(year: i32, month: u32) -> u32 {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":344371,"byte_end":344424,"line_start":1350,"line_end":1350,"column_start":5,"column_end":58}},{"value":"/     // the first day of the next month...","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":344429,"byte_end":344474,"line_start":1351,"line_end":1351,"column_start":5,"column_end":50}},{"value":"/     let (y, m) = if month == 12 { (year + 1, 1) } else { (year, month + 1) };","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":344479,"byte_end":344560,"line_start":1352,"line_end":1352,"column_start":5,"column_end":86}},{"value":"/     let d = NaiveDate::from_ymd(y, m, 1);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":344565,"byte_end":344610,"line_start":1353,"line_end":1353,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":344615,"byte_end":344618,"line_start":1354,"line_end":1354,"column_start":5,"column_end":8}},{"value":"/     // ...is preceded by the last day of the original month","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":344623,"byte_end":344686,"line_start":1355,"line_end":1355,"column_start":5,"column_end":68}},{"value":"/     d.pred().day()","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":344691,"byte_end":344713,"line_start":1356,"line_end":1356,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":344718,"byte_end":344723,"line_start":1357,"line_end":1357,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":344728,"byte_end":344731,"line_start":1358,"line_end":1358,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(ndays_in_month(2015, 8), 31);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":344736,"byte_end":344780,"line_start":1359,"line_end":1359,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(ndays_in_month(2015, 9), 30);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":344785,"byte_end":344829,"line_start":1360,"line_end":1360,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(ndays_in_month(2015, 12), 31);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":344834,"byte_end":344879,"line_start":1361,"line_end":1361,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(ndays_in_month(2016, 2), 29);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":344884,"byte_end":344928,"line_start":1362,"line_end":1362,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(ndays_in_month(2017, 2), 28);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":344933,"byte_end":344977,"line_start":1363,"line_end":1363,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":344982,"byte_end":344989,"line_start":1364,"line_end":1364,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":344994,"byte_end":345003,"line_start":1365,"line_end":1365,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1131},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":345468,"byte_end":345472,"line_start":1383,"line_end":1383,"column_start":8,"column_end":12},"name":"day0","qualname":"<NaiveDate as traits::Datelike>::day0","value":"fn day0(&Self) -> u32","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1993},"docs":" Returns the day of month starting from 0.","sig":null,"attributes":[{"value":"/ Returns the day of month starting from 0.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":345067,"byte_end":345112,"line_start":1370,"line_end":1370,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":345117,"byte_end":345120,"line_start":1371,"line_end":1371,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 30. (The last day of month differs by months.)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":345125,"byte_end":345209,"line_start":1372,"line_end":1372,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":345214,"byte_end":345217,"line_start":1373,"line_end":1373,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":345222,"byte_end":345235,"line_start":1374,"line_end":1374,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":345240,"byte_end":345243,"line_start":1375,"line_end":1375,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":345248,"byte_end":345255,"line_start":1376,"line_end":1376,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":345260,"byte_end":345298,"line_start":1377,"line_end":1377,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":345303,"byte_end":345306,"line_start":1378,"line_end":1378,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).day0(), 7);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":345311,"byte_end":345369,"line_start":1379,"line_end":1379,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(NaiveDate::from_ymd(-308, 3, 14).day0(), 13);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":345374,"byte_end":345434,"line_start":1380,"line_end":1380,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":345439,"byte_end":345446,"line_start":1381,"line_end":1381,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":345451,"byte_end":345460,"line_start":1382,"line_end":1382,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1132},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":346717,"byte_end":346724,"line_start":1422,"line_end":1422,"column_start":8,"column_end":15},"name":"ordinal","qualname":"<NaiveDate as traits::Datelike>::ordinal","value":"fn ordinal(&Self) -> u32","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1994},"docs":" Returns the day of year starting from 1.","sig":null,"attributes":[{"value":"/ Returns the day of year starting from 1.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":345529,"byte_end":345573,"line_start":1387,"line_end":1387,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":345578,"byte_end":345581,"line_start":1388,"line_end":1388,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 1 to 366. (The last day of year differs by years.)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":345586,"byte_end":345669,"line_start":1389,"line_end":1389,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":345674,"byte_end":345677,"line_start":1390,"line_end":1390,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":345682,"byte_end":345695,"line_start":1391,"line_end":1391,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":345700,"byte_end":345703,"line_start":1392,"line_end":1392,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":345708,"byte_end":345715,"line_start":1393,"line_end":1393,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":345720,"byte_end":345758,"line_start":1394,"line_end":1394,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":345763,"byte_end":345766,"line_start":1395,"line_end":1395,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).ordinal(), 251);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":345771,"byte_end":345834,"line_start":1396,"line_end":1396,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(NaiveDate::from_ymd(-308, 3, 14).ordinal(), 74);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":345839,"byte_end":345902,"line_start":1397,"line_end":1397,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":345907,"byte_end":345914,"line_start":1398,"line_end":1398,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":345919,"byte_end":345922,"line_start":1399,"line_end":1399,"column_start":5,"column_end":8}},{"value":"/ Combined with [`NaiveDate::pred`](#method.pred),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":345927,"byte_end":345979,"line_start":1400,"line_end":1400,"column_start":5,"column_end":57}},{"value":"/ one can determine the number of days in a particular year.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":345984,"byte_end":346046,"line_start":1401,"line_end":1401,"column_start":5,"column_end":67}},{"value":"/ (Note that this panics when `year` is out of range.)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":346051,"byte_end":346107,"line_start":1402,"line_end":1402,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":346112,"byte_end":346115,"line_start":1403,"line_end":1403,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":346120,"byte_end":346127,"line_start":1404,"line_end":1404,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":346132,"byte_end":346170,"line_start":1405,"line_end":1405,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":346175,"byte_end":346178,"line_start":1406,"line_end":1406,"column_start":5,"column_end":8}},{"value":"/ fn ndays_in_year(year: i32) -> u32 {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":346183,"byte_end":346223,"line_start":1407,"line_end":1407,"column_start":5,"column_end":45}},{"value":"/     // the first day of the next year...","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":346228,"byte_end":346272,"line_start":1408,"line_end":1408,"column_start":5,"column_end":49}},{"value":"/     let d = NaiveDate::from_ymd(year + 1, 1, 1);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":346277,"byte_end":346329,"line_start":1409,"line_end":1409,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":346334,"byte_end":346337,"line_start":1410,"line_end":1410,"column_start":5,"column_end":8}},{"value":"/     // ...is preceded by the last day of the original year","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":346342,"byte_end":346404,"line_start":1411,"line_end":1411,"column_start":5,"column_end":67}},{"value":"/     d.pred().ordinal()","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":346409,"byte_end":346435,"line_start":1412,"line_end":1412,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":346440,"byte_end":346445,"line_start":1413,"line_end":1413,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":346450,"byte_end":346453,"line_start":1414,"line_end":1414,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(ndays_in_year(2015), 365);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":346458,"byte_end":346499,"line_start":1415,"line_end":1415,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(ndays_in_year(2016), 366);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":346504,"byte_end":346545,"line_start":1416,"line_end":1416,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(ndays_in_year(2017), 365);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":346550,"byte_end":346591,"line_start":1417,"line_end":1417,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(ndays_in_year(2000), 366);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":346596,"byte_end":346637,"line_start":1418,"line_end":1418,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(ndays_in_year(2100), 365);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":346642,"byte_end":346683,"line_start":1419,"line_end":1419,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":346688,"byte_end":346695,"line_start":1420,"line_end":1420,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":346700,"byte_end":346709,"line_start":1421,"line_end":1421,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1133},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":347189,"byte_end":347197,"line_start":1439,"line_end":1439,"column_start":8,"column_end":16},"name":"ordinal0","qualname":"<NaiveDate as traits::Datelike>::ordinal0","value":"fn ordinal0(&Self) -> u32","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1995},"docs":" Returns the day of year starting from 0.","sig":null,"attributes":[{"value":"/ Returns the day of year starting from 0.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":346780,"byte_end":346824,"line_start":1426,"line_end":1426,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":346829,"byte_end":346832,"line_start":1427,"line_end":1427,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 365. (The last day of year differs by years.)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":346837,"byte_end":346920,"line_start":1428,"line_end":1428,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":346925,"byte_end":346928,"line_start":1429,"line_end":1429,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":346933,"byte_end":346946,"line_start":1430,"line_end":1430,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":346951,"byte_end":346954,"line_start":1431,"line_end":1431,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":346959,"byte_end":346966,"line_start":1432,"line_end":1432,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":346971,"byte_end":347009,"line_start":1433,"line_end":1433,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":347014,"byte_end":347017,"line_start":1434,"line_end":1434,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).ordinal0(), 250);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":347022,"byte_end":347086,"line_start":1435,"line_end":1435,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(NaiveDate::from_ymd(-308, 3, 14).ordinal0(), 73);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":347091,"byte_end":347155,"line_start":1436,"line_end":1436,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":347160,"byte_end":347167,"line_start":1437,"line_end":1437,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":347172,"byte_end":347181,"line_start":1438,"line_end":1438,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1134},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":347580,"byte_end":347587,"line_start":1454,"line_end":1454,"column_start":8,"column_end":15},"name":"weekday","qualname":"<NaiveDate as traits::Datelike>::weekday","value":"fn weekday(&Self) -> Weekday","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1996},"docs":" Returns the day of week.","sig":null,"attributes":[{"value":"/ Returns the day of week.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":347257,"byte_end":347285,"line_start":1443,"line_end":1443,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":347290,"byte_end":347293,"line_start":1444,"line_end":1444,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":347298,"byte_end":347311,"line_start":1445,"line_end":1445,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":347316,"byte_end":347319,"line_start":1446,"line_end":1446,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":347324,"byte_end":347331,"line_start":1447,"line_end":1447,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":347336,"byte_end":347383,"line_start":1448,"line_end":1448,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":347388,"byte_end":347391,"line_start":1449,"line_end":1449,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).weekday(), Weekday::Tue);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":347396,"byte_end":347468,"line_start":1450,"line_end":1450,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(NaiveDate::from_ymd(-308, 3, 14).weekday(), Weekday::Fri);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":347473,"byte_end":347546,"line_start":1451,"line_end":1451,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":347551,"byte_end":347558,"line_start":1452,"line_end":1452,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":347563,"byte_end":347572,"line_start":1453,"line_end":1453,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1135},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":347664,"byte_end":347672,"line_start":1459,"line_end":1459,"column_start":8,"column_end":16},"name":"iso_week","qualname":"<NaiveDate as traits::Datelike>::iso_week","value":"fn iso_week(&Self) -> IsoWeek","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1997},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":347647,"byte_end":347656,"line_start":1458,"line_end":1458,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1136},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":348611,"byte_end":348620,"line_start":1486,"line_end":1486,"column_start":8,"column_end":17},"name":"with_year","qualname":"<NaiveDate as traits::Datelike>::with_year","value":"fn with_year(&Self, i32) -> Option<NaiveDate>","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1998},"docs":" Makes a new `NaiveDate` with the year number changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` with the year number changed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":347763,"byte_end":347820,"line_start":1463,"line_end":1463,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":347825,"byte_end":347828,"line_start":1464,"line_end":1464,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDate` would be invalid.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":347833,"byte_end":347900,"line_start":1465,"line_end":1465,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":347905,"byte_end":347908,"line_start":1466,"line_end":1466,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":347913,"byte_end":347926,"line_start":1467,"line_end":1467,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":347931,"byte_end":347934,"line_start":1468,"line_end":1468,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":347939,"byte_end":347946,"line_start":1469,"line_end":1469,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":347951,"byte_end":347989,"line_start":1470,"line_end":1470,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":347994,"byte_end":347997,"line_start":1471,"line_end":1471,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).with_year(2016),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":348002,"byte_end":348065,"line_start":1472,"line_end":1472,"column_start":5,"column_end":68}},{"value":"/            Some(NaiveDate::from_ymd(2016, 9, 8)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":348070,"byte_end":348124,"line_start":1473,"line_end":1473,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).with_year(-308),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":348129,"byte_end":348192,"line_start":1474,"line_end":1474,"column_start":5,"column_end":68}},{"value":"/            Some(NaiveDate::from_ymd(-308, 9, 8)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":348197,"byte_end":348251,"line_start":1475,"line_end":1475,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":348256,"byte_end":348263,"line_start":1476,"line_end":1476,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":348268,"byte_end":348271,"line_start":1477,"line_end":1477,"column_start":5,"column_end":8}},{"value":"/ A leap day (February 29) is a good example that this method can return `None`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":348276,"byte_end":348358,"line_start":1478,"line_end":1478,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":348363,"byte_end":348366,"line_start":1479,"line_end":1479,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":348371,"byte_end":348378,"line_start":1480,"line_end":1480,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":348383,"byte_end":348423,"line_start":1481,"line_end":1481,"column_start":5,"column_end":45}},{"value":"/ assert!(NaiveDate::from_ymd(2016, 2, 29).with_year(2015).is_none());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":348428,"byte_end":348500,"line_start":1482,"line_end":1482,"column_start":5,"column_end":77}},{"value":"/ assert!(NaiveDate::from_ymd(2016, 2, 29).with_year(2020).is_some());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":348505,"byte_end":348577,"line_start":1483,"line_end":1483,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":348582,"byte_end":348589,"line_start":1484,"line_end":1484,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":348594,"byte_end":348603,"line_start":1485,"line_end":1485,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1137},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":349559,"byte_end":349569,"line_start":1512,"line_end":1512,"column_start":8,"column_end":18},"name":"with_month","qualname":"<NaiveDate as traits::Datelike>::with_month","value":"fn with_month(&Self, u32) -> Option<NaiveDate>","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1999},"docs":" Makes a new `NaiveDate` with the month number (starting from 1) changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` with the month number (starting from 1) changed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":348964,"byte_end":349040,"line_start":1497,"line_end":1497,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":349045,"byte_end":349048,"line_start":1498,"line_end":1498,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDate` would be invalid.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":349053,"byte_end":349120,"line_start":1499,"line_end":1499,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":349125,"byte_end":349128,"line_start":1500,"line_end":1500,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":349133,"byte_end":349146,"line_start":1501,"line_end":1501,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":349151,"byte_end":349154,"line_start":1502,"line_end":1502,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":349159,"byte_end":349166,"line_start":1503,"line_end":1503,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":349171,"byte_end":349209,"line_start":1504,"line_end":1504,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":349214,"byte_end":349217,"line_start":1505,"line_end":1505,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).with_month(10),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":349222,"byte_end":349284,"line_start":1506,"line_end":1506,"column_start":5,"column_end":67}},{"value":"/            Some(NaiveDate::from_ymd(2015, 10, 8)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":349289,"byte_end":349344,"line_start":1507,"line_end":1507,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).with_month(13), None); // no month 13","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":349349,"byte_end":349433,"line_start":1508,"line_end":1508,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 30).with_month(2), None); // no February 30","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":349438,"byte_end":349525,"line_start":1509,"line_end":1509,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":349530,"byte_end":349537,"line_start":1510,"line_end":1510,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":349542,"byte_end":349551,"line_start":1511,"line_end":1511,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":350272,"byte_end":350283,"line_start":1531,"line_end":1531,"column_start":8,"column_end":19},"name":"with_month0","qualname":"<NaiveDate as traits::Datelike>::with_month0","value":"fn with_month0(&Self, u32) -> Option<NaiveDate>","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":2000},"docs":" Makes a new `NaiveDate` with the month number (starting from 0) changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` with the month number (starting from 0) changed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":349675,"byte_end":349751,"line_start":1516,"line_end":1516,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":349756,"byte_end":349759,"line_start":1517,"line_end":1517,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDate` would be invalid.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":349764,"byte_end":349831,"line_start":1518,"line_end":1518,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":349836,"byte_end":349839,"line_start":1519,"line_end":1519,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":349844,"byte_end":349857,"line_start":1520,"line_end":1520,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":349862,"byte_end":349865,"line_start":1521,"line_end":1521,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":349870,"byte_end":349877,"line_start":1522,"line_end":1522,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":349882,"byte_end":349920,"line_start":1523,"line_end":1523,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":349925,"byte_end":349928,"line_start":1524,"line_end":1524,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).with_month0(9),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":349933,"byte_end":349995,"line_start":1525,"line_end":1525,"column_start":5,"column_end":67}},{"value":"/            Some(NaiveDate::from_ymd(2015, 10, 8)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":350000,"byte_end":350055,"line_start":1526,"line_end":1526,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).with_month0(12), None); // no month 13","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":350060,"byte_end":350145,"line_start":1527,"line_end":1527,"column_start":5,"column_end":90}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 30).with_month0(1), None); // no February 30","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":350150,"byte_end":350238,"line_start":1528,"line_end":1528,"column_start":5,"column_end":93}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":350243,"byte_end":350250,"line_start":1529,"line_end":1529,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":350255,"byte_end":350264,"line_start":1530,"line_end":1530,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":350917,"byte_end":350925,"line_start":1550,"line_end":1550,"column_start":8,"column_end":16},"name":"with_day","qualname":"<NaiveDate as traits::Datelike>::with_day","value":"fn with_day(&Self, u32) -> Option<NaiveDate>","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":2001},"docs":" Makes a new `NaiveDate` with the day of month (starting from 1) changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` with the day of month (starting from 1) changed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":350395,"byte_end":350471,"line_start":1535,"line_end":1535,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":350476,"byte_end":350479,"line_start":1536,"line_end":1536,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDate` would be invalid.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":350484,"byte_end":350551,"line_start":1537,"line_end":1537,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":350556,"byte_end":350559,"line_start":1538,"line_end":1538,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":350564,"byte_end":350577,"line_start":1539,"line_end":1539,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":350582,"byte_end":350585,"line_start":1540,"line_end":1540,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":350590,"byte_end":350597,"line_start":1541,"line_end":1541,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":350602,"byte_end":350640,"line_start":1542,"line_end":1542,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":350645,"byte_end":350648,"line_start":1543,"line_end":1543,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).with_day(30),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":350653,"byte_end":350713,"line_start":1544,"line_end":1544,"column_start":5,"column_end":65}},{"value":"/            Some(NaiveDate::from_ymd(2015, 9, 30)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":350718,"byte_end":350773,"line_start":1545,"line_end":1545,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).with_day(31),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":350778,"byte_end":350838,"line_start":1546,"line_end":1546,"column_start":5,"column_end":65}},{"value":"/            None); // no September 31","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":350843,"byte_end":350883,"line_start":1547,"line_end":1547,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":350888,"byte_end":350895,"line_start":1548,"line_end":1548,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":350900,"byte_end":350909,"line_start":1549,"line_end":1549,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1140},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":351549,"byte_end":351558,"line_start":1569,"line_end":1569,"column_start":8,"column_end":17},"name":"with_day0","qualname":"<NaiveDate as traits::Datelike>::with_day0","value":"fn with_day0(&Self, u32) -> Option<NaiveDate>","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":2002},"docs":" Makes a new `NaiveDate` with the day of month (starting from 0) changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` with the day of month (starting from 0) changed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":351025,"byte_end":351101,"line_start":1554,"line_end":1554,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":351106,"byte_end":351109,"line_start":1555,"line_end":1555,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDate` would be invalid.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":351114,"byte_end":351181,"line_start":1556,"line_end":1556,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":351186,"byte_end":351189,"line_start":1557,"line_end":1557,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":351194,"byte_end":351207,"line_start":1558,"line_end":1558,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":351212,"byte_end":351215,"line_start":1559,"line_end":1559,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":351220,"byte_end":351227,"line_start":1560,"line_end":1560,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":351232,"byte_end":351270,"line_start":1561,"line_end":1561,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":351275,"byte_end":351278,"line_start":1562,"line_end":1562,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).with_day0(29),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":351283,"byte_end":351344,"line_start":1563,"line_end":1563,"column_start":5,"column_end":66}},{"value":"/            Some(NaiveDate::from_ymd(2015, 9, 30)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":351349,"byte_end":351404,"line_start":1564,"line_end":1564,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).with_day0(30),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":351409,"byte_end":351470,"line_start":1565,"line_end":1565,"column_start":5,"column_end":66}},{"value":"/            None); // no September 31","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":351475,"byte_end":351515,"line_start":1566,"line_end":1566,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":351520,"byte_end":351527,"line_start":1567,"line_end":1567,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":351532,"byte_end":351541,"line_start":1568,"line_end":1568,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1141},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":352468,"byte_end":352480,"line_start":1593,"line_end":1593,"column_start":8,"column_end":20},"name":"with_ordinal","qualname":"<NaiveDate as traits::Datelike>::with_ordinal","value":"fn with_ordinal(&Self, u32) -> Option<NaiveDate>","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":2003},"docs":" Makes a new `NaiveDate` with the day of year (starting from 1) changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` with the day of year (starting from 1) changed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":351664,"byte_end":351739,"line_start":1573,"line_end":1573,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":351744,"byte_end":351747,"line_start":1574,"line_end":1574,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDate` would be invalid.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":351752,"byte_end":351819,"line_start":1575,"line_end":1575,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":351824,"byte_end":351827,"line_start":1576,"line_end":1576,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":351832,"byte_end":351845,"line_start":1577,"line_end":1577,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":351850,"byte_end":351853,"line_start":1578,"line_end":1578,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":351858,"byte_end":351865,"line_start":1579,"line_end":1579,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":351870,"byte_end":351908,"line_start":1580,"line_end":1580,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":351913,"byte_end":351916,"line_start":1581,"line_end":1581,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 1, 1).with_ordinal(60),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":351921,"byte_end":351985,"line_start":1582,"line_end":1582,"column_start":5,"column_end":69}},{"value":"/            Some(NaiveDate::from_ymd(2015, 3, 1)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":351990,"byte_end":352044,"line_start":1583,"line_end":1583,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 1, 1).with_ordinal(366),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":352049,"byte_end":352114,"line_start":1584,"line_end":1584,"column_start":5,"column_end":70}},{"value":"/            None); // 2015 had only 365 days","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":352119,"byte_end":352166,"line_start":1585,"line_end":1585,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":352171,"byte_end":352174,"line_start":1586,"line_end":1586,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2016, 1, 1).with_ordinal(60),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":352179,"byte_end":352243,"line_start":1587,"line_end":1587,"column_start":5,"column_end":69}},{"value":"/            Some(NaiveDate::from_ymd(2016, 2, 29)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":352248,"byte_end":352303,"line_start":1588,"line_end":1588,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2016, 1, 1).with_ordinal(366),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":352308,"byte_end":352373,"line_start":1589,"line_end":1589,"column_start":5,"column_end":70}},{"value":"/            Some(NaiveDate::from_ymd(2016, 12, 31)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":352378,"byte_end":352434,"line_start":1590,"line_end":1590,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":352439,"byte_end":352446,"line_start":1591,"line_end":1591,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":352451,"byte_end":352460,"line_start":1592,"line_end":1592,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1142},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":353398,"byte_end":353411,"line_start":1617,"line_end":1617,"column_start":8,"column_end":21},"name":"with_ordinal0","qualname":"<NaiveDate as traits::Datelike>::with_ordinal0","value":"fn with_ordinal0(&Self, u32) -> Option<NaiveDate>","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":2004},"docs":" Makes a new `NaiveDate` with the day of year (starting from 0) changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` with the day of year (starting from 0) changed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":352590,"byte_end":352665,"line_start":1597,"line_end":1597,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":352670,"byte_end":352673,"line_start":1598,"line_end":1598,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDate` would be invalid.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":352678,"byte_end":352745,"line_start":1599,"line_end":1599,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":352750,"byte_end":352753,"line_start":1600,"line_end":1600,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":352758,"byte_end":352771,"line_start":1601,"line_end":1601,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":352776,"byte_end":352779,"line_start":1602,"line_end":1602,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":352784,"byte_end":352791,"line_start":1603,"line_end":1603,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":352796,"byte_end":352834,"line_start":1604,"line_end":1604,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":352839,"byte_end":352842,"line_start":1605,"line_end":1605,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 1, 1).with_ordinal0(59),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":352847,"byte_end":352912,"line_start":1606,"line_end":1606,"column_start":5,"column_end":70}},{"value":"/            Some(NaiveDate::from_ymd(2015, 3, 1)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":352917,"byte_end":352971,"line_start":1607,"line_end":1607,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 1, 1).with_ordinal0(365),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":352976,"byte_end":353042,"line_start":1608,"line_end":1608,"column_start":5,"column_end":71}},{"value":"/            None); // 2015 had only 365 days","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":353047,"byte_end":353094,"line_start":1609,"line_end":1609,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":353099,"byte_end":353102,"line_start":1610,"line_end":1610,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2016, 1, 1).with_ordinal0(59),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":353107,"byte_end":353172,"line_start":1611,"line_end":1611,"column_start":5,"column_end":70}},{"value":"/            Some(NaiveDate::from_ymd(2016, 2, 29)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":353177,"byte_end":353232,"line_start":1612,"line_end":1612,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2016, 1, 1).with_ordinal0(365),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":353237,"byte_end":353303,"line_start":1613,"line_end":1613,"column_start":5,"column_end":71}},{"value":"/            Some(NaiveDate::from_ymd(2016, 12, 31)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":353308,"byte_end":353364,"line_start":1614,"line_end":1614,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":353369,"byte_end":353376,"line_start":1615,"line_end":1615,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":353381,"byte_end":353390,"line_start":1616,"line_end":1616,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1145},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":354753,"byte_end":354756,"line_start":1648,"line_end":1648,"column_start":8,"column_end":11},"name":"add","qualname":"<NaiveDate as core::ops::Add>::add","value":"fn add(Self, OldDuration) -> NaiveDate","parent":{"krate":1,"index":3218},"children":[],"decl_id":{"krate":1,"index":3221},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":354736,"byte_end":354745,"line_start":1647,"line_end":1647,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1147},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":354951,"byte_end":354961,"line_start":1655,"line_end":1655,"column_start":8,"column_end":18},"name":"add_assign","qualname":"<NaiveDate as core::ops::AddAssign>::add_assign","value":"fn add_assign(&mut Self, OldDuration)","parent":{"krate":1,"index":3249},"children":[],"decl_id":{"krate":1,"index":3251},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":354934,"byte_end":354943,"line_start":1654,"line_end":1654,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1150},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":355946,"byte_end":355949,"line_start":1683,"line_end":1683,"column_start":8,"column_end":11},"name":"add","qualname":"<NaiveDate as core::ops::Add>::add","value":"fn add(Self, Months) -> Self::Output","parent":{"krate":1,"index":3218},"children":[],"decl_id":{"krate":1,"index":3221},"docs":" An addition of months to `NaiveDate` clamped to valid days in resulting month.","sig":null,"attributes":[{"value":"/ An addition of months to `NaiveDate` clamped to valid days in resulting month.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":355100,"byte_end":355182,"line_start":1663,"line_end":1663,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":355187,"byte_end":355190,"line_start":1664,"line_end":1664,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":355195,"byte_end":355207,"line_start":1665,"line_end":1665,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":355212,"byte_end":355215,"line_start":1666,"line_end":1666,"column_start":5,"column_end":8}},{"value":"/ Panics if the resulting date would be out of range.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":355220,"byte_end":355275,"line_start":1667,"line_end":1667,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":355280,"byte_end":355283,"line_start":1668,"line_end":1668,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":355288,"byte_end":355301,"line_start":1669,"line_end":1669,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":355306,"byte_end":355309,"line_start":1670,"line_end":1670,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":355314,"byte_end":355321,"line_start":1671,"line_end":1671,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Duration, NaiveDate, Months};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":355326,"byte_end":355372,"line_start":1672,"line_end":1672,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":355377,"byte_end":355380,"line_start":1673,"line_end":1673,"column_start":5,"column_end":8}},{"value":"/ let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":355385,"byte_end":355424,"line_start":1674,"line_end":1674,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":355429,"byte_end":355432,"line_start":1675,"line_end":1675,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from_ymd(2014, 1, 1) + Months::new(1), from_ymd(2014, 2, 1));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":355437,"byte_end":355513,"line_start":1676,"line_end":1676,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(from_ymd(2014, 1, 1) + Months::new(11), from_ymd(2014, 12, 1));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":355518,"byte_end":355596,"line_start":1677,"line_end":1677,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(from_ymd(2014, 1, 1) + Months::new(12), from_ymd(2015, 1, 1));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":355601,"byte_end":355678,"line_start":1678,"line_end":1678,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(from_ymd(2014, 1, 1) + Months::new(13), from_ymd(2015, 2, 1));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":355683,"byte_end":355760,"line_start":1679,"line_end":1679,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(from_ymd(2014, 1, 31) + Months::new(1), from_ymd(2014, 2, 28));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":355765,"byte_end":355843,"line_start":1680,"line_end":1680,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(from_ymd(2020, 1, 31) + Months::new(1), from_ymd(2020, 2, 29));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":355848,"byte_end":355926,"line_start":1681,"line_end":1681,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":355931,"byte_end":355938,"line_start":1682,"line_end":1682,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1153},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":356718,"byte_end":356721,"line_start":1708,"line_end":1708,"column_start":8,"column_end":11},"name":"sub","qualname":"<NaiveDate as core::ops::Sub>::sub","value":"fn sub(Self, Months) -> Self::Output","parent":{"krate":1,"index":3223},"children":[],"decl_id":{"krate":1,"index":3226},"docs":" A subtraction of Months from `NaiveDate` clamped to valid days in resulting month.","sig":null,"attributes":[{"value":"/ A subtraction of Months from `NaiveDate` clamped to valid days in resulting month.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":356115,"byte_end":356201,"line_start":1691,"line_end":1691,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":356206,"byte_end":356209,"line_start":1692,"line_end":1692,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":356214,"byte_end":356226,"line_start":1693,"line_end":1693,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":356231,"byte_end":356234,"line_start":1694,"line_end":1694,"column_start":5,"column_end":8}},{"value":"/ Panics if the resulting date would be out of range.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":356239,"byte_end":356294,"line_start":1695,"line_end":1695,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":356299,"byte_end":356302,"line_start":1696,"line_end":1696,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":356307,"byte_end":356320,"line_start":1697,"line_end":1697,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":356325,"byte_end":356328,"line_start":1698,"line_end":1698,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":356333,"byte_end":356340,"line_start":1699,"line_end":1699,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Duration, NaiveDate, Months};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":356345,"byte_end":356391,"line_start":1700,"line_end":1700,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":356396,"byte_end":356399,"line_start":1701,"line_end":1701,"column_start":5,"column_end":8}},{"value":"/ let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":356404,"byte_end":356443,"line_start":1702,"line_end":1702,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":356448,"byte_end":356451,"line_start":1703,"line_end":1703,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from_ymd(2014, 1, 1) - Months::new(11), from_ymd(2013, 2, 1));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":356456,"byte_end":356533,"line_start":1704,"line_end":1704,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(from_ymd(2014, 1, 1) - Months::new(12), from_ymd(2013, 1, 1));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":356538,"byte_end":356615,"line_start":1705,"line_end":1705,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(from_ymd(2014, 1, 1) - Months::new(13), from_ymd(2012, 12, 1));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":356620,"byte_end":356698,"line_start":1706,"line_end":1706,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":356703,"byte_end":356710,"line_start":1707,"line_end":1707,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1156},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":358112,"byte_end":358115,"line_start":1740,"line_end":1740,"column_start":8,"column_end":11},"name":"sub","qualname":"<NaiveDate as core::ops::Sub>::sub","value":"fn sub(Self, OldDuration) -> NaiveDate","parent":{"krate":1,"index":3223},"children":[],"decl_id":{"krate":1,"index":3226},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":358095,"byte_end":358104,"line_start":1739,"line_end":1739,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1158},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":358310,"byte_end":358320,"line_start":1747,"line_end":1747,"column_start":8,"column_end":18},"name":"sub_assign","qualname":"<NaiveDate as core::ops::SubAssign>::sub_assign","value":"fn sub_assign(&mut Self, OldDuration)","parent":{"krate":1,"index":3253},"children":[],"decl_id":{"krate":1,"index":3255},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":358293,"byte_end":358302,"line_start":1746,"line_end":1746,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1161},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":359527,"byte_end":359530,"line_start":1780,"line_end":1780,"column_start":8,"column_end":11},"name":"sub","qualname":"<NaiveDate as core::ops::Sub>::sub","value":"fn sub(Self, NaiveDate) -> OldDuration","parent":{"krate":1,"index":3223},"children":[],"decl_id":{"krate":1,"index":3226},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":359510,"byte_end":359519,"line_start":1779,"line_end":1779,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2416},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":359757,"byte_end":359778,"line_start":1787,"line_end":1787,"column_start":12,"column_end":33},"name":"NaiveDateDaysIterator","qualname":"::naive::date::NaiveDateDaysIterator","value":"NaiveDateDaysIterator {  }","parent":null,"children":[{"krate":0,"index":2417}],"decl_id":null,"docs":" Iterator over `NaiveDate` with a step size of one day.\n","sig":null,"attributes":[{"value":"/ Iterator over `NaiveDate` with a step size of one day.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":359619,"byte_end":359677,"line_start":1785,"line_end":1785,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":359883,"byte_end":359887,"line_start":1794,"line_end":1794,"column_start":8,"column_end":12},"name":"next","qualname":"<NaiveDateDaysIterator as core::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":1,"index":8186},"children":[],"decl_id":{"krate":1,"index":8188},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":360222,"byte_end":360231,"line_start":1805,"line_end":1805,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<NaiveDateDaysIterator as core::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":1,"index":8186},"children":[],"decl_id":{"krate":1,"index":8189},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1168},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":360532,"byte_end":360541,"line_start":1814,"line_end":1814,"column_start":8,"column_end":17},"name":"next_back","qualname":"<NaiveDateDaysIterator as core::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<Self::Item>","parent":{"krate":1,"index":8035},"children":[],"decl_id":{"krate":1,"index":8036},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2437},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":360835,"byte_end":360857,"line_start":1825,"line_end":1825,"column_start":12,"column_end":34},"name":"NaiveDateWeeksIterator","qualname":"::naive::date::NaiveDateWeeksIterator","value":"NaiveDateWeeksIterator {  }","parent":null,"children":[{"krate":0,"index":2438}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1171},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":360963,"byte_end":360967,"line_start":1832,"line_end":1832,"column_start":8,"column_end":12},"name":"next","qualname":"<NaiveDateWeeksIterator as core::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":1,"index":8186},"children":[],"decl_id":{"krate":1,"index":8188},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1172},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":361227,"byte_end":361236,"line_start":1841,"line_end":1841,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<NaiveDateWeeksIterator as core::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":1,"index":8186},"children":[],"decl_id":{"krate":1,"index":8189},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1175},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":361540,"byte_end":361549,"line_start":1850,"line_end":1850,"column_start":8,"column_end":17},"name":"next_back","qualname":"<NaiveDateWeeksIterator as core::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<Self::Item>","parent":{"krate":1,"index":8035},"children":[],"decl_id":{"krate":1,"index":8036},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1177},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":362861,"byte_end":362864,"line_start":1887,"line_end":1887,"column_start":8,"column_end":11},"name":"fmt","qualname":"<NaiveDate as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9902},"children":[],"decl_id":{"krate":1,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1179},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":364125,"byte_end":364128,"line_start":1922,"line_end":1922,"column_start":8,"column_end":11},"name":"fmt","qualname":"<NaiveDate as core::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9909},"children":[],"decl_id":{"krate":1,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1182},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":364762,"byte_end":364770,"line_start":1946,"line_end":1946,"column_start":8,"column_end":16},"name":"from_str","qualname":"<NaiveDate as core::str::FromStr>::from_str","value":"fn from_str(&str) -> ParseResult<NaiveDate>","parent":{"krate":1,"index":12556},"children":[],"decl_id":{"krate":1,"index":12558},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1185},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":365578,"byte_end":365585,"line_start":1975,"line_end":1975,"column_start":8,"column_end":15},"name":"default","qualname":"<NaiveDate as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3128},"children":[],"decl_id":{"krate":1,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1275},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":399878,"byte_end":399890,"line_start":44,"line_end":44,"column_start":11,"column_end":23},"name":"MIN_DATETIME","qualname":"::naive::datetime::MIN_DATETIME","value":"NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" The minimum possible `NaiveDateTime`.\n","sig":null,"attributes":[{"value":"/ The minimum possible `NaiveDateTime`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":399753,"byte_end":399794,"line_start":42,"line_end":42,"column_start":1,"column_end":42}},{"value":"deprecated(since = \"0.4.20\", note = \"Use NaiveDateTime::MIN instead\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":399795,"byte_end":399867,"line_start":43,"line_end":43,"column_start":1,"column_end":73}}]},{"kind":"Const","id":{"krate":0,"index":1276},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":400053,"byte_end":400065,"line_start":47,"line_end":47,"column_start":11,"column_end":23},"name":"MAX_DATETIME","qualname":"::naive::datetime::MAX_DATETIME","value":"NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" The maximum possible `NaiveDateTime`.\n","sig":null,"attributes":[{"value":"/ The maximum possible `NaiveDateTime`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":399928,"byte_end":399969,"line_start":45,"line_end":45,"column_start":1,"column_end":42}},{"value":"deprecated(since = \"0.4.20\", note = \"Use NaiveDateTime::MAX instead\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":399970,"byte_end":400042,"line_start":46,"line_end":46,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":2458},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":401041,"byte_end":401054,"line_start":76,"line_end":76,"column_start":12,"column_end":25},"name":"NaiveDateTime","qualname":"::naive::datetime::NaiveDateTime","value":"NaiveDateTime {  }","parent":null,"children":[{"krate":0,"index":2459},{"krate":0,"index":2460}],"decl_id":null,"docs":" ISO 8601 combined date and time without timezone.","sig":null,"attributes":[{"value":"/ ISO 8601 combined date and time without timezone.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":400104,"byte_end":400157,"line_start":49,"line_end":49,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":400158,"byte_end":400161,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":400162,"byte_end":400175,"line_start":51,"line_end":51,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":400176,"byte_end":400179,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ `NaiveDateTime` is commonly created from [`NaiveDate`](./struct.NaiveDate.html).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":400180,"byte_end":400264,"line_start":53,"line_end":53,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":400265,"byte_end":400268,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":400269,"byte_end":400276,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":400277,"byte_end":400320,"line_start":56,"line_end":56,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":400321,"byte_end":400324,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2016, 7, 8).and_hms(9, 10, 11);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":400325,"byte_end":400404,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ # let _ = dt;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":400405,"byte_end":400422,"line_start":59,"line_end":59,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":400423,"byte_end":400430,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":400431,"byte_end":400434,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ You can use typical [date-like](../trait.Datelike.html) and","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":400435,"byte_end":400498,"line_start":62,"line_end":62,"column_start":1,"column_end":64}},{"value":"/ [time-like](../trait.Timelike.html) methods,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":400499,"byte_end":400547,"line_start":63,"line_end":63,"column_start":1,"column_end":49}},{"value":"/ provided that relevant traits are in the scope.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":400548,"byte_end":400599,"line_start":64,"line_end":64,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":400600,"byte_end":400603,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":400604,"byte_end":400611,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ # use chrono::{NaiveDate, NaiveDateTime};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":400612,"byte_end":400657,"line_start":67,"line_end":67,"column_start":1,"column_end":46}},{"value":"/ # let dt: NaiveDateTime = NaiveDate::from_ymd(2016, 7, 8).and_hms(9, 10, 11);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":400658,"byte_end":400739,"line_start":68,"line_end":68,"column_start":1,"column_end":82}},{"value":"/ use chrono::{Datelike, Timelike, Weekday};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":400740,"byte_end":400786,"line_start":69,"line_end":69,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":400787,"byte_end":400790,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(dt.weekday(), Weekday::Fri);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":400791,"byte_end":400834,"line_start":71,"line_end":71,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(dt.num_seconds_from_midnight(), 33011);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":400835,"byte_end":400889,"line_start":72,"line_end":72,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":400890,"byte_end":400897,"line_start":73,"line_end":73,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1278},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":401714,"byte_end":401717,"line_start":99,"line_end":99,"column_start":12,"column_end":15},"name":"new","qualname":"<NaiveDateTime>::new","value":"fn new(NaiveDate, NaiveTime) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from date and time components.\n Equivalent to [`date.and_time(time)`](./struct.NaiveDate.html#method.and_time)\n and many other helper constructors on `NaiveDate`.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from date and time components.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":401127,"byte_end":401189,"line_start":82,"line_end":82,"column_start":5,"column_end":67}},{"value":"/ Equivalent to [`date.and_time(time)`](./struct.NaiveDate.html#method.and_time)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":401194,"byte_end":401276,"line_start":83,"line_end":83,"column_start":5,"column_end":87}},{"value":"/ and many other helper constructors on `NaiveDate`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":401281,"byte_end":401335,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":401340,"byte_end":401343,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":401348,"byte_end":401361,"line_start":86,"line_end":86,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":401366,"byte_end":401369,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":401374,"byte_end":401381,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveTime, NaiveDateTime};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":401386,"byte_end":401440,"line_start":89,"line_end":89,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":401445,"byte_end":401448,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":401453,"byte_end":401497,"line_start":91,"line_end":91,"column_start":5,"column_end":49}},{"value":"/ let t = NaiveTime::from_hms_milli(12, 34, 56, 789);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":401502,"byte_end":401557,"line_start":92,"line_end":92,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":401562,"byte_end":401565,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDateTime::new(d, t);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":401570,"byte_end":401608,"line_start":94,"line_end":94,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(dt.date(), d);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":401613,"byte_end":401642,"line_start":95,"line_end":95,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(dt.time(), t);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":401647,"byte_end":401676,"line_start":96,"line_end":96,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":401681,"byte_end":401688,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":401693,"byte_end":401702,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1279},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":402986,"byte_end":403000,"line_start":129,"line_end":129,"column_start":12,"column_end":26},"name":"from_timestamp","qualname":"<NaiveDateTime>::from_timestamp","value":"fn from_timestamp(i64, u32) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` corresponding to a UTC date and time,\n from the number of non-leap seconds\n since the midnight UTC on January 1, 1970 (aka \"UNIX timestamp\")\n and the number of nanoseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` corresponding to a UTC date and time,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":401819,"byte_end":401888,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/ from the number of non-leap seconds","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":401893,"byte_end":401932,"line_start":104,"line_end":104,"column_start":5,"column_end":44}},{"value":"/ since the midnight UTC on January 1, 1970 (aka \"UNIX timestamp\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":401937,"byte_end":402005,"line_start":105,"line_end":105,"column_start":5,"column_end":73}},{"value":"/ and the number of nanoseconds since the last whole non-leap second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":402010,"byte_end":402081,"line_start":106,"line_end":106,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":402086,"byte_end":402089,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ For a non-naive version of this function see","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":402094,"byte_end":402142,"line_start":108,"line_end":108,"column_start":5,"column_end":53}},{"value":"/ [`TimeZone::timestamp`](../offset/trait.TimeZone.html#method.timestamp).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":402147,"byte_end":402223,"line_start":109,"line_end":109,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":402228,"byte_end":402231,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ The nanosecond part can exceed 1,000,000,000 in order to represent the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":402236,"byte_end":402310,"line_start":111,"line_end":111,"column_start":5,"column_end":79}},{"value":"/ [leap second](./struct.NaiveTime.html#leap-second-handling). (The true \"UNIX","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":402315,"byte_end":402395,"line_start":112,"line_end":112,"column_start":5,"column_end":85}},{"value":"/ timestamp\" cannot represent a leap second unambiguously.)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":402400,"byte_end":402461,"line_start":113,"line_end":113,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":402466,"byte_end":402469,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-range number of seconds and/or invalid nanosecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":402474,"byte_end":402549,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":402554,"byte_end":402557,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":402562,"byte_end":402575,"line_start":117,"line_end":117,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":402580,"byte_end":402583,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":402588,"byte_end":402595,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDateTime, NaiveDate};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":402600,"byte_end":402643,"line_start":120,"line_end":120,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":402648,"byte_end":402651,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDateTime::from_timestamp(0, 42_000_000);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":402656,"byte_end":402714,"line_start":122,"line_end":122,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(dt, NaiveDate::from_ymd(1970, 1, 1).and_hms_milli(0, 0, 0, 42));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":402719,"byte_end":402798,"line_start":123,"line_end":123,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":402803,"byte_end":402806,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDateTime::from_timestamp(1_000_000_000, 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":402811,"byte_end":402872,"line_start":125,"line_end":125,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(dt, NaiveDate::from_ymd(2001, 9, 9).and_hms(1, 46, 40));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":402877,"byte_end":402948,"line_start":126,"line_end":126,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":402953,"byte_end":402960,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":402965,"byte_end":402974,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1280},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":404340,"byte_end":404358,"line_start":160,"line_end":160,"column_start":12,"column_end":30},"name":"from_timestamp_opt","qualname":"<NaiveDateTime>::from_timestamp_opt","value":"fn from_timestamp_opt(i64, u32) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` corresponding to a UTC date and time,\n from the number of non-leap seconds\n since the midnight UTC on January 1, 1970 (aka \"UNIX timestamp\")\n and the number of nanoseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` corresponding to a UTC date and time,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":403185,"byte_end":403254,"line_start":134,"line_end":134,"column_start":5,"column_end":74}},{"value":"/ from the number of non-leap seconds","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":403259,"byte_end":403298,"line_start":135,"line_end":135,"column_start":5,"column_end":44}},{"value":"/ since the midnight UTC on January 1, 1970 (aka \"UNIX timestamp\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":403303,"byte_end":403371,"line_start":136,"line_end":136,"column_start":5,"column_end":73}},{"value":"/ and the number of nanoseconds since the last whole non-leap second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":403376,"byte_end":403447,"line_start":137,"line_end":137,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":403452,"byte_end":403455,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ The nanosecond part can exceed 1,000,000,000","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":403460,"byte_end":403508,"line_start":139,"line_end":139,"column_start":5,"column_end":53}},{"value":"/ in order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":403513,"byte_end":403603,"line_start":140,"line_end":140,"column_start":5,"column_end":95}},{"value":"/ (The true \"UNIX timestamp\" cannot represent a leap second unambiguously.)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":403608,"byte_end":403685,"line_start":141,"line_end":141,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":403690,"byte_end":403693,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-range number of seconds and/or invalid nanosecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":403698,"byte_end":403781,"line_start":143,"line_end":143,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":403786,"byte_end":403789,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":403794,"byte_end":403807,"line_start":145,"line_end":145,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":403812,"byte_end":403815,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":403820,"byte_end":403827,"line_start":147,"line_end":147,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDateTime, NaiveDate};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":403832,"byte_end":403875,"line_start":148,"line_end":148,"column_start":5,"column_end":48}},{"value":"/ use std::i64;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":403880,"byte_end":403897,"line_start":149,"line_end":149,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":403902,"byte_end":403905,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ let from_timestamp_opt = NaiveDateTime::from_timestamp_opt;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":403910,"byte_end":403973,"line_start":151,"line_end":151,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":403978,"byte_end":403981,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ assert!(from_timestamp_opt(0, 0).is_some());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":403986,"byte_end":404034,"line_start":153,"line_end":153,"column_start":5,"column_end":53}},{"value":"/ assert!(from_timestamp_opt(0, 999_999_999).is_some());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":404039,"byte_end":404097,"line_start":154,"line_end":154,"column_start":5,"column_end":63}},{"value":"/ assert!(from_timestamp_opt(0, 1_500_000_000).is_some()); // leap second","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":404102,"byte_end":404177,"line_start":155,"line_end":155,"column_start":5,"column_end":80}},{"value":"/ assert!(from_timestamp_opt(0, 2_000_000_000).is_none());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":404182,"byte_end":404242,"line_start":156,"line_end":156,"column_start":5,"column_end":65}},{"value":"/ assert!(from_timestamp_opt(i64::MAX, 0).is_none());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":404247,"byte_end":404302,"line_start":157,"line_end":157,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":404307,"byte_end":404314,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":404319,"byte_end":404328,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1282},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":407721,"byte_end":407735,"line_start":234,"line_end":234,"column_start":12,"column_end":26},"name":"parse_from_str","qualname":"<NaiveDateTime>::parse_from_str","value":"fn parse_from_str(&str, &str) -> ParseResult<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Parses a string with the specified format string and returns a new `NaiveDateTime`.\n See the [`format::strftime` module](../format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[{"value":"/ Parses a string with the specified format string and returns a new `NaiveDateTime`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":404868,"byte_end":404955,"line_start":173,"line_end":173,"column_start":5,"column_end":92}},{"value":"/ See the [`format::strftime` module](../format/strftime/index.html)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":404960,"byte_end":405030,"line_start":174,"line_end":174,"column_start":5,"column_end":75}},{"value":"/ on the supported escape sequences.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":405035,"byte_end":405073,"line_start":175,"line_end":175,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":405078,"byte_end":405081,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":405086,"byte_end":405099,"line_start":177,"line_end":177,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":405104,"byte_end":405107,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":405112,"byte_end":405119,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDateTime, NaiveDate};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":405124,"byte_end":405167,"line_start":180,"line_end":180,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":405172,"byte_end":405175,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ let parse_from_str = NaiveDateTime::parse_from_str;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":405180,"byte_end":405235,"line_start":182,"line_end":182,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":405240,"byte_end":405243,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(parse_from_str(\"2015-09-05 23:56:04\", \"%Y-%m-%d %H:%M:%S\"),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":405248,"byte_end":405322,"line_start":184,"line_end":184,"column_start":5,"column_end":79}},{"value":"/            Ok(NaiveDate::from_ymd(2015, 9, 5).and_hms(23, 56, 4)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":405327,"byte_end":405398,"line_start":185,"line_end":185,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(parse_from_str(\"5sep2015pm012345.6789\", \"%d%b%Y%p%I%M%S%.f\"),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":405403,"byte_end":405479,"line_start":186,"line_end":186,"column_start":5,"column_end":81}},{"value":"/            Ok(NaiveDate::from_ymd(2015, 9, 5).and_hms_micro(13, 23, 45, 678_900)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":405484,"byte_end":405571,"line_start":187,"line_end":187,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":405576,"byte_end":405583,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":405588,"byte_end":405591,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Offset is ignored for the purpose of parsing.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":405596,"byte_end":405645,"line_start":190,"line_end":190,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":405650,"byte_end":405653,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":405658,"byte_end":405665,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{NaiveDateTime, NaiveDate};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":405670,"byte_end":405715,"line_start":193,"line_end":193,"column_start":5,"column_end":50}},{"value":"/ # let parse_from_str = NaiveDateTime::parse_from_str;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":405720,"byte_end":405777,"line_start":194,"line_end":194,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(parse_from_str(\"2014-5-17T12:34:56+09:30\", \"%Y-%m-%dT%H:%M:%S%z\"),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":405782,"byte_end":405863,"line_start":195,"line_end":195,"column_start":5,"column_end":86}},{"value":"/            Ok(NaiveDate::from_ymd(2014, 5, 17).and_hms(12, 34, 56)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":405868,"byte_end":405941,"line_start":196,"line_end":196,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":405946,"byte_end":405953,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":405958,"byte_end":405961,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ [Leap seconds](./struct.NaiveTime.html#leap-second-handling) are correctly handled by","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":405966,"byte_end":406055,"line_start":199,"line_end":199,"column_start":5,"column_end":94}},{"value":"/ treating any time of the form `hh:mm:60` as a leap second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":406060,"byte_end":406122,"line_start":200,"line_end":200,"column_start":5,"column_end":67}},{"value":"/ (This equally applies to the formatting, so the round trip is possible.)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":406127,"byte_end":406203,"line_start":201,"line_end":201,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":406208,"byte_end":406211,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":406216,"byte_end":406223,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{NaiveDateTime, NaiveDate};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":406228,"byte_end":406273,"line_start":204,"line_end":204,"column_start":5,"column_end":50}},{"value":"/ # let parse_from_str = NaiveDateTime::parse_from_str;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":406278,"byte_end":406335,"line_start":205,"line_end":205,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(parse_from_str(\"2015-07-01 08:59:60.123\", \"%Y-%m-%d %H:%M:%S%.f\"),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":406340,"byte_end":406421,"line_start":206,"line_end":206,"column_start":5,"column_end":86}},{"value":"/            Ok(NaiveDate::from_ymd(2015, 7, 1).and_hms_milli(8, 59, 59, 1_123)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":406426,"byte_end":406510,"line_start":207,"line_end":207,"column_start":5,"column_end":89}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":406515,"byte_end":406522,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":406527,"byte_end":406530,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Missing seconds are assumed to be zero,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":406535,"byte_end":406578,"line_start":210,"line_end":210,"column_start":5,"column_end":48}},{"value":"/ but out-of-bound times or insufficient fields are errors otherwise.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":406583,"byte_end":406654,"line_start":211,"line_end":211,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":406659,"byte_end":406662,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":406667,"byte_end":406674,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{NaiveDateTime, NaiveDate};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":406679,"byte_end":406724,"line_start":214,"line_end":214,"column_start":5,"column_end":50}},{"value":"/ # let parse_from_str = NaiveDateTime::parse_from_str;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":406729,"byte_end":406786,"line_start":215,"line_end":215,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(parse_from_str(\"94/9/4 7:15\", \"%y/%m/%d %H:%M\"),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":406791,"byte_end":406854,"line_start":216,"line_end":216,"column_start":5,"column_end":68}},{"value":"/            Ok(NaiveDate::from_ymd(1994, 9, 4).and_hms(7, 15, 0)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":406859,"byte_end":406929,"line_start":217,"line_end":217,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":406934,"byte_end":406937,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ assert!(parse_from_str(\"04m33s\", \"%Mm%Ss\").is_err());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":406942,"byte_end":406999,"line_start":219,"line_end":219,"column_start":5,"column_end":62}},{"value":"/ assert!(parse_from_str(\"94/9/4 12\", \"%y/%m/%d %H\").is_err());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":407004,"byte_end":407069,"line_start":220,"line_end":220,"column_start":5,"column_end":70}},{"value":"/ assert!(parse_from_str(\"94/9/4 17:60\", \"%y/%m/%d %H:%M\").is_err());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":407074,"byte_end":407145,"line_start":221,"line_end":221,"column_start":5,"column_end":76}},{"value":"/ assert!(parse_from_str(\"94/9/4 24:00:00\", \"%y/%m/%d %H:%M:%S\").is_err());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":407150,"byte_end":407227,"line_start":222,"line_end":222,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":407232,"byte_end":407239,"line_start":223,"line_end":223,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":407244,"byte_end":407247,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ All parsed fields should be consistent to each other, otherwise it's an error.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":407252,"byte_end":407334,"line_start":225,"line_end":225,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":407339,"byte_end":407342,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":407347,"byte_end":407354,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ # use chrono::NaiveDateTime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":407359,"byte_end":407391,"line_start":228,"line_end":228,"column_start":5,"column_end":37}},{"value":"/ # let parse_from_str = NaiveDateTime::parse_from_str;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":407396,"byte_end":407453,"line_start":229,"line_end":229,"column_start":5,"column_end":62}},{"value":"/ let fmt = \"%Y-%m-%d %H:%M:%S = UNIX timestamp %s\";","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":407458,"byte_end":407512,"line_start":230,"line_end":230,"column_start":5,"column_end":59}},{"value":"/ assert!(parse_from_str(\"2001-09-09 01:46:39 = UNIX timestamp 999999999\", fmt).is_ok());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":407517,"byte_end":407608,"line_start":231,"line_end":231,"column_start":5,"column_end":96}},{"value":"/ assert!(parse_from_str(\"1970-01-01 00:00:00 = UNIX timestamp 1\", fmt).is_err());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":407613,"byte_end":407697,"line_start":232,"line_end":232,"column_start":5,"column_end":89}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":407702,"byte_end":407709,"line_start":233,"line_end":233,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1283},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":408255,"byte_end":408259,"line_start":251,"line_end":251,"column_start":12,"column_end":16},"name":"date","qualname":"<NaiveDateTime>::date","value":"fn date(&Self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a date component.","sig":null,"attributes":[{"value":"/ Retrieves a date component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":407968,"byte_end":407999,"line_start":240,"line_end":240,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":408004,"byte_end":408007,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":408012,"byte_end":408025,"line_start":242,"line_end":242,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":408030,"byte_end":408033,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":408038,"byte_end":408045,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":408050,"byte_end":408076,"line_start":245,"line_end":245,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":408081,"byte_end":408084,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2016, 7, 8).and_hms(9, 10, 11);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":408089,"byte_end":408153,"line_start":247,"line_end":247,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(dt.date(), NaiveDate::from_ymd(2016, 7, 8));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":408158,"byte_end":408217,"line_start":248,"line_end":248,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":408222,"byte_end":408229,"line_start":249,"line_end":249,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":408234,"byte_end":408243,"line_start":250,"line_end":250,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1284},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":408610,"byte_end":408614,"line_start":266,"line_end":266,"column_start":12,"column_end":16},"name":"time","qualname":"<NaiveDateTime>::time","value":"fn time(&Self) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a time component.","sig":null,"attributes":[{"value":"/ Retrieves a time component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":408311,"byte_end":408342,"line_start":255,"line_end":255,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":408347,"byte_end":408350,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":408355,"byte_end":408368,"line_start":257,"line_end":257,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":408373,"byte_end":408376,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":408381,"byte_end":408388,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveTime};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":408393,"byte_end":408432,"line_start":260,"line_end":260,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":408437,"byte_end":408440,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2016, 7, 8).and_hms(9, 10, 11);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":408445,"byte_end":408509,"line_start":262,"line_end":262,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(dt.time(), NaiveTime::from_hms(9, 10, 11));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":408514,"byte_end":408572,"line_start":263,"line_end":263,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":408577,"byte_end":408584,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":408589,"byte_end":408598,"line_start":265,"line_end":265,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1285},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":409519,"byte_end":409528,"line_start":293,"line_end":293,"column_start":12,"column_end":21},"name":"timestamp","qualname":"<NaiveDateTime>::timestamp","value":"fn timestamp(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap seconds since the midnight on January 1, 1970.","sig":null,"attributes":[{"value":"/ Returns the number of non-leap seconds since the midnight on January 1, 1970.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":408666,"byte_end":408747,"line_start":270,"line_end":270,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":408752,"byte_end":408755,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ Note that this does *not* account for the timezone!","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":408760,"byte_end":408815,"line_start":272,"line_end":272,"column_start":5,"column_end":60}},{"value":"/ The true \"UNIX timestamp\" would count seconds since the midnight *UTC* on the epoch.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":408820,"byte_end":408908,"line_start":273,"line_end":273,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":408913,"byte_end":408916,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":408921,"byte_end":408934,"line_start":275,"line_end":275,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":408939,"byte_end":408942,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":408947,"byte_end":408954,"line_start":277,"line_end":277,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":408959,"byte_end":408985,"line_start":278,"line_end":278,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":408990,"byte_end":408993,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(1970, 1, 1).and_hms_milli(0, 0, 1, 980);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":408998,"byte_end":409071,"line_start":280,"line_end":280,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(dt.timestamp(), 1);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":409076,"byte_end":409110,"line_start":281,"line_end":281,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":409115,"byte_end":409118,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2001, 9, 9).and_hms(1, 46, 40);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":409123,"byte_end":409187,"line_start":283,"line_end":283,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(dt.timestamp(), 1_000_000_000);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":409192,"byte_end":409238,"line_start":284,"line_end":284,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":409243,"byte_end":409246,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(1969, 12, 31).and_hms(23, 59, 59);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":409251,"byte_end":409318,"line_start":286,"line_end":286,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(dt.timestamp(), -1);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":409323,"byte_end":409358,"line_start":287,"line_end":287,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":409363,"byte_end":409366,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(-1, 1, 1).and_hms(0, 0, 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":409371,"byte_end":409431,"line_start":289,"line_end":289,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(dt.timestamp(), -62198755200);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":409436,"byte_end":409481,"line_start":290,"line_end":290,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":409486,"byte_end":409493,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":409498,"byte_end":409507,"line_start":292,"line_end":292,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1287},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":410904,"byte_end":410920,"line_start":325,"line_end":325,"column_start":12,"column_end":28},"name":"timestamp_millis","qualname":"<NaiveDateTime>::timestamp_millis","value":"fn timestamp_millis(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap *milliseconds* since midnight on January 1, 1970.","sig":null,"attributes":[{"value":"/ Returns the number of non-leap *milliseconds* since midnight on January 1, 1970.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":409830,"byte_end":409914,"line_start":300,"line_end":300,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":409919,"byte_end":409922,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ Note that this does *not* account for the timezone!","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":409927,"byte_end":409982,"line_start":302,"line_end":302,"column_start":5,"column_end":60}},{"value":"/ The true \"UNIX timestamp\" would count seconds since the midnight *UTC* on the epoch.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":409987,"byte_end":410075,"line_start":303,"line_end":303,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":410080,"byte_end":410083,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ Note also that this does reduce the number of years that can be","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":410088,"byte_end":410155,"line_start":305,"line_end":305,"column_start":5,"column_end":72}},{"value":"/ represented from ~584 Billion to ~584 Million. (If this is a problem,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":410160,"byte_end":410233,"line_start":306,"line_end":306,"column_start":5,"column_end":78}},{"value":"/ please file an issue to let me know what domain needs millisecond","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":410238,"byte_end":410307,"line_start":307,"line_end":307,"column_start":5,"column_end":74}},{"value":"/ precision over billions of years, I'm curious.)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":410312,"byte_end":410363,"line_start":308,"line_end":308,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":410368,"byte_end":410371,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":410376,"byte_end":410389,"line_start":310,"line_end":310,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":410394,"byte_end":410397,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":410402,"byte_end":410409,"line_start":312,"line_end":312,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":410414,"byte_end":410440,"line_start":313,"line_end":313,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":410445,"byte_end":410448,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(1970, 1, 1).and_hms_milli(0, 0, 1, 444);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":410453,"byte_end":410526,"line_start":315,"line_end":315,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(dt.timestamp_millis(), 1_444);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":410531,"byte_end":410576,"line_start":316,"line_end":316,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":410581,"byte_end":410584,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2001, 9, 9).and_hms_milli(1, 46, 40, 555);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":410589,"byte_end":410664,"line_start":318,"line_end":318,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(dt.timestamp_millis(), 1_000_000_000_555);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":410669,"byte_end":410726,"line_start":319,"line_end":319,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":410731,"byte_end":410734,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(1969, 12, 31).and_hms_milli(23, 59, 59, 100);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":410739,"byte_end":410817,"line_start":321,"line_end":321,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(dt.timestamp_millis(), -900);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":410822,"byte_end":410866,"line_start":322,"line_end":322,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":410871,"byte_end":410878,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":410883,"byte_end":410892,"line_start":324,"line_end":324,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1288},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":411986,"byte_end":412002,"line_start":352,"line_end":352,"column_start":12,"column_end":28},"name":"timestamp_micros","qualname":"<NaiveDateTime>::timestamp_micros","value":"fn timestamp_micros(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap *microseconds* since midnight on January 1, 1970.","sig":null,"attributes":[{"value":"/ Returns the number of non-leap *microseconds* since midnight on January 1, 1970.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":411051,"byte_end":411135,"line_start":330,"line_end":330,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":411140,"byte_end":411143,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ Note that this does *not* account for the timezone!","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":411148,"byte_end":411203,"line_start":332,"line_end":332,"column_start":5,"column_end":60}},{"value":"/ The true \"UNIX timestamp\" would count seconds since the midnight *UTC* on the epoch.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":411208,"byte_end":411296,"line_start":333,"line_end":333,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":411301,"byte_end":411304,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ Note also that this does reduce the number of years that can be","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":411309,"byte_end":411376,"line_start":335,"line_end":335,"column_start":5,"column_end":72}},{"value":"/ represented from ~584 Billion to ~584 Thousand. (If this is a problem,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":411381,"byte_end":411455,"line_start":336,"line_end":336,"column_start":5,"column_end":79}},{"value":"/ please file an issue to let me know what domain needs microsecond","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":411460,"byte_end":411529,"line_start":337,"line_end":337,"column_start":5,"column_end":74}},{"value":"/ precision over millennia, I'm curious.)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":411534,"byte_end":411577,"line_start":338,"line_end":338,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":411582,"byte_end":411585,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":411590,"byte_end":411603,"line_start":340,"line_end":340,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":411608,"byte_end":411611,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":411616,"byte_end":411623,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":411628,"byte_end":411654,"line_start":343,"line_end":343,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":411659,"byte_end":411662,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(1970, 1, 1).and_hms_micro(0, 0, 1, 444);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":411667,"byte_end":411740,"line_start":345,"line_end":345,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(dt.timestamp_micros(), 1_000_444);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":411745,"byte_end":411794,"line_start":346,"line_end":346,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":411799,"byte_end":411802,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2001, 9, 9).and_hms_micro(1, 46, 40, 555);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":411807,"byte_end":411882,"line_start":348,"line_end":348,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(dt.timestamp_micros(), 1_000_000_000_000_555);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":411887,"byte_end":411948,"line_start":349,"line_end":349,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":411953,"byte_end":411960,"line_start":350,"line_end":350,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":411965,"byte_end":411974,"line_start":351,"line_end":351,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1289},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":413473,"byte_end":413488,"line_start":391,"line_end":391,"column_start":12,"column_end":27},"name":"timestamp_nanos","qualname":"<NaiveDateTime>::timestamp_nanos","value":"fn timestamp_nanos(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap *nanoseconds* since midnight on January 1, 1970.","sig":null,"attributes":[{"value":"/ Returns the number of non-leap *nanoseconds* since midnight on January 1, 1970.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":412138,"byte_end":412221,"line_start":357,"line_end":357,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":412226,"byte_end":412229,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ Note that this does *not* account for the timezone!","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":412234,"byte_end":412289,"line_start":359,"line_end":359,"column_start":5,"column_end":60}},{"value":"/ The true \"UNIX timestamp\" would count seconds since the midnight *UTC* on the epoch.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":412294,"byte_end":412382,"line_start":360,"line_end":360,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":412387,"byte_end":412390,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":412395,"byte_end":412407,"line_start":362,"line_end":362,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":412412,"byte_end":412415,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ Note also that this does reduce the number of years that can be","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":412420,"byte_end":412487,"line_start":364,"line_end":364,"column_start":5,"column_end":72}},{"value":"/ represented from ~584 Billion to ~584 years. The dates that can be","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":412492,"byte_end":412562,"line_start":365,"line_end":365,"column_start":5,"column_end":75}},{"value":"/ represented as nanoseconds are between 1677-09-21T00:12:44.0 and","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":412567,"byte_end":412635,"line_start":366,"line_end":366,"column_start":5,"column_end":73}},{"value":"/ 2262-04-11T23:47:16.854775804.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":412640,"byte_end":412674,"line_start":367,"line_end":367,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":412679,"byte_end":412682,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ (If this is a problem, please file an issue to let me know what domain","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":412687,"byte_end":412761,"line_start":369,"line_end":369,"column_start":5,"column_end":79}},{"value":"/ needs nanosecond precision over millennia, I'm curious.)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":412766,"byte_end":412826,"line_start":370,"line_end":370,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":412831,"byte_end":412834,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":412839,"byte_end":412852,"line_start":372,"line_end":372,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":412857,"byte_end":412860,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":412865,"byte_end":412872,"line_start":374,"line_end":374,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":412877,"byte_end":412920,"line_start":375,"line_end":375,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":412925,"byte_end":412928,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(1970, 1, 1).and_hms_nano(0, 0, 1, 444);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":412933,"byte_end":413005,"line_start":377,"line_end":377,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(dt.timestamp_nanos(), 1_000_000_444);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":413010,"byte_end":413062,"line_start":378,"line_end":378,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":413067,"byte_end":413070,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2001, 9, 9).and_hms_nano(1, 46, 40, 555);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":413075,"byte_end":413149,"line_start":380,"line_end":380,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":413154,"byte_end":413157,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ const A_BILLION: i64 = 1_000_000_000;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":413162,"byte_end":413203,"line_start":382,"line_end":382,"column_start":5,"column_end":46}},{"value":"/ let nanos = dt.timestamp_nanos();","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":413208,"byte_end":413245,"line_start":383,"line_end":383,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(nanos, 1_000_000_000_000_000_555);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":413250,"byte_end":413299,"line_start":384,"line_end":384,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":413304,"byte_end":413319,"line_start":385,"line_end":385,"column_start":5,"column_end":20}},{"value":"/     dt,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":413324,"byte_end":413335,"line_start":386,"line_end":386,"column_start":5,"column_end":16}},{"value":"/     NaiveDateTime::from_timestamp(nanos / A_BILLION, (nanos % A_BILLION) as u32)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":413340,"byte_end":413424,"line_start":387,"line_end":387,"column_start":5,"column_end":89}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":413429,"byte_end":413435,"line_start":388,"line_end":388,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":413440,"byte_end":413447,"line_start":389,"line_end":389,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":413452,"byte_end":413461,"line_start":390,"line_end":390,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1290},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":414264,"byte_end":414287,"line_start":413,"line_end":413,"column_start":12,"column_end":35},"name":"timestamp_subsec_millis","qualname":"<NaiveDateTime>::timestamp_subsec_millis","value":"fn timestamp_subsec_millis(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of milliseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"/ Returns the number of milliseconds since the last whole non-leap second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":413627,"byte_end":413703,"line_start":396,"line_end":396,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":413708,"byte_end":413711,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 999,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":413716,"byte_end":413758,"line_start":398,"line_end":398,"column_start":5,"column_end":47}},{"value":"/ or for [leap seconds](./struct.NaiveTime.html#leap-second-handling), to 1,999.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":413763,"byte_end":413845,"line_start":399,"line_end":399,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":413850,"byte_end":413853,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":413858,"byte_end":413871,"line_start":401,"line_end":401,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":413876,"byte_end":413879,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":413884,"byte_end":413891,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":413896,"byte_end":413922,"line_start":404,"line_end":404,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":413927,"byte_end":413930,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2016, 7, 8).and_hms_nano(9, 10, 11, 123_456_789);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":413935,"byte_end":414017,"line_start":406,"line_end":406,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(dt.timestamp_subsec_millis(), 123);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":414022,"byte_end":414072,"line_start":407,"line_end":407,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":414077,"byte_end":414080,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2015, 7, 1).and_hms_nano(8, 59, 59, 1_234_567_890);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":414085,"byte_end":414169,"line_start":409,"line_end":409,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(dt.timestamp_subsec_millis(), 1_234);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":414174,"byte_end":414226,"line_start":410,"line_end":410,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":414231,"byte_end":414238,"line_start":411,"line_end":411,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":414243,"byte_end":414252,"line_start":412,"line_end":412,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1291},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":415018,"byte_end":415041,"line_start":434,"line_end":434,"column_start":12,"column_end":35},"name":"timestamp_subsec_micros","qualname":"<NaiveDateTime>::timestamp_subsec_micros","value":"fn timestamp_subsec_micros(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of microseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"/ Returns the number of microseconds since the last whole non-leap second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":414365,"byte_end":414441,"line_start":417,"line_end":417,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":414446,"byte_end":414449,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 999,999,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":414454,"byte_end":414500,"line_start":419,"line_end":419,"column_start":5,"column_end":51}},{"value":"/ or for [leap seconds](./struct.NaiveTime.html#leap-second-handling), to 1,999,999.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":414505,"byte_end":414591,"line_start":420,"line_end":420,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":414596,"byte_end":414599,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":414604,"byte_end":414617,"line_start":422,"line_end":422,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":414622,"byte_end":414625,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":414630,"byte_end":414637,"line_start":424,"line_end":424,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":414642,"byte_end":414668,"line_start":425,"line_end":425,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":414673,"byte_end":414676,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2016, 7, 8).and_hms_nano(9, 10, 11, 123_456_789);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":414681,"byte_end":414763,"line_start":427,"line_end":427,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(dt.timestamp_subsec_micros(), 123_456);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":414768,"byte_end":414822,"line_start":428,"line_end":428,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":414827,"byte_end":414830,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2015, 7, 1).and_hms_nano(8, 59, 59, 1_234_567_890);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":414835,"byte_end":414919,"line_start":430,"line_end":430,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(dt.timestamp_subsec_micros(), 1_234_567);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":414924,"byte_end":414980,"line_start":431,"line_end":431,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":414985,"byte_end":414992,"line_start":432,"line_end":432,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":414997,"byte_end":415006,"line_start":433,"line_end":433,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1292},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":415781,"byte_end":415803,"line_start":455,"line_end":455,"column_start":12,"column_end":34},"name":"timestamp_subsec_nanos","qualname":"<NaiveDateTime>::timestamp_subsec_nanos","value":"fn timestamp_subsec_nanos(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of nanoseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"/ Returns the number of nanoseconds since the last whole non-leap second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":415115,"byte_end":415190,"line_start":438,"line_end":438,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":415195,"byte_end":415198,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 999,999,999,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":415203,"byte_end":415253,"line_start":440,"line_end":440,"column_start":5,"column_end":55}},{"value":"/ or for [leap seconds](./struct.NaiveTime.html#leap-second-handling), to 1,999,999,999.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":415258,"byte_end":415348,"line_start":441,"line_end":441,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":415353,"byte_end":415356,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":415361,"byte_end":415374,"line_start":443,"line_end":443,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":415379,"byte_end":415382,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":415387,"byte_end":415394,"line_start":445,"line_end":445,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":415399,"byte_end":415425,"line_start":446,"line_end":446,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":415430,"byte_end":415433,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2016, 7, 8).and_hms_nano(9, 10, 11, 123_456_789);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":415438,"byte_end":415520,"line_start":448,"line_end":448,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(dt.timestamp_subsec_nanos(), 123_456_789);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":415525,"byte_end":415582,"line_start":449,"line_end":449,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":415587,"byte_end":415590,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2015, 7, 1).and_hms_nano(8, 59, 59, 1_234_567_890);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":415595,"byte_end":415679,"line_start":451,"line_end":451,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(dt.timestamp_subsec_nanos(), 1_234_567_890);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":415684,"byte_end":415743,"line_start":452,"line_end":452,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":415748,"byte_end":415755,"line_start":453,"line_end":453,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":415760,"byte_end":415769,"line_start":454,"line_end":454,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1293},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":418902,"byte_end":418920,"line_start":524,"line_end":524,"column_start":12,"column_end":30},"name":"checked_add_signed","qualname":"<NaiveDateTime>::checked_add_signed","value":"fn checked_add_signed(Self, OldDuration) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Adds given `Duration` to the current date and time.","sig":null,"attributes":[{"value":"/ Adds given `Duration` to the current date and time.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":415862,"byte_end":415917,"line_start":459,"line_end":459,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":415922,"byte_end":415925,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ As a part of Chrono's [leap second handling](./struct.NaiveTime.html#leap-second-handling),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":415930,"byte_end":416025,"line_start":461,"line_end":461,"column_start":5,"column_end":100}},{"value":"/ the addition assumes that **there is no leap second ever**,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":416030,"byte_end":416093,"line_start":462,"line_end":462,"column_start":5,"column_end":68}},{"value":"/ except when the `NaiveDateTime` itself represents a leap second","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":416098,"byte_end":416165,"line_start":463,"line_end":463,"column_start":5,"column_end":72}},{"value":"/ in which case the assumption becomes that **there is exactly a single leap second ever**.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":416170,"byte_end":416263,"line_start":464,"line_end":464,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":416268,"byte_end":416271,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when it will result in overflow.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":416276,"byte_end":416327,"line_start":466,"line_end":466,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":416332,"byte_end":416335,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":416340,"byte_end":416353,"line_start":468,"line_end":468,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":416358,"byte_end":416361,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":416366,"byte_end":416373,"line_start":470,"line_end":470,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Duration, NaiveDate};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":416378,"byte_end":416416,"line_start":471,"line_end":471,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":416421,"byte_end":416424,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":416429,"byte_end":416468,"line_start":473,"line_end":473,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":416473,"byte_end":416476,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let d = from_ymd(2016, 7, 8);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":416481,"byte_end":416514,"line_start":475,"line_end":475,"column_start":5,"column_end":38}},{"value":"/ let hms = |h, m, s| d.and_hms(h, m, s);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":416519,"byte_end":416562,"line_start":476,"line_end":476,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_add_signed(Duration::zero()),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":416567,"byte_end":416632,"line_start":477,"line_end":477,"column_start":5,"column_end":70}},{"value":"/            Some(hms(3, 5, 7)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":416637,"byte_end":416672,"line_start":478,"line_end":478,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_add_signed(Duration::seconds(1)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":416677,"byte_end":416746,"line_start":479,"line_end":479,"column_start":5,"column_end":74}},{"value":"/            Some(hms(3, 5, 8)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":416751,"byte_end":416786,"line_start":480,"line_end":480,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_add_signed(Duration::seconds(-1)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":416791,"byte_end":416861,"line_start":481,"line_end":481,"column_start":5,"column_end":75}},{"value":"/            Some(hms(3, 5, 6)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":416866,"byte_end":416901,"line_start":482,"line_end":482,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_add_signed(Duration::seconds(3600 + 60)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":416906,"byte_end":416983,"line_start":483,"line_end":483,"column_start":5,"column_end":82}},{"value":"/            Some(hms(4, 6, 7)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":416988,"byte_end":417023,"line_start":484,"line_end":484,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_add_signed(Duration::seconds(86_400)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":417028,"byte_end":417102,"line_start":485,"line_end":485,"column_start":5,"column_end":79}},{"value":"/            Some(from_ymd(2016, 7, 9).and_hms(3, 5, 7)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":417107,"byte_end":417167,"line_start":486,"line_end":486,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":417172,"byte_end":417175,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ let hmsm = |h, m, s, milli| d.and_hms_milli(h, m, s, milli);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":417180,"byte_end":417244,"line_start":488,"line_end":488,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(hmsm(3, 5, 7, 980).checked_add_signed(Duration::milliseconds(450)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":417249,"byte_end":417331,"line_start":489,"line_end":489,"column_start":5,"column_end":87}},{"value":"/            Some(hmsm(3, 5, 8, 430)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":417336,"byte_end":417377,"line_start":490,"line_end":490,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":417382,"byte_end":417389,"line_start":491,"line_end":491,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":417394,"byte_end":417397,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ Overflow returns `None`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":417402,"byte_end":417430,"line_start":493,"line_end":493,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":417435,"byte_end":417438,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":417443,"byte_end":417450,"line_start":495,"line_end":495,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{Duration, NaiveDate};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":417455,"byte_end":417495,"line_start":496,"line_end":496,"column_start":5,"column_end":45}},{"value":"/ # let hms = |h, m, s| NaiveDate::from_ymd(2016, 7, 8).and_hms(h, m, s);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":417500,"byte_end":417575,"line_start":497,"line_end":497,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_add_signed(Duration::days(1_000_000_000)), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":417580,"byte_end":417665,"line_start":498,"line_end":498,"column_start":5,"column_end":90}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":417670,"byte_end":417677,"line_start":499,"line_end":499,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":417682,"byte_end":417685,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ Leap seconds are handled,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":417690,"byte_end":417719,"line_start":501,"line_end":501,"column_start":5,"column_end":34}},{"value":"/ but the addition assumes that it is the only leap second happened.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":417724,"byte_end":417794,"line_start":502,"line_end":502,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":417799,"byte_end":417802,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":417807,"byte_end":417814,"line_start":504,"line_end":504,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{Duration, NaiveDate};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":417819,"byte_end":417859,"line_start":505,"line_end":505,"column_start":5,"column_end":45}},{"value":"/ # let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":417864,"byte_end":417905,"line_start":506,"line_end":506,"column_start":5,"column_end":46}},{"value":"/ # let hmsm = |h, m, s, milli| from_ymd(2016, 7, 8).and_hms_milli(h, m, s, milli);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":417910,"byte_end":417995,"line_start":507,"line_end":507,"column_start":5,"column_end":90}},{"value":"/ let leap = hmsm(3, 5, 59, 1_300);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":418000,"byte_end":418037,"line_start":508,"line_end":508,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(leap.checked_add_signed(Duration::zero()),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":418042,"byte_end":418099,"line_start":509,"line_end":509,"column_start":5,"column_end":62}},{"value":"/            Some(hmsm(3, 5, 59, 1_300)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":418104,"byte_end":418148,"line_start":510,"line_end":510,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(leap.checked_add_signed(Duration::milliseconds(-500)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":418153,"byte_end":418222,"line_start":511,"line_end":511,"column_start":5,"column_end":74}},{"value":"/            Some(hmsm(3, 5, 59, 800)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":418227,"byte_end":418269,"line_start":512,"line_end":512,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(leap.checked_add_signed(Duration::milliseconds(500)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":418274,"byte_end":418342,"line_start":513,"line_end":513,"column_start":5,"column_end":73}},{"value":"/            Some(hmsm(3, 5, 59, 1_800)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":418347,"byte_end":418391,"line_start":514,"line_end":514,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(leap.checked_add_signed(Duration::milliseconds(800)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":418396,"byte_end":418464,"line_start":515,"line_end":515,"column_start":5,"column_end":73}},{"value":"/            Some(hmsm(3, 6, 0, 100)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":418469,"byte_end":418510,"line_start":516,"line_end":516,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(leap.checked_add_signed(Duration::seconds(10)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":418515,"byte_end":418577,"line_start":517,"line_end":517,"column_start":5,"column_end":67}},{"value":"/            Some(hmsm(3, 6, 9, 300)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":418582,"byte_end":418623,"line_start":518,"line_end":518,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(leap.checked_add_signed(Duration::seconds(-10)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":418628,"byte_end":418691,"line_start":519,"line_end":519,"column_start":5,"column_end":68}},{"value":"/            Some(hmsm(3, 5, 50, 300)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":418696,"byte_end":418738,"line_start":520,"line_end":520,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(leap.checked_add_signed(Duration::days(1)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":418743,"byte_end":418801,"line_start":521,"line_end":521,"column_start":5,"column_end":63}},{"value":"/            Some(from_ymd(2016, 7, 9).and_hms_milli(3, 5, 59, 300)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":418806,"byte_end":418878,"line_start":522,"line_end":522,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":418883,"byte_end":418890,"line_start":523,"line_end":523,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1294},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":422172,"byte_end":422190,"line_start":597,"line_end":597,"column_start":12,"column_end":30},"name":"checked_sub_signed","qualname":"<NaiveDateTime>::checked_sub_signed","value":"fn checked_sub_signed(Self, OldDuration) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Subtracts given `Duration` from the current date and time.","sig":null,"attributes":[{"value":"/ Subtracts given `Duration` from the current date and time.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":419355,"byte_end":419417,"line_start":536,"line_end":536,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":419422,"byte_end":419425,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ As a part of Chrono's [leap second handling](./struct.NaiveTime.html#leap-second-handling),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":419430,"byte_end":419525,"line_start":538,"line_end":538,"column_start":5,"column_end":100}},{"value":"/ the subtraction assumes that **there is no leap second ever**,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":419530,"byte_end":419596,"line_start":539,"line_end":539,"column_start":5,"column_end":71}},{"value":"/ except when the `NaiveDateTime` itself represents a leap second","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":419601,"byte_end":419668,"line_start":540,"line_end":540,"column_start":5,"column_end":72}},{"value":"/ in which case the assumption becomes that **there is exactly a single leap second ever**.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":419673,"byte_end":419766,"line_start":541,"line_end":541,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":419771,"byte_end":419774,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when it will result in overflow.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":419779,"byte_end":419830,"line_start":543,"line_end":543,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":419835,"byte_end":419838,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":419843,"byte_end":419856,"line_start":545,"line_end":545,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":419861,"byte_end":419864,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":419869,"byte_end":419876,"line_start":547,"line_end":547,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Duration, NaiveDate};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":419881,"byte_end":419919,"line_start":548,"line_end":548,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":419924,"byte_end":419927,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":419932,"byte_end":419971,"line_start":550,"line_end":550,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":419976,"byte_end":419979,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ let d = from_ymd(2016, 7, 8);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":419984,"byte_end":420017,"line_start":552,"line_end":552,"column_start":5,"column_end":38}},{"value":"/ let hms = |h, m, s| d.and_hms(h, m, s);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":420022,"byte_end":420065,"line_start":553,"line_end":553,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::zero()),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":420070,"byte_end":420135,"line_start":554,"line_end":554,"column_start":5,"column_end":70}},{"value":"/            Some(hms(3, 5, 7)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":420140,"byte_end":420175,"line_start":555,"line_end":555,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::seconds(1)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":420180,"byte_end":420249,"line_start":556,"line_end":556,"column_start":5,"column_end":74}},{"value":"/            Some(hms(3, 5, 6)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":420254,"byte_end":420289,"line_start":557,"line_end":557,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::seconds(-1)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":420294,"byte_end":420364,"line_start":558,"line_end":558,"column_start":5,"column_end":75}},{"value":"/            Some(hms(3, 5, 8)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":420369,"byte_end":420404,"line_start":559,"line_end":559,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::seconds(3600 + 60)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":420409,"byte_end":420486,"line_start":560,"line_end":560,"column_start":5,"column_end":82}},{"value":"/            Some(hms(2, 4, 7)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":420491,"byte_end":420526,"line_start":561,"line_end":561,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::seconds(86_400)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":420531,"byte_end":420605,"line_start":562,"line_end":562,"column_start":5,"column_end":79}},{"value":"/            Some(from_ymd(2016, 7, 7).and_hms(3, 5, 7)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":420610,"byte_end":420670,"line_start":563,"line_end":563,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":420675,"byte_end":420678,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ let hmsm = |h, m, s, milli| d.and_hms_milli(h, m, s, milli);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":420683,"byte_end":420747,"line_start":565,"line_end":565,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(hmsm(3, 5, 7, 450).checked_sub_signed(Duration::milliseconds(670)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":420752,"byte_end":420834,"line_start":566,"line_end":566,"column_start":5,"column_end":87}},{"value":"/            Some(hmsm(3, 5, 6, 780)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":420839,"byte_end":420880,"line_start":567,"line_end":567,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":420885,"byte_end":420892,"line_start":568,"line_end":568,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":420897,"byte_end":420900,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ Overflow returns `None`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":420905,"byte_end":420933,"line_start":570,"line_end":570,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":420938,"byte_end":420941,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":420946,"byte_end":420953,"line_start":572,"line_end":572,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{Duration, NaiveDate};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":420958,"byte_end":420998,"line_start":573,"line_end":573,"column_start":5,"column_end":45}},{"value":"/ # let hms = |h, m, s| NaiveDate::from_ymd(2016, 7, 8).and_hms(h, m, s);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":421003,"byte_end":421078,"line_start":574,"line_end":574,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::days(1_000_000_000)), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":421083,"byte_end":421168,"line_start":575,"line_end":575,"column_start":5,"column_end":90}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":421173,"byte_end":421180,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":421185,"byte_end":421188,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ Leap seconds are handled,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":421193,"byte_end":421222,"line_start":578,"line_end":578,"column_start":5,"column_end":34}},{"value":"/ but the subtraction assumes that it is the only leap second happened.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":421227,"byte_end":421300,"line_start":579,"line_end":579,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":421305,"byte_end":421308,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":421313,"byte_end":421320,"line_start":581,"line_end":581,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{Duration, NaiveDate};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":421325,"byte_end":421365,"line_start":582,"line_end":582,"column_start":5,"column_end":45}},{"value":"/ # let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":421370,"byte_end":421411,"line_start":583,"line_end":583,"column_start":5,"column_end":46}},{"value":"/ # let hmsm = |h, m, s, milli| from_ymd(2016, 7, 8).and_hms_milli(h, m, s, milli);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":421416,"byte_end":421501,"line_start":584,"line_end":584,"column_start":5,"column_end":90}},{"value":"/ let leap = hmsm(3, 5, 59, 1_300);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":421506,"byte_end":421543,"line_start":585,"line_end":585,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(leap.checked_sub_signed(Duration::zero()),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":421548,"byte_end":421605,"line_start":586,"line_end":586,"column_start":5,"column_end":62}},{"value":"/            Some(hmsm(3, 5, 59, 1_300)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":421610,"byte_end":421654,"line_start":587,"line_end":587,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(leap.checked_sub_signed(Duration::milliseconds(200)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":421659,"byte_end":421727,"line_start":588,"line_end":588,"column_start":5,"column_end":73}},{"value":"/            Some(hmsm(3, 5, 59, 1_100)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":421732,"byte_end":421776,"line_start":589,"line_end":589,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(leap.checked_sub_signed(Duration::milliseconds(500)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":421781,"byte_end":421849,"line_start":590,"line_end":590,"column_start":5,"column_end":73}},{"value":"/            Some(hmsm(3, 5, 59, 800)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":421854,"byte_end":421896,"line_start":591,"line_end":591,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(leap.checked_sub_signed(Duration::seconds(60)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":421901,"byte_end":421963,"line_start":592,"line_end":592,"column_start":5,"column_end":67}},{"value":"/            Some(hmsm(3, 5, 0, 300)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":421968,"byte_end":422009,"line_start":593,"line_end":593,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(leap.checked_sub_signed(Duration::days(1)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":422014,"byte_end":422072,"line_start":594,"line_end":594,"column_start":5,"column_end":63}},{"value":"/            Some(from_ymd(2016, 7, 7).and_hms_milli(3, 6, 0, 300)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":422077,"byte_end":422148,"line_start":595,"line_end":595,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":422153,"byte_end":422160,"line_start":596,"line_end":596,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1295},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":424401,"byte_end":424422,"line_start":647,"line_end":647,"column_start":12,"column_end":33},"name":"signed_duration_since","qualname":"<NaiveDateTime>::signed_duration_since","value":"fn signed_duration_since(Self, NaiveDateTime) -> OldDuration","parent":null,"children":[],"decl_id":null,"docs":" Subtracts another `NaiveDateTime` from the current date and time.\n This does not overflow or underflow at all.","sig":null,"attributes":[{"value":"/ Subtracts another `NaiveDateTime` from the current date and time.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":422625,"byte_end":422694,"line_start":609,"line_end":609,"column_start":5,"column_end":74}},{"value":"/ This does not overflow or underflow at all.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":422699,"byte_end":422746,"line_start":610,"line_end":610,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":422751,"byte_end":422754,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ As a part of Chrono's [leap second handling](./struct.NaiveTime.html#leap-second-handling),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":422759,"byte_end":422854,"line_start":612,"line_end":612,"column_start":5,"column_end":100}},{"value":"/ the subtraction assumes that **there is no leap second ever**,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":422859,"byte_end":422925,"line_start":613,"line_end":613,"column_start":5,"column_end":71}},{"value":"/ except when any of the `NaiveDateTime`s themselves represents a leap second","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":422930,"byte_end":423009,"line_start":614,"line_end":614,"column_start":5,"column_end":84}},{"value":"/ in which case the assumption becomes that","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":423014,"byte_end":423059,"line_start":615,"line_end":615,"column_start":5,"column_end":50}},{"value":"/ **there are exactly one (or two) leap second(s) ever**.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":423064,"byte_end":423123,"line_start":616,"line_end":616,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":423128,"byte_end":423131,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":423136,"byte_end":423149,"line_start":618,"line_end":618,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":423154,"byte_end":423157,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":423162,"byte_end":423169,"line_start":620,"line_end":620,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Duration, NaiveDate};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":423174,"byte_end":423212,"line_start":621,"line_end":621,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":423217,"byte_end":423220,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":423225,"byte_end":423264,"line_start":623,"line_end":623,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":423269,"byte_end":423272,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ let d = from_ymd(2016, 7, 8);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":423277,"byte_end":423310,"line_start":625,"line_end":625,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(d.and_hms(3, 5, 7).signed_duration_since(d.and_hms(2, 4, 6)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":423315,"byte_end":423391,"line_start":626,"line_end":626,"column_start":5,"column_end":81}},{"value":"/            Duration::seconds(3600 + 60 + 1));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":423396,"byte_end":423445,"line_start":627,"line_end":627,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":423450,"byte_end":423453,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ // July 8 is 190th day in the year 2016","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":423458,"byte_end":423501,"line_start":629,"line_end":629,"column_start":5,"column_end":48}},{"value":"/ let d0 = from_ymd(2016, 1, 1);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":423506,"byte_end":423540,"line_start":630,"line_end":630,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(d.and_hms_milli(0, 7, 6, 500).signed_duration_since(d0.and_hms(0, 0, 0)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":423545,"byte_end":423633,"line_start":631,"line_end":631,"column_start":5,"column_end":93}},{"value":"/            Duration::seconds(189 * 86_400 + 7 * 60 + 6) + Duration::milliseconds(500));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":423638,"byte_end":423729,"line_start":632,"line_end":632,"column_start":5,"column_end":96}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":423734,"byte_end":423741,"line_start":633,"line_end":633,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":423746,"byte_end":423749,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ Leap seconds are handled, but the subtraction assumes that","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":423754,"byte_end":423816,"line_start":635,"line_end":635,"column_start":5,"column_end":67}},{"value":"/ there were no other leap seconds happened.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":423821,"byte_end":423867,"line_start":636,"line_end":636,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":423872,"byte_end":423875,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":423880,"byte_end":423887,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{Duration, NaiveDate};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":423892,"byte_end":423932,"line_start":639,"line_end":639,"column_start":5,"column_end":45}},{"value":"/ # let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":423937,"byte_end":423978,"line_start":640,"line_end":640,"column_start":5,"column_end":46}},{"value":"/ let leap = from_ymd(2015, 6, 30).and_hms_milli(23, 59, 59, 1_500);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":423983,"byte_end":424053,"line_start":641,"line_end":641,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(leap.signed_duration_since(from_ymd(2015, 6, 30).and_hms(23, 0, 0)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":424058,"byte_end":424141,"line_start":642,"line_end":642,"column_start":5,"column_end":88}},{"value":"/            Duration::seconds(3600) + Duration::milliseconds(500));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":424146,"byte_end":424216,"line_start":643,"line_end":643,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(from_ymd(2015, 7, 1).and_hms(1, 0, 0).signed_duration_since(leap),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":424221,"byte_end":424302,"line_start":644,"line_end":644,"column_start":5,"column_end":86}},{"value":"/            Duration::seconds(3600) - Duration::milliseconds(500));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":424307,"byte_end":424377,"line_start":645,"line_end":645,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":424382,"byte_end":424389,"line_start":646,"line_end":646,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1296},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":428714,"byte_end":428732,"line_start":743,"line_end":743,"column_start":12,"column_end":30},"name":"and_local_timezone","qualname":"<NaiveDateTime>::and_local_timezone","value":"fn and_local_timezone<Tz>(&Self, Tz) -> LocalResult<DateTime<Tz>> where\nTz: TimeZone","parent":null,"children":[],"decl_id":null,"docs":" Converts the `NaiveDateTime` into the timezone-aware `DateTime<Tz>`\n with the provided timezone, if possible.","sig":null,"attributes":[{"value":"/ Converts the `NaiveDateTime` into the timezone-aware `DateTime<Tz>`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":427811,"byte_end":427882,"line_start":726,"line_end":726,"column_start":5,"column_end":76}},{"value":"/ with the provided timezone, if possible.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":427887,"byte_end":427931,"line_start":727,"line_end":727,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":427936,"byte_end":427939,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ This can fail in cases where the local time represented by the `NaiveDateTime`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":427944,"byte_end":428026,"line_start":729,"line_end":729,"column_start":5,"column_end":87}},{"value":"/ is not a valid local timestamp in the target timezone due to an offset transition","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":428031,"byte_end":428116,"line_start":730,"line_end":730,"column_start":5,"column_end":90}},{"value":"/ for example if the target timezone had a change from +00:00 to +01:00","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":428121,"byte_end":428194,"line_start":731,"line_end":731,"column_start":5,"column_end":78}},{"value":"/ occuring at 2015-09-05 22:59:59, then a local time of 2015-09-05 23:56:04","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":428199,"byte_end":428276,"line_start":732,"line_end":732,"column_start":5,"column_end":82}},{"value":"/ could never occur. Similarly, if the offset transitioned in the opposite direction","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":428281,"byte_end":428367,"line_start":733,"line_end":733,"column_start":5,"column_end":91}},{"value":"/ then there would be two local times of 2015-09-05 23:56:04, one at +00:00 and one","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":428372,"byte_end":428457,"line_start":734,"line_end":734,"column_start":5,"column_end":90}},{"value":"/ at +01:00.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":428462,"byte_end":428476,"line_start":735,"line_end":735,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":428481,"byte_end":428484,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":428489,"byte_end":428502,"line_start":737,"line_end":737,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":428507,"byte_end":428510,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":428515,"byte_end":428522,"line_start":739,"line_end":739,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Utc};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":428527,"byte_end":428560,"line_start":740,"line_end":740,"column_start":5,"column_end":38}},{"value":"/ let dt = NaiveDate::from_ymd(2015, 9, 5).and_hms(23, 56, 4).and_local_timezone(Utc).unwrap();","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":428565,"byte_end":428662,"line_start":741,"line_end":741,"column_start":5,"column_end":102}},{"value":"/ assert_eq!(dt.timezone(), Utc);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":428667,"byte_end":428702,"line_start":742,"line_end":742,"column_start":5,"column_end":40}}]},{"kind":"Const","id":{"krate":0,"index":1298},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":428897,"byte_end":428900,"line_start":748,"line_end":748,"column_start":15,"column_end":18},"name":"MIN","qualname":"::naive::datetime::NaiveDateTime::MIN","value":"Self","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":" The minimum possible `NaiveDateTime`.\n","sig":null,"attributes":[{"value":"/ The minimum possible `NaiveDateTime`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":428841,"byte_end":428882,"line_start":747,"line_end":747,"column_start":5,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":1299},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":429022,"byte_end":429025,"line_start":750,"line_end":750,"column_start":15,"column_end":18},"name":"MAX","qualname":"::naive::datetime::NaiveDateTime::MAX","value":"Self","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":" The maximum possible `NaiveDateTime`.\n","sig":null,"attributes":[{"value":"/ The maximum possible `NaiveDateTime`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":428966,"byte_end":429007,"line_start":749,"line_end":749,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1301},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":429533,"byte_end":429537,"line_start":767,"line_end":767,"column_start":8,"column_end":12},"name":"year","qualname":"<NaiveDateTime as traits::Datelike>::year","value":"fn year(&Self) -> i32","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1988},"docs":" Returns the year number in the [calendar date](./index.html#calendar-date).","sig":null,"attributes":[{"value":"/ Returns the year number in the [calendar date](./index.html#calendar-date).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":429128,"byte_end":429207,"line_start":754,"line_end":754,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":429212,"byte_end":429215,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::year`] method.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":429220,"byte_end":429264,"line_start":756,"line_end":756,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":429269,"byte_end":429272,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":429277,"byte_end":429290,"line_start":758,"line_end":758,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":429295,"byte_end":429298,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":429303,"byte_end":429310,"line_start":760,"line_end":760,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":429315,"byte_end":429368,"line_start":761,"line_end":761,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":429373,"byte_end":429376,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 25).and_hms(12, 34, 56);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":429381,"byte_end":429462,"line_start":763,"line_end":763,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(dt.year(), 2015);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":429467,"byte_end":429499,"line_start":764,"line_end":764,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":429504,"byte_end":429511,"line_start":765,"line_end":765,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":429516,"byte_end":429525,"line_start":766,"line_end":766,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1302},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":430052,"byte_end":430057,"line_start":786,"line_end":786,"column_start":8,"column_end":13},"name":"month","qualname":"<NaiveDateTime as traits::Datelike>::month","value":"fn month(&Self) -> u32","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1990},"docs":" Returns the month number starting from 1.","sig":null,"attributes":[{"value":"/ Returns the month number starting from 1.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":429590,"byte_end":429635,"line_start":771,"line_end":771,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":429640,"byte_end":429643,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 1 to 12.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":429648,"byte_end":429689,"line_start":773,"line_end":773,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":429694,"byte_end":429697,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::month`](./struct.NaiveDate.html#method.month) method.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":429702,"byte_end":429785,"line_start":775,"line_end":775,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":429790,"byte_end":429793,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":429798,"byte_end":429811,"line_start":777,"line_end":777,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":429816,"byte_end":429819,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":429824,"byte_end":429831,"line_start":779,"line_end":779,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":429836,"byte_end":429889,"line_start":780,"line_end":780,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":429894,"byte_end":429897,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 25).and_hms(12, 34, 56);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":429902,"byte_end":429983,"line_start":782,"line_end":782,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(dt.month(), 9);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":429988,"byte_end":430018,"line_start":783,"line_end":783,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":430023,"byte_end":430030,"line_start":784,"line_end":784,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":430035,"byte_end":430044,"line_start":785,"line_end":785,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1303},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":430576,"byte_end":430582,"line_start":805,"line_end":805,"column_start":8,"column_end":14},"name":"month0","qualname":"<NaiveDateTime as traits::Datelike>::month0","value":"fn month0(&Self) -> u32","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1991},"docs":" Returns the month number starting from 0.","sig":null,"attributes":[{"value":"/ Returns the month number starting from 0.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":430111,"byte_end":430156,"line_start":790,"line_end":790,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":430161,"byte_end":430164,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 11.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":430169,"byte_end":430210,"line_start":792,"line_end":792,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":430215,"byte_end":430218,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::month0`](./struct.NaiveDate.html#method.month0) method.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":430223,"byte_end":430308,"line_start":794,"line_end":794,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":430313,"byte_end":430316,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":430321,"byte_end":430334,"line_start":796,"line_end":796,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":430339,"byte_end":430342,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":430347,"byte_end":430354,"line_start":798,"line_end":798,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":430359,"byte_end":430412,"line_start":799,"line_end":799,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":430417,"byte_end":430420,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 25).and_hms(12, 34, 56);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":430425,"byte_end":430506,"line_start":801,"line_end":801,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(dt.month0(), 8);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":430511,"byte_end":430542,"line_start":802,"line_end":802,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":430547,"byte_end":430554,"line_start":803,"line_end":803,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":430559,"byte_end":430568,"line_start":804,"line_end":804,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1304},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":431137,"byte_end":431140,"line_start":824,"line_end":824,"column_start":8,"column_end":11},"name":"day","qualname":"<NaiveDateTime as traits::Datelike>::day","value":"fn day(&Self) -> u32","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1992},"docs":" Returns the day of month starting from 1.","sig":null,"attributes":[{"value":"/ Returns the day of month starting from 1.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":430637,"byte_end":430682,"line_start":809,"line_end":809,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":430687,"byte_end":430690,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 1 to 31. (The last day of month differs by months.)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":430695,"byte_end":430779,"line_start":811,"line_end":811,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":430784,"byte_end":430787,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::day`](./struct.NaiveDate.html#method.day) method.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":430792,"byte_end":430871,"line_start":813,"line_end":813,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":430876,"byte_end":430879,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":430884,"byte_end":430897,"line_start":815,"line_end":815,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":430902,"byte_end":430905,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":430910,"byte_end":430917,"line_start":817,"line_end":817,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":430922,"byte_end":430975,"line_start":818,"line_end":818,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":430980,"byte_end":430983,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 25).and_hms(12, 34, 56);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":430988,"byte_end":431069,"line_start":820,"line_end":820,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(dt.day(), 25);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":431074,"byte_end":431103,"line_start":821,"line_end":821,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":431108,"byte_end":431115,"line_start":822,"line_end":822,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":431120,"byte_end":431129,"line_start":823,"line_end":823,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1305},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":431695,"byte_end":431699,"line_start":843,"line_end":843,"column_start":8,"column_end":12},"name":"day0","qualname":"<NaiveDateTime as traits::Datelike>::day0","value":"fn day0(&Self) -> u32","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1993},"docs":" Returns the day of month starting from 0.","sig":null,"attributes":[{"value":"/ Returns the day of month starting from 0.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":431192,"byte_end":431237,"line_start":828,"line_end":828,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":431242,"byte_end":431245,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 30. (The last day of month differs by months.)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":431250,"byte_end":431334,"line_start":830,"line_end":830,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":431339,"byte_end":431342,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::day0`](./struct.NaiveDate.html#method.day0) method.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":431347,"byte_end":431428,"line_start":832,"line_end":832,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":431433,"byte_end":431436,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":431441,"byte_end":431454,"line_start":834,"line_end":834,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":431459,"byte_end":431462,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":431467,"byte_end":431474,"line_start":836,"line_end":836,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":431479,"byte_end":431532,"line_start":837,"line_end":837,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":431537,"byte_end":431540,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 25).and_hms(12, 34, 56);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":431545,"byte_end":431626,"line_start":839,"line_end":839,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(dt.day0(), 24);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":431631,"byte_end":431661,"line_start":840,"line_end":840,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":431666,"byte_end":431673,"line_start":841,"line_end":841,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":431678,"byte_end":431687,"line_start":842,"line_end":842,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1306},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":432263,"byte_end":432270,"line_start":862,"line_end":862,"column_start":8,"column_end":15},"name":"ordinal","qualname":"<NaiveDateTime as traits::Datelike>::ordinal","value":"fn ordinal(&Self) -> u32","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1994},"docs":" Returns the day of year starting from 1.","sig":null,"attributes":[{"value":"/ Returns the day of year starting from 1.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":431752,"byte_end":431796,"line_start":847,"line_end":847,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":431801,"byte_end":431804,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 1 to 366. (The last day of year differs by years.)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":431809,"byte_end":431892,"line_start":849,"line_end":849,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":431897,"byte_end":431900,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::ordinal`](./struct.NaiveDate.html#method.ordinal) method.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":431905,"byte_end":431992,"line_start":851,"line_end":851,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":431997,"byte_end":432000,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":432005,"byte_end":432018,"line_start":853,"line_end":853,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":432023,"byte_end":432026,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":432031,"byte_end":432038,"line_start":855,"line_end":855,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":432043,"byte_end":432096,"line_start":856,"line_end":856,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":432101,"byte_end":432104,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 25).and_hms(12, 34, 56);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":432109,"byte_end":432190,"line_start":858,"line_end":858,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(dt.ordinal(), 268);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":432195,"byte_end":432229,"line_start":859,"line_end":859,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":432234,"byte_end":432241,"line_start":860,"line_end":860,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":432246,"byte_end":432255,"line_start":861,"line_end":861,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1307},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":432840,"byte_end":432848,"line_start":881,"line_end":881,"column_start":8,"column_end":16},"name":"ordinal0","qualname":"<NaiveDateTime as traits::Datelike>::ordinal0","value":"fn ordinal0(&Self) -> u32","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1995},"docs":" Returns the day of year starting from 0.","sig":null,"attributes":[{"value":"/ Returns the day of year starting from 0.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":432326,"byte_end":432370,"line_start":866,"line_end":866,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":432375,"byte_end":432378,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 365. (The last day of year differs by years.)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":432383,"byte_end":432466,"line_start":868,"line_end":868,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":432471,"byte_end":432474,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::ordinal0`](./struct.NaiveDate.html#method.ordinal0) method.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":432479,"byte_end":432568,"line_start":870,"line_end":870,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":432573,"byte_end":432576,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":432581,"byte_end":432594,"line_start":872,"line_end":872,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":432599,"byte_end":432602,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":432607,"byte_end":432614,"line_start":874,"line_end":874,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":432619,"byte_end":432672,"line_start":875,"line_end":875,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":432677,"byte_end":432680,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 25).and_hms(12, 34, 56);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":432685,"byte_end":432766,"line_start":877,"line_end":877,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(dt.ordinal0(), 267);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":432771,"byte_end":432806,"line_start":878,"line_end":878,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":432811,"byte_end":432818,"line_start":879,"line_end":879,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":432823,"byte_end":432832,"line_start":880,"line_end":880,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1308},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":433322,"byte_end":433329,"line_start":898,"line_end":898,"column_start":8,"column_end":15},"name":"weekday","qualname":"<NaiveDateTime as traits::Datelike>::weekday","value":"fn weekday(&Self) -> Weekday","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1996},"docs":" Returns the day of week.","sig":null,"attributes":[{"value":"/ Returns the day of week.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":432905,"byte_end":432933,"line_start":885,"line_end":885,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":432938,"byte_end":432941,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::weekday`](./struct.NaiveDate.html#method.weekday) method.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":432946,"byte_end":433033,"line_start":887,"line_end":887,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":433038,"byte_end":433041,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":433046,"byte_end":433059,"line_start":889,"line_end":889,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":433064,"byte_end":433067,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":433072,"byte_end":433079,"line_start":891,"line_end":891,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike, Weekday};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":433084,"byte_end":433146,"line_start":892,"line_end":892,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":433151,"byte_end":433154,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 25).and_hms(12, 34, 56);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":433159,"byte_end":433240,"line_start":894,"line_end":894,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(dt.weekday(), Weekday::Fri);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":433245,"byte_end":433288,"line_start":895,"line_end":895,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":433293,"byte_end":433300,"line_start":896,"line_end":896,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":433305,"byte_end":433314,"line_start":897,"line_end":897,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1309},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":433406,"byte_end":433414,"line_start":903,"line_end":903,"column_start":8,"column_end":16},"name":"iso_week","qualname":"<NaiveDateTime as traits::Datelike>::iso_week","value":"fn iso_week(&Self) -> IsoWeek","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1997},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":433389,"byte_end":433398,"line_start":902,"line_end":902,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1310},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":434114,"byte_end":434123,"line_start":923,"line_end":923,"column_start":8,"column_end":17},"name":"with_year","qualname":"<NaiveDateTime as traits::Datelike>::with_year","value":"fn with_year(&Self, i32) -> Option<NaiveDateTime>","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1998},"docs":" Makes a new `NaiveDateTime` with the year number changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` with the year number changed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":433475,"byte_end":433536,"line_start":907,"line_end":907,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":433541,"byte_end":433544,"line_start":908,"line_end":908,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDateTime` would be invalid.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":433549,"byte_end":433620,"line_start":909,"line_end":909,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":433625,"byte_end":433628,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::with_year`] method.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":433633,"byte_end":433682,"line_start":911,"line_end":911,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":433687,"byte_end":433690,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":433695,"byte_end":433708,"line_start":913,"line_end":913,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":433713,"byte_end":433716,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":433721,"byte_end":433728,"line_start":915,"line_end":915,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":433733,"byte_end":433786,"line_start":916,"line_end":916,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":433791,"byte_end":433794,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 25).and_hms(12, 34, 56);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":433799,"byte_end":433880,"line_start":918,"line_end":918,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(dt.with_year(2016), Some(NaiveDate::from_ymd(2016, 9, 25).and_hms(12, 34, 56)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":433885,"byte_end":433980,"line_start":919,"line_end":919,"column_start":5,"column_end":100}},{"value":"/ assert_eq!(dt.with_year(-308), Some(NaiveDate::from_ymd(-308, 9, 25).and_hms(12, 34, 56)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":433985,"byte_end":434080,"line_start":920,"line_end":920,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":434085,"byte_end":434092,"line_start":921,"line_end":921,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":434097,"byte_end":434106,"line_start":922,"line_end":922,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1312},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":434939,"byte_end":434949,"line_start":944,"line_end":944,"column_start":8,"column_end":18},"name":"with_month","qualname":"<NaiveDateTime as traits::Datelike>::with_month","value":"fn with_month(&Self, u32) -> Option<NaiveDateTime>","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":1999},"docs":" Makes a new `NaiveDateTime` with the month number (starting from 1) changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` with the month number (starting from 1) changed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":434258,"byte_end":434338,"line_start":927,"line_end":927,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":434343,"byte_end":434346,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDateTime` would be invalid.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":434351,"byte_end":434422,"line_start":929,"line_end":929,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":434427,"byte_end":434430,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::with_month`] method.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":434435,"byte_end":434485,"line_start":931,"line_end":931,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":434490,"byte_end":434493,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":434498,"byte_end":434511,"line_start":933,"line_end":933,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":434516,"byte_end":434519,"line_start":934,"line_end":934,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":434524,"byte_end":434531,"line_start":935,"line_end":935,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":434536,"byte_end":434589,"line_start":936,"line_end":936,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":434594,"byte_end":434597,"line_start":937,"line_end":937,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 30).and_hms(12, 34, 56);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":434602,"byte_end":434683,"line_start":938,"line_end":938,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(dt.with_month(10), Some(NaiveDate::from_ymd(2015, 10, 30).and_hms(12, 34, 56)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":434688,"byte_end":434783,"line_start":939,"line_end":939,"column_start":5,"column_end":100}},{"value":"/ assert_eq!(dt.with_month(13), None); // no month 13","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":434788,"byte_end":434843,"line_start":940,"line_end":940,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(dt.with_month(2), None); // no February 30","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":434848,"byte_end":434905,"line_start":941,"line_end":941,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":434910,"byte_end":434917,"line_start":942,"line_end":942,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":434922,"byte_end":434931,"line_start":943,"line_end":943,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1314},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":435771,"byte_end":435782,"line_start":965,"line_end":965,"column_start":8,"column_end":19},"name":"with_month0","qualname":"<NaiveDateTime as traits::Datelike>::with_month0","value":"fn with_month0(&Self, u32) -> Option<NaiveDateTime>","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":2000},"docs":" Makes a new `NaiveDateTime` with the month number (starting from 0) changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` with the month number (starting from 0) changed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":435087,"byte_end":435167,"line_start":948,"line_end":948,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":435172,"byte_end":435175,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDateTime` would be invalid.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":435180,"byte_end":435251,"line_start":950,"line_end":950,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":435256,"byte_end":435259,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::with_month0`] method.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":435264,"byte_end":435315,"line_start":952,"line_end":952,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":435320,"byte_end":435323,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":435328,"byte_end":435341,"line_start":954,"line_end":954,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":435346,"byte_end":435349,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":435354,"byte_end":435361,"line_start":956,"line_end":956,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":435366,"byte_end":435419,"line_start":957,"line_end":957,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":435424,"byte_end":435427,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 30).and_hms(12, 34, 56);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":435432,"byte_end":435513,"line_start":959,"line_end":959,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(dt.with_month0(9), Some(NaiveDate::from_ymd(2015, 10, 30).and_hms(12, 34, 56)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":435518,"byte_end":435613,"line_start":960,"line_end":960,"column_start":5,"column_end":100}},{"value":"/ assert_eq!(dt.with_month0(12), None); // no month 13","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":435618,"byte_end":435674,"line_start":961,"line_end":961,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(dt.with_month0(1), None); // no February 30","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":435679,"byte_end":435737,"line_start":962,"line_end":962,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":435742,"byte_end":435749,"line_start":963,"line_end":963,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":435754,"byte_end":435763,"line_start":964,"line_end":964,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1316},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":436538,"byte_end":436546,"line_start":985,"line_end":985,"column_start":8,"column_end":16},"name":"with_day","qualname":"<NaiveDateTime as traits::Datelike>::with_day","value":"fn with_day(&Self, u32) -> Option<NaiveDateTime>","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":2001},"docs":" Makes a new `NaiveDateTime` with the day of month (starting from 1) changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` with the day of month (starting from 1) changed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":435923,"byte_end":436003,"line_start":969,"line_end":969,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":436008,"byte_end":436011,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDateTime` would be invalid.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":436016,"byte_end":436087,"line_start":971,"line_end":971,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":436092,"byte_end":436095,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::with_day`] method.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":436100,"byte_end":436148,"line_start":973,"line_end":973,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":436153,"byte_end":436156,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":436161,"byte_end":436174,"line_start":975,"line_end":975,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":436179,"byte_end":436182,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":436187,"byte_end":436194,"line_start":977,"line_end":977,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":436199,"byte_end":436252,"line_start":978,"line_end":978,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":436257,"byte_end":436260,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms(12, 34, 56);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":436265,"byte_end":436345,"line_start":980,"line_end":980,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(dt.with_day(30), Some(NaiveDate::from_ymd(2015, 9, 30).and_hms(12, 34, 56)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":436350,"byte_end":436442,"line_start":981,"line_end":981,"column_start":5,"column_end":97}},{"value":"/ assert_eq!(dt.with_day(31), None); // no September 31","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":436447,"byte_end":436504,"line_start":982,"line_end":982,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":436509,"byte_end":436516,"line_start":983,"line_end":983,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":436521,"byte_end":436530,"line_start":984,"line_end":984,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1318},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":437296,"byte_end":437305,"line_start":1005,"line_end":1005,"column_start":8,"column_end":17},"name":"with_day0","qualname":"<NaiveDateTime as traits::Datelike>::with_day0","value":"fn with_day0(&Self, u32) -> Option<NaiveDateTime>","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":2002},"docs":" Makes a new `NaiveDateTime` with the day of month (starting from 0) changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` with the day of month (starting from 0) changed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":436678,"byte_end":436758,"line_start":989,"line_end":989,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":436763,"byte_end":436766,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDateTime` would be invalid.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":436771,"byte_end":436842,"line_start":991,"line_end":991,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":436847,"byte_end":436850,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::with_day0`] method.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":436855,"byte_end":436904,"line_start":993,"line_end":993,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":436909,"byte_end":436912,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":436917,"byte_end":436930,"line_start":995,"line_end":995,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":436935,"byte_end":436938,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":436943,"byte_end":436950,"line_start":997,"line_end":997,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":436955,"byte_end":437008,"line_start":998,"line_end":998,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":437013,"byte_end":437016,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms(12, 34, 56);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":437021,"byte_end":437101,"line_start":1000,"line_end":1000,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(dt.with_day0(29), Some(NaiveDate::from_ymd(2015, 9, 30).and_hms(12, 34, 56)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":437106,"byte_end":437199,"line_start":1001,"line_end":1001,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(dt.with_day0(30), None); // no September 31","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":437204,"byte_end":437262,"line_start":1002,"line_end":1002,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":437267,"byte_end":437274,"line_start":1003,"line_end":1003,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":437279,"byte_end":437288,"line_start":1004,"line_end":1004,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1320},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":438427,"byte_end":438439,"line_start":1032,"line_end":1032,"column_start":8,"column_end":20},"name":"with_ordinal","qualname":"<NaiveDateTime as traits::Datelike>::with_ordinal","value":"fn with_ordinal(&Self, u32) -> Option<NaiveDateTime>","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":2003},"docs":" Makes a new `NaiveDateTime` with the day of year (starting from 1) changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` with the day of year (starting from 1) changed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":437440,"byte_end":437519,"line_start":1009,"line_end":1009,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":437524,"byte_end":437527,"line_start":1010,"line_end":1010,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDateTime` would be invalid.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":437532,"byte_end":437603,"line_start":1011,"line_end":1011,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":437608,"byte_end":437611,"line_start":1012,"line_end":1012,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::with_ordinal`] method.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":437616,"byte_end":437668,"line_start":1013,"line_end":1013,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":437673,"byte_end":437676,"line_start":1014,"line_end":1014,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":437681,"byte_end":437694,"line_start":1015,"line_end":1015,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":437699,"byte_end":437702,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":437707,"byte_end":437714,"line_start":1017,"line_end":1017,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":437719,"byte_end":437772,"line_start":1018,"line_end":1018,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":437777,"byte_end":437780,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms(12, 34, 56);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":437785,"byte_end":437865,"line_start":1020,"line_end":1020,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(dt.with_ordinal(60),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":437870,"byte_end":437905,"line_start":1021,"line_end":1021,"column_start":5,"column_end":40}},{"value":"/            Some(NaiveDate::from_ymd(2015, 3, 1).and_hms(12, 34, 56)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":437910,"byte_end":437984,"line_start":1022,"line_end":1022,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(dt.with_ordinal(366), None); // 2015 had only 365 days","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":437989,"byte_end":438058,"line_start":1023,"line_end":1023,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":438063,"byte_end":438066,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2016, 9, 8).and_hms(12, 34, 56);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":438071,"byte_end":438151,"line_start":1025,"line_end":1025,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(dt.with_ordinal(60),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":438156,"byte_end":438191,"line_start":1026,"line_end":1026,"column_start":5,"column_end":40}},{"value":"/            Some(NaiveDate::from_ymd(2016, 2, 29).and_hms(12, 34, 56)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":438196,"byte_end":438271,"line_start":1027,"line_end":1027,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(dt.with_ordinal(366),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":438276,"byte_end":438312,"line_start":1028,"line_end":1028,"column_start":5,"column_end":41}},{"value":"/            Some(NaiveDate::from_ymd(2016, 12, 31).and_hms(12, 34, 56)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":438317,"byte_end":438393,"line_start":1029,"line_end":1029,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":438398,"byte_end":438405,"line_start":1030,"line_end":1030,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":438410,"byte_end":438419,"line_start":1031,"line_end":1031,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1322},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":439575,"byte_end":439588,"line_start":1059,"line_end":1059,"column_start":8,"column_end":21},"name":"with_ordinal0","qualname":"<NaiveDateTime as traits::Datelike>::with_ordinal0","value":"fn with_ordinal0(&Self, u32) -> Option<NaiveDateTime>","parent":{"krate":0,"index":1987},"children":[],"decl_id":{"krate":0,"index":2004},"docs":" Makes a new `NaiveDateTime` with the day of year (starting from 0) changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` with the day of year (starting from 0) changed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":438583,"byte_end":438662,"line_start":1036,"line_end":1036,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":438667,"byte_end":438670,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDateTime` would be invalid.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":438675,"byte_end":438746,"line_start":1038,"line_end":1038,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":438751,"byte_end":438754,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::with_ordinal0`] method.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":438759,"byte_end":438812,"line_start":1040,"line_end":1040,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":438817,"byte_end":438820,"line_start":1041,"line_end":1041,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":438825,"byte_end":438838,"line_start":1042,"line_end":1042,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":438843,"byte_end":438846,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":438851,"byte_end":438858,"line_start":1044,"line_end":1044,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":438863,"byte_end":438916,"line_start":1045,"line_end":1045,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":438921,"byte_end":438924,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms(12, 34, 56);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":438929,"byte_end":439009,"line_start":1047,"line_end":1047,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(dt.with_ordinal0(59),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":439014,"byte_end":439050,"line_start":1048,"line_end":1048,"column_start":5,"column_end":41}},{"value":"/            Some(NaiveDate::from_ymd(2015, 3, 1).and_hms(12, 34, 56)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":439055,"byte_end":439129,"line_start":1049,"line_end":1049,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(dt.with_ordinal0(365), None); // 2015 had only 365 days","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":439134,"byte_end":439204,"line_start":1050,"line_end":1050,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":439209,"byte_end":439212,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2016, 9, 8).and_hms(12, 34, 56);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":439217,"byte_end":439297,"line_start":1052,"line_end":1052,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(dt.with_ordinal0(59),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":439302,"byte_end":439338,"line_start":1053,"line_end":1053,"column_start":5,"column_end":41}},{"value":"/            Some(NaiveDate::from_ymd(2016, 2, 29).and_hms(12, 34, 56)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":439343,"byte_end":439418,"line_start":1054,"line_end":1054,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(dt.with_ordinal0(365),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":439423,"byte_end":439460,"line_start":1055,"line_end":1055,"column_start":5,"column_end":42}},{"value":"/            Some(NaiveDate::from_ymd(2016, 12, 31).and_hms(12, 34, 56)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":439465,"byte_end":439541,"line_start":1056,"line_end":1056,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":439546,"byte_end":439553,"line_start":1057,"line_end":1057,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":439558,"byte_end":439567,"line_start":1058,"line_end":1058,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1325},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":440146,"byte_end":440150,"line_start":1078,"line_end":1078,"column_start":8,"column_end":12},"name":"hour","qualname":"<NaiveDateTime as traits::Timelike>::hour","value":"fn hour(&Self) -> u32","parent":{"krate":0,"index":2006},"children":[],"decl_id":{"krate":0,"index":2007},"docs":" Returns the hour number from 0 to 23.","sig":null,"attributes":[{"value":"/ Returns the hour number from 0 to 23.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":439771,"byte_end":439812,"line_start":1065,"line_end":1065,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":439817,"byte_end":439820,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveTime::hour`] method.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":439825,"byte_end":439869,"line_start":1067,"line_end":1067,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":439874,"byte_end":439877,"line_start":1068,"line_end":1068,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":439882,"byte_end":439895,"line_start":1069,"line_end":1069,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":439900,"byte_end":439903,"line_start":1070,"line_end":1070,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":439908,"byte_end":439915,"line_start":1071,"line_end":1071,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Timelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":439920,"byte_end":439973,"line_start":1072,"line_end":1072,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":439978,"byte_end":439981,"line_start":1073,"line_end":1073,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(12, 34, 56, 789);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":439986,"byte_end":440077,"line_start":1074,"line_end":1074,"column_start":5,"column_end":96}},{"value":"/ assert_eq!(dt.hour(), 12);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":440082,"byte_end":440112,"line_start":1075,"line_end":1075,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":440117,"byte_end":440124,"line_start":1076,"line_end":1076,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":440129,"byte_end":440138,"line_start":1077,"line_end":1077,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1326},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":440584,"byte_end":440590,"line_start":1095,"line_end":1095,"column_start":8,"column_end":14},"name":"minute","qualname":"<NaiveDateTime as traits::Timelike>::minute","value":"fn minute(&Self) -> u32","parent":{"krate":0,"index":2006},"children":[],"decl_id":{"krate":0,"index":2009},"docs":" Returns the minute number from 0 to 59.","sig":null,"attributes":[{"value":"/ Returns the minute number from 0 to 59.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":440203,"byte_end":440246,"line_start":1082,"line_end":1082,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":440251,"byte_end":440254,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveTime::minute`] method.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":440259,"byte_end":440305,"line_start":1084,"line_end":1084,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":440310,"byte_end":440313,"line_start":1085,"line_end":1085,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":440318,"byte_end":440331,"line_start":1086,"line_end":1086,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":440336,"byte_end":440339,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":440344,"byte_end":440351,"line_start":1088,"line_end":1088,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Timelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":440356,"byte_end":440409,"line_start":1089,"line_end":1089,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":440414,"byte_end":440417,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(12, 34, 56, 789);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":440422,"byte_end":440513,"line_start":1091,"line_end":1091,"column_start":5,"column_end":96}},{"value":"/ assert_eq!(dt.minute(), 34);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":440518,"byte_end":440550,"line_start":1092,"line_end":1092,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":440555,"byte_end":440562,"line_start":1093,"line_end":1093,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":440567,"byte_end":440576,"line_start":1094,"line_end":1094,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1327},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":441026,"byte_end":441032,"line_start":1112,"line_end":1112,"column_start":8,"column_end":14},"name":"second","qualname":"<NaiveDateTime as traits::Timelike>::second","value":"fn second(&Self) -> u32","parent":{"krate":0,"index":2006},"children":[],"decl_id":{"krate":0,"index":2010},"docs":" Returns the second number from 0 to 59.","sig":null,"attributes":[{"value":"/ Returns the second number from 0 to 59.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":440645,"byte_end":440688,"line_start":1099,"line_end":1099,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":440693,"byte_end":440696,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveTime::second`] method.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":440701,"byte_end":440747,"line_start":1101,"line_end":1101,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":440752,"byte_end":440755,"line_start":1102,"line_end":1102,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":440760,"byte_end":440773,"line_start":1103,"line_end":1103,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":440778,"byte_end":440781,"line_start":1104,"line_end":1104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":440786,"byte_end":440793,"line_start":1105,"line_end":1105,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Timelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":440798,"byte_end":440851,"line_start":1106,"line_end":1106,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":440856,"byte_end":440859,"line_start":1107,"line_end":1107,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(12, 34, 56, 789);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":440864,"byte_end":440955,"line_start":1108,"line_end":1108,"column_start":5,"column_end":96}},{"value":"/ assert_eq!(dt.second(), 56);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":440960,"byte_end":440992,"line_start":1109,"line_end":1109,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":440997,"byte_end":441004,"line_start":1110,"line_end":1110,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":441009,"byte_end":441018,"line_start":1111,"line_end":1111,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1328},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":441650,"byte_end":441660,"line_start":1131,"line_end":1131,"column_start":8,"column_end":18},"name":"nanosecond","qualname":"<NaiveDateTime as traits::Timelike>::nanosecond","value":"fn nanosecond(&Self) -> u32","parent":{"krate":0,"index":2006},"children":[],"decl_id":{"krate":0,"index":2011},"docs":" Returns the number of nanoseconds since the whole non-leap second.\n The range from 1,000,000,000 to 1,999,999,999 represents\n the [leap second](./struct.NaiveTime.html#leap-second-handling).","sig":null,"attributes":[{"value":"/ Returns the number of nanoseconds since the whole non-leap second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":441087,"byte_end":441157,"line_start":1116,"line_end":1116,"column_start":5,"column_end":75}},{"value":"/ The range from 1,000,000,000 to 1,999,999,999 represents","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":441162,"byte_end":441222,"line_start":1117,"line_end":1117,"column_start":5,"column_end":65}},{"value":"/ the [leap second](./struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":441227,"byte_end":441295,"line_start":1118,"line_end":1118,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":441300,"byte_end":441303,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveTime::nanosecond`] method.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":441308,"byte_end":441358,"line_start":1120,"line_end":1120,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":441363,"byte_end":441366,"line_start":1121,"line_end":1121,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":441371,"byte_end":441384,"line_start":1122,"line_end":1122,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":441389,"byte_end":441392,"line_start":1123,"line_end":1123,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":441397,"byte_end":441404,"line_start":1124,"line_end":1124,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Timelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":441409,"byte_end":441462,"line_start":1125,"line_end":1125,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":441467,"byte_end":441470,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(12, 34, 56, 789);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":441475,"byte_end":441566,"line_start":1127,"line_end":1127,"column_start":5,"column_end":96}},{"value":"/ assert_eq!(dt.nanosecond(), 789_000_000);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":441571,"byte_end":441616,"line_start":1128,"line_end":1128,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":441621,"byte_end":441628,"line_start":1129,"line_end":1129,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":441633,"byte_end":441642,"line_start":1130,"line_end":1130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1329},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":442337,"byte_end":442346,"line_start":1152,"line_end":1152,"column_start":8,"column_end":17},"name":"with_hour","qualname":"<NaiveDateTime as traits::Timelike>::with_hour","value":"fn with_hour(&Self, u32) -> Option<NaiveDateTime>","parent":{"krate":0,"index":2006},"children":[],"decl_id":{"krate":0,"index":2012},"docs":" Makes a new `NaiveDateTime` with the hour number changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` with the hour number changed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":441719,"byte_end":441780,"line_start":1135,"line_end":1135,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":441785,"byte_end":441788,"line_start":1136,"line_end":1136,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDateTime` would be invalid.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":441793,"byte_end":441864,"line_start":1137,"line_end":1137,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":441869,"byte_end":441872,"line_start":1138,"line_end":1138,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveTime::with_hour`] method.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":441877,"byte_end":441926,"line_start":1139,"line_end":1139,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":441931,"byte_end":441934,"line_start":1140,"line_end":1140,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":441939,"byte_end":441952,"line_start":1141,"line_end":1141,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":441957,"byte_end":441960,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":441965,"byte_end":441972,"line_start":1143,"line_end":1143,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Timelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":441977,"byte_end":442030,"line_start":1144,"line_end":1144,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":442035,"byte_end":442038,"line_start":1145,"line_end":1145,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(12, 34, 56, 789);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":442043,"byte_end":442134,"line_start":1146,"line_end":1146,"column_start":5,"column_end":96}},{"value":"/ assert_eq!(dt.with_hour(7),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":442139,"byte_end":442170,"line_start":1147,"line_end":1147,"column_start":5,"column_end":36}},{"value":"/            Some(NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(7, 34, 56, 789)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":442175,"byte_end":442259,"line_start":1148,"line_end":1148,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(dt.with_hour(24), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":442264,"byte_end":442303,"line_start":1149,"line_end":1149,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":442308,"byte_end":442315,"line_start":1150,"line_end":1150,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":442320,"byte_end":442329,"line_start":1151,"line_end":1151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1331},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":443117,"byte_end":443128,"line_start":1174,"line_end":1174,"column_start":8,"column_end":19},"name":"with_minute","qualname":"<NaiveDateTime as traits::Timelike>::with_minute","value":"fn with_minute(&Self, u32) -> Option<NaiveDateTime>","parent":{"krate":0,"index":2006},"children":[],"decl_id":{"krate":0,"index":2013},"docs":" Makes a new `NaiveDateTime` with the minute number changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` with the minute number changed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":442481,"byte_end":442544,"line_start":1156,"line_end":1156,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":442549,"byte_end":442552,"line_start":1157,"line_end":1157,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDateTime` would be invalid.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":442557,"byte_end":442628,"line_start":1158,"line_end":1158,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":442633,"byte_end":442636,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ See also the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":442641,"byte_end":442657,"line_start":1160,"line_end":1160,"column_start":5,"column_end":21}},{"value":"/ [`NaiveTime::with_minute`] method.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":442662,"byte_end":442700,"line_start":1161,"line_end":1161,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":442705,"byte_end":442708,"line_start":1162,"line_end":1162,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":442713,"byte_end":442726,"line_start":1163,"line_end":1163,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":442731,"byte_end":442734,"line_start":1164,"line_end":1164,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":442739,"byte_end":442746,"line_start":1165,"line_end":1165,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Timelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":442751,"byte_end":442804,"line_start":1166,"line_end":1166,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":442809,"byte_end":442812,"line_start":1167,"line_end":1167,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(12, 34, 56, 789);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":442817,"byte_end":442908,"line_start":1168,"line_end":1168,"column_start":5,"column_end":96}},{"value":"/ assert_eq!(dt.with_minute(45),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":442913,"byte_end":442947,"line_start":1169,"line_end":1169,"column_start":5,"column_end":39}},{"value":"/            Some(NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(12, 45, 56, 789)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":442952,"byte_end":443037,"line_start":1170,"line_end":1170,"column_start":5,"column_end":90}},{"value":"/ assert_eq!(dt.with_minute(60), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":443042,"byte_end":443083,"line_start":1171,"line_end":1171,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":443088,"byte_end":443095,"line_start":1172,"line_end":1172,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":443100,"byte_end":443109,"line_start":1173,"line_end":1173,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1333},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":444000,"byte_end":444011,"line_start":1197,"line_end":1197,"column_start":8,"column_end":19},"name":"with_second","qualname":"<NaiveDateTime as traits::Timelike>::with_second","value":"fn with_second(&Self, u32) -> Option<NaiveDateTime>","parent":{"krate":0,"index":2006},"children":[],"decl_id":{"krate":0,"index":2014},"docs":" Makes a new `NaiveDateTime` with the second number changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` with the second number changed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":443263,"byte_end":443326,"line_start":1178,"line_end":1178,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":443331,"byte_end":443334,"line_start":1179,"line_end":1179,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDateTime` would be invalid. As","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":443339,"byte_end":443413,"line_start":1180,"line_end":1180,"column_start":5,"column_end":79}},{"value":"/ with the [`NaiveDateTime::second`] method, the input range is","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":443418,"byte_end":443483,"line_start":1181,"line_end":1181,"column_start":5,"column_end":70}},{"value":"/ restricted to 0 through 59.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":443488,"byte_end":443519,"line_start":1182,"line_end":1182,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":443524,"byte_end":443527,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveTime::with_second`] method.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":443532,"byte_end":443583,"line_start":1184,"line_end":1184,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":443588,"byte_end":443591,"line_start":1185,"line_end":1185,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":443596,"byte_end":443609,"line_start":1186,"line_end":1186,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":443614,"byte_end":443617,"line_start":1187,"line_end":1187,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":443622,"byte_end":443629,"line_start":1188,"line_end":1188,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Timelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":443634,"byte_end":443687,"line_start":1189,"line_end":1189,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":443692,"byte_end":443695,"line_start":1190,"line_end":1190,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(12, 34, 56, 789);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":443700,"byte_end":443791,"line_start":1191,"line_end":1191,"column_start":5,"column_end":96}},{"value":"/ assert_eq!(dt.with_second(17),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":443796,"byte_end":443830,"line_start":1192,"line_end":1192,"column_start":5,"column_end":39}},{"value":"/            Some(NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(12, 34, 17, 789)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":443835,"byte_end":443920,"line_start":1193,"line_end":1193,"column_start":5,"column_end":90}},{"value":"/ assert_eq!(dt.with_second(60), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":443925,"byte_end":443966,"line_start":1194,"line_end":1194,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":443971,"byte_end":443978,"line_start":1195,"line_end":1195,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":443983,"byte_end":443992,"line_start":1196,"line_end":1196,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1335},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":445132,"byte_end":445147,"line_start":1222,"line_end":1222,"column_start":8,"column_end":23},"name":"with_nanosecond","qualname":"<NaiveDateTime as traits::Timelike>::with_nanosecond","value":"fn with_nanosecond(&Self, u32) -> Option<NaiveDateTime>","parent":{"krate":0,"index":2006},"children":[],"decl_id":{"krate":0,"index":2015},"docs":" Makes a new `NaiveDateTime` with nanoseconds since the whole non-leap second changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` with nanoseconds since the whole non-leap second changed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":444146,"byte_end":444235,"line_start":1201,"line_end":1201,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":444240,"byte_end":444243,"line_start":1202,"line_end":1202,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDateTime` would be invalid.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":444248,"byte_end":444319,"line_start":1203,"line_end":1203,"column_start":5,"column_end":76}},{"value":"/ As with the [`NaiveDateTime::nanosecond`] method,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":444324,"byte_end":444377,"line_start":1204,"line_end":1204,"column_start":5,"column_end":58}},{"value":"/ the input range can exceed 1,000,000,000 for leap seconds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":444382,"byte_end":444444,"line_start":1205,"line_end":1205,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":444449,"byte_end":444452,"line_start":1206,"line_end":1206,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveTime::with_nanosecond`] method.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":444457,"byte_end":444512,"line_start":1207,"line_end":1207,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":444517,"byte_end":444520,"line_start":1208,"line_end":1208,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":444525,"byte_end":444538,"line_start":1209,"line_end":1209,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":444543,"byte_end":444546,"line_start":1210,"line_end":1210,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":444551,"byte_end":444558,"line_start":1211,"line_end":1211,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Timelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":444563,"byte_end":444616,"line_start":1212,"line_end":1212,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":444621,"byte_end":444624,"line_start":1213,"line_end":1213,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(12, 34, 56, 789);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":444629,"byte_end":444720,"line_start":1214,"line_end":1214,"column_start":5,"column_end":96}},{"value":"/ assert_eq!(dt.with_nanosecond(333_333_333),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":444725,"byte_end":444772,"line_start":1215,"line_end":1215,"column_start":5,"column_end":52}},{"value":"/            Some(NaiveDate::from_ymd(2015, 9, 8).and_hms_nano(12, 34, 56, 333_333_333)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":444777,"byte_end":444869,"line_start":1216,"line_end":1216,"column_start":5,"column_end":97}},{"value":"/ assert_eq!(dt.with_nanosecond(1_333_333_333), // leap second","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":444874,"byte_end":444938,"line_start":1217,"line_end":1217,"column_start":5,"column_end":69}},{"value":"/            Some(NaiveDate::from_ymd(2015, 9, 8).and_hms_nano(12, 34, 56, 1_333_333_333)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":444943,"byte_end":445037,"line_start":1218,"line_end":1218,"column_start":5,"column_end":99}},{"value":"/ assert_eq!(dt.with_nanosecond(2_000_000_000), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":445042,"byte_end":445098,"line_start":1219,"line_end":1219,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":445103,"byte_end":445110,"line_start":1220,"line_end":1220,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":445115,"byte_end":445124,"line_start":1221,"line_end":1221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1339},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":447655,"byte_end":447658,"line_start":1280,"line_end":1280,"column_start":8,"column_end":11},"name":"add","qualname":"<NaiveDateTime as core::ops::Add>::add","value":"fn add(Self, OldDuration) -> NaiveDateTime","parent":{"krate":1,"index":3218},"children":[],"decl_id":{"krate":1,"index":3221},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":447638,"byte_end":447647,"line_start":1279,"line_end":1279,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1341},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":447865,"byte_end":447875,"line_start":1287,"line_end":1287,"column_start":8,"column_end":18},"name":"add_assign","qualname":"<NaiveDateTime as core::ops::AddAssign>::add_assign","value":"fn add_assign(&mut Self, OldDuration)","parent":{"krate":1,"index":3249},"children":[],"decl_id":{"krate":1,"index":3251},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":447848,"byte_end":447857,"line_start":1286,"line_end":1286,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1344},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":450233,"byte_end":450236,"line_start":1344,"line_end":1344,"column_start":8,"column_end":11},"name":"sub","qualname":"<NaiveDateTime as core::ops::Sub>::sub","value":"fn sub(Self, OldDuration) -> NaiveDateTime","parent":{"krate":1,"index":3223},"children":[],"decl_id":{"krate":1,"index":3226},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":450216,"byte_end":450225,"line_start":1343,"line_end":1343,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1346},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":450443,"byte_end":450453,"line_start":1351,"line_end":1351,"column_start":8,"column_end":18},"name":"sub_assign","qualname":"<NaiveDateTime as core::ops::SubAssign>::sub_assign","value":"fn sub_assign(&mut Self, OldDuration)","parent":{"krate":1,"index":3253},"children":[],"decl_id":{"krate":1,"index":3255},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":450426,"byte_end":450435,"line_start":1350,"line_end":1350,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1349},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":452218,"byte_end":452221,"line_start":1399,"line_end":1399,"column_start":8,"column_end":11},"name":"sub","qualname":"<NaiveDateTime as core::ops::Sub>::sub","value":"fn sub(Self, NaiveDateTime) -> OldDuration","parent":{"krate":1,"index":3223},"children":[],"decl_id":{"krate":1,"index":3226},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":452201,"byte_end":452210,"line_start":1398,"line_end":1398,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1351},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":453383,"byte_end":453386,"line_start":1432,"line_end":1432,"column_start":8,"column_end":11},"name":"fmt","qualname":"<NaiveDateTime as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9902},"children":[],"decl_id":{"krate":1,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1353},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":454484,"byte_end":454487,"line_start":1463,"line_end":1463,"column_start":8,"column_end":11},"name":"fmt","qualname":"<NaiveDateTime as core::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9909},"children":[],"decl_id":{"krate":1,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1356},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":455255,"byte_end":455263,"line_start":1487,"line_end":1487,"column_start":8,"column_end":16},"name":"from_str","qualname":"<NaiveDateTime as core::str::FromStr>::from_str","value":"fn from_str(&str) -> ParseResult<NaiveDateTime>","parent":{"krate":1,"index":12556},"children":[],"decl_id":{"krate":1,"index":12558},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1359},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":456587,"byte_end":456594,"line_start":1527,"line_end":1527,"column_start":8,"column_end":15},"name":"default","qualname":"<NaiveDateTime as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3128},"children":[],"decl_id":{"krate":1,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2515},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":494021,"byte_end":494028,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"name":"IsoWeek","qualname":"::naive::isoweek::IsoWeek","value":"IsoWeek {  }","parent":null,"children":[{"krate":0,"index":2516}],"decl_id":null,"docs":" ISO 8601 week.","sig":null,"attributes":[{"value":"/ ISO 8601 week.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":493543,"byte_end":493561,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":493562,"byte_end":493565,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This type, combined with [`Weekday`](../enum.Weekday.html),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":493566,"byte_end":493629,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"/ constitutes the ISO 8601 [week date](./struct.NaiveDate.html#week-date).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":493630,"byte_end":493706,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ One can retrieve this type from the existing [`Datelike`](../trait.Datelike.html) types","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":493707,"byte_end":493798,"line_start":17,"line_end":17,"column_start":1,"column_end":92}},{"value":"/ via the [`Datelike::iso_week`](../trait.Datelike.html#tymethod.iso_week) method.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":493799,"byte_end":493883,"line_start":18,"line_end":18,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1464},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":495989,"byte_end":495993,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"year","qualname":"<IsoWeek>::year","value":"fn year(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the year number for this ISO week.","sig":null,"attributes":[{"value":"/ Returns the year number for this ISO week.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":495335,"byte_end":495381,"line_start":53,"line_end":53,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":495386,"byte_end":495389,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":495394,"byte_end":495407,"line_start":55,"line_end":55,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":495412,"byte_end":495415,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":495420,"byte_end":495427,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":495432,"byte_end":495479,"line_start":58,"line_end":58,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":495484,"byte_end":495487,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_isoywd(2015, 1, Weekday::Mon);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":495492,"byte_end":495550,"line_start":60,"line_end":60,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(d.iso_week().year(), 2015);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":495555,"byte_end":495597,"line_start":61,"line_end":61,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":495602,"byte_end":495609,"line_start":62,"line_end":62,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":495614,"byte_end":495617,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ This year number might not match the calendar year number.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":495622,"byte_end":495684,"line_start":64,"line_end":64,"column_start":5,"column_end":67}},{"value":"/ Continuing the example...","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":495689,"byte_end":495718,"line_start":65,"line_end":65,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":495723,"byte_end":495726,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":495731,"byte_end":495738,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":495743,"byte_end":495792,"line_start":68,"line_end":68,"column_start":5,"column_end":54}},{"value":"/ # let d = NaiveDate::from_isoywd(2015, 1, Weekday::Mon);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":495797,"byte_end":495857,"line_start":69,"line_end":69,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(d.year(), 2014);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":495862,"byte_end":495893,"line_start":70,"line_end":70,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(d, NaiveDate::from_ymd(2014, 12, 29));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":495898,"byte_end":495951,"line_start":71,"line_end":71,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":495956,"byte_end":495963,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":495968,"byte_end":495977,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1465},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":496441,"byte_end":496445,"line_start":91,"line_end":91,"column_start":12,"column_end":16},"name":"week","qualname":"<IsoWeek>::week","value":"fn week(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the ISO week number starting from 1.","sig":null,"attributes":[{"value":"/ Returns the ISO week number starting from 1.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":496044,"byte_end":496092,"line_start":78,"line_end":78,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":496097,"byte_end":496100,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 1 to 53. (The last week of year differs by years.)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":496105,"byte_end":496188,"line_start":80,"line_end":80,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":496193,"byte_end":496196,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":496201,"byte_end":496214,"line_start":82,"line_end":82,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":496219,"byte_end":496222,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":496227,"byte_end":496234,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":496239,"byte_end":496286,"line_start":85,"line_end":85,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":496291,"byte_end":496294,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_isoywd(2015, 15, Weekday::Mon);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":496299,"byte_end":496358,"line_start":87,"line_end":87,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(d.iso_week().week(), 15);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":496363,"byte_end":496403,"line_start":88,"line_end":88,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":496408,"byte_end":496415,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":496420,"byte_end":496429,"line_start":90,"line_end":90,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1466},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":496911,"byte_end":496916,"line_start":108,"line_end":108,"column_start":12,"column_end":17},"name":"week0","qualname":"<IsoWeek>::week0","value":"fn week0(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the ISO week number starting from 0.","sig":null,"attributes":[{"value":"/ Returns the ISO week number starting from 0.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":496513,"byte_end":496561,"line_start":95,"line_end":95,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":496566,"byte_end":496569,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 52. (The last week of year differs by years.)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":496574,"byte_end":496657,"line_start":97,"line_end":97,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":496662,"byte_end":496665,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":496670,"byte_end":496683,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":496688,"byte_end":496691,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":496696,"byte_end":496703,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":496708,"byte_end":496755,"line_start":102,"line_end":102,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":496760,"byte_end":496763,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_isoywd(2015, 15, Weekday::Mon);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":496768,"byte_end":496827,"line_start":104,"line_end":104,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(d.iso_week().week0(), 14);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":496832,"byte_end":496873,"line_start":105,"line_end":105,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":496878,"byte_end":496885,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":496890,"byte_end":496899,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1468},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":497879,"byte_end":497882,"line_start":135,"line_end":135,"column_start":8,"column_end":11},"name":"fmt","qualname":"<IsoWeek as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9902},"children":[],"decl_id":{"krate":1,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2531},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":507005,"byte_end":507014,"line_start":192,"line_end":192,"column_start":12,"column_end":21},"name":"NaiveTime","qualname":"::naive::time::NaiveTime","value":"NaiveTime {  }","parent":null,"children":[{"krate":0,"index":2532},{"krate":0,"index":2533}],"decl_id":null,"docs":" ISO 8601 time without timezone.\n Allows for the nanosecond precision and optional leap second representation.","sig":null,"attributes":[{"value":"/ ISO 8601 time without timezone.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":499723,"byte_end":499758,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"/ Allows for the nanosecond precision and optional leap second representation.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":499759,"byte_end":499839,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":499840,"byte_end":499843,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Leap Second Handling","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":499844,"byte_end":499870,"line_start":34,"line_end":34,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":499871,"byte_end":499874,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Since 1960s, the manmade atomic clock has been so accurate that","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":499875,"byte_end":499942,"line_start":36,"line_end":36,"column_start":1,"column_end":68}},{"value":"/ it is much more accurate than Earth's own motion.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":499943,"byte_end":499996,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ It became desirable to define the civil time in terms of the atomic clock,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":499997,"byte_end":500075,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ but that risks the desynchronization of the civil time from Earth.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":500076,"byte_end":500146,"line_start":39,"line_end":39,"column_start":1,"column_end":71}},{"value":"/ To account for this, the designers of the Coordinated Universal Time (UTC)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":500147,"byte_end":500225,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/ made that the UTC should be kept within 0.9 seconds of the observed Earth-bound time.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":500226,"byte_end":500315,"line_start":41,"line_end":41,"column_start":1,"column_end":90}},{"value":"/ When the mean solar day is longer than the ideal (86,400 seconds),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":500316,"byte_end":500386,"line_start":42,"line_end":42,"column_start":1,"column_end":71}},{"value":"/ the error slowly accumulates and it is necessary to add a **leap second**","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":500387,"byte_end":500464,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ to slow the UTC down a bit.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":500465,"byte_end":500496,"line_start":44,"line_end":44,"column_start":1,"column_end":32}},{"value":"/ (We may also remove a second to speed the UTC up a bit, but it never happened.)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":500497,"byte_end":500580,"line_start":45,"line_end":45,"column_start":1,"column_end":84}},{"value":"/ The leap second, if any, follows 23:59:59 of June 30 or December 31 in the UTC.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":500581,"byte_end":500664,"line_start":46,"line_end":46,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":500665,"byte_end":500668,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Fast forward to the 21st century,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":500669,"byte_end":500706,"line_start":48,"line_end":48,"column_start":1,"column_end":38}},{"value":"/ we have seen 26 leap seconds from January 1972 to December 2015.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":500707,"byte_end":500775,"line_start":49,"line_end":49,"column_start":1,"column_end":69}},{"value":"/ Yes, 26 seconds. Probably you can read this paragraph within 26 seconds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":500776,"byte_end":500852,"line_start":50,"line_end":50,"column_start":1,"column_end":77}},{"value":"/ But those 26 seconds, and possibly more in the future, are never predictable,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":500853,"byte_end":500934,"line_start":51,"line_end":51,"column_start":1,"column_end":82}},{"value":"/ and whether to add a leap second or not is known only before 6 months.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":500935,"byte_end":501009,"line_start":52,"line_end":52,"column_start":1,"column_end":75}},{"value":"/ Internet-based clocks (via NTP) do account for known leap seconds,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":501010,"byte_end":501080,"line_start":53,"line_end":53,"column_start":1,"column_end":71}},{"value":"/ but the system API normally doesn't (and often can't, with no network connection)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":501081,"byte_end":501166,"line_start":54,"line_end":54,"column_start":1,"column_end":86}},{"value":"/ and there is no reliable way to retrieve leap second information.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":501167,"byte_end":501236,"line_start":55,"line_end":55,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":501237,"byte_end":501240,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ Chrono does not try to accurately implement leap seconds; it is impossible.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":501241,"byte_end":501320,"line_start":57,"line_end":57,"column_start":1,"column_end":80}},{"value":"/ Rather, **it allows for leap seconds but behaves as if there are *no other* leap seconds.**","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":501321,"byte_end":501416,"line_start":58,"line_end":58,"column_start":1,"column_end":96}},{"value":"/ Various operations will ignore any possible leap second(s)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":501417,"byte_end":501479,"line_start":59,"line_end":59,"column_start":1,"column_end":63}},{"value":"/ except when any of the operands were actually leap seconds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":501480,"byte_end":501543,"line_start":60,"line_end":60,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":501544,"byte_end":501547,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ If you cannot tolerate this behavior,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":501548,"byte_end":501589,"line_start":62,"line_end":62,"column_start":1,"column_end":42}},{"value":"/ you must use a separate `TimeZone` for the International Atomic Time (TAI).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":501590,"byte_end":501669,"line_start":63,"line_end":63,"column_start":1,"column_end":80}},{"value":"/ TAI is like UTC but has no leap seconds, and thus slightly differs from UTC.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":501670,"byte_end":501750,"line_start":64,"line_end":64,"column_start":1,"column_end":81}},{"value":"/ Chrono does not yet provide such implementation, but it is planned.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":501751,"byte_end":501822,"line_start":65,"line_end":65,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":501823,"byte_end":501826,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ## Representing Leap Seconds","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":501827,"byte_end":501859,"line_start":67,"line_end":67,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":501860,"byte_end":501863,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ The leap second is indicated via fractional seconds more than 1 second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":501864,"byte_end":501939,"line_start":69,"line_end":69,"column_start":1,"column_end":76}},{"value":"/ This makes possible to treat a leap second as the prior non-leap second","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":501940,"byte_end":502015,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ if you don't care about sub-second accuracy.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":502016,"byte_end":502064,"line_start":71,"line_end":71,"column_start":1,"column_end":49}},{"value":"/ You should use the proper formatting to get the raw leap second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":502065,"byte_end":502133,"line_start":72,"line_end":72,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":502134,"byte_end":502137,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ All methods accepting fractional seconds will accept such values.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":502138,"byte_end":502207,"line_start":74,"line_end":74,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":502208,"byte_end":502211,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":502212,"byte_end":502219,"line_start":76,"line_end":76,"column_start":1,"column_end":8}},{"value":"/ use chrono::{NaiveDate, NaiveTime, Utc, TimeZone};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":502220,"byte_end":502274,"line_start":77,"line_end":77,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":502275,"byte_end":502278,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ let t = NaiveTime::from_hms_milli(8, 59, 59, 1_000);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":502279,"byte_end":502335,"line_start":79,"line_end":79,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":502336,"byte_end":502339,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ let dt1 = NaiveDate::from_ymd(2015, 7, 1).and_hms_micro(8, 59, 59, 1_000_000);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":502340,"byte_end":502422,"line_start":81,"line_end":81,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":502423,"byte_end":502426,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ let dt2 = Utc.ymd(2015, 6, 30).and_hms_nano(23, 59, 59, 1_000_000_000);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":502427,"byte_end":502502,"line_start":83,"line_end":83,"column_start":1,"column_end":76}},{"value":"/ # let _ = (t, dt1, dt2);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":502503,"byte_end":502531,"line_start":84,"line_end":84,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":502532,"byte_end":502539,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":502540,"byte_end":502543,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Note that the leap second can happen anytime given an appropriate time zone;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":502544,"byte_end":502624,"line_start":87,"line_end":87,"column_start":1,"column_end":81}},{"value":"/ 2015-07-01 01:23:60 would be a proper leap second if UTC+01:24 had existed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":502625,"byte_end":502704,"line_start":88,"line_end":88,"column_start":1,"column_end":80}},{"value":"/ Practically speaking, though, by the time of the first leap second on 1972-06-30,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":502705,"byte_end":502790,"line_start":89,"line_end":89,"column_start":1,"column_end":86}},{"value":"/ every time zone offset around the world has standardized to the 5-minute alignment.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":502791,"byte_end":502878,"line_start":90,"line_end":90,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":502879,"byte_end":502882,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ## Date And Time Arithmetics","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":502883,"byte_end":502915,"line_start":92,"line_end":92,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":502916,"byte_end":502919,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ As a concrete example, let's assume that `03:00:60` and `04:00:60` are leap seconds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":502920,"byte_end":503008,"line_start":94,"line_end":94,"column_start":1,"column_end":89}},{"value":"/ In reality, of course, leap seconds are separated by at least 6 months.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":503009,"byte_end":503084,"line_start":95,"line_end":95,"column_start":1,"column_end":76}},{"value":"/ We will also use some intuitive concise notations for the explanation.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":503085,"byte_end":503159,"line_start":96,"line_end":96,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":503160,"byte_end":503163,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ `Time + Duration`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":503164,"byte_end":503185,"line_start":98,"line_end":98,"column_start":1,"column_end":22}},{"value":"/ (short for [`NaiveTime::overflowing_add_signed`](#method.overflowing_add_signed)):","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":503186,"byte_end":503272,"line_start":99,"line_end":99,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":503273,"byte_end":503276,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ - `03:00:00 + 1s = 03:00:01`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":503277,"byte_end":503310,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"/ - `03:00:59 + 60s = 03:02:00`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":503311,"byte_end":503345,"line_start":102,"line_end":102,"column_start":1,"column_end":35}},{"value":"/ - `03:00:59 + 1s = 03:01:00`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":503346,"byte_end":503379,"line_start":103,"line_end":103,"column_start":1,"column_end":34}},{"value":"/ - `03:00:60 + 1s = 03:01:00`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":503380,"byte_end":503413,"line_start":104,"line_end":104,"column_start":1,"column_end":34}},{"value":"/   Note that the sum is identical to the previous.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":503414,"byte_end":503467,"line_start":105,"line_end":105,"column_start":1,"column_end":54}},{"value":"/ - `03:00:60 + 60s = 03:01:59`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":503468,"byte_end":503502,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/ - `03:00:60 + 61s = 03:02:00`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":503503,"byte_end":503537,"line_start":107,"line_end":107,"column_start":1,"column_end":35}},{"value":"/ - `03:00:60.1 + 0.8s = 03:00:60.9`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":503538,"byte_end":503577,"line_start":108,"line_end":108,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":503578,"byte_end":503581,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ `Time - Duration`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":503582,"byte_end":503603,"line_start":110,"line_end":110,"column_start":1,"column_end":22}},{"value":"/ (short for [`NaiveTime::overflowing_sub_signed`](#method.overflowing_sub_signed)):","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":503604,"byte_end":503690,"line_start":111,"line_end":111,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":503691,"byte_end":503694,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ - `03:00:00 - 1s = 02:59:59`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":503695,"byte_end":503728,"line_start":113,"line_end":113,"column_start":1,"column_end":34}},{"value":"/ - `03:01:00 - 1s = 03:00:59`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":503729,"byte_end":503762,"line_start":114,"line_end":114,"column_start":1,"column_end":34}},{"value":"/ - `03:01:00 - 60s = 03:00:00`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":503763,"byte_end":503797,"line_start":115,"line_end":115,"column_start":1,"column_end":35}},{"value":"/ - `03:00:60 - 60s = 03:00:00`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":503798,"byte_end":503832,"line_start":116,"line_end":116,"column_start":1,"column_end":35}},{"value":"/   Note that the result is identical to the previous.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":503833,"byte_end":503889,"line_start":117,"line_end":117,"column_start":1,"column_end":57}},{"value":"/ - `03:00:60.7 - 0.4s = 03:00:60.3`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":503890,"byte_end":503929,"line_start":118,"line_end":118,"column_start":1,"column_end":40}},{"value":"/ - `03:00:60.7 - 0.9s = 03:00:59.8`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":503930,"byte_end":503969,"line_start":119,"line_end":119,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":503970,"byte_end":503973,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ `Time - Time`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":503974,"byte_end":503991,"line_start":121,"line_end":121,"column_start":1,"column_end":18}},{"value":"/ (short for [`NaiveTime::signed_duration_since`](#method.signed_duration_since)):","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":503992,"byte_end":504076,"line_start":122,"line_end":122,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":504077,"byte_end":504080,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ - `04:00:00 - 03:00:00 = 3600s`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":504081,"byte_end":504117,"line_start":124,"line_end":124,"column_start":1,"column_end":37}},{"value":"/ - `03:01:00 - 03:00:00 = 60s`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":504118,"byte_end":504152,"line_start":125,"line_end":125,"column_start":1,"column_end":35}},{"value":"/ - `03:00:60 - 03:00:00 = 60s`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":504153,"byte_end":504187,"line_start":126,"line_end":126,"column_start":1,"column_end":35}},{"value":"/   Note that the difference is identical to the previous.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":504188,"byte_end":504248,"line_start":127,"line_end":127,"column_start":1,"column_end":61}},{"value":"/ - `03:00:60.6 - 03:00:59.4 = 1.2s`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":504249,"byte_end":504288,"line_start":128,"line_end":128,"column_start":1,"column_end":40}},{"value":"/ - `03:01:00 - 03:00:59.8 = 0.2s`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":504289,"byte_end":504326,"line_start":129,"line_end":129,"column_start":1,"column_end":38}},{"value":"/ - `03:01:00 - 03:00:60.5 = 0.5s`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":504327,"byte_end":504364,"line_start":130,"line_end":130,"column_start":1,"column_end":38}},{"value":"/   Note that the difference is larger than the previous,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":504365,"byte_end":504424,"line_start":131,"line_end":131,"column_start":1,"column_end":60}},{"value":"/   even though the leap second clearly follows the previous whole second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":504425,"byte_end":504501,"line_start":132,"line_end":132,"column_start":1,"column_end":77}},{"value":"/ - `04:00:60.9 - 03:00:60.1 =","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":504502,"byte_end":504534,"line_start":133,"line_end":133,"column_start":1,"column_end":33}},{"value":"/   (04:00:60.9 - 04:00:00) + (04:00:00 - 03:01:00) + (03:01:00 - 03:00:60.1) =","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":504535,"byte_end":504616,"line_start":134,"line_end":134,"column_start":1,"column_end":82}},{"value":"/   60.9s + 3540s + 0.9s = 3601.8s`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":504617,"byte_end":504655,"line_start":135,"line_end":135,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":504656,"byte_end":504659,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ In general,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":504660,"byte_end":504675,"line_start":137,"line_end":137,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":504676,"byte_end":504679,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ - `Time + Duration` unconditionally equals to `Duration + Time`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":504680,"byte_end":504748,"line_start":139,"line_end":139,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":504749,"byte_end":504752,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ - `Time - Duration` unconditionally equals to `Time + (-Duration)`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":504753,"byte_end":504824,"line_start":141,"line_end":141,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":504825,"byte_end":504828,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ - `Time1 - Time2` unconditionally equals to `-(Time2 - Time1)`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":504829,"byte_end":504896,"line_start":143,"line_end":143,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":504897,"byte_end":504900,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ - Associativity does not generally hold, because","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":504901,"byte_end":504953,"line_start":145,"line_end":145,"column_start":1,"column_end":53}},{"value":"/   `(Time + Duration1) - Duration2` no longer equals to `Time + (Duration1 - Duration2)`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":504954,"byte_end":505045,"line_start":146,"line_end":146,"column_start":1,"column_end":92}},{"value":"/   for two positive durations.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":505046,"byte_end":505079,"line_start":147,"line_end":147,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":505080,"byte_end":505083,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/     - As a special case, `(Time + Duration) - Duration` also does not equal to `Time`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":505084,"byte_end":505174,"line_start":149,"line_end":149,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":505175,"byte_end":505178,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/     - If you can assume that all durations have the same sign, however,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":505179,"byte_end":505254,"line_start":151,"line_end":151,"column_start":1,"column_end":76}},{"value":"/       then the associativity holds:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":505255,"byte_end":505294,"line_start":152,"line_end":152,"column_start":1,"column_end":40}},{"value":"/       `(Time + Duration1) + Duration2` equals to `Time + (Duration1 + Duration2)`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":505295,"byte_end":505380,"line_start":153,"line_end":153,"column_start":1,"column_end":86}},{"value":"/       for two positive durations.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":505381,"byte_end":505418,"line_start":154,"line_end":154,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":505419,"byte_end":505422,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ ## Reading And Writing Leap Seconds","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":505423,"byte_end":505462,"line_start":156,"line_end":156,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":505463,"byte_end":505466,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ The \"typical\" leap seconds on the minute boundary are","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":505467,"byte_end":505524,"line_start":158,"line_end":158,"column_start":1,"column_end":58}},{"value":"/ correctly handled both in the formatting and parsing.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":505525,"byte_end":505582,"line_start":159,"line_end":159,"column_start":1,"column_end":58}},{"value":"/ The leap second in the human-readable representation","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":505583,"byte_end":505639,"line_start":160,"line_end":160,"column_start":1,"column_end":57}},{"value":"/ will be represented as the second part being 60, as required by ISO 8601.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":505640,"byte_end":505717,"line_start":161,"line_end":161,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":505718,"byte_end":505721,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":505722,"byte_end":505729,"line_start":163,"line_end":163,"column_start":1,"column_end":8}},{"value":"/ use chrono::{Utc, TimeZone};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":505730,"byte_end":505762,"line_start":164,"line_end":164,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":505763,"byte_end":505766,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ let dt = Utc.ymd(2015, 6, 30).and_hms_milli(23, 59, 59, 1_000);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":505767,"byte_end":505834,"line_start":166,"line_end":166,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(format!(\"{:?}\", dt), \"2015-06-30T23:59:60Z\");","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":505835,"byte_end":505895,"line_start":167,"line_end":167,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":505896,"byte_end":505903,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":505904,"byte_end":505907,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ There are hypothetical leap seconds not on the minute boundary","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":505908,"byte_end":505974,"line_start":170,"line_end":170,"column_start":1,"column_end":67}},{"value":"/ nevertheless supported by Chrono.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":505975,"byte_end":506012,"line_start":171,"line_end":171,"column_start":1,"column_end":38}},{"value":"/ They are allowed for the sake of completeness and consistency;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":506013,"byte_end":506079,"line_start":172,"line_end":172,"column_start":1,"column_end":67}},{"value":"/ there were several \"exotic\" time zone offsets with fractional minutes prior to UTC after all.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":506080,"byte_end":506177,"line_start":173,"line_end":173,"column_start":1,"column_end":98}},{"value":"/ For such cases the human-readable representation is ambiguous","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":506178,"byte_end":506243,"line_start":174,"line_end":174,"column_start":1,"column_end":66}},{"value":"/ and would be read back to the next non-leap second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":506244,"byte_end":506299,"line_start":175,"line_end":175,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":506300,"byte_end":506303,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":506304,"byte_end":506311,"line_start":177,"line_end":177,"column_start":1,"column_end":8}},{"value":"/ use chrono::{DateTime, Utc, TimeZone};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":506312,"byte_end":506354,"line_start":178,"line_end":178,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":506355,"byte_end":506358,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ let dt = Utc.ymd(2015, 6, 30).and_hms_milli(23, 56, 4, 1_000);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":506359,"byte_end":506425,"line_start":180,"line_end":180,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(format!(\"{:?}\", dt), \"2015-06-30T23:56:05Z\");","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":506426,"byte_end":506486,"line_start":181,"line_end":181,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":506487,"byte_end":506490,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ let dt = Utc.ymd(2015, 6, 30).and_hms(23, 56, 5);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":506491,"byte_end":506544,"line_start":183,"line_end":183,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(format!(\"{:?}\", dt), \"2015-06-30T23:56:05Z\");","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":506545,"byte_end":506605,"line_start":184,"line_end":184,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(DateTime::parse_from_rfc3339(\"2015-06-30T23:56:05Z\").unwrap(), dt);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":506606,"byte_end":506688,"line_start":185,"line_end":185,"column_start":1,"column_end":83}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":506689,"byte_end":506696,"line_start":186,"line_end":186,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":506697,"byte_end":506700,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ Since Chrono alone cannot determine any existence of leap seconds,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":506701,"byte_end":506771,"line_start":188,"line_end":188,"column_start":1,"column_end":71}},{"value":"/ **there is absolutely no guarantee that the leap second read has actually happened**.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":506772,"byte_end":506861,"line_start":189,"line_end":189,"column_start":1,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":1529},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":507670,"byte_end":507678,"line_start":217,"line_end":217,"column_start":12,"column_end":20},"name":"from_hms","qualname":"<NaiveTime>::from_hms","value":"fn from_hms(u32, u32, u32) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute and second.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from hour, minute and second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":507071,"byte_end":507128,"line_start":198,"line_end":198,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":507133,"byte_end":507136,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ No [leap second](#leap-second-handling) is allowed here;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":507141,"byte_end":507201,"line_start":200,"line_end":200,"column_start":5,"column_end":65}},{"value":"/ use `NaiveTime::from_hms_*` methods with a subsecond parameter instead.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":507206,"byte_end":507281,"line_start":201,"line_end":201,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":507286,"byte_end":507289,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute and/or second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":507294,"byte_end":507343,"line_start":203,"line_end":203,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":507348,"byte_end":507351,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":507356,"byte_end":507369,"line_start":205,"line_end":205,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":507374,"byte_end":507377,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":507382,"byte_end":507389,"line_start":207,"line_end":207,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":507394,"byte_end":507432,"line_start":208,"line_end":208,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":507437,"byte_end":507440,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ let t = NaiveTime::from_hms(23, 56, 4);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":507445,"byte_end":507488,"line_start":210,"line_end":210,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(t.hour(), 23);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":507493,"byte_end":507522,"line_start":211,"line_end":211,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(t.minute(), 56);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":507527,"byte_end":507558,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(t.second(), 4);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":507563,"byte_end":507593,"line_start":213,"line_end":213,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(t.nanosecond(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":507598,"byte_end":507632,"line_start":214,"line_end":214,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":507637,"byte_end":507644,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":507649,"byte_end":507658,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1530},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":508533,"byte_end":508545,"line_start":242,"line_end":242,"column_start":12,"column_end":24},"name":"from_hms_opt","qualname":"<NaiveTime>::from_hms_opt","value":"fn from_hms_opt(u32, u32, u32) -> Option<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute and second.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from hour, minute and second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":507807,"byte_end":507864,"line_start":221,"line_end":221,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":507869,"byte_end":507872,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ No [leap second](#leap-second-handling) is allowed here;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":507877,"byte_end":507937,"line_start":223,"line_end":223,"column_start":5,"column_end":65}},{"value":"/ use `NaiveTime::from_hms_*_opt` methods with a subsecond parameter instead.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":507942,"byte_end":508021,"line_start":224,"line_end":224,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":508026,"byte_end":508029,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute and/or second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":508034,"byte_end":508091,"line_start":226,"line_end":226,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":508096,"byte_end":508099,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":508104,"byte_end":508117,"line_start":228,"line_end":228,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":508122,"byte_end":508125,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":508130,"byte_end":508137,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveTime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":508142,"byte_end":508168,"line_start":231,"line_end":231,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":508173,"byte_end":508176,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ let from_hms_opt = NaiveTime::from_hms_opt;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":508181,"byte_end":508228,"line_start":233,"line_end":233,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":508233,"byte_end":508236,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ assert!(from_hms_opt(0, 0, 0).is_some());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":508241,"byte_end":508286,"line_start":235,"line_end":235,"column_start":5,"column_end":50}},{"value":"/ assert!(from_hms_opt(23, 59, 59).is_some());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":508291,"byte_end":508339,"line_start":236,"line_end":236,"column_start":5,"column_end":53}},{"value":"/ assert!(from_hms_opt(24, 0, 0).is_none());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":508344,"byte_end":508390,"line_start":237,"line_end":237,"column_start":5,"column_end":51}},{"value":"/ assert!(from_hms_opt(23, 60, 0).is_none());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":508395,"byte_end":508442,"line_start":238,"line_end":238,"column_start":5,"column_end":52}},{"value":"/ assert!(from_hms_opt(23, 59, 60).is_none());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":508447,"byte_end":508495,"line_start":239,"line_end":239,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":508500,"byte_end":508507,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":508512,"byte_end":508521,"line_start":241,"line_end":241,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1531},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":509284,"byte_end":509298,"line_start":265,"line_end":265,"column_start":12,"column_end":26},"name":"from_hms_milli","qualname":"<NaiveTime>::from_hms_milli","value":"fn from_hms_milli(u32, u32, u32, u32) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute, second and millisecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from hour, minute, second and millisecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":508667,"byte_end":508737,"line_start":246,"line_end":246,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":508742,"byte_end":508745,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ The millisecond part can exceed 1,000","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":508750,"byte_end":508791,"line_start":248,"line_end":248,"column_start":5,"column_end":46}},{"value":"/ in order to represent the [leap second](#leap-second-handling).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":508796,"byte_end":508863,"line_start":249,"line_end":249,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":508868,"byte_end":508871,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or millisecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":508876,"byte_end":508938,"line_start":251,"line_end":251,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":508943,"byte_end":508946,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":508951,"byte_end":508964,"line_start":253,"line_end":253,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":508969,"byte_end":508972,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":508977,"byte_end":508984,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":508989,"byte_end":509027,"line_start":256,"line_end":256,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":509032,"byte_end":509035,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ let t = NaiveTime::from_hms_milli(23, 56, 4, 12);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":509040,"byte_end":509093,"line_start":258,"line_end":258,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(t.hour(), 23);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":509098,"byte_end":509127,"line_start":259,"line_end":259,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(t.minute(), 56);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":509132,"byte_end":509163,"line_start":260,"line_end":260,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(t.second(), 4);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":509168,"byte_end":509198,"line_start":261,"line_end":261,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(t.nanosecond(), 12_000_000);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":509203,"byte_end":509246,"line_start":262,"line_end":262,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":509251,"byte_end":509258,"line_start":263,"line_end":263,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":509263,"byte_end":509272,"line_start":264,"line_end":264,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1532},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":510356,"byte_end":510374,"line_start":292,"line_end":292,"column_start":12,"column_end":30},"name":"from_hms_milli_opt","qualname":"<NaiveTime>::from_hms_milli_opt","value":"fn from_hms_milli_opt(u32, u32, u32, u32) -> Option<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute, second and millisecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from hour, minute, second and millisecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":509452,"byte_end":509522,"line_start":269,"line_end":269,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":509527,"byte_end":509530,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ The millisecond part can exceed 1,000","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":509535,"byte_end":509576,"line_start":271,"line_end":271,"column_start":5,"column_end":46}},{"value":"/ in order to represent the [leap second](#leap-second-handling).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":509581,"byte_end":509648,"line_start":272,"line_end":272,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":509653,"byte_end":509656,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or millisecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":509661,"byte_end":509731,"line_start":274,"line_end":274,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":509736,"byte_end":509739,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":509744,"byte_end":509757,"line_start":276,"line_end":276,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":509762,"byte_end":509765,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":509770,"byte_end":509777,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveTime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":509782,"byte_end":509808,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":509813,"byte_end":509816,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ let from_hmsm_opt = NaiveTime::from_hms_milli_opt;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":509821,"byte_end":509875,"line_start":281,"line_end":281,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":509880,"byte_end":509883,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ assert!(from_hmsm_opt(0, 0, 0, 0).is_some());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":509888,"byte_end":509937,"line_start":283,"line_end":283,"column_start":5,"column_end":54}},{"value":"/ assert!(from_hmsm_opt(23, 59, 59, 999).is_some());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":509942,"byte_end":509996,"line_start":284,"line_end":284,"column_start":5,"column_end":59}},{"value":"/ assert!(from_hmsm_opt(23, 59, 59, 1_999).is_some()); // a leap second after 23:59:59","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":510001,"byte_end":510089,"line_start":285,"line_end":285,"column_start":5,"column_end":93}},{"value":"/ assert!(from_hmsm_opt(24, 0, 0, 0).is_none());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":510094,"byte_end":510144,"line_start":286,"line_end":286,"column_start":5,"column_end":55}},{"value":"/ assert!(from_hmsm_opt(23, 60, 0, 0).is_none());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":510149,"byte_end":510200,"line_start":287,"line_end":287,"column_start":5,"column_end":56}},{"value":"/ assert!(from_hmsm_opt(23, 59, 60, 0).is_none());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":510205,"byte_end":510257,"line_start":288,"line_end":288,"column_start":5,"column_end":57}},{"value":"/ assert!(from_hmsm_opt(23, 59, 59, 2_000).is_none());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":510262,"byte_end":510318,"line_start":289,"line_end":289,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":510323,"byte_end":510330,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":510335,"byte_end":510344,"line_start":291,"line_end":291,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1534},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":511208,"byte_end":511222,"line_start":317,"line_end":317,"column_start":12,"column_end":26},"name":"from_hms_micro","qualname":"<NaiveTime>::from_hms_micro","value":"fn from_hms_micro(u32, u32, u32, u32) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute, second and microsecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from hour, minute, second and microsecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":510583,"byte_end":510653,"line_start":298,"line_end":298,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":510658,"byte_end":510661,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ The microsecond part can exceed 1,000,000","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":510666,"byte_end":510711,"line_start":300,"line_end":300,"column_start":5,"column_end":50}},{"value":"/ in order to represent the [leap second](#leap-second-handling).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":510716,"byte_end":510783,"line_start":301,"line_end":301,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":510788,"byte_end":510791,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or microsecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":510796,"byte_end":510858,"line_start":303,"line_end":303,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":510863,"byte_end":510866,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":510871,"byte_end":510884,"line_start":305,"line_end":305,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":510889,"byte_end":510892,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":510897,"byte_end":510904,"line_start":307,"line_end":307,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":510909,"byte_end":510947,"line_start":308,"line_end":308,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":510952,"byte_end":510955,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ let t = NaiveTime::from_hms_micro(23, 56, 4, 12_345);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":510960,"byte_end":511017,"line_start":310,"line_end":310,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(t.hour(), 23);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":511022,"byte_end":511051,"line_start":311,"line_end":311,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(t.minute(), 56);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":511056,"byte_end":511087,"line_start":312,"line_end":312,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(t.second(), 4);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":511092,"byte_end":511122,"line_start":313,"line_end":313,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(t.nanosecond(), 12_345_000);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":511127,"byte_end":511170,"line_start":314,"line_end":314,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":511175,"byte_end":511182,"line_start":315,"line_end":315,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":511187,"byte_end":511196,"line_start":316,"line_end":316,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1535},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":512296,"byte_end":512314,"line_start":344,"line_end":344,"column_start":12,"column_end":30},"name":"from_hms_micro_opt","qualname":"<NaiveTime>::from_hms_micro_opt","value":"fn from_hms_micro_opt(u32, u32, u32, u32) -> Option<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute, second and microsecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from hour, minute, second and microsecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":511376,"byte_end":511446,"line_start":321,"line_end":321,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":511451,"byte_end":511454,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ The microsecond part can exceed 1,000,000","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":511459,"byte_end":511504,"line_start":323,"line_end":323,"column_start":5,"column_end":50}},{"value":"/ in order to represent the [leap second](#leap-second-handling).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":511509,"byte_end":511576,"line_start":324,"line_end":324,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":511581,"byte_end":511584,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or microsecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":511589,"byte_end":511659,"line_start":326,"line_end":326,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":511664,"byte_end":511667,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":511672,"byte_end":511685,"line_start":328,"line_end":328,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":511690,"byte_end":511693,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":511698,"byte_end":511705,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveTime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":511710,"byte_end":511736,"line_start":331,"line_end":331,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":511741,"byte_end":511744,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let from_hmsu_opt = NaiveTime::from_hms_micro_opt;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":511749,"byte_end":511803,"line_start":333,"line_end":333,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":511808,"byte_end":511811,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ assert!(from_hmsu_opt(0, 0, 0, 0).is_some());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":511816,"byte_end":511865,"line_start":335,"line_end":335,"column_start":5,"column_end":54}},{"value":"/ assert!(from_hmsu_opt(23, 59, 59, 999_999).is_some());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":511870,"byte_end":511928,"line_start":336,"line_end":336,"column_start":5,"column_end":63}},{"value":"/ assert!(from_hmsu_opt(23, 59, 59, 1_999_999).is_some()); // a leap second after 23:59:59","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":511933,"byte_end":512025,"line_start":337,"line_end":337,"column_start":5,"column_end":97}},{"value":"/ assert!(from_hmsu_opt(24, 0, 0, 0).is_none());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":512030,"byte_end":512080,"line_start":338,"line_end":338,"column_start":5,"column_end":55}},{"value":"/ assert!(from_hmsu_opt(23, 60, 0, 0).is_none());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":512085,"byte_end":512136,"line_start":339,"line_end":339,"column_start":5,"column_end":56}},{"value":"/ assert!(from_hmsu_opt(23, 59, 60, 0).is_none());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":512141,"byte_end":512193,"line_start":340,"line_end":340,"column_start":5,"column_end":57}},{"value":"/ assert!(from_hmsu_opt(23, 59, 59, 2_000_000).is_none());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":512198,"byte_end":512258,"line_start":341,"line_end":341,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":512263,"byte_end":512270,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":512275,"byte_end":512284,"line_start":343,"line_end":343,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1537},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":513122,"byte_end":513135,"line_start":367,"line_end":367,"column_start":12,"column_end":25},"name":"from_hms_nano","qualname":"<NaiveTime>::from_hms_nano","value":"fn from_hms_nano(u32, u32, u32, u32) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute, second and nanosecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from hour, minute, second and nanosecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":512493,"byte_end":512562,"line_start":348,"line_end":348,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":512567,"byte_end":512570,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ The nanosecond part can exceed 1,000,000,000","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":512575,"byte_end":512623,"line_start":350,"line_end":350,"column_start":5,"column_end":53}},{"value":"/ in order to represent the [leap second](#leap-second-handling).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":512628,"byte_end":512695,"line_start":351,"line_end":351,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":512700,"byte_end":512703,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or nanosecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":512708,"byte_end":512769,"line_start":353,"line_end":353,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":512774,"byte_end":512777,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":512782,"byte_end":512795,"line_start":355,"line_end":355,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":512800,"byte_end":512803,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":512808,"byte_end":512815,"line_start":357,"line_end":357,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":512820,"byte_end":512858,"line_start":358,"line_end":358,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":512863,"byte_end":512866,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ let t = NaiveTime::from_hms_nano(23, 56, 4, 12_345_678);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":512871,"byte_end":512931,"line_start":360,"line_end":360,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(t.hour(), 23);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":512936,"byte_end":512965,"line_start":361,"line_end":361,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(t.minute(), 56);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":512970,"byte_end":513001,"line_start":362,"line_end":362,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(t.second(), 4);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":513006,"byte_end":513036,"line_start":363,"line_end":363,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(t.nanosecond(), 12_345_678);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":513041,"byte_end":513084,"line_start":364,"line_end":364,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":513089,"byte_end":513096,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":513101,"byte_end":513110,"line_start":366,"line_end":366,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1538},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":514218,"byte_end":514235,"line_start":394,"line_end":394,"column_start":12,"column_end":29},"name":"from_hms_nano_opt","qualname":"<NaiveTime>::from_hms_nano_opt","value":"fn from_hms_nano_opt(u32, u32, u32, u32) -> Option<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute, second and nanosecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from hour, minute, second and nanosecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":513286,"byte_end":513355,"line_start":371,"line_end":371,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":513360,"byte_end":513363,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ The nanosecond part can exceed 1,000,000,000","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":513368,"byte_end":513416,"line_start":373,"line_end":373,"column_start":5,"column_end":53}},{"value":"/ in order to represent the [leap second](#leap-second-handling).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":513421,"byte_end":513488,"line_start":374,"line_end":374,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":513493,"byte_end":513496,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or nanosecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":513501,"byte_end":513570,"line_start":376,"line_end":376,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":513575,"byte_end":513578,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":513583,"byte_end":513596,"line_start":378,"line_end":378,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":513601,"byte_end":513604,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":513609,"byte_end":513616,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveTime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":513621,"byte_end":513647,"line_start":381,"line_end":381,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":513652,"byte_end":513655,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ let from_hmsn_opt = NaiveTime::from_hms_nano_opt;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":513660,"byte_end":513713,"line_start":383,"line_end":383,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":513718,"byte_end":513721,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ assert!(from_hmsn_opt(0, 0, 0, 0).is_some());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":513726,"byte_end":513775,"line_start":385,"line_end":385,"column_start":5,"column_end":54}},{"value":"/ assert!(from_hmsn_opt(23, 59, 59, 999_999_999).is_some());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":513780,"byte_end":513842,"line_start":386,"line_end":386,"column_start":5,"column_end":67}},{"value":"/ assert!(from_hmsn_opt(23, 59, 59, 1_999_999_999).is_some()); // a leap second after 23:59:59","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":513847,"byte_end":513943,"line_start":387,"line_end":387,"column_start":5,"column_end":101}},{"value":"/ assert!(from_hmsn_opt(24, 0, 0, 0).is_none());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":513948,"byte_end":513998,"line_start":388,"line_end":388,"column_start":5,"column_end":55}},{"value":"/ assert!(from_hmsn_opt(23, 60, 0, 0).is_none());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":514003,"byte_end":514054,"line_start":389,"line_end":389,"column_start":5,"column_end":56}},{"value":"/ assert!(from_hmsn_opt(23, 59, 60, 0).is_none());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":514059,"byte_end":514111,"line_start":390,"line_end":390,"column_start":5,"column_end":57}},{"value":"/ assert!(from_hmsn_opt(23, 59, 59, 2_000_000_000).is_none());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":514116,"byte_end":514180,"line_start":391,"line_end":391,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":514185,"byte_end":514192,"line_start":392,"line_end":392,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":514197,"byte_end":514206,"line_start":393,"line_end":393,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1539},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":515171,"byte_end":515201,"line_start":421,"line_end":421,"column_start":12,"column_end":42},"name":"from_num_seconds_from_midnight","qualname":"<NaiveTime>::from_num_seconds_from_midnight","value":"fn from_num_seconds_from_midnight(u32, u32) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":514516,"byte_end":514601,"line_start":402,"line_end":402,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":514606,"byte_end":514609,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ The nanosecond part can exceed 1,000,000,000","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":514614,"byte_end":514662,"line_start":404,"line_end":404,"column_start":5,"column_end":53}},{"value":"/ in order to represent the [leap second](#leap-second-handling).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":514667,"byte_end":514734,"line_start":405,"line_end":405,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":514739,"byte_end":514742,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid number of seconds and/or nanosecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":514747,"byte_end":514805,"line_start":407,"line_end":407,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":514810,"byte_end":514813,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":514818,"byte_end":514831,"line_start":409,"line_end":409,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":514836,"byte_end":514839,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":514844,"byte_end":514851,"line_start":411,"line_end":411,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":514856,"byte_end":514894,"line_start":412,"line_end":412,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":514899,"byte_end":514902,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ let t = NaiveTime::from_num_seconds_from_midnight(86164, 12_345_678);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":514907,"byte_end":514980,"line_start":414,"line_end":414,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(t.hour(), 23);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":514985,"byte_end":515014,"line_start":415,"line_end":415,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(t.minute(), 56);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":515019,"byte_end":515050,"line_start":416,"line_end":416,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(t.second(), 4);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":515055,"byte_end":515085,"line_start":417,"line_end":417,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(t.nanosecond(), 12_345_678);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":515090,"byte_end":515133,"line_start":418,"line_end":418,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":515138,"byte_end":515145,"line_start":419,"line_end":419,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":515150,"byte_end":515159,"line_start":420,"line_end":420,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1540},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":516171,"byte_end":516205,"line_start":446,"line_end":446,"column_start":12,"column_end":46},"name":"from_num_seconds_from_midnight_opt","qualname":"<NaiveTime>::from_num_seconds_from_midnight_opt","value":"fn from_num_seconds_from_midnight_opt(u32, u32) -> Option<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":515339,"byte_end":515424,"line_start":425,"line_end":425,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":515429,"byte_end":515432,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ The nanosecond part can exceed 1,000,000,000","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":515437,"byte_end":515485,"line_start":427,"line_end":427,"column_start":5,"column_end":53}},{"value":"/ in order to represent the [leap second](#leap-second-handling).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":515490,"byte_end":515557,"line_start":428,"line_end":428,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":515562,"byte_end":515565,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid number of seconds and/or nanosecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":515570,"byte_end":515636,"line_start":430,"line_end":430,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":515641,"byte_end":515644,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":515649,"byte_end":515662,"line_start":432,"line_end":432,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":515667,"byte_end":515670,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":515675,"byte_end":515682,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveTime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":515687,"byte_end":515713,"line_start":435,"line_end":435,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":515718,"byte_end":515721,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ let from_nsecs_opt = NaiveTime::from_num_seconds_from_midnight_opt;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":515726,"byte_end":515797,"line_start":437,"line_end":437,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":515802,"byte_end":515805,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ assert!(from_nsecs_opt(0, 0).is_some());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":515810,"byte_end":515854,"line_start":439,"line_end":439,"column_start":5,"column_end":49}},{"value":"/ assert!(from_nsecs_opt(86399, 999_999_999).is_some());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":515859,"byte_end":515917,"line_start":440,"line_end":440,"column_start":5,"column_end":63}},{"value":"/ assert!(from_nsecs_opt(86399, 1_999_999_999).is_some()); // a leap second after 23:59:59","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":515922,"byte_end":516014,"line_start":441,"line_end":441,"column_start":5,"column_end":97}},{"value":"/ assert!(from_nsecs_opt(86_400, 0).is_none());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":516019,"byte_end":516068,"line_start":442,"line_end":442,"column_start":5,"column_end":54}},{"value":"/ assert!(from_nsecs_opt(86399, 2_000_000_000).is_none());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":516073,"byte_end":516133,"line_start":443,"line_end":443,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":516138,"byte_end":516145,"line_start":444,"line_end":444,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":516150,"byte_end":516159,"line_start":445,"line_end":445,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1541},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":518859,"byte_end":518873,"line_start":514,"line_end":514,"column_start":12,"column_end":26},"name":"parse_from_str","qualname":"<NaiveTime>::parse_from_str","value":"fn parse_from_str(&str, &str) -> ParseResult<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Parses a string with the specified format string and returns a new `NaiveTime`.\n See the [`format::strftime` module](../format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[{"value":"/ Parses a string with the specified format string and returns a new `NaiveTime`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":516395,"byte_end":516478,"line_start":453,"line_end":453,"column_start":5,"column_end":88}},{"value":"/ See the [`format::strftime` module](../format/strftime/index.html)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":516483,"byte_end":516553,"line_start":454,"line_end":454,"column_start":5,"column_end":75}},{"value":"/ on the supported escape sequences.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":516558,"byte_end":516596,"line_start":455,"line_end":455,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":516601,"byte_end":516604,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":516609,"byte_end":516622,"line_start":457,"line_end":457,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":516627,"byte_end":516630,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":516635,"byte_end":516642,"line_start":459,"line_end":459,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveTime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":516647,"byte_end":516673,"line_start":460,"line_end":460,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":516678,"byte_end":516681,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ let parse_from_str = NaiveTime::parse_from_str;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":516686,"byte_end":516737,"line_start":462,"line_end":462,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":516742,"byte_end":516745,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(parse_from_str(\"23:56:04\", \"%H:%M:%S\"),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":516750,"byte_end":516804,"line_start":464,"line_end":464,"column_start":5,"column_end":59}},{"value":"/            Ok(NaiveTime::from_hms(23, 56, 4)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":516809,"byte_end":516860,"line_start":465,"line_end":465,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(parse_from_str(\"pm012345.6789\", \"%p%I%M%S%.f\"),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":516865,"byte_end":516927,"line_start":466,"line_end":466,"column_start":5,"column_end":67}},{"value":"/            Ok(NaiveTime::from_hms_micro(13, 23, 45, 678_900)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":516932,"byte_end":516999,"line_start":467,"line_end":467,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":517004,"byte_end":517011,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":517016,"byte_end":517019,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ Date and offset is ignored for the purpose of parsing.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":517024,"byte_end":517082,"line_start":470,"line_end":470,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":517087,"byte_end":517090,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":517095,"byte_end":517102,"line_start":472,"line_end":472,"column_start":5,"column_end":12}},{"value":"/ # use chrono::NaiveTime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":517107,"byte_end":517135,"line_start":473,"line_end":473,"column_start":5,"column_end":33}},{"value":"/ # let parse_from_str = NaiveTime::parse_from_str;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":517140,"byte_end":517193,"line_start":474,"line_end":474,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(parse_from_str(\"2014-5-17T12:34:56+09:30\", \"%Y-%m-%dT%H:%M:%S%z\"),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":517198,"byte_end":517279,"line_start":475,"line_end":475,"column_start":5,"column_end":86}},{"value":"/            Ok(NaiveTime::from_hms(12, 34, 56)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":517284,"byte_end":517336,"line_start":476,"line_end":476,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":517341,"byte_end":517348,"line_start":477,"line_end":477,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":517353,"byte_end":517356,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ [Leap seconds](#leap-second-handling) are correctly handled by","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":517361,"byte_end":517427,"line_start":479,"line_end":479,"column_start":5,"column_end":71}},{"value":"/ treating any time of the form `hh:mm:60` as a leap second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":517432,"byte_end":517494,"line_start":480,"line_end":480,"column_start":5,"column_end":67}},{"value":"/ (This equally applies to the formatting, so the round trip is possible.)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":517499,"byte_end":517575,"line_start":481,"line_end":481,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":517580,"byte_end":517583,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":517588,"byte_end":517595,"line_start":483,"line_end":483,"column_start":5,"column_end":12}},{"value":"/ # use chrono::NaiveTime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":517600,"byte_end":517628,"line_start":484,"line_end":484,"column_start":5,"column_end":33}},{"value":"/ # let parse_from_str = NaiveTime::parse_from_str;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":517633,"byte_end":517686,"line_start":485,"line_end":485,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(parse_from_str(\"08:59:60.123\", \"%H:%M:%S%.f\"),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":517691,"byte_end":517752,"line_start":486,"line_end":486,"column_start":5,"column_end":66}},{"value":"/            Ok(NaiveTime::from_hms_milli(8, 59, 59, 1_123)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":517757,"byte_end":517821,"line_start":487,"line_end":487,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":517826,"byte_end":517833,"line_start":488,"line_end":488,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":517838,"byte_end":517841,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ Missing seconds are assumed to be zero,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":517846,"byte_end":517889,"line_start":490,"line_end":490,"column_start":5,"column_end":48}},{"value":"/ but out-of-bound times or insufficient fields are errors otherwise.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":517894,"byte_end":517965,"line_start":491,"line_end":491,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":517970,"byte_end":517973,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":517978,"byte_end":517985,"line_start":493,"line_end":493,"column_start":5,"column_end":12}},{"value":"/ # use chrono::NaiveTime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":517990,"byte_end":518018,"line_start":494,"line_end":494,"column_start":5,"column_end":33}},{"value":"/ # let parse_from_str = NaiveTime::parse_from_str;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":518023,"byte_end":518076,"line_start":495,"line_end":495,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(parse_from_str(\"7:15\", \"%H:%M\"),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":518081,"byte_end":518128,"line_start":496,"line_end":496,"column_start":5,"column_end":52}},{"value":"/            Ok(NaiveTime::from_hms(7, 15, 0)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":518133,"byte_end":518183,"line_start":497,"line_end":497,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":518188,"byte_end":518191,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ assert!(parse_from_str(\"04m33s\", \"%Mm%Ss\").is_err());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":518196,"byte_end":518253,"line_start":499,"line_end":499,"column_start":5,"column_end":62}},{"value":"/ assert!(parse_from_str(\"12\", \"%H\").is_err());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":518258,"byte_end":518307,"line_start":500,"line_end":500,"column_start":5,"column_end":54}},{"value":"/ assert!(parse_from_str(\"17:60\", \"%H:%M\").is_err());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":518312,"byte_end":518367,"line_start":501,"line_end":501,"column_start":5,"column_end":60}},{"value":"/ assert!(parse_from_str(\"24:00:00\", \"%H:%M:%S\").is_err());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":518372,"byte_end":518433,"line_start":502,"line_end":502,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":518438,"byte_end":518445,"line_start":503,"line_end":503,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":518450,"byte_end":518453,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ All parsed fields should be consistent to each other, otherwise it's an error.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":518458,"byte_end":518540,"line_start":505,"line_end":505,"column_start":5,"column_end":87}},{"value":"/ Here `%H` is for 24-hour clocks, unlike `%I`,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":518545,"byte_end":518594,"line_start":506,"line_end":506,"column_start":5,"column_end":54}},{"value":"/ and thus can be independently determined without AM/PM.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":518599,"byte_end":518658,"line_start":507,"line_end":507,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":518663,"byte_end":518666,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":518671,"byte_end":518678,"line_start":509,"line_end":509,"column_start":5,"column_end":12}},{"value":"/ # use chrono::NaiveTime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":518683,"byte_end":518711,"line_start":510,"line_end":510,"column_start":5,"column_end":33}},{"value":"/ # let parse_from_str = NaiveTime::parse_from_str;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":518716,"byte_end":518769,"line_start":511,"line_end":511,"column_start":5,"column_end":58}},{"value":"/ assert!(parse_from_str(\"13:07 AM\", \"%H:%M %p\").is_err());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":518774,"byte_end":518835,"line_start":512,"line_end":512,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":518840,"byte_end":518847,"line_start":513,"line_end":513,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1542},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":519944,"byte_end":519966,"line_start":540,"line_end":540,"column_start":12,"column_end":34},"name":"overflowing_add_signed","qualname":"<NaiveTime>::overflowing_add_signed","value":"fn overflowing_add_signed(&Self, OldDuration) -> (NaiveTime, i64)","parent":null,"children":[],"decl_id":null,"docs":" Adds given `Duration` to the current time,\n and also returns the number of *seconds*\n in the integral number of days ignored from the addition.\n (We cannot return `Duration` because it is subject to overflow or underflow.)","sig":null,"attributes":[{"value":"/ Adds given `Duration` to the current time,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":519061,"byte_end":519107,"line_start":520,"line_end":520,"column_start":5,"column_end":51}},{"value":"/ and also returns the number of *seconds*","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":519112,"byte_end":519156,"line_start":521,"line_end":521,"column_start":5,"column_end":49}},{"value":"/ in the integral number of days ignored from the addition.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":519161,"byte_end":519222,"line_start":522,"line_end":522,"column_start":5,"column_end":66}},{"value":"/ (We cannot return `Duration` because it is subject to overflow or underflow.)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":519227,"byte_end":519308,"line_start":523,"line_end":523,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":519313,"byte_end":519316,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":519321,"byte_end":519334,"line_start":525,"line_end":525,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":519339,"byte_end":519342,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":519347,"byte_end":519354,"line_start":527,"line_end":527,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Duration, NaiveTime};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":519359,"byte_end":519397,"line_start":528,"line_end":528,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":519402,"byte_end":519405,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ let from_hms = NaiveTime::from_hms;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":519410,"byte_end":519449,"line_start":530,"line_end":530,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":519454,"byte_end":519457,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from_hms(3, 4, 5).overflowing_add_signed(Duration::hours(11)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":519462,"byte_end":519539,"line_start":532,"line_end":532,"column_start":5,"column_end":82}},{"value":"/            (from_hms(14, 4, 5), 0));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":519544,"byte_end":519584,"line_start":533,"line_end":533,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(from_hms(3, 4, 5).overflowing_add_signed(Duration::hours(23)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":519589,"byte_end":519666,"line_start":534,"line_end":534,"column_start":5,"column_end":82}},{"value":"/            (from_hms(2, 4, 5), 86_400));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":519671,"byte_end":519715,"line_start":535,"line_end":535,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(from_hms(3, 4, 5).overflowing_add_signed(Duration::hours(-7)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":519720,"byte_end":519797,"line_start":536,"line_end":536,"column_start":5,"column_end":82}},{"value":"/            (from_hms(20, 4, 5), -86_400));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":519802,"byte_end":519848,"line_start":537,"line_end":537,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":519853,"byte_end":519860,"line_start":538,"line_end":538,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1543},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":523371,"byte_end":523393,"line_start":623,"line_end":623,"column_start":12,"column_end":34},"name":"overflowing_sub_signed","qualname":"<NaiveTime>::overflowing_sub_signed","value":"fn overflowing_sub_signed(&Self, OldDuration) -> (NaiveTime, i64)","parent":null,"children":[],"decl_id":null,"docs":" Subtracts given `Duration` from the current time,\n and also returns the number of *seconds*\n in the integral number of days ignored from the subtraction.\n (We cannot return `Duration` because it is subject to overflow or underflow.)","sig":null,"attributes":[{"value":"/ Subtracts given `Duration` from the current time,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":522537,"byte_end":522590,"line_start":603,"line_end":603,"column_start":5,"column_end":58}},{"value":"/ and also returns the number of *seconds*","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":522595,"byte_end":522639,"line_start":604,"line_end":604,"column_start":5,"column_end":49}},{"value":"/ in the integral number of days ignored from the subtraction.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":522644,"byte_end":522708,"line_start":605,"line_end":605,"column_start":5,"column_end":69}},{"value":"/ (We cannot return `Duration` because it is subject to overflow or underflow.)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":522713,"byte_end":522794,"line_start":606,"line_end":606,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":522799,"byte_end":522802,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":522807,"byte_end":522820,"line_start":608,"line_end":608,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":522825,"byte_end":522828,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":522833,"byte_end":522840,"line_start":610,"line_end":610,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Duration, NaiveTime};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":522845,"byte_end":522883,"line_start":611,"line_end":611,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":522888,"byte_end":522891,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ let from_hms = NaiveTime::from_hms;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":522896,"byte_end":522935,"line_start":613,"line_end":613,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":522940,"byte_end":522943,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from_hms(3, 4, 5).overflowing_sub_signed(Duration::hours(2)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":522948,"byte_end":523024,"line_start":615,"line_end":615,"column_start":5,"column_end":81}},{"value":"/            (from_hms(1, 4, 5), 0));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":523029,"byte_end":523068,"line_start":616,"line_end":616,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(from_hms(3, 4, 5).overflowing_sub_signed(Duration::hours(17)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":523073,"byte_end":523150,"line_start":617,"line_end":617,"column_start":5,"column_end":82}},{"value":"/            (from_hms(10, 4, 5), 86_400));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":523155,"byte_end":523200,"line_start":618,"line_end":618,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(from_hms(3, 4, 5).overflowing_sub_signed(Duration::hours(-22)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":523205,"byte_end":523283,"line_start":619,"line_end":619,"column_start":5,"column_end":83}},{"value":"/            (from_hms(1, 4, 5), -86_400));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":523288,"byte_end":523333,"line_start":620,"line_end":620,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":523338,"byte_end":523345,"line_start":621,"line_end":621,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":523350,"byte_end":523359,"line_start":622,"line_end":622,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1544},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":526261,"byte_end":526282,"line_start":682,"line_end":682,"column_start":12,"column_end":33},"name":"signed_duration_since","qualname":"<NaiveTime>::signed_duration_since","value":"fn signed_duration_since(Self, NaiveTime) -> OldDuration","parent":null,"children":[],"decl_id":null,"docs":" Subtracts another `NaiveTime` from the current time.\n Returns a `Duration` within +/- 1 day.\n This does not overflow or underflow at all.","sig":null,"attributes":[{"value":"/ Subtracts another `NaiveTime` from the current time.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":523585,"byte_end":523641,"line_start":628,"line_end":628,"column_start":5,"column_end":61}},{"value":"/ Returns a `Duration` within +/- 1 day.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":523646,"byte_end":523688,"line_start":629,"line_end":629,"column_start":5,"column_end":47}},{"value":"/ This does not overflow or underflow at all.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":523693,"byte_end":523740,"line_start":630,"line_end":630,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":523745,"byte_end":523748,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ As a part of Chrono's [leap second handling](#leap-second-handling),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":523753,"byte_end":523825,"line_start":632,"line_end":632,"column_start":5,"column_end":77}},{"value":"/ the subtraction assumes that **there is no leap second ever**,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":523830,"byte_end":523896,"line_start":633,"line_end":633,"column_start":5,"column_end":71}},{"value":"/ except when any of the `NaiveTime`s themselves represents a leap second","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":523901,"byte_end":523976,"line_start":634,"line_end":634,"column_start":5,"column_end":80}},{"value":"/ in which case the assumption becomes that","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":523981,"byte_end":524026,"line_start":635,"line_end":635,"column_start":5,"column_end":50}},{"value":"/ **there are exactly one (or two) leap second(s) ever**.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":524031,"byte_end":524090,"line_start":636,"line_end":636,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":524095,"byte_end":524098,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":524103,"byte_end":524116,"line_start":638,"line_end":638,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":524121,"byte_end":524124,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":524129,"byte_end":524136,"line_start":640,"line_end":640,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Duration, NaiveTime};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":524141,"byte_end":524179,"line_start":641,"line_end":641,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":524184,"byte_end":524187,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ let from_hmsm = NaiveTime::from_hms_milli;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":524192,"byte_end":524238,"line_start":643,"line_end":643,"column_start":5,"column_end":51}},{"value":"/ let since = NaiveTime::signed_duration_since;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":524243,"byte_end":524292,"line_start":644,"line_end":644,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":524297,"byte_end":524300,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 5, 7, 900)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":524305,"byte_end":524376,"line_start":646,"line_end":646,"column_start":5,"column_end":76}},{"value":"/            Duration::zero());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":524381,"byte_end":524414,"line_start":647,"line_end":647,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 5, 7, 875)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":524419,"byte_end":524490,"line_start":648,"line_end":648,"column_start":5,"column_end":76}},{"value":"/            Duration::milliseconds(25));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":524495,"byte_end":524538,"line_start":649,"line_end":649,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 5, 6, 925)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":524543,"byte_end":524614,"line_start":650,"line_end":650,"column_start":5,"column_end":76}},{"value":"/            Duration::milliseconds(975));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":524619,"byte_end":524663,"line_start":651,"line_end":651,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 5, 0, 900)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":524668,"byte_end":524739,"line_start":652,"line_end":652,"column_start":5,"column_end":76}},{"value":"/            Duration::seconds(7));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":524744,"byte_end":524781,"line_start":653,"line_end":653,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 0, 7, 900)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":524786,"byte_end":524857,"line_start":654,"line_end":654,"column_start":5,"column_end":76}},{"value":"/            Duration::seconds(5 * 60));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":524862,"byte_end":524904,"line_start":655,"line_end":655,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(0, 5, 7, 900)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":524909,"byte_end":524980,"line_start":656,"line_end":656,"column_start":5,"column_end":76}},{"value":"/            Duration::seconds(3 * 3600));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":524985,"byte_end":525029,"line_start":657,"line_end":657,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(4, 5, 7, 900)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":525034,"byte_end":525105,"line_start":658,"line_end":658,"column_start":5,"column_end":76}},{"value":"/            Duration::seconds(-3600));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":525110,"byte_end":525151,"line_start":659,"line_end":659,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(2, 4, 6, 800)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":525156,"byte_end":525227,"line_start":660,"line_end":660,"column_start":5,"column_end":76}},{"value":"/            Duration::seconds(3600 + 60 + 1) + Duration::milliseconds(100));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":525232,"byte_end":525311,"line_start":661,"line_end":661,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":525316,"byte_end":525323,"line_start":662,"line_end":662,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":525328,"byte_end":525331,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ Leap seconds are handled, but the subtraction assumes that","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":525336,"byte_end":525398,"line_start":664,"line_end":664,"column_start":5,"column_end":67}},{"value":"/ there were no other leap seconds happened.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":525403,"byte_end":525449,"line_start":665,"line_end":665,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":525454,"byte_end":525457,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":525462,"byte_end":525469,"line_start":667,"line_end":667,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{Duration, NaiveTime};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":525474,"byte_end":525514,"line_start":668,"line_end":668,"column_start":5,"column_end":45}},{"value":"/ # let from_hmsm = NaiveTime::from_hms_milli;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":525519,"byte_end":525567,"line_start":669,"line_end":669,"column_start":5,"column_end":53}},{"value":"/ # let since = NaiveTime::signed_duration_since;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":525572,"byte_end":525623,"line_start":670,"line_end":670,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(since(from_hmsm(3, 0, 59, 1_000), from_hmsm(3, 0, 59, 0)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":525628,"byte_end":525701,"line_start":671,"line_end":671,"column_start":5,"column_end":78}},{"value":"/            Duration::seconds(1));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":525706,"byte_end":525743,"line_start":672,"line_end":672,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(since(from_hmsm(3, 0, 59, 1_500), from_hmsm(3, 0, 59, 0)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":525748,"byte_end":525821,"line_start":673,"line_end":673,"column_start":5,"column_end":78}},{"value":"/            Duration::milliseconds(1500));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":525826,"byte_end":525871,"line_start":674,"line_end":674,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(since(from_hmsm(3, 0, 59, 1_000), from_hmsm(3, 0, 0, 0)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":525876,"byte_end":525948,"line_start":675,"line_end":675,"column_start":5,"column_end":77}},{"value":"/            Duration::seconds(60));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":525953,"byte_end":525991,"line_start":676,"line_end":676,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(since(from_hmsm(3, 0, 0, 0), from_hmsm(2, 59, 59, 1_000)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":525996,"byte_end":526069,"line_start":677,"line_end":677,"column_start":5,"column_end":78}},{"value":"/            Duration::seconds(1));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":526074,"byte_end":526111,"line_start":678,"line_end":678,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(since(from_hmsm(3, 0, 59, 1_000), from_hmsm(2, 59, 59, 1_000)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":526116,"byte_end":526194,"line_start":679,"line_end":679,"column_start":5,"column_end":83}},{"value":"/            Duration::seconds(61));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":526199,"byte_end":526237,"line_start":680,"line_end":680,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":526242,"byte_end":526249,"line_start":681,"line_end":681,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1552},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":531646,"byte_end":531650,"line_start":820,"line_end":820,"column_start":8,"column_end":12},"name":"hour","qualname":"<NaiveTime as traits::Timelike>::hour","value":"fn hour(&Self) -> u32","parent":{"krate":0,"index":2006},"children":[],"decl_id":{"krate":0,"index":2007},"docs":" Returns the hour number from 0 to 23.","sig":null,"attributes":[{"value":"/ Returns the hour number from 0 to 23.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":531334,"byte_end":531375,"line_start":809,"line_end":809,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":531380,"byte_end":531383,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":531388,"byte_end":531401,"line_start":811,"line_end":811,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":531406,"byte_end":531409,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":531414,"byte_end":531421,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":531426,"byte_end":531464,"line_start":814,"line_end":814,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":531469,"byte_end":531472,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveTime::from_hms(0, 0, 0).hour(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":531477,"byte_end":531532,"line_start":816,"line_end":816,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(NaiveTime::from_hms_nano(23, 56, 4, 12_345_678).hour(), 23);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":531537,"byte_end":531612,"line_start":817,"line_end":817,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":531617,"byte_end":531624,"line_start":818,"line_end":818,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":531629,"byte_end":531638,"line_start":819,"line_end":819,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1553},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":532017,"byte_end":532023,"line_start":835,"line_end":835,"column_start":8,"column_end":14},"name":"minute","qualname":"<NaiveTime as traits::Timelike>::minute","value":"fn minute(&Self) -> u32","parent":{"krate":0,"index":2006},"children":[],"decl_id":{"krate":0,"index":2009},"docs":" Returns the minute number from 0 to 59.","sig":null,"attributes":[{"value":"/ Returns the minute number from 0 to 59.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":531699,"byte_end":531742,"line_start":824,"line_end":824,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":531747,"byte_end":531750,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":531755,"byte_end":531768,"line_start":826,"line_end":826,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":531773,"byte_end":531776,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":531781,"byte_end":531788,"line_start":828,"line_end":828,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":531793,"byte_end":531831,"line_start":829,"line_end":829,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":531836,"byte_end":531839,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveTime::from_hms(0, 0, 0).minute(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":531844,"byte_end":531901,"line_start":831,"line_end":831,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(NaiveTime::from_hms_nano(23, 56, 4, 12_345_678).minute(), 56);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":531906,"byte_end":531983,"line_start":832,"line_end":832,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":531988,"byte_end":531995,"line_start":833,"line_end":833,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":532000,"byte_end":532009,"line_start":834,"line_end":834,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1554},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":532854,"byte_end":532860,"line_start":861,"line_end":861,"column_start":8,"column_end":14},"name":"second","qualname":"<NaiveTime as traits::Timelike>::second","value":"fn second(&Self) -> u32","parent":{"krate":0,"index":2006},"children":[],"decl_id":{"krate":0,"index":2010},"docs":" Returns the second number from 0 to 59.","sig":null,"attributes":[{"value":"/ Returns the second number from 0 to 59.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":532072,"byte_end":532115,"line_start":839,"line_end":839,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":532120,"byte_end":532123,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":532128,"byte_end":532141,"line_start":841,"line_end":841,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":532146,"byte_end":532149,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":532154,"byte_end":532161,"line_start":843,"line_end":843,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":532166,"byte_end":532204,"line_start":844,"line_end":844,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":532209,"byte_end":532212,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveTime::from_hms(0, 0, 0).second(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":532217,"byte_end":532274,"line_start":846,"line_end":846,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(NaiveTime::from_hms_nano(23, 56, 4, 12_345_678).second(), 4);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":532279,"byte_end":532355,"line_start":847,"line_end":847,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":532360,"byte_end":532367,"line_start":848,"line_end":848,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":532372,"byte_end":532375,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ This method never returns 60 even when it is a leap second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":532380,"byte_end":532443,"line_start":850,"line_end":850,"column_start":5,"column_end":68}},{"value":"/ ([Why?](#leap-second-handling))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":532448,"byte_end":532483,"line_start":851,"line_end":851,"column_start":5,"column_end":40}},{"value":"/ Use the proper [formatting method](#method.format) to get a human-readable representation.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":532488,"byte_end":532582,"line_start":852,"line_end":852,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":532587,"byte_end":532590,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":532595,"byte_end":532602,"line_start":854,"line_end":854,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":532607,"byte_end":532647,"line_start":855,"line_end":855,"column_start":5,"column_end":45}},{"value":"/ let leap = NaiveTime::from_hms_milli(23, 59, 59, 1_000);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":532652,"byte_end":532712,"line_start":856,"line_end":856,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(leap.second(), 59);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":532717,"byte_end":532751,"line_start":857,"line_end":857,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(leap.format(\"%H:%M:%S\").to_string(), \"23:59:60\");","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":532756,"byte_end":532820,"line_start":858,"line_end":858,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":532825,"byte_end":532832,"line_start":859,"line_end":859,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":532837,"byte_end":532846,"line_start":860,"line_end":860,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1555},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":533917,"byte_end":533927,"line_start":889,"line_end":889,"column_start":8,"column_end":18},"name":"nanosecond","qualname":"<NaiveTime as traits::Timelike>::nanosecond","value":"fn nanosecond(&Self) -> u32","parent":{"krate":0,"index":2006},"children":[],"decl_id":{"krate":0,"index":2011},"docs":" Returns the number of nanoseconds since the whole non-leap second.\n The range from 1,000,000,000 to 1,999,999,999 represents\n the [leap second](#leap-second-handling).","sig":null,"attributes":[{"value":"/ Returns the number of nanoseconds since the whole non-leap second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":532909,"byte_end":532979,"line_start":865,"line_end":865,"column_start":5,"column_end":75}},{"value":"/ The range from 1,000,000,000 to 1,999,999,999 represents","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":532984,"byte_end":533044,"line_start":866,"line_end":866,"column_start":5,"column_end":65}},{"value":"/ the [leap second](#leap-second-handling).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":533049,"byte_end":533094,"line_start":867,"line_end":867,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":533099,"byte_end":533102,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":533107,"byte_end":533120,"line_start":869,"line_end":869,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":533125,"byte_end":533128,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":533133,"byte_end":533140,"line_start":871,"line_end":871,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":533145,"byte_end":533183,"line_start":872,"line_end":872,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":533188,"byte_end":533191,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveTime::from_hms(0, 0, 0).nanosecond(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":533196,"byte_end":533257,"line_start":874,"line_end":874,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(NaiveTime::from_hms_nano(23, 56, 4, 12_345_678).nanosecond(), 12_345_678);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":533262,"byte_end":533351,"line_start":875,"line_end":875,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":533356,"byte_end":533363,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":533368,"byte_end":533371,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ Leap seconds may have seemingly out-of-range return values.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":533376,"byte_end":533439,"line_start":878,"line_end":878,"column_start":5,"column_end":68}},{"value":"/ You can reduce the range with `time.nanosecond() % 1_000_000_000`, or","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":533444,"byte_end":533517,"line_start":879,"line_end":879,"column_start":5,"column_end":78}},{"value":"/ use the proper [formatting method](#method.format) to get a human-readable representation.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":533522,"byte_end":533616,"line_start":880,"line_end":880,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":533621,"byte_end":533624,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":533629,"byte_end":533636,"line_start":882,"line_end":882,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":533641,"byte_end":533681,"line_start":883,"line_end":883,"column_start":5,"column_end":45}},{"value":"/ let leap = NaiveTime::from_hms_milli(23, 59, 59, 1_000);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":533686,"byte_end":533746,"line_start":884,"line_end":884,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(leap.nanosecond(), 1_000_000_000);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":533751,"byte_end":533800,"line_start":885,"line_end":885,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(leap.format(\"%H:%M:%S%.9f\").to_string(), \"23:59:60.000000000\");","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":533805,"byte_end":533883,"line_start":886,"line_end":886,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":533888,"byte_end":533895,"line_start":887,"line_end":887,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":533900,"byte_end":533909,"line_start":888,"line_end":888,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1556},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":534442,"byte_end":534451,"line_start":907,"line_end":907,"column_start":8,"column_end":17},"name":"with_hour","qualname":"<NaiveTime as traits::Timelike>::with_hour","value":"fn with_hour(&Self, u32) -> Option<NaiveTime>","parent":{"krate":0,"index":2006},"children":[],"decl_id":{"krate":0,"index":2012},"docs":" Makes a new `NaiveTime` with the hour number changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` with the hour number changed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":533973,"byte_end":534030,"line_start":893,"line_end":893,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":534035,"byte_end":534038,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveTime` would be invalid.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":534043,"byte_end":534110,"line_start":895,"line_end":895,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":534115,"byte_end":534118,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":534123,"byte_end":534136,"line_start":897,"line_end":897,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":534141,"byte_end":534144,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":534149,"byte_end":534156,"line_start":899,"line_end":899,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":534161,"byte_end":534199,"line_start":900,"line_end":900,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":534204,"byte_end":534207,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveTime::from_hms_nano(23, 56, 4, 12_345_678);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":534212,"byte_end":534273,"line_start":902,"line_end":902,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(dt.with_hour(7), Some(NaiveTime::from_hms_nano(7, 56, 4, 12_345_678)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":534278,"byte_end":534364,"line_start":903,"line_end":903,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(dt.with_hour(24), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":534369,"byte_end":534408,"line_start":904,"line_end":904,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":534413,"byte_end":534420,"line_start":905,"line_end":905,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":534425,"byte_end":534434,"line_start":906,"line_end":906,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1557},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":535133,"byte_end":535144,"line_start":929,"line_end":929,"column_start":8,"column_end":19},"name":"with_minute","qualname":"<NaiveTime as traits::Timelike>::with_minute","value":"fn with_minute(&Self, u32) -> Option<NaiveTime>","parent":{"krate":0,"index":2006},"children":[],"decl_id":{"krate":0,"index":2013},"docs":" Makes a new `NaiveTime` with the minute number changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` with the minute number changed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":534656,"byte_end":534715,"line_start":915,"line_end":915,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":534720,"byte_end":534723,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveTime` would be invalid.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":534728,"byte_end":534795,"line_start":917,"line_end":917,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":534800,"byte_end":534803,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":534808,"byte_end":534821,"line_start":919,"line_end":919,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":534826,"byte_end":534829,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":534834,"byte_end":534841,"line_start":921,"line_end":921,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":534846,"byte_end":534884,"line_start":922,"line_end":922,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":534889,"byte_end":534892,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveTime::from_hms_nano(23, 56, 4, 12_345_678);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":534897,"byte_end":534958,"line_start":924,"line_end":924,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(dt.with_minute(45), Some(NaiveTime::from_hms_nano(23, 45, 4, 12_345_678)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":534963,"byte_end":535053,"line_start":925,"line_end":925,"column_start":5,"column_end":95}},{"value":"/ assert_eq!(dt.with_minute(60), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":535058,"byte_end":535099,"line_start":926,"line_end":926,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":535104,"byte_end":535111,"line_start":927,"line_end":927,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":535116,"byte_end":535125,"line_start":928,"line_end":928,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1558},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":535956,"byte_end":535967,"line_start":953,"line_end":953,"column_start":8,"column_end":19},"name":"with_second","qualname":"<NaiveTime as traits::Timelike>::with_second","value":"fn with_second(&Self, u32) -> Option<NaiveTime>","parent":{"krate":0,"index":2006},"children":[],"decl_id":{"krate":0,"index":2014},"docs":" Makes a new `NaiveTime` with the second number changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` with the second number changed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":535368,"byte_end":535427,"line_start":937,"line_end":937,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":535432,"byte_end":535435,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveTime` would be invalid.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":535440,"byte_end":535507,"line_start":939,"line_end":939,"column_start":5,"column_end":72}},{"value":"/ As with the [`second`](#method.second) method,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":535512,"byte_end":535562,"line_start":940,"line_end":940,"column_start":5,"column_end":55}},{"value":"/ the input range is restricted to 0 through 59.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":535567,"byte_end":535617,"line_start":941,"line_end":941,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":535622,"byte_end":535625,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":535630,"byte_end":535643,"line_start":943,"line_end":943,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":535648,"byte_end":535651,"line_start":944,"line_end":944,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":535656,"byte_end":535663,"line_start":945,"line_end":945,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":535668,"byte_end":535706,"line_start":946,"line_end":946,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":535711,"byte_end":535714,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveTime::from_hms_nano(23, 56, 4, 12_345_678);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":535719,"byte_end":535780,"line_start":948,"line_end":948,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(dt.with_second(17), Some(NaiveTime::from_hms_nano(23, 56, 17, 12_345_678)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":535785,"byte_end":535876,"line_start":949,"line_end":949,"column_start":5,"column_end":96}},{"value":"/ assert_eq!(dt.with_second(60), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":535881,"byte_end":535922,"line_start":950,"line_end":950,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":535927,"byte_end":535934,"line_start":951,"line_end":951,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":535939,"byte_end":535948,"line_start":952,"line_end":952,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1559},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":537410,"byte_end":537425,"line_start":990,"line_end":990,"column_start":8,"column_end":23},"name":"with_nanosecond","qualname":"<NaiveTime as traits::Timelike>::with_nanosecond","value":"fn with_nanosecond(&Self, u32) -> Option<NaiveTime>","parent":{"krate":0,"index":2006},"children":[],"decl_id":{"krate":0,"index":2015},"docs":" Makes a new `NaiveTime` with nanoseconds since the whole non-leap second changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` with nanoseconds since the whole non-leap second changed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":536165,"byte_end":536250,"line_start":961,"line_end":961,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":536255,"byte_end":536258,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveTime` would be invalid.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":536263,"byte_end":536330,"line_start":963,"line_end":963,"column_start":5,"column_end":72}},{"value":"/ As with the [`nanosecond`](#method.nanosecond) method,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":536335,"byte_end":536393,"line_start":964,"line_end":964,"column_start":5,"column_end":63}},{"value":"/ the input range can exceed 1,000,000,000 for leap seconds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":536398,"byte_end":536460,"line_start":965,"line_end":965,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":536465,"byte_end":536468,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":536473,"byte_end":536486,"line_start":967,"line_end":967,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":536491,"byte_end":536494,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":536499,"byte_end":536506,"line_start":969,"line_end":969,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":536511,"byte_end":536549,"line_start":970,"line_end":970,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":536554,"byte_end":536557,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveTime::from_hms_nano(23, 56, 4, 12_345_678);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":536562,"byte_end":536623,"line_start":972,"line_end":972,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(dt.with_nanosecond(333_333_333),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":536628,"byte_end":536675,"line_start":973,"line_end":973,"column_start":5,"column_end":52}},{"value":"/            Some(NaiveTime::from_hms_nano(23, 56, 4, 333_333_333)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":536680,"byte_end":536751,"line_start":974,"line_end":974,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(dt.with_nanosecond(2_000_000_000), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":536756,"byte_end":536812,"line_start":975,"line_end":975,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":536817,"byte_end":536824,"line_start":976,"line_end":976,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":536829,"byte_end":536832,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ Leap seconds can theoretically follow *any* whole second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":536837,"byte_end":536898,"line_start":978,"line_end":978,"column_start":5,"column_end":66}},{"value":"/ The following would be a proper leap second at the time zone offset of UTC-00:03:57","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":536903,"byte_end":536990,"line_start":979,"line_end":979,"column_start":5,"column_end":92}},{"value":"/ (there are several historical examples comparable to this \"non-sense\" offset),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":536995,"byte_end":537077,"line_start":980,"line_end":980,"column_start":5,"column_end":87}},{"value":"/ and therefore is allowed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":537082,"byte_end":537111,"line_start":981,"line_end":981,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":537116,"byte_end":537119,"line_start":982,"line_end":982,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":537124,"byte_end":537131,"line_start":983,"line_end":983,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":537136,"byte_end":537176,"line_start":984,"line_end":984,"column_start":5,"column_end":45}},{"value":"/ # let dt = NaiveTime::from_hms_nano(23, 56, 4, 12_345_678);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":537181,"byte_end":537244,"line_start":985,"line_end":985,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(dt.with_nanosecond(1_333_333_333),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":537249,"byte_end":537298,"line_start":986,"line_end":986,"column_start":5,"column_end":54}},{"value":"/            Some(NaiveTime::from_hms_nano(23, 56, 4, 1_333_333_333)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":537303,"byte_end":537376,"line_start":987,"line_end":987,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":537381,"byte_end":537388,"line_start":988,"line_end":988,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":537393,"byte_end":537402,"line_start":989,"line_end":989,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1560},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":538139,"byte_end":538164,"line_start":1012,"line_end":1012,"column_start":8,"column_end":33},"name":"num_seconds_from_midnight","qualname":"<NaiveTime as traits::Timelike>::num_seconds_from_midnight","value":"fn num_seconds_from_midnight(&Self) -> u32","parent":{"krate":0,"index":2006},"children":[],"decl_id":{"krate":0,"index":2016},"docs":" Returns the number of non-leap seconds past the last midnight.","sig":null,"attributes":[{"value":"/ Returns the number of non-leap seconds past the last midnight.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":537596,"byte_end":537662,"line_start":997,"line_end":997,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":537667,"byte_end":537670,"line_start":998,"line_end":998,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":537675,"byte_end":537688,"line_start":999,"line_end":999,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":537693,"byte_end":537696,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":537701,"byte_end":537708,"line_start":1001,"line_end":1001,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":537713,"byte_end":537751,"line_start":1002,"line_end":1002,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":537756,"byte_end":537759,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveTime::from_hms(1, 2, 3).num_seconds_from_midnight(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":537764,"byte_end":537836,"line_start":1004,"line_end":1004,"column_start":5,"column_end":77}},{"value":"/            3723);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":537841,"byte_end":537862,"line_start":1005,"line_end":1005,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(NaiveTime::from_hms_nano(23, 56, 4, 12_345_678).num_seconds_from_midnight(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":537867,"byte_end":537958,"line_start":1006,"line_end":1006,"column_start":5,"column_end":96}},{"value":"/            86164);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":537963,"byte_end":537985,"line_start":1007,"line_end":1007,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(NaiveTime::from_hms_milli(23, 59, 59, 1_000).num_seconds_from_midnight(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":537990,"byte_end":538078,"line_start":1008,"line_end":1008,"column_start":5,"column_end":93}},{"value":"/            86399);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":538083,"byte_end":538105,"line_start":1009,"line_end":1009,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":538110,"byte_end":538117,"line_start":1010,"line_end":1010,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":538122,"byte_end":538131,"line_start":1011,"line_end":1011,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1563},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":540941,"byte_end":540944,"line_start":1070,"line_end":1070,"column_start":8,"column_end":11},"name":"add","qualname":"<NaiveTime as core::ops::Add>::add","value":"fn add(Self, OldDuration) -> NaiveTime","parent":{"krate":1,"index":3218},"children":[],"decl_id":{"krate":1,"index":3221},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":540924,"byte_end":540933,"line_start":1069,"line_end":1069,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1565},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":541101,"byte_end":541111,"line_start":1077,"line_end":1077,"column_start":8,"column_end":18},"name":"add_assign","qualname":"<NaiveTime as core::ops::AddAssign>::add_assign","value":"fn add_assign(&mut Self, OldDuration)","parent":{"krate":1,"index":3249},"children":[],"decl_id":{"krate":1,"index":3251},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":541084,"byte_end":541093,"line_start":1076,"line_end":1076,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1568},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":543499,"byte_end":543502,"line_start":1131,"line_end":1131,"column_start":8,"column_end":11},"name":"sub","qualname":"<NaiveTime as core::ops::Sub>::sub","value":"fn sub(Self, OldDuration) -> NaiveTime","parent":{"krate":1,"index":3223},"children":[],"decl_id":{"krate":1,"index":3226},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":543482,"byte_end":543491,"line_start":1130,"line_end":1130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1570},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":543659,"byte_end":543669,"line_start":1138,"line_end":1138,"column_start":8,"column_end":18},"name":"sub_assign","qualname":"<NaiveTime as core::ops::SubAssign>::sub_assign","value":"fn sub_assign(&mut Self, OldDuration)","parent":{"krate":1,"index":3253},"children":[],"decl_id":{"krate":1,"index":3255},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":543642,"byte_end":543651,"line_start":1137,"line_end":1137,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1573},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":546073,"byte_end":546076,"line_start":1192,"line_end":1192,"column_start":8,"column_end":11},"name":"sub","qualname":"<NaiveTime as core::ops::Sub>::sub","value":"fn sub(Self, NaiveTime) -> OldDuration","parent":{"krate":1,"index":3223},"children":[],"decl_id":{"krate":1,"index":3226},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":546056,"byte_end":546065,"line_start":1191,"line_end":1191,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1575},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":547420,"byte_end":547423,"line_start":1226,"line_end":1226,"column_start":8,"column_end":11},"name":"fmt","qualname":"<NaiveTime as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9902},"children":[],"decl_id":{"krate":1,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1577},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":549278,"byte_end":549281,"line_start":1276,"line_end":1276,"column_start":8,"column_end":11},"name":"fmt","qualname":"<NaiveTime as core::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9909},"children":[],"decl_id":{"krate":1,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1580},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":550085,"byte_end":550093,"line_start":1303,"line_end":1303,"column_start":8,"column_end":16},"name":"from_str","qualname":"<NaiveTime as core::str::FromStr>::from_str","value":"fn from_str(&str) -> ParseResult<NaiveTime>","parent":{"krate":1,"index":12556},"children":[],"decl_id":{"krate":1,"index":12558},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1583},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":550953,"byte_end":550960,"line_start":1333,"line_end":1333,"column_start":8,"column_end":15},"name":"default","qualname":"<NaiveTime as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3128},"children":[],"decl_id":{"krate":1,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1629},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"offset","qualname":"::offset","value":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","parent":null,"children":[{"krate":0,"index":1630},{"krate":0,"index":1633},{"krate":0,"index":1634},{"krate":0,"index":1637},{"krate":0,"index":1640},{"krate":0,"index":1643},{"krate":0,"index":1646},{"krate":0,"index":1647},{"krate":0,"index":1650},{"krate":0,"index":1653},{"krate":0,"index":1656},{"krate":0,"index":1659},{"krate":0,"index":1660},{"krate":0,"index":1663},{"krate":0,"index":1666},{"krate":0,"index":1751},{"krate":0,"index":1754},{"krate":0,"index":1791},{"krate":0,"index":1792},{"krate":0,"index":2577},{"krate":0,"index":2588},{"krate":0,"index":2591},{"krate":0,"index":2593},{"krate":0,"index":2597},{"krate":0,"index":2600},{"krate":0,"index":2602},{"krate":0,"index":2604},{"krate":0,"index":2607},{"krate":0,"index":1794},{"krate":0,"index":1802},{"krate":0,"index":1809},{"krate":0,"index":1812},{"krate":0,"index":1814}],"decl_id":null,"docs":" The time zone, which calculates offsets from the local time to UTC.","sig":null,"attributes":[{"value":"/ The time zone, which calculates offsets from the local time to UTC.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":554323,"byte_end":554394,"line_start":4,"line_end":4,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":554395,"byte_end":554398,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ There are four operations provided by the `TimeZone` trait:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":554399,"byte_end":554462,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":554463,"byte_end":554466,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ 1. Converting the local `NaiveDateTime` to `DateTime<Tz>`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":554467,"byte_end":554528,"line_start":8,"line_end":8,"column_start":1,"column_end":62}},{"value":"/ 2. Converting the UTC `NaiveDateTime` to `DateTime<Tz>`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":554529,"byte_end":554588,"line_start":9,"line_end":9,"column_start":1,"column_end":60}},{"value":"/ 3. Converting `DateTime<Tz>` to the local `NaiveDateTime`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":554589,"byte_end":554650,"line_start":10,"line_end":10,"column_start":1,"column_end":62}},{"value":"/ 4. Constructing `DateTime<Tz>` objects from various offsets","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":554651,"byte_end":554714,"line_start":11,"line_end":11,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":554715,"byte_end":554718,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ 1 is used for constructors. 2 is used for the `with_timezone` method of date and time types.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":554719,"byte_end":554815,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ 3 is used for other methods, e.g. `year()` or `format()`, and provided by an associated type","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":554816,"byte_end":554912,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ which implements `Offset` (which then passed to `TimeZone` for actual implementations).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":554913,"byte_end":555004,"line_start":15,"line_end":15,"column_start":1,"column_end":92}},{"value":"/ Technically speaking `TimeZone` has a total knowledge about given timescale,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":555005,"byte_end":555085,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ but `Offset` is used as a cache to avoid the repeated conversion","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":555086,"byte_end":555154,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/ and provides implementations for 1 and 3.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":555155,"byte_end":555200,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/ An `TimeZone` instance can be reconstructed from the corresponding `Offset` instance.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":555201,"byte_end":555290,"line_start":19,"line_end":19,"column_start":1,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":2551},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":576114,"byte_end":576125,"line_start":27,"line_end":27,"column_start":12,"column_end":23},"name":"FixedOffset","qualname":"::offset::fixed::FixedOffset","value":"FixedOffset {  }","parent":null,"children":[{"krate":0,"index":2552}],"decl_id":null,"docs":" The time zone with fixed offset, from UTC-23:59:59 to UTC+23:59:59.","sig":null,"attributes":[{"value":"/ The time zone with fixed offset, from UTC-23:59:59 to UTC+23:59:59.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":575667,"byte_end":575738,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":575739,"byte_end":575742,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Using the [`TimeZone`](./trait.TimeZone.html) methods","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":575743,"byte_end":575800,"line_start":21,"line_end":21,"column_start":1,"column_end":58}},{"value":"/ on a `FixedOffset` struct is the preferred way to construct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":575801,"byte_end":575864,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ `DateTime<FixedOffset>` instances. See the [`east`](#method.east) and","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":575865,"byte_end":575938,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/ [`west`](#method.west) methods for examples.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":575939,"byte_end":575987,"line_start":24,"line_end":24,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1710},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":576727,"byte_end":576731,"line_start":46,"line_end":46,"column_start":12,"column_end":16},"name":"east","qualname":"<FixedOffset>::east","value":"fn east(i32) -> FixedOffset","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.\n The negative `secs` means the Western Hemisphere.","sig":null,"attributes":[{"value":"/ Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":576180,"byte_end":576268,"line_start":32,"line_end":32,"column_start":5,"column_end":93}},{"value":"/ The negative `secs` means the Western Hemisphere.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":576273,"byte_end":576326,"line_start":33,"line_end":33,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":576331,"byte_end":576334,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-bound `secs`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":576339,"byte_end":576377,"line_start":35,"line_end":35,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":576382,"byte_end":576385,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":576390,"byte_end":576403,"line_start":37,"line_end":37,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":576408,"byte_end":576411,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":576416,"byte_end":576423,"line_start":39,"line_end":39,"column_start":5,"column_end":12}},{"value":"/ use chrono::{FixedOffset, TimeZone};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":576428,"byte_end":576468,"line_start":40,"line_end":40,"column_start":5,"column_end":45}},{"value":"/ let hour = 3600;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":576473,"byte_end":576493,"line_start":41,"line_end":41,"column_start":5,"column_end":25}},{"value":"/ let datetime = FixedOffset::east(5 * hour).ymd(2016, 11, 08)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":576498,"byte_end":576562,"line_start":42,"line_end":42,"column_start":5,"column_end":69}},{"value":"/                                           .and_hms(0, 0, 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":576567,"byte_end":576631,"line_start":43,"line_end":43,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(&datetime.to_rfc3339(), \"2016-11-08T00:00:00+05:00\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":576636,"byte_end":576703,"line_start":44,"line_end":44,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":576708,"byte_end":576715,"line_start":45,"line_end":45,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1711},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":577066,"byte_end":577074,"line_start":54,"line_end":54,"column_start":12,"column_end":20},"name":"east_opt","qualname":"<FixedOffset>::east_opt","value":"fn east_opt(i32) -> Option<FixedOffset>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.\n The negative `secs` means the Western Hemisphere.","sig":null,"attributes":[{"value":"/ Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":576849,"byte_end":576937,"line_start":50,"line_end":50,"column_start":5,"column_end":93}},{"value":"/ The negative `secs` means the Western Hemisphere.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":576942,"byte_end":576995,"line_start":51,"line_end":51,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":577000,"byte_end":577003,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-bound `secs`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":577008,"byte_end":577054,"line_start":53,"line_end":53,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1712},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":577814,"byte_end":577818,"line_start":76,"line_end":76,"column_start":12,"column_end":16},"name":"west","qualname":"<FixedOffset>::west","value":"fn west(i32) -> FixedOffset","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.\n The negative `secs` means the Eastern Hemisphere.","sig":null,"attributes":[{"value":"/ Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":577267,"byte_end":577355,"line_start":62,"line_end":62,"column_start":5,"column_end":93}},{"value":"/ The negative `secs` means the Eastern Hemisphere.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":577360,"byte_end":577413,"line_start":63,"line_end":63,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":577418,"byte_end":577421,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-bound `secs`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":577426,"byte_end":577464,"line_start":65,"line_end":65,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":577469,"byte_end":577472,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":577477,"byte_end":577490,"line_start":67,"line_end":67,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":577495,"byte_end":577498,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":577503,"byte_end":577510,"line_start":69,"line_end":69,"column_start":5,"column_end":12}},{"value":"/ use chrono::{FixedOffset, TimeZone};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":577515,"byte_end":577555,"line_start":70,"line_end":70,"column_start":5,"column_end":45}},{"value":"/ let hour = 3600;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":577560,"byte_end":577580,"line_start":71,"line_end":71,"column_start":5,"column_end":25}},{"value":"/ let datetime = FixedOffset::west(5 * hour).ymd(2016, 11, 08)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":577585,"byte_end":577649,"line_start":72,"line_end":72,"column_start":5,"column_end":69}},{"value":"/                                           .and_hms(0, 0, 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":577654,"byte_end":577718,"line_start":73,"line_end":73,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(&datetime.to_rfc3339(), \"2016-11-08T00:00:00-05:00\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":577723,"byte_end":577790,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":577795,"byte_end":577802,"line_start":75,"line_end":75,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1713},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":578153,"byte_end":578161,"line_start":84,"line_end":84,"column_start":12,"column_end":20},"name":"west_opt","qualname":"<FixedOffset>::west_opt","value":"fn west_opt(i32) -> Option<FixedOffset>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.\n The negative `secs` means the Eastern Hemisphere.","sig":null,"attributes":[{"value":"/ Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":577936,"byte_end":578024,"line_start":80,"line_end":80,"column_start":5,"column_end":93}},{"value":"/ The negative `secs` means the Eastern Hemisphere.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":578029,"byte_end":578082,"line_start":81,"line_end":81,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":578087,"byte_end":578090,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-bound `secs`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":578095,"byte_end":578141,"line_start":83,"line_end":83,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1714},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":578460,"byte_end":578475,"line_start":94,"line_end":94,"column_start":12,"column_end":27},"name":"local_minus_utc","qualname":"<FixedOffset>::local_minus_utc","value":"fn local_minus_utc(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of seconds to add to convert from UTC to the local time.\n","sig":null,"attributes":[{"value":"/ Returns the number of seconds to add to convert from UTC to the local time.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":578355,"byte_end":578434,"line_start":92,"line_end":92,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":578439,"byte_end":578448,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1715},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":578637,"byte_end":578652,"line_start":100,"line_end":100,"column_start":12,"column_end":27},"name":"utc_minus_local","qualname":"<FixedOffset>::utc_minus_local","value":"fn utc_minus_local(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of seconds to add to convert from the local time to UTC.\n","sig":null,"attributes":[{"value":"/ Returns the number of seconds to add to convert from the local time to UTC.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":578532,"byte_end":578611,"line_start":98,"line_end":98,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":578616,"byte_end":578625,"line_start":99,"line_end":99,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1718},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":578779,"byte_end":578790,"line_start":108,"line_end":108,"column_start":8,"column_end":19},"name":"from_offset","qualname":"<FixedOffset as offset::TimeZone>::from_offset","value":"fn from_offset(&FixedOffset) -> FixedOffset","parent":{"krate":0,"index":1814},"children":[],"decl_id":{"krate":0,"index":1828},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1719},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":578860,"byte_end":578882,"line_start":112,"line_end":112,"column_start":8,"column_end":30},"name":"offset_from_local_date","qualname":"<FixedOffset as offset::TimeZone>::offset_from_local_date","value":"fn offset_from_local_date(&Self, &NaiveDate) -> LocalResult<FixedOffset>","parent":{"krate":0,"index":1814},"children":[],"decl_id":{"krate":0,"index":1829},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1720},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":578988,"byte_end":579014,"line_start":115,"line_end":115,"column_start":8,"column_end":34},"name":"offset_from_local_datetime","qualname":"<FixedOffset as offset::TimeZone>::offset_from_local_datetime","value":"fn offset_from_local_datetime(&Self, &NaiveDateTime)\n-> LocalResult<FixedOffset>","parent":{"krate":0,"index":1814},"children":[],"decl_id":{"krate":0,"index":1830},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1721},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":579125,"byte_end":579145,"line_start":119,"line_end":119,"column_start":8,"column_end":28},"name":"offset_from_utc_date","qualname":"<FixedOffset as offset::TimeZone>::offset_from_utc_date","value":"fn offset_from_utc_date(&Self, &NaiveDate) -> FixedOffset","parent":{"krate":0,"index":1814},"children":[],"decl_id":{"krate":0,"index":1835},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1722},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":579215,"byte_end":579239,"line_start":122,"line_end":122,"column_start":8,"column_end":32},"name":"offset_from_utc_datetime","qualname":"<FixedOffset as offset::TimeZone>::offset_from_utc_datetime","value":"fn offset_from_utc_datetime(&Self, &NaiveDateTime) -> FixedOffset","parent":{"krate":0,"index":1814},"children":[],"decl_id":{"krate":0,"index":1836},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1724},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":579346,"byte_end":579349,"line_start":128,"line_end":128,"column_start":8,"column_end":11},"name":"fix","qualname":"<FixedOffset as offset::Offset>::fix","value":"fn fix(&Self) -> FixedOffset","parent":{"krate":0,"index":1812},"children":[],"decl_id":{"krate":0,"index":1813},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1726},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":579438,"byte_end":579441,"line_start":134,"line_end":134,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FixedOffset as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9902},"children":[],"decl_id":{"krate":1,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1728},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":579947,"byte_end":579950,"line_start":148,"line_end":148,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FixedOffset as core::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9909},"children":[],"decl_id":{"krate":1,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1733},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":580768,"byte_end":580771,"line_start":172,"line_end":172,"column_start":8,"column_end":11},"name":"add","qualname":"<NaiveTime as core::ops::Add>::add","value":"fn add(Self, FixedOffset) -> NaiveTime","parent":{"krate":1,"index":3218},"children":[],"decl_id":{"krate":1,"index":3221},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":580751,"byte_end":580760,"line_start":171,"line_end":171,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1736},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":580965,"byte_end":580968,"line_start":181,"line_end":181,"column_start":8,"column_end":11},"name":"sub","qualname":"<NaiveTime as core::ops::Sub>::sub","value":"fn sub(Self, FixedOffset) -> NaiveTime","parent":{"krate":1,"index":3223},"children":[],"decl_id":{"krate":1,"index":3226},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":580948,"byte_end":580957,"line_start":180,"line_end":180,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1739},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":581171,"byte_end":581174,"line_start":190,"line_end":190,"column_start":8,"column_end":11},"name":"add","qualname":"<NaiveDateTime as core::ops::Add>::add","value":"fn add(Self, FixedOffset) -> NaiveDateTime","parent":{"krate":1,"index":3218},"children":[],"decl_id":{"krate":1,"index":3221},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":581154,"byte_end":581163,"line_start":189,"line_end":189,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1742},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":581380,"byte_end":581383,"line_start":199,"line_end":199,"column_start":8,"column_end":11},"name":"sub","qualname":"<NaiveDateTime as core::ops::Sub>::sub","value":"fn sub(Self, FixedOffset) -> NaiveDateTime","parent":{"krate":1,"index":3223},"children":[],"decl_id":{"krate":1,"index":3226},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":581363,"byte_end":581372,"line_start":198,"line_end":198,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1746},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":581602,"byte_end":581605,"line_start":208,"line_end":208,"column_start":8,"column_end":11},"name":"add","qualname":"<DateTime<Tz> as core::ops::Add>::add","value":"fn add(Self, FixedOffset) -> DateTime<Tz>","parent":{"krate":1,"index":3218},"children":[],"decl_id":{"krate":1,"index":3221},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":581585,"byte_end":581594,"line_start":207,"line_end":207,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1750},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":581822,"byte_end":581825,"line_start":217,"line_end":217,"column_start":8,"column_end":11},"name":"sub","qualname":"<DateTime<Tz> as core::ops::Sub>::sub","value":"fn sub(Self, FixedOffset) -> DateTime<Tz>","parent":{"krate":1,"index":3223},"children":[],"decl_id":{"krate":1,"index":3226},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":581805,"byte_end":581814,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2566},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/utc.rs","byte_start":584099,"byte_end":584102,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"Utc","qualname":"::offset::utc::Utc","value":"","parent":null,"children":[],"decl_id":null,"docs":" The UTC time zone. This is the most efficient time zone when you don't need the local time.\n It is also used as an offset (which is also a dummy type).","sig":null,"attributes":[{"value":"/ The UTC time zone. This is the most efficient time zone when you don't need the local time.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/utc.rs","byte_start":583384,"byte_end":583479,"line_start":21,"line_end":21,"column_start":1,"column_end":96}},{"value":"/ It is also used as an offset (which is also a dummy type).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/utc.rs","byte_start":583480,"byte_end":583542,"line_start":22,"line_end":22,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/utc.rs","byte_start":583543,"byte_end":583546,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Using the [`TimeZone`](./trait.TimeZone.html) methods","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/utc.rs","byte_start":583547,"byte_end":583604,"line_start":24,"line_end":24,"column_start":1,"column_end":58}},{"value":"/ on the UTC struct is the preferred way to construct `DateTime<Utc>`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/utc.rs","byte_start":583605,"byte_end":583676,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ instances.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/utc.rs","byte_start":583677,"byte_end":583691,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/utc.rs","byte_start":583692,"byte_end":583695,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/utc.rs","byte_start":583696,"byte_end":583709,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/utc.rs","byte_start":583710,"byte_end":583713,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/utc.rs","byte_start":583714,"byte_end":583721,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use chrono::{DateTime, TimeZone, NaiveDateTime, Utc};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/utc.rs","byte_start":583722,"byte_end":583779,"line_start":31,"line_end":31,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/utc.rs","byte_start":583780,"byte_end":583783,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let dt = DateTime::<Utc>::from_utc(NaiveDateTime::from_timestamp(61, 0), Utc);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/utc.rs","byte_start":583784,"byte_end":583866,"line_start":33,"line_end":33,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/utc.rs","byte_start":583867,"byte_end":583870,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Utc.timestamp(61, 0), dt);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/utc.rs","byte_start":583871,"byte_end":583912,"line_start":35,"line_end":35,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(Utc.ymd(1970, 1, 1).and_hms(0, 1, 1), dt);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/utc.rs","byte_start":583913,"byte_end":583970,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/utc.rs","byte_start":583971,"byte_end":583978,"line_start":37,"line_end":37,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1780},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/utc.rs","byte_start":585120,"byte_end":585131,"line_start":72,"line_end":72,"column_start":8,"column_end":19},"name":"from_offset","qualname":"<Utc as offset::TimeZone>::from_offset","value":"fn from_offset(&Utc) -> Utc","parent":{"krate":0,"index":1814},"children":[],"decl_id":{"krate":0,"index":1828},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1781},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/utc.rs","byte_start":585181,"byte_end":585203,"line_start":76,"line_end":76,"column_start":8,"column_end":30},"name":"offset_from_local_date","qualname":"<Utc as offset::TimeZone>::offset_from_local_date","value":"fn offset_from_local_date(&Self, &NaiveDate) -> LocalResult<Utc>","parent":{"krate":0,"index":1814},"children":[],"decl_id":{"krate":0,"index":1829},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1782},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/utc.rs","byte_start":585299,"byte_end":585325,"line_start":79,"line_end":79,"column_start":8,"column_end":34},"name":"offset_from_local_datetime","qualname":"<Utc as offset::TimeZone>::offset_from_local_datetime","value":"fn offset_from_local_datetime(&Self, &NaiveDateTime) -> LocalResult<Utc>","parent":{"krate":0,"index":1814},"children":[],"decl_id":{"krate":0,"index":1830},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1783},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/utc.rs","byte_start":585426,"byte_end":585446,"line_start":83,"line_end":83,"column_start":8,"column_end":28},"name":"offset_from_utc_date","qualname":"<Utc as offset::TimeZone>::offset_from_utc_date","value":"fn offset_from_utc_date(&Self, &NaiveDate) -> Utc","parent":{"krate":0,"index":1814},"children":[],"decl_id":{"krate":0,"index":1835},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1784},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/utc.rs","byte_start":585506,"byte_end":585530,"line_start":86,"line_end":86,"column_start":8,"column_end":32},"name":"offset_from_utc_datetime","qualname":"<Utc as offset::TimeZone>::offset_from_utc_datetime","value":"fn offset_from_utc_datetime(&Self, &NaiveDateTime) -> Utc","parent":{"krate":0,"index":1814},"children":[],"decl_id":{"krate":0,"index":1836},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1786},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/utc.rs","byte_start":585619,"byte_end":585622,"line_start":92,"line_end":92,"column_start":8,"column_end":11},"name":"fix","qualname":"<Utc as offset::Offset>::fix","value":"fn fix(&Self) -> FixedOffset","parent":{"krate":0,"index":1812},"children":[],"decl_id":{"krate":0,"index":1813},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1788},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/utc.rs","byte_start":585718,"byte_end":585721,"line_start":98,"line_end":98,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Utc as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9902},"children":[],"decl_id":{"krate":1,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1790},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/utc.rs","byte_start":585837,"byte_end":585840,"line_start":104,"line_end":104,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Utc as core::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9909},"children":[],"decl_id":{"krate":1,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2579},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":555944,"byte_end":555948,"line_start":44,"line_end":44,"column_start":5,"column_end":9},"name":"None","qualname":"::offset::LocalResult::None","value":"LocalResult::None","parent":{"krate":0,"index":2577},"children":[],"decl_id":null,"docs":" Given local time representation is invalid.\n This can occur when, for example, the positive timezone transition.\n","sig":null,"attributes":[{"value":"/ Given local time representation is invalid.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":555816,"byte_end":555863,"line_start":42,"line_end":42,"column_start":5,"column_end":52}},{"value":"/ This can occur when, for example, the positive timezone transition.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":555868,"byte_end":555939,"line_start":43,"line_end":43,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2581},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":556022,"byte_end":556028,"line_start":46,"line_end":46,"column_start":5,"column_end":11},"name":"Single","qualname":"::offset::LocalResult::Single","value":"LocalResult::Single(T)","parent":{"krate":0,"index":2577},"children":[],"decl_id":null,"docs":" Given local time representation has a single unique result.\n","sig":null,"attributes":[{"value":"/ Given local time representation has a single unique result.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":555954,"byte_end":556017,"line_start":45,"line_end":45,"column_start":5,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":2583},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":556029,"byte_end":556030,"line_start":46,"line_end":46,"column_start":12,"column_end":13},"name":"0","qualname":"::offset::LocalResult::Single::0","value":"T","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2584},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":556194,"byte_end":556203,"line_start":49,"line_end":49,"column_start":5,"column_end":14},"name":"Ambiguous","qualname":"::offset::LocalResult::Ambiguous","value":"LocalResult::Ambiguous(T, T)","parent":{"krate":0,"index":2577},"children":[],"decl_id":null,"docs":" Given local time representation has multiple results and thus ambiguous.\n This can occur when, for example, the negative timezone transition.\n","sig":null,"attributes":[{"value":"/ Given local time representation has multiple results and thus ambiguous.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":556037,"byte_end":556113,"line_start":47,"line_end":47,"column_start":5,"column_end":81}},{"value":"/ This can occur when, for example, the negative timezone transition.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":556118,"byte_end":556189,"line_start":48,"line_end":48,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":2586},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":556204,"byte_end":556205,"line_start":49,"line_end":49,"column_start":15,"column_end":16},"name":"0","qualname":"::offset::LocalResult::Ambiguous::0","value":"T","parent":{"krate":0,"index":2584},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2587},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":556215,"byte_end":556216,"line_start":49,"line_end":49,"column_start":26,"column_end":27},"name":"1","qualname":"::offset::LocalResult::Ambiguous::1","value":"T","parent":{"krate":0,"index":2584},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2577},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":555795,"byte_end":555806,"line_start":41,"line_end":41,"column_start":10,"column_end":21},"name":"LocalResult","qualname":"::offset::LocalResult","value":"enum LocalResult<T> { None, Single(T), Ambiguous(T, T), }","parent":null,"children":[{"krate":0,"index":2579},{"krate":0,"index":2581},{"krate":0,"index":2584}],"decl_id":null,"docs":" The conversion result from the local time to the timezone-aware datetime types.\n","sig":null,"attributes":[{"value":"/ The conversion result from the local time to the timezone-aware datetime types.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":555651,"byte_end":555734,"line_start":39,"line_end":39,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1796},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":556353,"byte_end":556359,"line_start":54,"line_end":54,"column_start":12,"column_end":18},"name":"single","qualname":"<LocalResult<T>>::single","value":"fn single(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some` only when the conversion result is unique, or `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some` only when the conversion result is unique, or `None` otherwise.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":556259,"byte_end":556341,"line_start":53,"line_end":53,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1797},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":556587,"byte_end":556595,"line_start":62,"line_end":62,"column_start":12,"column_end":20},"name":"earliest","qualname":"<LocalResult<T>>::earliest","value":"fn earliest(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some` for the earliest possible conversion result, or `None` if none.\n","sig":null,"attributes":[{"value":"/ Returns `Some` for the earliest possible conversion result, or `None` if none.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":556493,"byte_end":556575,"line_start":61,"line_end":61,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1798},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":556852,"byte_end":556858,"line_start":70,"line_end":70,"column_start":12,"column_end":18},"name":"latest","qualname":"<LocalResult<T>>::latest","value":"fn latest(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some` for the latest possible conversion result, or `None` if none.\n","sig":null,"attributes":[{"value":"/ Returns `Some` for the latest possible conversion result, or `None` if none.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":556760,"byte_end":556840,"line_start":69,"line_end":69,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1799},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":557105,"byte_end":557108,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"map","qualname":"<LocalResult<T>>::map","value":"fn map<U, F>(Self, F) -> LocalResult<U> where F: FnMut(T) -> U","parent":null,"children":[],"decl_id":null,"docs":" Maps a `LocalResult<T>` into `LocalResult<U>` with given function.\n","sig":null,"attributes":[{"value":"/ Maps a `LocalResult<T>` into `LocalResult<U>` with given function.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":557023,"byte_end":557093,"line_start":77,"line_end":77,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1804},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":557683,"byte_end":557691,"line_start":93,"line_end":93,"column_start":12,"column_end":20},"name":"and_time","qualname":"<LocalResult<Date<Tz>>>::and_time","value":"fn and_time(Self, NaiveTime) -> LocalResult<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date and given `NaiveTime`.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date and given `NaiveTime`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":557458,"byte_end":557529,"line_start":88,"line_end":88,"column_start":5,"column_end":76}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":557534,"byte_end":557582,"line_start":89,"line_end":89,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":557587,"byte_end":557590,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Propagates any error. Ambiguous result would be discarded.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":557595,"byte_end":557657,"line_start":91,"line_end":91,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":557662,"byte_end":557671,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1805},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":558186,"byte_end":558197,"line_start":107,"line_end":107,"column_start":12,"column_end":23},"name":"and_hms_opt","qualname":"<LocalResult<Date<Tz>>>::and_hms_opt","value":"fn and_hms_opt(Self, u32, u32, u32) -> LocalResult<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute and second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute and second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":557958,"byte_end":558032,"line_start":102,"line_end":102,"column_start":5,"column_end":79}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":558037,"byte_end":558085,"line_start":103,"line_end":103,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":558090,"byte_end":558093,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Propagates any error. Ambiguous result would be discarded.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":558098,"byte_end":558160,"line_start":105,"line_end":105,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":558165,"byte_end":558174,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1806},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":558817,"byte_end":558834,"line_start":122,"line_end":122,"column_start":12,"column_end":29},"name":"and_hms_milli_opt","qualname":"<LocalResult<Date<Tz>>>::and_hms_milli_opt","value":"fn and_hms_milli_opt(Self, u32, u32, u32, u32) -> LocalResult<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\n The millisecond part can exceed 1,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and millisecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":558491,"byte_end":558578,"line_start":116,"line_end":116,"column_start":5,"column_end":92}},{"value":"/ The millisecond part can exceed 1,000 in order to represent the leap second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":558583,"byte_end":558663,"line_start":117,"line_end":117,"column_start":5,"column_end":85}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":558668,"byte_end":558716,"line_start":118,"line_end":118,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":558721,"byte_end":558724,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Propagates any error. Ambiguous result would be discarded.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":558729,"byte_end":558791,"line_start":120,"line_end":120,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":558796,"byte_end":558805,"line_start":121,"line_end":121,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1807},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":559533,"byte_end":559550,"line_start":143,"line_end":143,"column_start":12,"column_end":29},"name":"and_hms_micro_opt","qualname":"<LocalResult<Date<Tz>>>::and_hms_micro_opt","value":"fn and_hms_micro_opt(Self, u32, u32, u32, u32) -> LocalResult<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\n The microsecond part can exceed 1,000,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and microsecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":559203,"byte_end":559290,"line_start":137,"line_end":137,"column_start":5,"column_end":92}},{"value":"/ The microsecond part can exceed 1,000,000 in order to represent the leap second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":559295,"byte_end":559379,"line_start":138,"line_end":138,"column_start":5,"column_end":89}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":559384,"byte_end":559432,"line_start":139,"line_end":139,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":559437,"byte_end":559440,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Propagates any error. Ambiguous result would be discarded.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":559445,"byte_end":559507,"line_start":141,"line_end":141,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":559512,"byte_end":559521,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1808},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":560251,"byte_end":560267,"line_start":164,"line_end":164,"column_start":12,"column_end":28},"name":"and_hms_nano_opt","qualname":"<LocalResult<Date<Tz>>>::and_hms_nano_opt","value":"fn and_hms_nano_opt(Self, u32, u32, u32, u32) -> LocalResult<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\n The nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":559919,"byte_end":560005,"line_start":158,"line_end":158,"column_start":5,"column_end":91}},{"value":"/ The nanosecond part can exceed 1,000,000,000 in order to represent the leap second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":560010,"byte_end":560097,"line_start":159,"line_end":159,"column_start":5,"column_end":92}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":560102,"byte_end":560150,"line_start":160,"line_end":160,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":560155,"byte_end":560158,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Propagates any error. Ambiguous result would be discarded.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":560163,"byte_end":560225,"line_start":162,"line_end":162,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":560230,"byte_end":560239,"line_start":163,"line_end":163,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1811},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":560755,"byte_end":560761,"line_start":182,"line_end":182,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<LocalResult<T>>::unwrap","value":"fn unwrap(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the single unique conversion result, or panics accordingly.\n","sig":null,"attributes":[{"value":"/ Returns the single unique conversion result, or panics accordingly.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":560672,"byte_end":560743,"line_start":181,"line_end":181,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":1812},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":561116,"byte_end":561122,"line_start":194,"line_end":194,"column_start":11,"column_end":17},"name":"Offset","qualname":"::offset::Offset","value":"Offset: Sized + Clone + fmt::Debug","parent":null,"children":[{"krate":0,"index":1813}],"decl_id":null,"docs":" The offset from the local time to UTC.\n","sig":null,"attributes":[{"value":"/ The offset from the local time to UTC.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":561063,"byte_end":561105,"line_start":193,"line_end":193,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1813},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":561228,"byte_end":561231,"line_start":196,"line_end":196,"column_start":8,"column_end":11},"name":"fix","qualname":"::offset::Offset::fix","value":"fn fix(&Self) -> FixedOffset","parent":{"krate":0,"index":1812},"children":[],"decl_id":null,"docs":" Returns the fixed offset from UTC to the local time stored.\n","sig":null,"attributes":[{"value":"/ Returns the fixed offset from UTC to the local time stored.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":561157,"byte_end":561220,"line_start":195,"line_end":195,"column_start":5,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":1814},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":561430,"byte_end":561438,"line_start":203,"line_end":203,"column_start":11,"column_end":19},"name":"TimeZone","qualname":"::offset::TimeZone","value":"TimeZone: Sized + Clone","parent":null,"children":[{"krate":0,"index":1815},{"krate":0,"index":1816},{"krate":0,"index":1817},{"krate":0,"index":1818},{"krate":0,"index":1819},{"krate":0,"index":1820},{"krate":0,"index":1821},{"krate":0,"index":1822},{"krate":0,"index":1823},{"krate":0,"index":1824},{"krate":0,"index":1825},{"krate":0,"index":1826},{"krate":0,"index":1827},{"krate":0,"index":1828},{"krate":0,"index":1829},{"krate":0,"index":1830},{"krate":0,"index":1831},{"krate":0,"index":1833},{"krate":0,"index":1835},{"krate":0,"index":1836},{"krate":0,"index":1837},{"krate":0,"index":1838}],"decl_id":null,"docs":" The time zone.","sig":null,"attributes":[{"value":"/ The time zone.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":561258,"byte_end":561276,"line_start":199,"line_end":199,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":561277,"byte_end":561280,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ The methods here are the primarily constructors for [`Date`](../struct.Date.html) and","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":561281,"byte_end":561370,"line_start":201,"line_end":201,"column_start":1,"column_end":90}},{"value":"/ [`DateTime`](../struct.DateTime.html) types.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":561371,"byte_end":561419,"line_start":202,"line_end":202,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1815},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":561661,"byte_end":561667,"line_start":207,"line_end":207,"column_start":10,"column_end":16},"name":"Offset","qualname":"::offset::TimeZone::Offset","value":"type Offset: Offset;","parent":{"krate":0,"index":1814},"children":[],"decl_id":null,"docs":" An associated offset type.\n This type is used to store the actual offset in date and time types.\n The original `TimeZone` value can be recovered via `TimeZone::from_offset`.\n","sig":null,"attributes":[{"value":"/ An associated offset type.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":561460,"byte_end":561490,"line_start":204,"line_end":204,"column_start":5,"column_end":35}},{"value":"/ This type is used to store the actual offset in date and time types.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":561495,"byte_end":561567,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ The original `TimeZone` value can be recovered via `TimeZone::from_offset`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":561572,"byte_end":561651,"line_start":206,"line_end":206,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1816},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":562282,"byte_end":562285,"line_start":224,"line_end":224,"column_start":8,"column_end":11},"name":"ymd","qualname":"::offset::TimeZone::ymd","value":"fn ymd(&Self, i32, u32, u32) -> Date<Self>","parent":{"krate":0,"index":1814},"children":[],"decl_id":null,"docs":" Makes a new `Date` from year, month, day and the current time zone.\n This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","sig":null,"attributes":[{"value":"/ Makes a new `Date` from year, month, day and the current time zone.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":561682,"byte_end":561753,"line_start":209,"line_end":209,"column_start":5,"column_end":76}},{"value":"/ This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":561758,"byte_end":561837,"line_start":210,"line_end":210,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":561842,"byte_end":561845,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ The time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":561850,"byte_end":561943,"line_start":212,"line_end":212,"column_start":5,"column_end":98}},{"value":"/ but it will propagate to the `DateTime` values constructed via this date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":561948,"byte_end":562025,"line_start":213,"line_end":213,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":562030,"byte_end":562033,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-range date, invalid month and/or day.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":562038,"byte_end":562100,"line_start":215,"line_end":215,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":562105,"byte_end":562108,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":562113,"byte_end":562126,"line_start":217,"line_end":217,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":562131,"byte_end":562134,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":562139,"byte_end":562146,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Utc, TimeZone};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":562151,"byte_end":562183,"line_start":220,"line_end":220,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":562188,"byte_end":562191,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utc.ymd(2015, 5, 15).to_string(), \"2015-05-15UTC\");","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":562196,"byte_end":562262,"line_start":222,"line_end":222,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":562267,"byte_end":562274,"line_start":223,"line_end":223,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1817},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":563099,"byte_end":563106,"line_start":244,"line_end":244,"column_start":8,"column_end":15},"name":"ymd_opt","qualname":"::offset::TimeZone::ymd_opt","value":"fn ymd_opt(&Self, i32, u32, u32) -> LocalResult<Date<Self>>","parent":{"krate":0,"index":1814},"children":[],"decl_id":null,"docs":" Makes a new `Date` from year, month, day and the current time zone.\n This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","sig":null,"attributes":[{"value":"/ Makes a new `Date` from year, month, day and the current time zone.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":562401,"byte_end":562472,"line_start":228,"line_end":228,"column_start":5,"column_end":76}},{"value":"/ This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":562477,"byte_end":562556,"line_start":229,"line_end":229,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":562561,"byte_end":562564,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":562569,"byte_end":562662,"line_start":231,"line_end":231,"column_start":5,"column_end":98}},{"value":"/ but it will propagate to the `DateTime` values constructed via this date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":562667,"byte_end":562744,"line_start":232,"line_end":232,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":562749,"byte_end":562752,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-range date, invalid month and/or day.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":562757,"byte_end":562827,"line_start":234,"line_end":234,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":562832,"byte_end":562835,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":562840,"byte_end":562853,"line_start":236,"line_end":236,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":562858,"byte_end":562861,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":562866,"byte_end":562873,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Utc, LocalResult, TimeZone};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":562878,"byte_end":562923,"line_start":239,"line_end":239,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":562928,"byte_end":562931,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utc.ymd_opt(2015, 5, 15).unwrap().to_string(), \"2015-05-15UTC\");","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":562936,"byte_end":563015,"line_start":241,"line_end":241,"column_start":5,"column_end":84}},{"value":"/ assert_eq!(Utc.ymd_opt(2000, 0, 0), LocalResult::None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":563020,"byte_end":563079,"line_start":242,"line_end":242,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":563084,"byte_end":563091,"line_start":243,"line_end":243,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1818},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":563953,"byte_end":563955,"line_start":266,"line_end":266,"column_start":8,"column_end":10},"name":"yo","qualname":"::offset::TimeZone::yo","value":"fn yo(&Self, i32, u32) -> Date<Self>","parent":{"krate":0,"index":1814},"children":[],"decl_id":null,"docs":" Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone.\n This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","sig":null,"attributes":[{"value":"/ Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":563343,"byte_end":563434,"line_start":251,"line_end":251,"column_start":5,"column_end":96}},{"value":"/ This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":563439,"byte_end":563518,"line_start":252,"line_end":252,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":563523,"byte_end":563526,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ The time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":563531,"byte_end":563624,"line_start":254,"line_end":254,"column_start":5,"column_end":98}},{"value":"/ but it will propagate to the `DateTime` values constructed via this date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":563629,"byte_end":563706,"line_start":255,"line_end":255,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":563711,"byte_end":563714,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-range date and/or invalid DOY.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":563719,"byte_end":563774,"line_start":257,"line_end":257,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":563779,"byte_end":563782,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":563787,"byte_end":563800,"line_start":259,"line_end":259,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":563805,"byte_end":563808,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":563813,"byte_end":563820,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Utc, TimeZone};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":563825,"byte_end":563857,"line_start":262,"line_end":262,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":563862,"byte_end":563865,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utc.yo(2015, 135).to_string(), \"2015-05-15UTC\");","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":563870,"byte_end":563933,"line_start":264,"line_end":264,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":563938,"byte_end":563945,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1819},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":564506,"byte_end":564512,"line_start":277,"line_end":277,"column_start":8,"column_end":14},"name":"yo_opt","qualname":"::offset::TimeZone::yo_opt","value":"fn yo_opt(&Self, i32, u32) -> LocalResult<Date<Self>>","parent":{"krate":0,"index":1814},"children":[],"decl_id":null,"docs":" Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone.\n This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","sig":null,"attributes":[{"value":"/ Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":564059,"byte_end":564150,"line_start":270,"line_end":270,"column_start":5,"column_end":96}},{"value":"/ This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":564155,"byte_end":564234,"line_start":271,"line_end":271,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":564239,"byte_end":564242,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ The time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":564247,"byte_end":564340,"line_start":273,"line_end":273,"column_start":5,"column_end":98}},{"value":"/ but it will propagate to the `DateTime` values constructed via this date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":564345,"byte_end":564422,"line_start":274,"line_end":274,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":564427,"byte_end":564430,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-range date and/or invalid DOY.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":564435,"byte_end":564498,"line_start":276,"line_end":276,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1820},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":565488,"byte_end":565494,"line_start":301,"line_end":301,"column_start":8,"column_end":14},"name":"isoywd","qualname":"::offset::TimeZone::isoywd","value":"fn isoywd(&Self, i32, u32, Weekday) -> Date<Self>","parent":{"krate":0,"index":1814},"children":[],"decl_id":null,"docs":" Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and\n the current time zone.\n This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n The resulting `Date` may have a different year from the input year.","sig":null,"attributes":[{"value":"/ Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":564737,"byte_end":564828,"line_start":284,"line_end":284,"column_start":5,"column_end":96}},{"value":"/ the current time zone.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":564833,"byte_end":564859,"line_start":285,"line_end":285,"column_start":5,"column_end":31}},{"value":"/ This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":564864,"byte_end":564943,"line_start":286,"line_end":286,"column_start":5,"column_end":84}},{"value":"/ The resulting `Date` may have a different year from the input year.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":564948,"byte_end":565019,"line_start":287,"line_end":287,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":565024,"byte_end":565027,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ The time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":565032,"byte_end":565125,"line_start":289,"line_end":289,"column_start":5,"column_end":98}},{"value":"/ but it will propagate to the `DateTime` values constructed via this date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":565130,"byte_end":565207,"line_start":290,"line_end":290,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":565212,"byte_end":565215,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-range date and/or invalid week number.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":565220,"byte_end":565283,"line_start":292,"line_end":292,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":565288,"byte_end":565291,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":565296,"byte_end":565309,"line_start":294,"line_end":294,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":565314,"byte_end":565317,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":565322,"byte_end":565329,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Utc, Weekday, TimeZone};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":565334,"byte_end":565375,"line_start":297,"line_end":297,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":565380,"byte_end":565383,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utc.isoywd(2015, 20, Weekday::Fri).to_string(), \"2015-05-15UTC\");","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":565388,"byte_end":565468,"line_start":299,"line_end":299,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":565473,"byte_end":565480,"line_start":300,"line_end":300,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1821},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":566185,"byte_end":566195,"line_start":314,"line_end":314,"column_start":8,"column_end":18},"name":"isoywd_opt","qualname":"::offset::TimeZone::isoywd_opt","value":"fn isoywd_opt(&Self, i32, u32, Weekday) -> LocalResult<Date<Self>>","parent":{"krate":0,"index":1814},"children":[],"decl_id":null,"docs":" Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and\n the current time zone.\n This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n The resulting `Date` may have a different year from the input year.","sig":null,"attributes":[{"value":"/ Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":565623,"byte_end":565714,"line_start":305,"line_end":305,"column_start":5,"column_end":96}},{"value":"/ the current time zone.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":565719,"byte_end":565745,"line_start":306,"line_end":306,"column_start":5,"column_end":31}},{"value":"/ This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":565750,"byte_end":565829,"line_start":307,"line_end":307,"column_start":5,"column_end":84}},{"value":"/ The resulting `Date` may have a different year from the input year.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":565834,"byte_end":565905,"line_start":308,"line_end":308,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":565910,"byte_end":565913,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ The time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":565918,"byte_end":566011,"line_start":310,"line_end":310,"column_start":5,"column_end":98}},{"value":"/ but it will propagate to the `DateTime` values constructed via this date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":566016,"byte_end":566093,"line_start":311,"line_end":311,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":566098,"byte_end":566101,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-range date and/or invalid week number.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":566106,"byte_end":566177,"line_start":313,"line_end":313,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1822},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":567018,"byte_end":567027,"line_start":335,"line_end":335,"column_start":8,"column_end":17},"name":"timestamp","qualname":"::offset::TimeZone::timestamp","value":"fn timestamp(&Self, i64, u32) -> DateTime<Self>","parent":{"krate":0,"index":1814},"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the number of non-leap seconds\n since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")\n and the number of nanoseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the number of non-leap seconds","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":566445,"byte_end":566507,"line_start":321,"line_end":321,"column_start":5,"column_end":67}},{"value":"/ since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":566512,"byte_end":566572,"line_start":322,"line_end":322,"column_start":5,"column_end":65}},{"value":"/ and the number of nanoseconds since the last whole non-leap second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":566577,"byte_end":566648,"line_start":323,"line_end":323,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":566653,"byte_end":566656,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-range number of seconds and/or invalid nanosecond,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":566661,"byte_end":566736,"line_start":325,"line_end":325,"column_start":5,"column_end":80}},{"value":"/ for a non-panicking version see [`timestamp_opt`](#method.timestamp_opt).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":566741,"byte_end":566818,"line_start":326,"line_end":326,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":566823,"byte_end":566826,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":566831,"byte_end":566844,"line_start":328,"line_end":328,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":566849,"byte_end":566852,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":566857,"byte_end":566864,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Utc, TimeZone};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":566869,"byte_end":566901,"line_start":331,"line_end":331,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":566906,"byte_end":566909,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utc.timestamp(1431648000, 0).to_string(), \"2015-05-15 00:00:00 UTC\");","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":566914,"byte_end":566998,"line_start":333,"line_end":333,"column_start":5,"column_end":89}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":567003,"byte_end":567010,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1823},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":567510,"byte_end":567523,"line_start":345,"line_end":345,"column_start":8,"column_end":21},"name":"timestamp_opt","qualname":"::offset::TimeZone::timestamp_opt","value":"fn timestamp_opt(&Self, i64, u32) -> LocalResult<DateTime<Self>>","parent":{"krate":0,"index":1814},"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the number of non-leap seconds\n since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")\n and the number of nanoseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the number of non-leap seconds","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":567138,"byte_end":567200,"line_start":339,"line_end":339,"column_start":5,"column_end":67}},{"value":"/ since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":567205,"byte_end":567265,"line_start":340,"line_end":340,"column_start":5,"column_end":65}},{"value":"/ and the number of nanoseconds since the last whole non-leap second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":567270,"byte_end":567341,"line_start":341,"line_end":341,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":567346,"byte_end":567349,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ Returns `LocalResult::None` on out-of-range number of seconds and/or","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":567354,"byte_end":567426,"line_start":343,"line_end":343,"column_start":5,"column_end":77}},{"value":"/ invalid nanosecond, otherwise always returns `LocalResult::Single`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":567431,"byte_end":567502,"line_start":344,"line_end":344,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1824},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":568261,"byte_end":568277,"line_start":365,"line_end":365,"column_start":8,"column_end":24},"name":"timestamp_millis","qualname":"::offset::TimeZone::timestamp_millis","value":"fn timestamp_millis(&Self, i64) -> DateTime<Self>","parent":{"krate":0,"index":1814},"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the number of non-leap milliseconds\n since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the number of non-leap milliseconds","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":567784,"byte_end":567851,"line_start":352,"line_end":352,"column_start":5,"column_end":72}},{"value":"/ since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":567856,"byte_end":567917,"line_start":353,"line_end":353,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":567922,"byte_end":567925,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ Panics on out-of-range number of milliseconds for a non-panicking","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":567930,"byte_end":567999,"line_start":355,"line_end":355,"column_start":5,"column_end":74}},{"value":"/ version see [`timestamp_millis_opt`](#method.timestamp_millis_opt).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":568004,"byte_end":568075,"line_start":356,"line_end":356,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":568080,"byte_end":568083,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":568088,"byte_end":568101,"line_start":358,"line_end":358,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":568106,"byte_end":568109,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":568114,"byte_end":568121,"line_start":360,"line_end":360,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Utc, TimeZone};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":568126,"byte_end":568158,"line_start":361,"line_end":361,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":568163,"byte_end":568166,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utc.timestamp_millis(1431648000).timestamp(), 1431648);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":568171,"byte_end":568241,"line_start":363,"line_end":363,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":568246,"byte_end":568253,"line_start":364,"line_end":364,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1825},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":569006,"byte_end":569026,"line_start":386,"line_end":386,"column_start":8,"column_end":28},"name":"timestamp_millis_opt","qualname":"::offset::TimeZone::timestamp_millis_opt","value":"fn timestamp_millis_opt(&Self, i64) -> LocalResult<DateTime<Self>>","parent":{"krate":0,"index":1814},"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the number of non-leap milliseconds\n since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the number of non-leap milliseconds","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":568380,"byte_end":568447,"line_start":369,"line_end":369,"column_start":5,"column_end":72}},{"value":"/ since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":568452,"byte_end":568513,"line_start":370,"line_end":370,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":568518,"byte_end":568521,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":568526,"byte_end":568529,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ Returns `LocalResult::None` on out-of-range number of milliseconds","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":568534,"byte_end":568604,"line_start":373,"line_end":373,"column_start":5,"column_end":75}},{"value":"/ and/or invalid nanosecond, otherwise always returns","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":568609,"byte_end":568664,"line_start":374,"line_end":374,"column_start":5,"column_end":60}},{"value":"/ `LocalResult::Single`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":568669,"byte_end":568695,"line_start":375,"line_end":375,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":568700,"byte_end":568703,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":568708,"byte_end":568721,"line_start":377,"line_end":377,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":568726,"byte_end":568729,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":568734,"byte_end":568741,"line_start":379,"line_end":379,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Utc, TimeZone, LocalResult};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":568746,"byte_end":568791,"line_start":380,"line_end":380,"column_start":5,"column_end":50}},{"value":"/ match Utc.timestamp_millis_opt(1431648000) {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":568796,"byte_end":568844,"line_start":381,"line_end":381,"column_start":5,"column_end":53}},{"value":"/     LocalResult::Single(dt) => assert_eq!(dt.timestamp(), 1431648),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":568849,"byte_end":568920,"line_start":382,"line_end":382,"column_start":5,"column_end":76}},{"value":"/     _ => panic!(\"Incorrect timestamp_millis\"),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":568925,"byte_end":568975,"line_start":383,"line_end":383,"column_start":5,"column_end":55}},{"value":"/ };","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":568980,"byte_end":568986,"line_start":384,"line_end":384,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":568991,"byte_end":568998,"line_start":385,"line_end":385,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1826},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":569726,"byte_end":569741,"line_start":408,"line_end":408,"column_start":8,"column_end":23},"name":"timestamp_nanos","qualname":"::offset::TimeZone::timestamp_nanos","value":"fn timestamp_nanos(&Self, i64) -> DateTime<Self>","parent":{"krate":0,"index":1814},"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the number of non-leap nanoseconds\n since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the number of non-leap nanoseconds","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":569305,"byte_end":569371,"line_start":395,"line_end":395,"column_start":5,"column_end":71}},{"value":"/ since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":569376,"byte_end":569437,"line_start":396,"line_end":396,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":569442,"byte_end":569445,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ Unlike [`timestamp_millis`](#method.timestamp_millis), this never","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":569450,"byte_end":569519,"line_start":398,"line_end":398,"column_start":5,"column_end":74}},{"value":"/ panics.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":569524,"byte_end":569535,"line_start":399,"line_end":399,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":569540,"byte_end":569543,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":569548,"byte_end":569561,"line_start":401,"line_end":401,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":569566,"byte_end":569569,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":569574,"byte_end":569581,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Utc, TimeZone};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":569586,"byte_end":569618,"line_start":404,"line_end":404,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":569623,"byte_end":569626,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utc.timestamp_nanos(1431648000000000).timestamp(), 1431648);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":569631,"byte_end":569706,"line_start":406,"line_end":406,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":569711,"byte_end":569718,"line_start":407,"line_end":407,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1827},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":570514,"byte_end":570531,"line_start":428,"line_end":428,"column_start":8,"column_end":25},"name":"datetime_from_str","qualname":"::offset::TimeZone::datetime_from_str","value":"fn datetime_from_str(&Self, &str, &str) -> ParseResult<DateTime<Self>>","parent":{"krate":0,"index":1814},"children":[],"decl_id":null,"docs":" Parses a string with the specified format string and returns a\n `DateTime` with the current offset.","sig":null,"attributes":[{"value":"/ Parses a string with the specified format string and returns a","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":570024,"byte_end":570090,"line_start":417,"line_end":417,"column_start":5,"column_end":71}},{"value":"/ `DateTime` with the current offset.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":570095,"byte_end":570134,"line_start":418,"line_end":418,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":570139,"byte_end":570142,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ See the [`crate::format::strftime`] module on the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":570147,"byte_end":570200,"line_start":420,"line_end":420,"column_start":5,"column_end":58}},{"value":"/ supported escape sequences.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":570205,"byte_end":570236,"line_start":421,"line_end":421,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":570241,"byte_end":570244,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ If the to-be-parsed string includes an offset, it *must* match the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":570249,"byte_end":570319,"line_start":423,"line_end":423,"column_start":5,"column_end":75}},{"value":"/ offset of the TimeZone, otherwise an error will be returned.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":570324,"byte_end":570388,"line_start":424,"line_end":424,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":570393,"byte_end":570396,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ See also [`DateTime::parse_from_str`] which gives a [`DateTime`] with","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":570401,"byte_end":570474,"line_start":426,"line_end":426,"column_start":5,"column_end":78}},{"value":"/ parsed [`FixedOffset`].","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":570479,"byte_end":570506,"line_start":427,"line_end":427,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1828},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":570802,"byte_end":570813,"line_start":435,"line_end":435,"column_start":8,"column_end":19},"name":"from_offset","qualname":"::offset::TimeZone::from_offset","value":"fn from_offset(&Self::Offset) -> Self","parent":{"krate":0,"index":1814},"children":[],"decl_id":null,"docs":" Reconstructs the time zone from the offset.\n","sig":null,"attributes":[{"value":"/ Reconstructs the time zone from the offset.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":570747,"byte_end":570794,"line_start":434,"line_end":434,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1829},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":570925,"byte_end":570947,"line_start":438,"line_end":438,"column_start":8,"column_end":30},"name":"offset_from_local_date","qualname":"::offset::TimeZone::offset_from_local_date","value":"fn offset_from_local_date(&Self, &NaiveDate) -> LocalResult<Self::Offset>","parent":{"krate":0,"index":1814},"children":[],"decl_id":null,"docs":" Creates the offset(s) for given local `NaiveDate` if possible.\n","sig":null,"attributes":[{"value":"/ Creates the offset(s) for given local `NaiveDate` if possible.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":570851,"byte_end":570917,"line_start":437,"line_end":437,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1830},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":571087,"byte_end":571113,"line_start":441,"line_end":441,"column_start":8,"column_end":34},"name":"offset_from_local_datetime","qualname":"::offset::TimeZone::offset_from_local_datetime","value":"fn offset_from_local_datetime(&Self, &NaiveDateTime)\n-> LocalResult<Self::Offset>","parent":{"krate":0,"index":1814},"children":[],"decl_id":null,"docs":" Creates the offset(s) for given local `NaiveDateTime` if possible.\n","sig":null,"attributes":[{"value":"/ Creates the offset(s) for given local `NaiveDateTime` if possible.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":571009,"byte_end":571079,"line_start":440,"line_end":440,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1831},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":571307,"byte_end":571322,"line_start":445,"line_end":445,"column_start":8,"column_end":23},"name":"from_local_date","qualname":"::offset::TimeZone::from_local_date","value":"fn from_local_date(&Self, &NaiveDate) -> LocalResult<Date<Self>>","parent":{"krate":0,"index":1814},"children":[],"decl_id":null,"docs":" Converts the local `NaiveDate` to the timezone-aware `Date` if possible.\n","sig":null,"attributes":[{"value":"/ Converts the local `NaiveDate` to the timezone-aware `Date` if possible.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":571179,"byte_end":571255,"line_start":443,"line_end":443,"column_start":5,"column_end":81}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":571260,"byte_end":571299,"line_start":444,"line_end":444,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1833},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":571718,"byte_end":571737,"line_start":454,"line_end":454,"column_start":8,"column_end":27},"name":"from_local_datetime","qualname":"::offset::TimeZone::from_local_datetime","value":"fn from_local_datetime(&Self, &NaiveDateTime) -> LocalResult<DateTime<Self>>","parent":{"krate":0,"index":1814},"children":[],"decl_id":null,"docs":" Converts the local `NaiveDateTime` to the timezone-aware `DateTime` if possible.\n","sig":null,"attributes":[{"value":"/ Converts the local `NaiveDateTime` to the timezone-aware `DateTime` if possible.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":571582,"byte_end":571666,"line_start":452,"line_end":452,"column_start":5,"column_end":89}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":571671,"byte_end":571710,"line_start":453,"line_end":453,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1835},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":572011,"byte_end":572031,"line_start":460,"line_end":460,"column_start":8,"column_end":28},"name":"offset_from_utc_date","qualname":"::offset::TimeZone::offset_from_utc_date","value":"fn offset_from_utc_date(&Self, &NaiveDate) -> Self::Offset","parent":{"krate":0,"index":1814},"children":[],"decl_id":null,"docs":" Creates the offset for given UTC `NaiveDate`. This cannot fail.\n","sig":null,"attributes":[{"value":"/ Creates the offset for given UTC `NaiveDate`. This cannot fail.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":571936,"byte_end":572003,"line_start":459,"line_end":459,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1836},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":572157,"byte_end":572181,"line_start":463,"line_end":463,"column_start":8,"column_end":32},"name":"offset_from_utc_datetime","qualname":"::offset::TimeZone::offset_from_utc_datetime","value":"fn offset_from_utc_datetime(&Self, &NaiveDateTime) -> Self::Offset","parent":{"krate":0,"index":1814},"children":[],"decl_id":null,"docs":" Creates the offset for given UTC `NaiveDateTime`. This cannot fail.\n","sig":null,"attributes":[{"value":"/ Creates the offset for given UTC `NaiveDateTime`. This cannot fail.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":572078,"byte_end":572149,"line_start":462,"line_end":462,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1837},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":572432,"byte_end":572445,"line_start":468,"line_end":468,"column_start":8,"column_end":21},"name":"from_utc_date","qualname":"::offset::TimeZone::from_utc_date","value":"fn from_utc_date(&Self, &NaiveDate) -> Date<Self>","parent":{"krate":0,"index":1814},"children":[],"decl_id":null,"docs":" Converts the UTC `NaiveDate` to the local time.\n The UTC is continuous and thus this cannot fail (but can give the duplicate local time).\n","sig":null,"attributes":[{"value":"/ Converts the UTC `NaiveDate` to the local time.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":572232,"byte_end":572283,"line_start":465,"line_end":465,"column_start":5,"column_end":56}},{"value":"/ The UTC is continuous and thus this cannot fail (but can give the duplicate local time).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":572288,"byte_end":572380,"line_start":466,"line_end":466,"column_start":5,"column_end":97}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":572385,"byte_end":572424,"line_start":467,"line_end":467,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1838},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":572762,"byte_end":572779,"line_start":475,"line_end":475,"column_start":8,"column_end":25},"name":"from_utc_datetime","qualname":"::offset::TimeZone::from_utc_datetime","value":"fn from_utc_datetime(&Self, &NaiveDateTime) -> DateTime<Self>","parent":{"krate":0,"index":1814},"children":[],"decl_id":null,"docs":" Converts the UTC `NaiveDateTime` to the local time.\n The UTC is continuous and thus this cannot fail (but can give the duplicate local time).\n","sig":null,"attributes":[{"value":"/ Converts the UTC `NaiveDateTime` to the local time.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":572558,"byte_end":572613,"line_start":472,"line_end":472,"column_start":5,"column_end":60}},{"value":"/ The UTC is continuous and thus this cannot fail (but can give the duplicate local time).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":572618,"byte_end":572710,"line_start":473,"line_end":473,"column_start":5,"column_end":97}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":572715,"byte_end":572754,"line_start":474,"line_end":474,"column_start":5,"column_end":44}}]},{"kind":"Trait","id":{"krate":0,"index":1887},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":586626,"byte_end":586637,"line_start":20,"line_end":20,"column_start":11,"column_end":22},"name":"SubsecRound","qualname":"::round::SubsecRound","value":"SubsecRound","parent":null,"children":[{"krate":0,"index":1888},{"krate":0,"index":1889}],"decl_id":null,"docs":" Extension trait for subsecond rounding or truncation to a maximum number\n of digits. Rounding can be used to decrease the error variance when\n serializing/persisting to lower precision. Truncation is the default\n behavior in Chrono display formatting.  Either can be used to guarantee\n equality (e.g. for testing) when round-tripping through a lower precision\n format.\n","sig":null,"attributes":[{"value":"/ Extension trait for subsecond rounding or truncation to a maximum number","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":586228,"byte_end":586304,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ of digits. Rounding can be used to decrease the error variance when","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":586305,"byte_end":586376,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ serializing/persisting to lower precision. Truncation is the default","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":586377,"byte_end":586449,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ behavior in Chrono display formatting.  Either can be used to guarantee","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":586450,"byte_end":586525,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/ equality (e.g. for testing) when round-tripping through a lower precision","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":586526,"byte_end":586603,"line_start":18,"line_end":18,"column_start":1,"column_end":78}},{"value":"/ format.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":586604,"byte_end":586615,"line_start":19,"line_end":19,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1888},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":587167,"byte_end":587180,"line_start":32,"line_end":32,"column_start":8,"column_end":21},"name":"round_subsecs","qualname":"::round::SubsecRound::round_subsecs","value":"fn round_subsecs(Self, u16) -> Self","parent":{"krate":0,"index":1887},"children":[],"decl_id":null,"docs":" Return a copy rounded to the specified number of subsecond digits. With\n 9 or more digits, self is returned unmodified. Halfway values are\n rounded up (away from zero).","sig":null,"attributes":[{"value":"/ Return a copy rounded to the specified number of subsecond digits. With","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":586644,"byte_end":586719,"line_start":21,"line_end":21,"column_start":5,"column_end":80}},{"value":"/ 9 or more digits, self is returned unmodified. Halfway values are","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":586724,"byte_end":586793,"line_start":22,"line_end":22,"column_start":5,"column_end":74}},{"value":"/ rounded up (away from zero).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":586798,"byte_end":586830,"line_start":23,"line_end":23,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":586835,"byte_end":586838,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":586843,"byte_end":586856,"line_start":25,"line_end":25,"column_start":5,"column_end":18}},{"value":"/ ``` rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":586861,"byte_end":586873,"line_start":26,"line_end":26,"column_start":5,"column_end":17}},{"value":"/ # use chrono::{DateTime, SubsecRound, Timelike, TimeZone, Utc};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":586878,"byte_end":586945,"line_start":27,"line_end":27,"column_start":5,"column_end":72}},{"value":"/ let dt = Utc.ymd(2018, 1, 11).and_hms_milli(12, 0, 0, 154);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":586950,"byte_end":587013,"line_start":28,"line_end":28,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(dt.round_subsecs(2).nanosecond(), 150_000_000);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":587018,"byte_end":587080,"line_start":29,"line_end":29,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(dt.round_subsecs(1).nanosecond(), 200_000_000);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":587085,"byte_end":587147,"line_start":30,"line_end":30,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":587152,"byte_end":587159,"line_start":31,"line_end":31,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1889},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":587683,"byte_end":587696,"line_start":44,"line_end":44,"column_start":8,"column_end":21},"name":"trunc_subsecs","qualname":"::round::SubsecRound::trunc_subsecs","value":"fn trunc_subsecs(Self, u16) -> Self","parent":{"krate":0,"index":1887},"children":[],"decl_id":null,"docs":" Return a copy truncated to the specified number of subsecond\n digits. With 9 or more digits, self is returned unmodified.","sig":null,"attributes":[{"value":"/ Return a copy truncated to the specified number of subsecond","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":587214,"byte_end":587278,"line_start":34,"line_end":34,"column_start":5,"column_end":69}},{"value":"/ digits. With 9 or more digits, self is returned unmodified.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":587283,"byte_end":587346,"line_start":35,"line_end":35,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":587351,"byte_end":587354,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":587359,"byte_end":587372,"line_start":37,"line_end":37,"column_start":5,"column_end":18}},{"value":"/ ``` rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":587377,"byte_end":587389,"line_start":38,"line_end":38,"column_start":5,"column_end":17}},{"value":"/ # use chrono::{DateTime, SubsecRound, Timelike, TimeZone, Utc};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":587394,"byte_end":587461,"line_start":39,"line_end":39,"column_start":5,"column_end":72}},{"value":"/ let dt = Utc.ymd(2018, 1, 11).and_hms_milli(12, 0, 0, 154);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":587466,"byte_end":587529,"line_start":40,"line_end":40,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(dt.trunc_subsecs(2).nanosecond(), 150_000_000);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":587534,"byte_end":587596,"line_start":41,"line_end":41,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(dt.trunc_subsecs(1).nanosecond(), 100_000_000);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":587601,"byte_end":587663,"line_start":42,"line_end":42,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":587668,"byte_end":587675,"line_start":43,"line_end":43,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1892},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":587842,"byte_end":587855,"line_start":51,"line_end":51,"column_start":8,"column_end":21},"name":"round_subsecs","qualname":"<T as round::SubsecRound>::round_subsecs","value":"fn round_subsecs(Self, u16) -> T","parent":{"krate":0,"index":1887},"children":[],"decl_id":{"krate":0,"index":1888},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1893},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":588323,"byte_end":588336,"line_start":66,"line_end":66,"column_start":8,"column_end":21},"name":"trunc_subsecs","qualname":"<T as round::SubsecRound>::trunc_subsecs","value":"fn trunc_subsecs(Self, u16) -> T","parent":{"krate":0,"index":1887},"children":[],"decl_id":{"krate":0,"index":1889},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1895},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":589435,"byte_end":589448,"line_start":101,"line_end":101,"column_start":11,"column_end":24},"name":"DurationRound","qualname":"::round::DurationRound","value":"DurationRound: Sized","parent":null,"children":[{"krate":0,"index":1896},{"krate":0,"index":1897},{"krate":0,"index":1898}],"decl_id":null,"docs":" Extension trait for rounding or truncating a DateTime by a Duration.","sig":null,"attributes":[{"value":"/ Extension trait for rounding or truncating a DateTime by a Duration.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":589022,"byte_end":589094,"line_start":94,"line_end":94,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":589095,"byte_end":589098,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ # Limitations","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":589099,"byte_end":589116,"line_start":96,"line_end":96,"column_start":1,"column_end":18}},{"value":"/ Both rounding and truncating are done via [`Duration::num_nanoseconds`] and","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":589117,"byte_end":589196,"line_start":97,"line_end":97,"column_start":1,"column_end":80}},{"value":"/ [`DateTime::timestamp_nanos`]. This means that they will fail if either the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":589197,"byte_end":589276,"line_start":98,"line_end":98,"column_start":1,"column_end":80}},{"value":"/ `Duration` or the `DateTime` are too big to represented as nanoseconds. They","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":589277,"byte_end":589357,"line_start":99,"line_end":99,"column_start":1,"column_end":81}},{"value":"/ will also fail if the `Duration` is bigger than the timestamp.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":589358,"byte_end":589424,"line_start":100,"line_end":100,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":1896},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":589694,"byte_end":589697,"line_start":108,"line_end":108,"column_start":10,"column_end":13},"name":"Err","qualname":"::round::DurationRound::Err","value":"type Err: fmt::Debug + fmt::Display;","parent":{"krate":0,"index":1895},"children":[],"decl_id":null,"docs":" Error that can occur in rounding or truncating\n","sig":null,"attributes":[{"value":"/ Error that can occur in rounding or truncating","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":589590,"byte_end":589640,"line_start":106,"line_end":106,"column_start":5,"column_end":55}},{"value":"cfg(not(any(feature = \"std\", test)))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":589645,"byte_end":589684,"line_start":107,"line_end":107,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1897},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":590267,"byte_end":590281,"line_start":125,"line_end":125,"column_start":8,"column_end":22},"name":"duration_round","qualname":"::round::DurationRound::duration_round","value":"fn duration_round(Self, Duration) -> Result<Self, Self::Err>","parent":{"krate":0,"index":1895},"children":[],"decl_id":null,"docs":" Return a copy rounded by Duration.","sig":null,"attributes":[{"value":"/ Return a copy rounded by Duration.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":589731,"byte_end":589769,"line_start":110,"line_end":110,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":589774,"byte_end":589777,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":589782,"byte_end":589795,"line_start":112,"line_end":112,"column_start":5,"column_end":18}},{"value":"/ ``` rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":589800,"byte_end":589812,"line_start":113,"line_end":113,"column_start":5,"column_end":17}},{"value":"/ # use chrono::{DateTime, DurationRound, Duration, TimeZone, Utc};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":589817,"byte_end":589886,"line_start":114,"line_end":114,"column_start":5,"column_end":74}},{"value":"/ let dt = Utc.ymd(2018, 1, 11).and_hms_milli(12, 0, 0, 154);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":589891,"byte_end":589954,"line_start":115,"line_end":115,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":589959,"byte_end":589974,"line_start":116,"line_end":116,"column_start":5,"column_end":20}},{"value":"/     dt.duration_round(Duration::milliseconds(10)).unwrap().to_string(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":589979,"byte_end":590054,"line_start":117,"line_end":117,"column_start":5,"column_end":80}},{"value":"/     \"2018-01-11 12:00:00.150 UTC\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":590059,"byte_end":590096,"line_start":118,"line_end":118,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":590101,"byte_end":590107,"line_start":119,"line_end":119,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":590112,"byte_end":590127,"line_start":120,"line_end":120,"column_start":5,"column_end":20}},{"value":"/     dt.duration_round(Duration::days(1)).unwrap().to_string(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":590132,"byte_end":590198,"line_start":121,"line_end":121,"column_start":5,"column_end":71}},{"value":"/     \"2018-01-12 00:00:00 UTC\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":590203,"byte_end":590236,"line_start":122,"line_end":122,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":590241,"byte_end":590247,"line_start":123,"line_end":123,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":590252,"byte_end":590259,"line_start":124,"line_end":124,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1898},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":590879,"byte_end":590893,"line_start":142,"line_end":142,"column_start":8,"column_end":22},"name":"duration_trunc","qualname":"::round::DurationRound::duration_trunc","value":"fn duration_trunc(Self, Duration) -> Result<Self, Self::Err>","parent":{"krate":0,"index":1895},"children":[],"decl_id":null,"docs":" Return a copy truncated by Duration.","sig":null,"attributes":[{"value":"/ Return a copy truncated by Duration.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":590341,"byte_end":590381,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":590386,"byte_end":590389,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":590394,"byte_end":590407,"line_start":129,"line_end":129,"column_start":5,"column_end":18}},{"value":"/ ``` rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":590412,"byte_end":590424,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/ # use chrono::{DateTime, DurationRound, Duration, TimeZone, Utc};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":590429,"byte_end":590498,"line_start":131,"line_end":131,"column_start":5,"column_end":74}},{"value":"/ let dt = Utc.ymd(2018, 1, 11).and_hms_milli(12, 0, 0, 154);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":590503,"byte_end":590566,"line_start":132,"line_end":132,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":590571,"byte_end":590586,"line_start":133,"line_end":133,"column_start":5,"column_end":20}},{"value":"/     dt.duration_trunc(Duration::milliseconds(10)).unwrap().to_string(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":590591,"byte_end":590666,"line_start":134,"line_end":134,"column_start":5,"column_end":80}},{"value":"/     \"2018-01-11 12:00:00.150 UTC\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":590671,"byte_end":590708,"line_start":135,"line_end":135,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":590713,"byte_end":590719,"line_start":136,"line_end":136,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":590724,"byte_end":590739,"line_start":137,"line_end":137,"column_start":5,"column_end":20}},{"value":"/     dt.duration_trunc(Duration::days(1)).unwrap().to_string(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":590744,"byte_end":590810,"line_start":138,"line_end":138,"column_start":5,"column_end":71}},{"value":"/     \"2018-01-11 00:00:00 UTC\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":590815,"byte_end":590848,"line_start":139,"line_end":139,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":590853,"byte_end":590859,"line_start":140,"line_end":140,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":590864,"byte_end":590871,"line_start":141,"line_end":141,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1903},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":591187,"byte_end":591201,"line_start":151,"line_end":151,"column_start":8,"column_end":22},"name":"duration_round","qualname":"<DateTime<Tz> as round::DurationRound>::duration_round","value":"fn duration_round(Self, Duration) -> Result<Self, Self::Err>","parent":{"krate":0,"index":1895},"children":[],"decl_id":{"krate":0,"index":1897},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1904},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":591330,"byte_end":591344,"line_start":155,"line_end":155,"column_start":8,"column_end":22},"name":"duration_trunc","qualname":"<DateTime<Tz> as round::DurationRound>::duration_trunc","value":"fn duration_trunc(Self, Duration) -> Result<Self, Self::Err>","parent":{"krate":0,"index":1895},"children":[],"decl_id":{"krate":0,"index":1898},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1907},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":591545,"byte_end":591559,"line_start":163,"line_end":163,"column_start":8,"column_end":22},"name":"duration_round","qualname":"<NaiveDateTime as round::DurationRound>::duration_round","value":"fn duration_round(Self, Duration) -> Result<Self, Self::Err>","parent":{"krate":0,"index":1895},"children":[],"decl_id":{"krate":0,"index":1897},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1908},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":591674,"byte_end":591688,"line_start":167,"line_end":167,"column_start":8,"column_end":22},"name":"duration_trunc","qualname":"<NaiveDateTime as round::DurationRound>::duration_trunc","value":"fn duration_trunc(Self, Duration) -> Result<Self, Self::Err>","parent":{"krate":0,"index":1895},"children":[],"decl_id":{"krate":0,"index":1898},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2612},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":594496,"byte_end":594520,"line_start":254,"line_end":254,"column_start":5,"column_end":29},"name":"DurationExceedsTimestamp","qualname":"::round::RoundingError::DurationExceedsTimestamp","value":"RoundingError::DurationExceedsTimestamp","parent":{"krate":0,"index":2611},"children":[],"decl_id":null,"docs":" Error when the Duration exceeds the Duration from or until the Unix epoch.","sig":null,"attributes":[{"value":"/ Error when the Duration exceeds the Duration from or until the Unix epoch.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":594081,"byte_end":594159,"line_start":243,"line_end":243,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":594164,"byte_end":594167,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ ``` rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":594172,"byte_end":594184,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/ # use chrono::{DateTime, DurationRound, Duration, RoundingError, TimeZone, Utc};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":594189,"byte_end":594273,"line_start":246,"line_end":246,"column_start":5,"column_end":89}},{"value":"/ let dt = Utc.ymd(1970, 12, 12).and_hms(0, 0, 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":594278,"byte_end":594330,"line_start":247,"line_end":247,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":594335,"byte_end":594338,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":594343,"byte_end":594358,"line_start":249,"line_end":249,"column_start":5,"column_end":20}},{"value":"/     dt.duration_round(Duration::days(365)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":594363,"byte_end":594410,"line_start":250,"line_end":250,"column_start":5,"column_end":52}},{"value":"/     Err(RoundingError::DurationExceedsTimestamp),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":594415,"byte_end":594468,"line_start":251,"line_end":251,"column_start":5,"column_end":58}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":594473,"byte_end":594479,"line_start":252,"line_end":252,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":594484,"byte_end":594491,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2614},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":594947,"byte_end":594967,"line_start":267,"line_end":267,"column_start":5,"column_end":25},"name":"DurationExceedsLimit","qualname":"::round::RoundingError::DurationExceedsLimit","value":"RoundingError::DurationExceedsLimit","parent":{"krate":0,"index":2611},"children":[],"decl_id":null,"docs":" Error when `Duration.num_nanoseconds` exceeds the limit.","sig":null,"attributes":[{"value":"/ Error when `Duration.num_nanoseconds` exceeds the limit.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":594527,"byte_end":594587,"line_start":256,"line_end":256,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":594592,"byte_end":594595,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ ``` rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":594600,"byte_end":594612,"line_start":258,"line_end":258,"column_start":5,"column_end":17}},{"value":"/ # use chrono::{DateTime, DurationRound, Duration, RoundingError, TimeZone, Utc};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":594617,"byte_end":594701,"line_start":259,"line_end":259,"column_start":5,"column_end":89}},{"value":"/ let dt = Utc.ymd(2260, 12, 31).and_hms_nano(23, 59, 59, 1_75_500_000);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":594706,"byte_end":594780,"line_start":260,"line_end":260,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":594785,"byte_end":594788,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":594793,"byte_end":594808,"line_start":262,"line_end":262,"column_start":5,"column_end":20}},{"value":"/     dt.duration_round(Duration::days(300 * 365)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":594813,"byte_end":594866,"line_start":263,"line_end":263,"column_start":5,"column_end":58}},{"value":"/     Err(RoundingError::DurationExceedsLimit)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":594871,"byte_end":594919,"line_start":264,"line_end":264,"column_start":5,"column_end":53}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":594924,"byte_end":594930,"line_start":265,"line_end":265,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":594935,"byte_end":594942,"line_start":266,"line_end":266,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2616},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":595332,"byte_end":595353,"line_start":277,"line_end":277,"column_start":5,"column_end":26},"name":"TimestampExceedsLimit","qualname":"::round::RoundingError::TimestampExceedsLimit","value":"RoundingError::TimestampExceedsLimit","parent":{"krate":0,"index":2611},"children":[],"decl_id":null,"docs":" Error when `DateTime.timestamp_nanos` exceeds the limit.","sig":null,"attributes":[{"value":"/ Error when `DateTime.timestamp_nanos` exceeds the limit.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":594974,"byte_end":595034,"line_start":269,"line_end":269,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":595039,"byte_end":595042,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ ``` rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":595047,"byte_end":595059,"line_start":271,"line_end":271,"column_start":5,"column_end":17}},{"value":"/ # use chrono::{DateTime, DurationRound, Duration, RoundingError, TimeZone, Utc};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":595064,"byte_end":595148,"line_start":272,"line_end":272,"column_start":5,"column_end":89}},{"value":"/ let dt = Utc.ymd(2300, 12, 12).and_hms(0, 0, 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":595153,"byte_end":595205,"line_start":273,"line_end":273,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":595210,"byte_end":595213,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(dt.duration_round(Duration::days(1)), Err(RoundingError::TimestampExceedsLimit),);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":595218,"byte_end":595315,"line_start":275,"line_end":275,"column_start":5,"column_end":102}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":595320,"byte_end":595327,"line_start":276,"line_end":276,"column_start":5,"column_end":12}}]},{"kind":"Enum","id":{"krate":0,"index":2611},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":594061,"byte_end":594074,"line_start":242,"line_end":242,"column_start":10,"column_end":23},"name":"RoundingError","qualname":"::round::RoundingError","value":"enum RoundingError {\n    DurationExceedsTimestamp,\n    DurationExceedsLimit,\n    TimestampExceedsLimit,\n}","parent":null,"children":[{"krate":0,"index":2612},{"krate":0,"index":2614},{"krate":0,"index":2616}],"decl_id":null,"docs":" An error from rounding by `Duration`","sig":null,"attributes":[{"value":"/ An error from rounding by `Duration`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":593935,"byte_end":593975,"line_start":238,"line_end":238,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":593976,"byte_end":593979,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ See: [`DurationRound`]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":593980,"byte_end":594006,"line_start":240,"line_end":240,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1914},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":595403,"byte_end":595406,"line_start":281,"line_end":281,"column_start":8,"column_end":11},"name":"fmt","qualname":"<RoundingError as core::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9909},"children":[],"decl_id":{"krate":1,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2630},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":608408,"byte_end":608411,"line_start":16,"line_end":16,"column_start":5,"column_end":8},"name":"Mon","qualname":"::weekday::Weekday::Mon","value":"Weekday::Mon","parent":{"krate":0,"index":2629},"children":[],"decl_id":null,"docs":" Monday.\n","sig":null,"attributes":[{"value":"/ Monday.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":608392,"byte_end":608403,"line_start":15,"line_end":15,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2633},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":608438,"byte_end":608441,"line_start":18,"line_end":18,"column_start":5,"column_end":8},"name":"Tue","qualname":"::weekday::Weekday::Tue","value":"Weekday::Tue","parent":{"krate":0,"index":2629},"children":[],"decl_id":null,"docs":" Tuesday.\n","sig":null,"attributes":[{"value":"/ Tuesday.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":608421,"byte_end":608433,"line_start":17,"line_end":17,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2636},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":608470,"byte_end":608473,"line_start":20,"line_end":20,"column_start":5,"column_end":8},"name":"Wed","qualname":"::weekday::Weekday::Wed","value":"Weekday::Wed","parent":{"krate":0,"index":2629},"children":[],"decl_id":null,"docs":" Wednesday.\n","sig":null,"attributes":[{"value":"/ Wednesday.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":608451,"byte_end":608465,"line_start":19,"line_end":19,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2639},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":608501,"byte_end":608504,"line_start":22,"line_end":22,"column_start":5,"column_end":8},"name":"Thu","qualname":"::weekday::Weekday::Thu","value":"Weekday::Thu","parent":{"krate":0,"index":2629},"children":[],"decl_id":null,"docs":" Thursday.\n","sig":null,"attributes":[{"value":"/ Thursday.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":608483,"byte_end":608496,"line_start":21,"line_end":21,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2642},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":608530,"byte_end":608533,"line_start":24,"line_end":24,"column_start":5,"column_end":8},"name":"Fri","qualname":"::weekday::Weekday::Fri","value":"Weekday::Fri","parent":{"krate":0,"index":2629},"children":[],"decl_id":null,"docs":" Friday.\n","sig":null,"attributes":[{"value":"/ Friday.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":608514,"byte_end":608525,"line_start":23,"line_end":23,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2645},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":608561,"byte_end":608564,"line_start":26,"line_end":26,"column_start":5,"column_end":8},"name":"Sat","qualname":"::weekday::Weekday::Sat","value":"Weekday::Sat","parent":{"krate":0,"index":2629},"children":[],"decl_id":null,"docs":" Saturday.\n","sig":null,"attributes":[{"value":"/ Saturday.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":608543,"byte_end":608556,"line_start":25,"line_end":25,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2648},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":608590,"byte_end":608593,"line_start":28,"line_end":28,"column_start":5,"column_end":8},"name":"Sun","qualname":"::weekday::Weekday::Sun","value":"Weekday::Sun","parent":{"krate":0,"index":2629},"children":[],"decl_id":null,"docs":" Sunday.\n","sig":null,"attributes":[{"value":"/ Sunday.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":608574,"byte_end":608585,"line_start":27,"line_end":27,"column_start":5,"column_end":16}}]},{"kind":"Enum","id":{"krate":0,"index":2629},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":608378,"byte_end":608385,"line_start":14,"line_end":14,"column_start":10,"column_end":17},"name":"Weekday","qualname":"::weekday::Weekday","value":"enum Weekday { Mon = , Tue = , Wed = , Thu = , Fri = , Sat = , Sun = , }","parent":null,"children":[{"krate":0,"index":2630},{"krate":0,"index":2633},{"krate":0,"index":2636},{"krate":0,"index":2639},{"krate":0,"index":2642},{"krate":0,"index":2645},{"krate":0,"index":2648}],"decl_id":null,"docs":" The day of week.","sig":null,"attributes":[{"value":"/ The day of week.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":607912,"byte_end":607932,"line_start":6,"line_end":6,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":607933,"byte_end":607936,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The order of the days of week depends on the context.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":607937,"byte_end":607994,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"/ (This is why this type does *not* implement `PartialOrd` or `Ord` traits.)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":607995,"byte_end":608073,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ One should prefer `*_from_monday` or `*_from_sunday` methods to get the correct result.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":608074,"byte_end":608165,"line_start":10,"line_end":10,"column_start":1,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1930},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":608912,"byte_end":608916,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"succ","qualname":"<Weekday>::succ","value":"fn succ(&Self) -> Weekday","parent":null,"children":[],"decl_id":null,"docs":" The next day in the week.","sig":null,"attributes":[{"value":"/ The next day in the week.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":608621,"byte_end":608650,"line_start":32,"line_end":32,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":608655,"byte_end":608658,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ `w`:        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":608663,"byte_end":608734,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ ----------- | ----- | ----- | ----- | ----- | ----- | ----- | -----","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":608739,"byte_end":608810,"line_start":35,"line_end":35,"column_start":5,"column_end":76}},{"value":"/ `w.succ()`: | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun` | `Mon`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":608815,"byte_end":608886,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":608891,"byte_end":608900,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1931},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":609569,"byte_end":609573,"line_start":56,"line_end":56,"column_start":12,"column_end":16},"name":"pred","qualname":"<Weekday>::pred","value":"fn pred(&Self) -> Weekday","parent":null,"children":[],"decl_id":null,"docs":" The previous day in the week.","sig":null,"attributes":[{"value":"/ The previous day in the week.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":609274,"byte_end":609307,"line_start":50,"line_end":50,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":609312,"byte_end":609315,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ `w`:        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":609320,"byte_end":609391,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ ----------- | ----- | ----- | ----- | ----- | ----- | ----- | -----","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":609396,"byte_end":609467,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ `w.pred()`: | `Sun` | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":609472,"byte_end":609543,"line_start":54,"line_end":54,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":609548,"byte_end":609557,"line_start":55,"line_end":55,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1932},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":610315,"byte_end":610333,"line_start":74,"line_end":74,"column_start":12,"column_end":30},"name":"number_from_monday","qualname":"<Weekday>::number_from_monday","value":"fn number_from_monday(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns a day-of-week number starting from Monday = 1. (ISO 8601 weekday number)","sig":null,"attributes":[{"value":"/ Returns a day-of-week number starting from Monday = 1. (ISO 8601 weekday number)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":609931,"byte_end":610015,"line_start":68,"line_end":68,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":610020,"byte_end":610023,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ `w`:                      | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":610028,"byte_end":610113,"line_start":70,"line_end":70,"column_start":5,"column_end":90}},{"value":"/ ------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":610118,"byte_end":610203,"line_start":71,"line_end":71,"column_start":5,"column_end":90}},{"value":"/ `w.number_from_monday()`: | 1     | 2     | 3     | 4     | 5     | 6     | 7","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":610208,"byte_end":610289,"line_start":72,"line_end":72,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":610294,"byte_end":610303,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1933},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":610968,"byte_end":610986,"line_start":92,"line_end":92,"column_start":12,"column_end":30},"name":"number_from_sunday","qualname":"<Weekday>::number_from_sunday","value":"fn number_from_sunday(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns a day-of-week number starting from Sunday = 1.","sig":null,"attributes":[{"value":"/ Returns a day-of-week number starting from Sunday = 1.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":610610,"byte_end":610668,"line_start":86,"line_end":86,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":610673,"byte_end":610676,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ `w`:                      | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":610681,"byte_end":610766,"line_start":88,"line_end":88,"column_start":5,"column_end":90}},{"value":"/ ------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":610771,"byte_end":610856,"line_start":89,"line_end":89,"column_start":5,"column_end":90}},{"value":"/ `w.number_from_sunday()`: | 2     | 3     | 4     | 5     | 6     | 7     | 1","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":610861,"byte_end":610942,"line_start":90,"line_end":90,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":610947,"byte_end":610956,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1934},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":611627,"byte_end":611647,"line_start":110,"line_end":110,"column_start":12,"column_end":32},"name":"num_days_from_monday","qualname":"<Weekday>::num_days_from_monday","value":"fn num_days_from_monday(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns a day-of-week number starting from Monday = 0.","sig":null,"attributes":[{"value":"/ Returns a day-of-week number starting from Monday = 0.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":611263,"byte_end":611321,"line_start":104,"line_end":104,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":611326,"byte_end":611329,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ `w`:                        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":611334,"byte_end":611421,"line_start":106,"line_end":106,"column_start":5,"column_end":92}},{"value":"/ --------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":611426,"byte_end":611513,"line_start":107,"line_end":107,"column_start":5,"column_end":92}},{"value":"/ `w.num_days_from_monday()`: | 0     | 1     | 2     | 3     | 4     | 5     | 6","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":611518,"byte_end":611601,"line_start":108,"line_end":108,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":611606,"byte_end":611615,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1935},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":612288,"byte_end":612308,"line_start":128,"line_end":128,"column_start":12,"column_end":32},"name":"num_days_from_sunday","qualname":"<Weekday>::num_days_from_sunday","value":"fn num_days_from_sunday(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns a day-of-week number starting from Sunday = 0.","sig":null,"attributes":[{"value":"/ Returns a day-of-week number starting from Sunday = 0.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":611924,"byte_end":611982,"line_start":122,"line_end":122,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":611987,"byte_end":611990,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ `w`:                        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":611995,"byte_end":612082,"line_start":124,"line_end":124,"column_start":5,"column_end":92}},{"value":"/ --------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":612087,"byte_end":612174,"line_start":125,"line_end":125,"column_start":5,"column_end":92}},{"value":"/ `w.num_days_from_sunday()`: | 1     | 2     | 3     | 4     | 5     | 6     | 0","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":612179,"byte_end":612262,"line_start":126,"line_end":126,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":612267,"byte_end":612276,"line_start":127,"line_end":127,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1937},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":612622,"byte_end":612625,"line_start":142,"line_end":142,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Weekday as core::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9909},"children":[],"decl_id":{"krate":1,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1939},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":613291,"byte_end":613299,"line_start":160,"line_end":160,"column_start":8,"column_end":16},"name":"from_i64","qualname":"<Weekday as num_traits::FromPrimitive>::from_i64","value":"fn from_i64(i64) -> Option<Weekday>","parent":{"krate":5,"index":333},"children":[],"decl_id":{"krate":5,"index":338},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":613274,"byte_end":613283,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1940},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":613667,"byte_end":613675,"line_start":174,"line_end":174,"column_start":8,"column_end":16},"name":"from_u64","qualname":"<Weekday as num_traits::FromPrimitive>::from_u64","value":"fn from_u64(u64) -> Option<Weekday>","parent":{"krate":5,"index":333},"children":[],"decl_id":{"krate":5,"index":344},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":613650,"byte_end":613659,"line_start":173,"line_end":173,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2665},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":614131,"byte_end":614148,"line_start":190,"line_end":190,"column_start":12,"column_end":29},"name":"ParseWeekdayError","qualname":"::weekday::ParseWeekdayError","value":"ParseWeekdayError {  }","parent":null,"children":[{"krate":0,"index":2666}],"decl_id":null,"docs":" An error resulting from reading `Weekday` value with `FromStr`.\n","sig":null,"attributes":[{"value":"/ An error resulting from reading `Weekday` value with `FromStr`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":614024,"byte_end":614091,"line_start":188,"line_end":188,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1942},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":614303,"byte_end":614306,"line_start":198,"line_end":198,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ParseWeekdayError as core::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9909},"children":[],"decl_id":{"krate":1,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1944},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":614459,"byte_end":614462,"line_start":204,"line_end":204,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ParseWeekdayError as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9902},"children":[],"decl_id":{"krate":1,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2674},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":618626,"byte_end":618633,"line_start":35,"line_end":35,"column_start":5,"column_end":12},"name":"January","qualname":"::month::Month::January","value":"Month::January","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":" January\n","sig":null,"attributes":[{"value":"/ January","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":618610,"byte_end":618621,"line_start":34,"line_end":34,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2677},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":618660,"byte_end":618668,"line_start":37,"line_end":37,"column_start":5,"column_end":13},"name":"February","qualname":"::month::Month::February","value":"Month::February","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":" February\n","sig":null,"attributes":[{"value":"/ February","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":618643,"byte_end":618655,"line_start":36,"line_end":36,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2680},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":618692,"byte_end":618697,"line_start":39,"line_end":39,"column_start":5,"column_end":10},"name":"March","qualname":"::month::Month::March","value":"Month::March","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":" March\n","sig":null,"attributes":[{"value":"/ March","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":618678,"byte_end":618687,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2683},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":618721,"byte_end":618726,"line_start":41,"line_end":41,"column_start":5,"column_end":10},"name":"April","qualname":"::month::Month::April","value":"Month::April","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":" April\n","sig":null,"attributes":[{"value":"/ April","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":618707,"byte_end":618716,"line_start":40,"line_end":40,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2686},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":618748,"byte_end":618751,"line_start":43,"line_end":43,"column_start":5,"column_end":8},"name":"May","qualname":"::month::Month::May","value":"Month::May","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":" May\n","sig":null,"attributes":[{"value":"/ May","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":618736,"byte_end":618743,"line_start":42,"line_end":42,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2689},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":618774,"byte_end":618778,"line_start":45,"line_end":45,"column_start":5,"column_end":9},"name":"June","qualname":"::month::Month::June","value":"Month::June","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":" June\n","sig":null,"attributes":[{"value":"/ June","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":618761,"byte_end":618769,"line_start":44,"line_end":44,"column_start":5,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2692},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":618801,"byte_end":618805,"line_start":47,"line_end":47,"column_start":5,"column_end":9},"name":"July","qualname":"::month::Month::July","value":"Month::July","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":" July\n","sig":null,"attributes":[{"value":"/ July","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":618788,"byte_end":618796,"line_start":46,"line_end":46,"column_start":5,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2695},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":618830,"byte_end":618836,"line_start":49,"line_end":49,"column_start":5,"column_end":11},"name":"August","qualname":"::month::Month::August","value":"Month::August","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":" August\n","sig":null,"attributes":[{"value":"/ August","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":618815,"byte_end":618825,"line_start":48,"line_end":48,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2698},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":618864,"byte_end":618873,"line_start":51,"line_end":51,"column_start":5,"column_end":14},"name":"September","qualname":"::month::Month::September","value":"Month::September","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":" September\n","sig":null,"attributes":[{"value":"/ September","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":618846,"byte_end":618859,"line_start":50,"line_end":50,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2701},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":618899,"byte_end":618906,"line_start":53,"line_end":53,"column_start":5,"column_end":12},"name":"October","qualname":"::month::Month::October","value":"Month::October","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":" October\n","sig":null,"attributes":[{"value":"/ October","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":618883,"byte_end":618894,"line_start":52,"line_end":52,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2704},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":618933,"byte_end":618941,"line_start":55,"line_end":55,"column_start":5,"column_end":13},"name":"November","qualname":"::month::Month::November","value":"Month::November","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":" November\n","sig":null,"attributes":[{"value":"/ November","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":618916,"byte_end":618928,"line_start":54,"line_end":54,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2707},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":618969,"byte_end":618977,"line_start":57,"line_end":57,"column_start":5,"column_end":13},"name":"December","qualname":"::month::Month::December","value":"Month::December","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":" December\n","sig":null,"attributes":[{"value":"/ December","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":618952,"byte_end":618964,"line_start":56,"line_end":56,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":2673},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":618598,"byte_end":618603,"line_start":33,"line_end":33,"column_start":10,"column_end":15},"name":"Month","qualname":"::month::Month","value":"enum Month {\n    January = ,\n    February = ,\n    March = ,\n    April = ,\n    May = ,\n    June = ,\n    July = ,\n    August = ,\n    September = ,\n    October = ,\n    November = ,\n    December = ,\n}","parent":null,"children":[{"krate":0,"index":2674},{"krate":0,"index":2677},{"krate":0,"index":2680},{"krate":0,"index":2683},{"krate":0,"index":2686},{"krate":0,"index":2689},{"krate":0,"index":2692},{"krate":0,"index":2695},{"krate":0,"index":2698},{"krate":0,"index":2701},{"krate":0,"index":2704},{"krate":0,"index":2707}],"decl_id":null,"docs":" The month of the year.","sig":null,"attributes":[{"value":"/ The month of the year.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":617413,"byte_end":617439,"line_start":6,"line_end":6,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":617440,"byte_end":617443,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This enum is just a convenience implementation.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":617444,"byte_end":617495,"line_start":8,"line_end":8,"column_start":1,"column_end":52}},{"value":"/ The month in dates created by DateLike objects does not return this enum.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":617496,"byte_end":617573,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":617574,"byte_end":617577,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ It is possible to convert from a date to a month independently","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":617578,"byte_end":617644,"line_start":11,"line_end":11,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":617645,"byte_end":617652,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ use num_traits::FromPrimitive;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":617653,"byte_end":617687,"line_start":13,"line_end":13,"column_start":1,"column_end":35}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":617688,"byte_end":617715,"line_start":14,"line_end":14,"column_start":1,"column_end":28}},{"value":"/ let date = Utc.ymd(2019, 10, 28).and_hms(9, 10, 11);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":617716,"byte_end":617772,"line_start":15,"line_end":15,"column_start":1,"column_end":57}},{"value":"/ // `2019-10-28T09:10:11Z`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":617773,"byte_end":617802,"line_start":16,"line_end":16,"column_start":1,"column_end":30}},{"value":"/ let month = Month::from_u32(date.month());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":617803,"byte_end":617849,"line_start":17,"line_end":17,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(month, Some(Month::October))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":617850,"byte_end":617893,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":617894,"byte_end":617901,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ Or from a Month to an integer usable by dates","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":617902,"byte_end":617951,"line_start":20,"line_end":20,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":617952,"byte_end":617959,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # use chrono::prelude::*;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":617960,"byte_end":617989,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/ let month = Month::January;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":617990,"byte_end":618021,"line_start":23,"line_end":23,"column_start":1,"column_end":32}},{"value":"/ let dt = Utc.ymd(2019, month.number_from_month(), 28).and_hms(9, 10, 11);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":618022,"byte_end":618099,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ assert_eq!((dt.year(), dt.month(), dt.day()), (2019, 1, 28));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":618100,"byte_end":618165,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":618166,"byte_end":618173,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ Allows mapping from and to month, from 1-January to 12-December.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":618174,"byte_end":618242,"line_start":27,"line_end":27,"column_start":1,"column_end":69}},{"value":"/ Can be Serialized/Deserialized with serde","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":618243,"byte_end":618288,"line_start":28,"line_end":28,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1957},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":619254,"byte_end":619258,"line_start":67,"line_end":67,"column_start":12,"column_end":16},"name":"succ","qualname":"<Month>::succ","value":"fn succ(&Self) -> Month","parent":null,"children":[],"decl_id":null,"docs":" The next month.","sig":null,"attributes":[{"value":"/ The next month.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":619004,"byte_end":619023,"line_start":61,"line_end":61,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":619028,"byte_end":619031,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ `m`:        | `January`  | `February` | `...` | `December`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":619036,"byte_end":619098,"line_start":63,"line_end":63,"column_start":5,"column_end":67}},{"value":"/ ----------- | ---------  | ---------- | --- | ---------","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":619103,"byte_end":619162,"line_start":64,"line_end":64,"column_start":5,"column_end":64}},{"value":"/ `m.succ()`: | `February` | `March`    | `...` | `January`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":619167,"byte_end":619228,"line_start":65,"line_end":65,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":619233,"byte_end":619242,"line_start":66,"line_end":66,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1958},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":620107,"byte_end":620111,"line_start":90,"line_end":90,"column_start":12,"column_end":16},"name":"pred","qualname":"<Month>::pred","value":"fn pred(&Self) -> Month","parent":null,"children":[],"decl_id":null,"docs":" The previous month.","sig":null,"attributes":[{"value":"/ The previous month.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":619852,"byte_end":619875,"line_start":84,"line_end":84,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":619880,"byte_end":619883,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ `m`:        | `January`  | `February` | `...` | `December`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":619888,"byte_end":619950,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/ ----------- | ---------  | ---------- | --- | ---------","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":619955,"byte_end":620014,"line_start":87,"line_end":87,"column_start":5,"column_end":64}},{"value":"/ `m.pred()`: | `December` | `January`  | `...` | `November`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":620019,"byte_end":620081,"line_start":88,"line_end":88,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":620086,"byte_end":620095,"line_start":89,"line_end":89,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1959},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":621022,"byte_end":621039,"line_start":113,"line_end":113,"column_start":12,"column_end":29},"name":"number_from_month","qualname":"<Month>::number_from_month","value":"fn number_from_month(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns a month-of-year number starting from January = 1.","sig":null,"attributes":[{"value":"/ Returns a month-of-year number starting from January = 1.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":620705,"byte_end":620766,"line_start":107,"line_end":107,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":620771,"byte_end":620774,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ `m`:                     | `January` | `February` | `...` | `December`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":620779,"byte_end":620853,"line_start":109,"line_end":109,"column_start":5,"column_end":79}},{"value":"/ -------------------------| --------- | ---------- | --- | -----","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":620858,"byte_end":620925,"line_start":110,"line_end":110,"column_start":5,"column_end":72}},{"value":"/ `m.number_from_month()`: | 1         | 2          | `...` | 12","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":620930,"byte_end":620996,"line_start":111,"line_end":111,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":621001,"byte_end":621010,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1960},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":621649,"byte_end":621653,"line_start":137,"line_end":137,"column_start":12,"column_end":16},"name":"name","qualname":"<Month>::name","value":"fn name(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Get the name of the month","sig":null,"attributes":[{"value":"/ Get the name of the month","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":621488,"byte_end":621517,"line_start":130,"line_end":130,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":621522,"byte_end":621525,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":621530,"byte_end":621537,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/ use chrono::Month;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":621542,"byte_end":621564,"line_start":133,"line_end":133,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":621569,"byte_end":621572,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Month::January.name(), \"January\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":621577,"byte_end":621625,"line_start":135,"line_end":135,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":621630,"byte_end":621637,"line_start":136,"line_end":136,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1962},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":622646,"byte_end":622654,"line_start":163,"line_end":163,"column_start":8,"column_end":16},"name":"from_u64","qualname":"<Month as num_traits::FromPrimitive>::from_u64","value":"fn from_u64(u64) -> Option<Month>","parent":{"krate":5,"index":333},"children":[],"decl_id":{"krate":5,"index":344},"docs":" Returns an Option<Month> from a i64, assuming a 1-index, January = 1.","sig":null,"attributes":[{"value":"/ Returns an Option<Month> from a i64, assuming a 1-index, January = 1.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":622239,"byte_end":622312,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":622317,"byte_end":622320,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ `Month::from_i64(n: i64)`: | `1`                  | `2`                   | ... | `12`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":622325,"byte_end":622415,"line_start":158,"line_end":158,"column_start":5,"column_end":95}},{"value":"/ ---------------------------| -------------------- | --------------------- | ... | -----","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":622420,"byte_end":622511,"line_start":159,"line_end":159,"column_start":5,"column_end":96}},{"value":"/ ``:                        | Some(Month::January) | Some(Month::February) | ... | Some(Month::December)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":622516,"byte_end":622623,"line_start":160,"line_end":160,"column_start":5,"column_end":112}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":622629,"byte_end":622638,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1963},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":622743,"byte_end":622751,"line_start":168,"line_end":168,"column_start":8,"column_end":16},"name":"from_i64","qualname":"<Month as num_traits::FromPrimitive>::from_i64","value":"fn from_i64(i64) -> Option<Month>","parent":{"krate":5,"index":333},"children":[],"decl_id":{"krate":5,"index":338},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":622726,"byte_end":622735,"line_start":167,"line_end":167,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1964},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":622840,"byte_end":622848,"line_start":173,"line_end":173,"column_start":8,"column_end":16},"name":"from_u32","qualname":"<Month as num_traits::FromPrimitive>::from_u32","value":"fn from_u32(u32) -> Option<Month>","parent":{"krate":5,"index":333},"children":[],"decl_id":{"krate":5,"index":343},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":622823,"byte_end":622832,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2724},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":623505,"byte_end":623511,"line_start":194,"line_end":194,"column_start":12,"column_end":18},"name":"Months","qualname":"::month::Months","value":"","parent":null,"children":[],"decl_id":null,"docs":" A duration in calendar months\n","sig":null,"attributes":[{"value":"/ A duration in calendar months","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":623397,"byte_end":623430,"line_start":192,"line_end":192,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1966},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":623612,"byte_end":623615,"line_start":198,"line_end":198,"column_start":12,"column_end":15},"name":"new","qualname":"<Months>::new","value":"fn new(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Months` from a number of months\n","sig":null,"attributes":[{"value":"/ Construct a new `Months` from a number of months","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":623548,"byte_end":623600,"line_start":197,"line_end":197,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":2744},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":623770,"byte_end":623785,"line_start":205,"line_end":205,"column_start":12,"column_end":27},"name":"ParseMonthError","qualname":"::month::ParseMonthError","value":"ParseMonthError {  }","parent":null,"children":[{"krate":0,"index":2745}],"decl_id":null,"docs":" An error resulting from reading `<Month>` value with `FromStr`.\n","sig":null,"attributes":[{"value":"/ An error resulting from reading `<Month>` value with `FromStr`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":623663,"byte_end":623730,"line_start":203,"line_end":203,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1968},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":623863,"byte_end":623866,"line_start":210,"line_end":210,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ParseMonthError as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9902},"children":[],"decl_id":{"krate":1,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1987},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":628079,"byte_end":628087,"line_start":4,"line_end":4,"column_start":11,"column_end":19},"name":"Datelike","qualname":"::traits::Datelike","value":"Datelike: Sized","parent":null,"children":[{"krate":0,"index":1988},{"krate":0,"index":1989},{"krate":0,"index":1990},{"krate":0,"index":1991},{"krate":0,"index":1992},{"krate":0,"index":1993},{"krate":0,"index":1994},{"krate":0,"index":1995},{"krate":0,"index":1996},{"krate":0,"index":1997},{"krate":0,"index":1998},{"krate":0,"index":1999},{"krate":0,"index":2000},{"krate":0,"index":2001},{"krate":0,"index":2002},{"krate":0,"index":2003},{"krate":0,"index":2004},{"krate":0,"index":2005}],"decl_id":null,"docs":" The common set of methods for date component.\n","sig":null,"attributes":[{"value":"/ The common set of methods for date component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":628019,"byte_end":628068,"line_start":3,"line_end":3,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1988},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":628205,"byte_end":628209,"line_start":6,"line_end":6,"column_start":8,"column_end":12},"name":"year","qualname":"::traits::Datelike::year","value":"fn year(&Self) -> i32","parent":{"krate":0,"index":1987},"children":[],"decl_id":null,"docs":" Returns the year number in the [calendar date](./naive/struct.NaiveDate.html#calendar-date).\n","sig":null,"attributes":[{"value":"/ Returns the year number in the [calendar date](./naive/struct.NaiveDate.html#calendar-date).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":628101,"byte_end":628197,"line_start":5,"line_end":5,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":1989},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":628418,"byte_end":628425,"line_start":11,"line_end":11,"column_start":8,"column_end":15},"name":"year_ce","qualname":"::traits::Datelike::year_ce","value":"fn year_ce(&Self) -> (bool, u32)","parent":{"krate":0,"index":1987},"children":[],"decl_id":null,"docs":" Returns the absolute year number starting from 1 with a boolean flag,\n which is false when the year predates the epoch (BCE/BC) and true otherwise (CE/AD).\n","sig":null,"attributes":[{"value":"/ Returns the absolute year number starting from 1 with a boolean flag,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":628230,"byte_end":628303,"line_start":8,"line_end":8,"column_start":5,"column_end":78}},{"value":"/ which is false when the year predates the epoch (BCE/BC) and true otherwise (CE/AD).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":628308,"byte_end":628396,"line_start":9,"line_end":9,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":628401,"byte_end":628410,"line_start":10,"line_end":10,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1990},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":628720,"byte_end":628725,"line_start":23,"line_end":23,"column_start":8,"column_end":13},"name":"month","qualname":"::traits::Datelike::month","value":"fn month(&Self) -> u32","parent":{"krate":0,"index":1987},"children":[],"decl_id":null,"docs":" Returns the month number starting from 1.","sig":null,"attributes":[{"value":"/ Returns the month number starting from 1.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":628613,"byte_end":628658,"line_start":20,"line_end":20,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":628663,"byte_end":628666,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 1 to 12.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":628671,"byte_end":628712,"line_start":22,"line_end":22,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1991},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":628853,"byte_end":628859,"line_start":28,"line_end":28,"column_start":8,"column_end":14},"name":"month0","qualname":"::traits::Datelike::month0","value":"fn month0(&Self) -> u32","parent":{"krate":0,"index":1987},"children":[],"decl_id":null,"docs":" Returns the month number starting from 0.","sig":null,"attributes":[{"value":"/ Returns the month number starting from 0.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":628746,"byte_end":628791,"line_start":25,"line_end":25,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":628796,"byte_end":628799,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 11.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":628804,"byte_end":628845,"line_start":27,"line_end":27,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1992},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":629030,"byte_end":629033,"line_start":33,"line_end":33,"column_start":8,"column_end":11},"name":"day","qualname":"::traits::Datelike::day","value":"fn day(&Self) -> u32","parent":{"krate":0,"index":1987},"children":[],"decl_id":null,"docs":" Returns the day of month starting from 1.","sig":null,"attributes":[{"value":"/ Returns the day of month starting from 1.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":628880,"byte_end":628925,"line_start":30,"line_end":30,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":628930,"byte_end":628933,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 1 to 31. (The last day of month differs by months.)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":628938,"byte_end":629022,"line_start":32,"line_end":32,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1993},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":629204,"byte_end":629208,"line_start":38,"line_end":38,"column_start":8,"column_end":12},"name":"day0","qualname":"::traits::Datelike::day0","value":"fn day0(&Self) -> u32","parent":{"krate":0,"index":1987},"children":[],"decl_id":null,"docs":" Returns the day of month starting from 0.","sig":null,"attributes":[{"value":"/ Returns the day of month starting from 0.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":629054,"byte_end":629099,"line_start":35,"line_end":35,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":629104,"byte_end":629107,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 30. (The last day of month differs by months.)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":629112,"byte_end":629196,"line_start":37,"line_end":37,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1994},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":629377,"byte_end":629384,"line_start":43,"line_end":43,"column_start":8,"column_end":15},"name":"ordinal","qualname":"::traits::Datelike::ordinal","value":"fn ordinal(&Self) -> u32","parent":{"krate":0,"index":1987},"children":[],"decl_id":null,"docs":" Returns the day of year starting from 1.","sig":null,"attributes":[{"value":"/ Returns the day of year starting from 1.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":629229,"byte_end":629273,"line_start":40,"line_end":40,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":629278,"byte_end":629281,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 1 to 366. (The last day of year differs by years.)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":629286,"byte_end":629369,"line_start":42,"line_end":42,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1995},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":629553,"byte_end":629561,"line_start":48,"line_end":48,"column_start":8,"column_end":16},"name":"ordinal0","qualname":"::traits::Datelike::ordinal0","value":"fn ordinal0(&Self) -> u32","parent":{"krate":0,"index":1987},"children":[],"decl_id":null,"docs":" Returns the day of year starting from 0.","sig":null,"attributes":[{"value":"/ Returns the day of year starting from 0.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":629405,"byte_end":629449,"line_start":45,"line_end":45,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":629454,"byte_end":629457,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 365. (The last day of year differs by years.)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":629462,"byte_end":629545,"line_start":47,"line_end":47,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1996},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":629618,"byte_end":629625,"line_start":51,"line_end":51,"column_start":8,"column_end":15},"name":"weekday","qualname":"::traits::Datelike::weekday","value":"fn weekday(&Self) -> Weekday","parent":{"krate":0,"index":1987},"children":[],"decl_id":null,"docs":" Returns the day of week.\n","sig":null,"attributes":[{"value":"/ Returns the day of week.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":629582,"byte_end":629610,"line_start":50,"line_end":50,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1997},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":629683,"byte_end":629691,"line_start":54,"line_end":54,"column_start":8,"column_end":16},"name":"iso_week","qualname":"::traits::Datelike::iso_week","value":"fn iso_week(&Self) -> IsoWeek","parent":{"krate":0,"index":1987},"children":[],"decl_id":null,"docs":" Returns the ISO week.\n","sig":null,"attributes":[{"value":"/ Returns the ISO week.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":629650,"byte_end":629675,"line_start":53,"line_end":53,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1998},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":629849,"byte_end":629858,"line_start":59,"line_end":59,"column_start":8,"column_end":17},"name":"with_year","qualname":"::traits::Datelike::with_year","value":"fn with_year(&Self, i32) -> Option<Self>","parent":{"krate":0,"index":1987},"children":[],"decl_id":null,"docs":" Makes a new value with the year number changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the year number changed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":629716,"byte_end":629767,"line_start":56,"line_end":56,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":629772,"byte_end":629775,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":629780,"byte_end":629841,"line_start":58,"line_end":58,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1999},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":630051,"byte_end":630061,"line_start":64,"line_end":64,"column_start":8,"column_end":18},"name":"with_month","qualname":"::traits::Datelike::with_month","value":"fn with_month(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":1987},"children":[],"decl_id":null,"docs":" Makes a new value with the month number (starting from 1) changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the month number (starting from 1) changed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":629899,"byte_end":629969,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":629974,"byte_end":629977,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":629982,"byte_end":630043,"line_start":63,"line_end":63,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2000},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":630255,"byte_end":630266,"line_start":69,"line_end":69,"column_start":8,"column_end":19},"name":"with_month0","qualname":"::traits::Datelike::with_month0","value":"fn with_month0(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":1987},"children":[],"decl_id":null,"docs":" Makes a new value with the month number (starting from 0) changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the month number (starting from 0) changed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":630103,"byte_end":630173,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":630178,"byte_end":630181,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":630186,"byte_end":630247,"line_start":68,"line_end":68,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2001},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":630461,"byte_end":630469,"line_start":74,"line_end":74,"column_start":8,"column_end":16},"name":"with_day","qualname":"::traits::Datelike::with_day","value":"fn with_day(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":1987},"children":[],"decl_id":null,"docs":" Makes a new value with the day of month (starting from 1) changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the day of month (starting from 1) changed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":630309,"byte_end":630379,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":630384,"byte_end":630387,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":630392,"byte_end":630453,"line_start":73,"line_end":73,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2002},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":630661,"byte_end":630670,"line_start":79,"line_end":79,"column_start":8,"column_end":17},"name":"with_day0","qualname":"::traits::Datelike::with_day0","value":"fn with_day0(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":1987},"children":[],"decl_id":null,"docs":" Makes a new value with the day of month (starting from 0) changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the day of month (starting from 0) changed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":630509,"byte_end":630579,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":630584,"byte_end":630587,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":630592,"byte_end":630653,"line_start":78,"line_end":78,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2003},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":630862,"byte_end":630874,"line_start":84,"line_end":84,"column_start":8,"column_end":20},"name":"with_ordinal","qualname":"::traits::Datelike::with_ordinal","value":"fn with_ordinal(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":1987},"children":[],"decl_id":null,"docs":" Makes a new value with the day of year (starting from 1) changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the day of year (starting from 1) changed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":630711,"byte_end":630780,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":630785,"byte_end":630788,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":630793,"byte_end":630854,"line_start":83,"line_end":83,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2004},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":631069,"byte_end":631082,"line_start":89,"line_end":89,"column_start":8,"column_end":21},"name":"with_ordinal0","qualname":"::traits::Datelike::with_ordinal0","value":"fn with_ordinal0(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":1987},"children":[],"decl_id":null,"docs":" Makes a new value with the day of year (starting from 0) changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the day of year (starting from 0) changed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":630918,"byte_end":630987,"line_start":86,"line_end":86,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":630992,"byte_end":630995,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":631000,"byte_end":631061,"line_start":88,"line_end":88,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2005},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":631641,"byte_end":631657,"line_start":103,"line_end":103,"column_start":8,"column_end":24},"name":"num_days_from_ce","qualname":"::traits::Datelike::num_days_from_ce","value":"fn num_days_from_ce(&Self) -> i32","parent":{"krate":0,"index":1987},"children":[],"decl_id":null,"docs":" Counts the days in the proleptic Gregorian calendar, with January 1, Year 1 (CE) as day 1.","sig":null,"attributes":[{"value":"/ Counts the days in the proleptic Gregorian calendar, with January 1, Year 1 (CE) as day 1.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":631127,"byte_end":631221,"line_start":91,"line_end":91,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":631226,"byte_end":631229,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":631234,"byte_end":631248,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":631253,"byte_end":631256,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":631261,"byte_end":631268,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":631273,"byte_end":631311,"line_start":96,"line_end":96,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":631316,"byte_end":631319,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(1970, 1, 1).num_days_from_ce(), 719_163);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":631324,"byte_end":631400,"line_start":98,"line_end":98,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2, 1, 1).num_days_from_ce(), 366);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":631405,"byte_end":631474,"line_start":99,"line_end":99,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(NaiveDate::from_ymd(1, 1, 1).num_days_from_ce(), 1);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":631479,"byte_end":631546,"line_start":100,"line_end":100,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(NaiveDate::from_ymd(0, 1, 1).num_days_from_ce(), -365);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":631551,"byte_end":631621,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":631626,"byte_end":631633,"line_start":102,"line_end":102,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":2006},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":632315,"byte_end":632323,"line_start":122,"line_end":122,"column_start":11,"column_end":19},"name":"Timelike","qualname":"::traits::Timelike","value":"Timelike: Sized","parent":null,"children":[{"krate":0,"index":2007},{"krate":0,"index":2008},{"krate":0,"index":2009},{"krate":0,"index":2010},{"krate":0,"index":2011},{"krate":0,"index":2012},{"krate":0,"index":2013},{"krate":0,"index":2014},{"krate":0,"index":2015},{"krate":0,"index":2016}],"decl_id":null,"docs":" The common set of methods for time component.\n","sig":null,"attributes":[{"value":"/ The common set of methods for time component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":632255,"byte_end":632304,"line_start":121,"line_end":121,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2007},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":632386,"byte_end":632390,"line_start":124,"line_end":124,"column_start":8,"column_end":12},"name":"hour","qualname":"::traits::Timelike::hour","value":"fn hour(&Self) -> u32","parent":{"krate":0,"index":2006},"children":[],"decl_id":null,"docs":" Returns the hour number from 0 to 23.\n","sig":null,"attributes":[{"value":"/ Returns the hour number from 0 to 23.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":632337,"byte_end":632378,"line_start":123,"line_end":123,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2008},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":632541,"byte_end":632547,"line_start":129,"line_end":129,"column_start":8,"column_end":14},"name":"hour12","qualname":"::traits::Timelike::hour12","value":"fn hour12(&Self) -> (bool, u32)","parent":{"krate":0,"index":2006},"children":[],"decl_id":null,"docs":" Returns the hour number from 1 to 12 with a boolean flag,\n which is false for AM and true for PM.\n","sig":null,"attributes":[{"value":"/ Returns the hour number from 1 to 12 with a boolean flag,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":632411,"byte_end":632472,"line_start":126,"line_end":126,"column_start":5,"column_end":66}},{"value":"/ which is false for AM and true for PM.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":632477,"byte_end":632519,"line_start":127,"line_end":127,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":632524,"byte_end":632533,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2009},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":632791,"byte_end":632797,"line_start":139,"line_end":139,"column_start":8,"column_end":14},"name":"minute","qualname":"::traits::Timelike::minute","value":"fn minute(&Self) -> u32","parent":{"krate":0,"index":2006},"children":[],"decl_id":null,"docs":" Returns the minute number from 0 to 59.\n","sig":null,"attributes":[{"value":"/ Returns the minute number from 0 to 59.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":632740,"byte_end":632783,"line_start":138,"line_end":138,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2010},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":632869,"byte_end":632875,"line_start":142,"line_end":142,"column_start":8,"column_end":14},"name":"second","qualname":"::traits::Timelike::second","value":"fn second(&Self) -> u32","parent":{"krate":0,"index":2006},"children":[],"decl_id":null,"docs":" Returns the second number from 0 to 59.\n","sig":null,"attributes":[{"value":"/ Returns the second number from 0 to 59.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":632818,"byte_end":632861,"line_start":141,"line_end":141,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2011},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":633118,"byte_end":633128,"line_start":147,"line_end":147,"column_start":8,"column_end":18},"name":"nanosecond","qualname":"::traits::Timelike::nanosecond","value":"fn nanosecond(&Self) -> u32","parent":{"krate":0,"index":2006},"children":[],"decl_id":null,"docs":" Returns the number of nanoseconds since the whole non-leap second.\n The range from 1,000,000,000 to 1,999,999,999 represents\n the [leap second](./naive/struct.NaiveTime.html#leap-second-handling).\n","sig":null,"attributes":[{"value":"/ Returns the number of nanoseconds since the whole non-leap second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":632896,"byte_end":632966,"line_start":144,"line_end":144,"column_start":5,"column_end":75}},{"value":"/ The range from 1,000,000,000 to 1,999,999,999 represents","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":632971,"byte_end":633031,"line_start":145,"line_end":145,"column_start":5,"column_end":65}},{"value":"/ the [leap second](./naive/struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":633036,"byte_end":633110,"line_start":146,"line_end":146,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2012},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":633282,"byte_end":633291,"line_start":152,"line_end":152,"column_start":8,"column_end":17},"name":"with_hour","qualname":"::traits::Timelike::with_hour","value":"fn with_hour(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":2006},"children":[],"decl_id":null,"docs":" Makes a new value with the hour number changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the hour number changed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":633149,"byte_end":633200,"line_start":149,"line_end":149,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":633205,"byte_end":633208,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":633213,"byte_end":633274,"line_start":151,"line_end":151,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2013},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":633467,"byte_end":633478,"line_start":157,"line_end":157,"column_start":8,"column_end":19},"name":"with_minute","qualname":"::traits::Timelike::with_minute","value":"fn with_minute(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":2006},"children":[],"decl_id":null,"docs":" Makes a new value with the minute number changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the minute number changed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":633332,"byte_end":633385,"line_start":154,"line_end":154,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":633390,"byte_end":633393,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":633398,"byte_end":633459,"line_start":156,"line_end":156,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2014},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":633765,"byte_end":633776,"line_start":164,"line_end":164,"column_start":8,"column_end":19},"name":"with_second","qualname":"::traits::Timelike::with_second","value":"fn with_second(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":2006},"children":[],"decl_id":null,"docs":" Makes a new value with the second number changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the second number changed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":633518,"byte_end":633571,"line_start":159,"line_end":159,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":633576,"byte_end":633579,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":633584,"byte_end":633645,"line_start":161,"line_end":161,"column_start":5,"column_end":66}},{"value":"/ As with the [`second`](#tymethod.second) method,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":633650,"byte_end":633702,"line_start":162,"line_end":162,"column_start":5,"column_end":57}},{"value":"/ the input range is restricted to 0 through 59.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":633707,"byte_end":633757,"line_start":163,"line_end":163,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2015},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":634109,"byte_end":634124,"line_start":171,"line_end":171,"column_start":8,"column_end":23},"name":"with_nanosecond","qualname":"::traits::Timelike::with_nanosecond","value":"fn with_nanosecond(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":2006},"children":[],"decl_id":null,"docs":" Makes a new value with nanoseconds since the whole non-leap second changed.","sig":null,"attributes":[{"value":"/ Makes a new value with nanoseconds since the whole non-leap second changed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":633816,"byte_end":633895,"line_start":166,"line_end":166,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":633900,"byte_end":633903,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":633908,"byte_end":633969,"line_start":168,"line_end":168,"column_start":5,"column_end":66}},{"value":"/ As with the [`nanosecond`](#tymethod.nanosecond) method,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":633974,"byte_end":634034,"line_start":169,"line_end":169,"column_start":5,"column_end":65}},{"value":"/ the input range can exceed 1,000,000,000 for leap seconds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":634039,"byte_end":634101,"line_start":170,"line_end":170,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2016},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":634253,"byte_end":634278,"line_start":175,"line_end":175,"column_start":8,"column_end":33},"name":"num_seconds_from_midnight","qualname":"::traits::Timelike::num_seconds_from_midnight","value":"fn num_seconds_from_midnight(&Self) -> u32","parent":{"krate":0,"index":2006},"children":[],"decl_id":null,"docs":" Returns the number of non-leap seconds past the last midnight.\n","sig":null,"attributes":[{"value":"/ Returns the number of non-leap seconds past the last midnight.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":634165,"byte_end":634231,"line_start":173,"line_end":173,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":634236,"byte_end":634245,"line_start":174,"line_end":174,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":25557,"byte_end":25565,"line_start":72,"line_end":72,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":34273,"byte_end":34281,"line_start":311,"line_end":311,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":34569,"byte_end":34577,"line_start":324,"line_end":324,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":34921,"byte_end":34929,"line_start":338,"line_end":338,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":35265,"byte_end":35273,"line_start":352,"line_end":352,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":35704,"byte_end":35712,"line_start":364,"line_end":364,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":36716,"byte_end":36724,"line_start":398,"line_end":398,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":38272,"byte_end":38287,"line_start":441,"line_end":441,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":54831,"byte_end":54835,"line_start":72,"line_end":72,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":63545,"byte_end":63549,"line_start":310,"line_end":310,"column_start":20,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":65641,"byte_end":65645,"line_start":378,"line_end":378,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":266},{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":67480,"byte_end":67484,"line_start":453,"line_end":453,"column_start":29,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":67564,"byte_end":67568,"line_start":454,"line_end":454,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":67673,"byte_end":67677,"line_start":456,"line_end":456,"column_start":60,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":67797,"byte_end":67801,"line_start":462,"line_end":462,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":67844,"byte_end":67848,"line_start":464,"line_end":464,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":68000,"byte_end":68004,"line_start":470,"line_end":470,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":68139,"byte_end":68143,"line_start":476,"line_end":476,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":68282,"byte_end":68286,"line_start":482,"line_end":482,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":68516,"byte_end":68520,"line_start":491,"line_end":491,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":68733,"byte_end":68737,"line_start":498,"line_end":498,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":68967,"byte_end":68971,"line_start":507,"line_end":507,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":69181,"byte_end":69185,"line_start":514,"line_end":514,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":69370,"byte_end":69374,"line_start":523,"line_end":523,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":69548,"byte_end":69552,"line_start":529,"line_end":529,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":76117,"byte_end":76125,"line_start":98,"line_end":98,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":86254,"byte_end":86262,"line_start":384,"line_end":384,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":86536,"byte_end":86544,"line_start":397,"line_end":397,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":86779,"byte_end":86787,"line_start":404,"line_end":404,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":87711,"byte_end":87719,"line_start":426,"line_end":426,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":89797,"byte_end":89805,"line_start":480,"line_end":480,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":92434,"byte_end":92442,"line_start":542,"line_end":542,"column_start":20,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":98085,"byte_end":98093,"line_start":695,"line_end":695,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":478},{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":486},{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":99950,"byte_end":99958,"line_start":769,"line_end":769,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":498},{"krate":0,"index":500},{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":100998,"byte_end":101006,"line_start":809,"line_end":809,"column_start":29,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":101086,"byte_end":101094,"line_start":810,"line_end":810,"column_start":36,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":101203,"byte_end":101211,"line_start":812,"line_end":812,"column_start":64,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":101343,"byte_end":101351,"line_start":818,"line_end":818,"column_start":27,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":101424,"byte_end":101432,"line_start":820,"line_end":820,"column_start":65,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":102171,"byte_end":102179,"line_start":841,"line_end":841,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":102326,"byte_end":102334,"line_start":847,"line_end":847,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":102477,"byte_end":102485,"line_start":853,"line_end":853,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":102727,"byte_end":102735,"line_start":862,"line_end":862,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":103054,"byte_end":103062,"line_start":872,"line_end":872,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":103304,"byte_end":103312,"line_start":881,"line_end":881,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":103631,"byte_end":103639,"line_start":891,"line_end":891,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":541},{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":103828,"byte_end":103836,"line_start":900,"line_end":900,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":104010,"byte_end":104018,"line_start":906,"line_end":906,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":104651,"byte_end":104659,"line_start":926,"line_end":926,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":550},{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":118140,"byte_end":118155,"line_start":157,"line_end":157,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":118245,"byte_end":118260,"line_start":163,"line_end":163,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":118366,"byte_end":118381,"line_start":169,"line_end":169,"column_start":13,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":118406,"byte_end":118421,"line_start":171,"line_end":171,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":124403,"byte_end":124413,"line_start":339,"line_end":339,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":125961,"byte_end":125971,"line_start":385,"line_end":385,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":153003,"byte_end":153009,"line_start":128,"line_end":128,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parse.rs","byte_start":223048,"byte_end":223056,"line_start":478,"line_end":478,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":844},{"krate":0,"index":845}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/strftime.rs","byte_start":273838,"byte_end":273851,"line_start":216,"line_end":216,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":941},{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/strftime.rs","byte_start":275238,"byte_end":275251,"line_start":259,"line_end":259,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":948},{"krate":0,"index":949}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":145600,"byte_end":145607,"line_start":873,"line_end":873,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":956},{"krate":0,"index":957}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":147559,"byte_end":147564,"line_start":947,"line_end":947,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":959},{"krate":0,"index":960}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":295387,"byte_end":295396,"line_start":62,"line_end":62,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":301135,"byte_end":301144,"line_start":207,"line_end":207,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1113},{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1125}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":342465,"byte_end":342474,"line_start":1280,"line_end":1280,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":1136},{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1142}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":354690,"byte_end":354699,"line_start":1644,"line_end":1644,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1144},{"krate":0,"index":1145}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":354918,"byte_end":354927,"line_start":1653,"line_end":1653,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1147}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":355054,"byte_end":355063,"line_start":1660,"line_end":1660,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1149},{"krate":0,"index":1150}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":356069,"byte_end":356078,"line_start":1688,"line_end":1688,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1152},{"krate":0,"index":1153}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":358049,"byte_end":358058,"line_start":1736,"line_end":1736,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1155},{"krate":0,"index":1156}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":358277,"byte_end":358286,"line_start":1745,"line_end":1745,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1158}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":359462,"byte_end":359471,"line_start":1776,"line_end":1776,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1160},{"krate":0,"index":1161}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":359824,"byte_end":359845,"line_start":1791,"line_end":1791,"column_start":19,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":1165}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":360446,"byte_end":360467,"line_start":1811,"line_end":1811,"column_start":28,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":360501,"byte_end":360522,"line_start":1813,"line_end":1813,"column_start":30,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1168}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":360903,"byte_end":360925,"line_start":1829,"line_end":1829,"column_start":19,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1172}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":361452,"byte_end":361474,"line_start":1847,"line_end":1847,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":361508,"byte_end":361530,"line_start":1849,"line_end":1849,"column_start":30,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":362842,"byte_end":362851,"line_start":1886,"line_end":1886,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":364106,"byte_end":364115,"line_start":1921,"line_end":1921,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1179}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":364715,"byte_end":364724,"line_start":1943,"line_end":1943,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1181},{"krate":0,"index":1182}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":365559,"byte_end":365568,"line_start":1974,"line_end":1974,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1185}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":401107,"byte_end":401120,"line_start":81,"line_end":81,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1285},{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1289},{"krate":0,"index":1290},{"krate":0,"index":1291},{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":1295},{"krate":0,"index":1296},{"krate":0,"index":1298},{"krate":0,"index":1299}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":429108,"byte_end":429121,"line_start":753,"line_end":753,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1301},{"krate":0,"index":1302},{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1305},{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1308},{"krate":0,"index":1309},{"krate":0,"index":1310},{"krate":0,"index":1312},{"krate":0,"index":1314},{"krate":0,"index":1316},{"krate":0,"index":1318},{"krate":0,"index":1320},{"krate":0,"index":1322}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":439751,"byte_end":439764,"line_start":1064,"line_end":1064,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1325},{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1331},{"krate":0,"index":1333},{"krate":0,"index":1335}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":447584,"byte_end":447597,"line_start":1276,"line_end":1276,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1338},{"krate":0,"index":1339}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":447828,"byte_end":447841,"line_start":1285,"line_end":1285,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1341}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":450162,"byte_end":450175,"line_start":1340,"line_end":1340,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1343},{"krate":0,"index":1344}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":450406,"byte_end":450419,"line_start":1349,"line_end":1349,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1346}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":452149,"byte_end":452162,"line_start":1395,"line_end":1395,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1348},{"krate":0,"index":1349}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":453360,"byte_end":453373,"line_start":1431,"line_end":1431,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1351}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":454461,"byte_end":454474,"line_start":1462,"line_end":1462,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1353}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":455204,"byte_end":455217,"line_start":1484,"line_end":1484,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1355},{"krate":0,"index":1356}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":456564,"byte_end":456577,"line_start":1526,"line_end":1526,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1359}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/internals.rs","byte_start":467227,"byte_end":467236,"line_start":113,"line_end":113,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1405},{"krate":0,"index":1406},{"krate":0,"index":1407},{"krate":0,"index":1408},{"krate":0,"index":1409}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/internals.rs","byte_start":468175,"byte_end":468184,"line_start":150,"line_end":150,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1411}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/internals.rs","byte_start":476314,"byte_end":476316,"line_start":271,"line_end":271,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1429},{"krate":0,"index":1430},{"krate":0,"index":1431},{"krate":0,"index":1432}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/internals.rs","byte_start":478391,"byte_end":478393,"line_start":355,"line_end":355,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1434}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/internals.rs","byte_start":479006,"byte_end":479009,"line_start":376,"line_end":376,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1436},{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":1440},{"krate":0,"index":1441},{"krate":0,"index":1442},{"krate":0,"index":1443},{"krate":0,"index":1444},{"krate":0,"index":1445}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/internals.rs","byte_start":480988,"byte_end":480991,"line_start":460,"line_end":460,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1447}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":495321,"byte_end":495328,"line_start":52,"line_end":52,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1466}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":497862,"byte_end":497869,"line_start":134,"line_end":134,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1468}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":507055,"byte_end":507064,"line_start":197,"line_end":197,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1529},{"krate":0,"index":1530},{"krate":0,"index":1531},{"krate":0,"index":1532},{"krate":0,"index":1534},{"krate":0,"index":1535},{"krate":0,"index":1537},{"krate":0,"index":1538},{"krate":0,"index":1539},{"krate":0,"index":1540},{"krate":0,"index":1541},{"krate":0,"index":1542},{"krate":0,"index":1543},{"krate":0,"index":1544},{"krate":0,"index":1548},{"krate":0,"index":1549},{"krate":0,"index":1550}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":531318,"byte_end":531327,"line_start":808,"line_end":808,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1552},{"krate":0,"index":1553},{"krate":0,"index":1554},{"krate":0,"index":1555},{"krate":0,"index":1556},{"krate":0,"index":1557},{"krate":0,"index":1558},{"krate":0,"index":1559},{"krate":0,"index":1560}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":540878,"byte_end":540887,"line_start":1066,"line_end":1066,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1562},{"krate":0,"index":1563}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":541068,"byte_end":541077,"line_start":1075,"line_end":1075,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1565}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":543436,"byte_end":543445,"line_start":1127,"line_end":1127,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1567},{"krate":0,"index":1568}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":543626,"byte_end":543635,"line_start":1136,"line_end":1136,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1570}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":546008,"byte_end":546017,"line_start":1188,"line_end":1188,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1572},{"krate":0,"index":1573}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":547401,"byte_end":547410,"line_start":1225,"line_end":1225,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1575}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":549259,"byte_end":549268,"line_start":1275,"line_end":1275,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1577}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":550038,"byte_end":550047,"line_start":1300,"line_end":1300,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1579},{"krate":0,"index":1580}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":550934,"byte_end":550943,"line_start":1332,"line_end":1332,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1583}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":576162,"byte_end":576173,"line_start":31,"line_end":31,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1710},{"krate":0,"index":1711},{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1714},{"krate":0,"index":1715}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":578726,"byte_end":578737,"line_start":105,"line_end":105,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1717},{"krate":0,"index":1718},{"krate":0,"index":1719},{"krate":0,"index":1720},{"krate":0,"index":1721},{"krate":0,"index":1722}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":579325,"byte_end":579336,"line_start":127,"line_end":127,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1724}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":579417,"byte_end":579428,"line_start":133,"line_end":133,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1726}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":579926,"byte_end":579937,"line_start":147,"line_end":147,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1728}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":580705,"byte_end":580714,"line_start":168,"line_end":168,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1732},{"krate":0,"index":1733}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":580902,"byte_end":580911,"line_start":177,"line_end":177,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1735},{"krate":0,"index":1736}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":581100,"byte_end":581113,"line_start":186,"line_end":186,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1738},{"krate":0,"index":1739}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":581309,"byte_end":581322,"line_start":195,"line_end":195,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1741},{"krate":0,"index":1742}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":581533,"byte_end":581541,"line_start":204,"line_end":204,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1745},{"krate":0,"index":1746}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":581753,"byte_end":581761,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1749},{"krate":0,"index":1750}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/utc.rs","byte_start":585083,"byte_end":585086,"line_start":69,"line_end":69,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1779},{"krate":0,"index":1780},{"krate":0,"index":1781},{"krate":0,"index":1782},{"krate":0,"index":1783},{"krate":0,"index":1784}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/utc.rs","byte_start":585606,"byte_end":585609,"line_start":91,"line_end":91,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1786}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/utc.rs","byte_start":585705,"byte_end":585708,"line_start":97,"line_end":97,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1788}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/utc.rs","byte_start":585824,"byte_end":585827,"line_start":103,"line_end":103,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1790}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":556238,"byte_end":556249,"line_start":52,"line_end":52,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1796},{"krate":0,"index":1797},{"krate":0,"index":1798},{"krate":0,"index":1799}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":557430,"byte_end":557441,"line_start":87,"line_end":87,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1804},{"krate":0,"index":1805},{"krate":0,"index":1806},{"krate":0,"index":1807},{"krate":0,"index":1808}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":560651,"byte_end":560662,"line_start":180,"line_end":180,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1811}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":587752,"byte_end":587753,"line_start":47,"line_end":47,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1892},{"krate":0,"index":1893}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":591134,"byte_end":591142,"line_start":148,"line_end":148,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1902},{"krate":0,"index":1903},{"krate":0,"index":1904}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":591491,"byte_end":591504,"line_start":160,"line_end":160,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1906},{"krate":0,"index":1907},{"krate":0,"index":1908}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":595380,"byte_end":595393,"line_start":280,"line_end":280,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1914}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":608607,"byte_end":608614,"line_start":31,"line_end":31,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1930},{"krate":0,"index":1931},{"krate":0,"index":1932},{"krate":0,"index":1933},{"krate":0,"index":1934},{"krate":0,"index":1935}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":612605,"byte_end":612612,"line_start":141,"line_end":141,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1937}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":613260,"byte_end":613267,"line_start":158,"line_end":158,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1939},{"krate":0,"index":1940}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":614276,"byte_end":614293,"line_start":197,"line_end":197,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1942}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":614432,"byte_end":614449,"line_start":203,"line_end":203,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1944}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":618992,"byte_end":618997,"line_start":60,"line_end":60,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1957},{"krate":0,"index":1958},{"krate":0,"index":1959},{"krate":0,"index":1960}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":622227,"byte_end":622232,"line_start":155,"line_end":155,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1962},{"krate":0,"index":1963},{"krate":0,"index":1964}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":623535,"byte_end":623541,"line_start":196,"line_end":196,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1966}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":623838,"byte_end":623853,"line_start":209,"line_end":209,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1968}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":21713,"byte_end":21719,"line_start":486,"line_end":486,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":566}},{"kind":"Mod","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":141377,"byte_end":141385,"line_start":741,"line_end":741,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":914}},{"kind":"Mod","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":21852,"byte_end":21857,"line_start":492,"line_end":492,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":968}},{"kind":"Mod","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/lib.rs","byte_start":21960,"byte_end":21966,"line_start":496,"line_end":496,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1629}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":25557,"byte_end":25565,"line_start":72,"line_end":72,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":2024},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":34273,"byte_end":34281,"line_start":311,"line_end":311,"column_start":14,"column_end":22},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2024},"to":{"krate":1,"index":3245}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":34569,"byte_end":34577,"line_start":324,"line_end":324,"column_start":14,"column_end":22},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2024},"to":{"krate":1,"index":3218}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":34921,"byte_end":34929,"line_start":338,"line_end":338,"column_start":14,"column_end":22},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":2024},"to":{"krate":1,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":35265,"byte_end":35273,"line_start":352,"line_end":352,"column_start":19,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2024},"to":{"krate":1,"index":3228}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":35704,"byte_end":35712,"line_start":364,"line_end":364,"column_start":19,"column_end":27},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2024},"to":{"krate":1,"index":3233}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":36716,"byte_end":36724,"line_start":398,"line_end":398,"column_start":23,"column_end":31},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2024},"to":{"krate":1,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/oldtime.rs","byte_start":38272,"byte_end":38287,"line_start":441,"line_end":441,"column_start":23,"column_end":38},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2043},"to":{"krate":1,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":54831,"byte_end":54835,"line_start":72,"line_end":72,"column_start":20,"column_end":24},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":63545,"byte_end":63549,"line_start":310,"line_end":310,"column_start":20,"column_end":24},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":65641,"byte_end":65645,"line_start":378,"line_end":378,"column_start":33,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2058},"to":{"krate":0,"index":1987}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":67480,"byte_end":67484,"line_start":453,"line_end":453,"column_start":29,"column_end":33},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2058},"to":{"krate":1,"index":3160}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":67564,"byte_end":67568,"line_start":454,"line_end":454,"column_start":36,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2058},"to":{"krate":1,"index":3150}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":67673,"byte_end":67677,"line_start":456,"line_end":456,"column_start":60,"column_end":64},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2058},"to":{"krate":1,"index":2802}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":67797,"byte_end":67801,"line_start":462,"line_end":462,"column_start":27,"column_end":31},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2058},"to":{"krate":1,"index":2807}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":67844,"byte_end":67848,"line_start":464,"line_end":464,"column_start":35,"column_end":39},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2058},"to":{"krate":1,"index":2848}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":68000,"byte_end":68004,"line_start":470,"line_end":470,"column_start":28,"column_end":32},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2058},"to":{"krate":1,"index":2838}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":68139,"byte_end":68143,"line_start":476,"line_end":476,"column_start":35,"column_end":39},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2058},"to":{"krate":1,"index":10115}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":68282,"byte_end":68286,"line_start":482,"line_end":482,"column_start":41,"column_end":45},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2058},"to":{"krate":1,"index":3218}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":68516,"byte_end":68520,"line_start":491,"line_end":491,"column_start":47,"column_end":51},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":2058},"to":{"krate":1,"index":3249}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":68733,"byte_end":68737,"line_start":498,"line_end":498,"column_start":41,"column_end":45},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":2058},"to":{"krate":1,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":68967,"byte_end":68971,"line_start":507,"line_end":507,"column_start":47,"column_end":51},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":2058},"to":{"krate":1,"index":3253}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":69181,"byte_end":69185,"line_start":514,"line_end":514,"column_start":38,"column_end":42},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":2058},"to":{"krate":1,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":69370,"byte_end":69374,"line_start":523,"line_end":523,"column_start":35,"column_end":39},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":2058},"to":{"krate":1,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/date.rs","byte_start":69548,"byte_end":69552,"line_start":529,"line_end":529,"column_start":37,"column_end":41},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":2058},"to":{"krate":1,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":76117,"byte_end":76125,"line_start":98,"line_end":98,"column_start":20,"column_end":28},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":2089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":86254,"byte_end":86262,"line_start":384,"line_end":384,"column_start":18,"column_end":26},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":2089},"to":{"krate":1,"index":3128}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":86536,"byte_end":86544,"line_start":397,"line_end":397,"column_start":18,"column_end":26},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":2089},"to":{"krate":1,"index":3128}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":86779,"byte_end":86787,"line_start":404,"line_end":404,"column_start":30,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":2089},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":87711,"byte_end":87719,"line_start":426,"line_end":426,"column_start":38,"column_end":46},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":2089},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":89797,"byte_end":89805,"line_start":480,"line_end":480,"column_start":6,"column_end":14},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":2089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":92434,"byte_end":92442,"line_start":542,"line_end":542,"column_start":20,"column_end":28},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":2089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":98085,"byte_end":98093,"line_start":695,"line_end":695,"column_start":33,"column_end":41},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":2089},"to":{"krate":0,"index":1987}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":99950,"byte_end":99958,"line_start":769,"line_end":769,"column_start":33,"column_end":41},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":2089},"to":{"krate":0,"index":2006}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":100998,"byte_end":101006,"line_start":809,"line_end":809,"column_start":29,"column_end":37},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":2089},"to":{"krate":1,"index":3160}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":101086,"byte_end":101094,"line_start":810,"line_end":810,"column_start":36,"column_end":44},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":2089},"to":{"krate":1,"index":3150}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":101203,"byte_end":101211,"line_start":812,"line_end":812,"column_start":64,"column_end":72},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":2089},"to":{"krate":1,"index":2802}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":101343,"byte_end":101351,"line_start":818,"line_end":818,"column_start":27,"column_end":35},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":2089},"to":{"krate":1,"index":2807}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":101424,"byte_end":101432,"line_start":820,"line_end":820,"column_start":65,"column_end":73},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":2089},"to":{"krate":1,"index":2848}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":102171,"byte_end":102179,"line_start":841,"line_end":841,"column_start":28,"column_end":36},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":2089},"to":{"krate":1,"index":2838}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":102326,"byte_end":102334,"line_start":847,"line_end":847,"column_start":35,"column_end":43},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":2089},"to":{"krate":1,"index":10115}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":102477,"byte_end":102485,"line_start":853,"line_end":853,"column_start":41,"column_end":49},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":2089},"to":{"krate":1,"index":3218}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":102727,"byte_end":102735,"line_start":862,"line_end":862,"column_start":47,"column_end":55},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":2089},"to":{"krate":1,"index":3249}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":103054,"byte_end":103062,"line_start":872,"line_end":872,"column_start":41,"column_end":49},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":2089},"to":{"krate":1,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":103304,"byte_end":103312,"line_start":881,"line_end":881,"column_start":47,"column_end":55},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":2089},"to":{"krate":1,"index":3253}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":103631,"byte_end":103639,"line_start":891,"line_end":891,"column_start":42,"column_end":50},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":2089},"to":{"krate":1,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":103828,"byte_end":103836,"line_start":900,"line_end":900,"column_start":35,"column_end":43},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":2089},"to":{"krate":1,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":104010,"byte_end":104018,"line_start":906,"line_end":906,"column_start":37,"column_end":45},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":2089},"to":{"krate":1,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/datetime/mod.rs","byte_start":104651,"byte_end":104659,"line_start":926,"line_end":926,"column_start":23,"column_end":31},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":2089},"to":{"krate":1,"index":12556}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":118140,"byte_end":118155,"line_start":157,"line_end":157,"column_start":16,"column_end":31},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":595},"to":{"krate":1,"index":2772}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":118245,"byte_end":118260,"line_start":163,"line_end":163,"column_start":20,"column_end":35},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":595},"to":{"krate":1,"index":2802}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":118366,"byte_end":118381,"line_start":169,"line_end":169,"column_start":13,"column_end":28},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":595},"to":{"krate":1,"index":2807}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":118406,"byte_end":118421,"line_start":171,"line_end":171,"column_start":21,"column_end":36},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":595},"to":{"krate":1,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":124403,"byte_end":124413,"line_start":339,"line_end":339,"column_start":6,"column_end":16},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2297},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":125961,"byte_end":125971,"line_start":385,"line_end":385,"column_start":23,"column_end":33},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":2297},"to":{"krate":1,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parsed.rs","byte_start":153003,"byte_end":153009,"line_start":128,"line_end":128,"column_start":6,"column_end":12},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2340},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/parse.rs","byte_start":223048,"byte_end":223056,"line_start":478,"line_end":478,"column_start":23,"column_end":31},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":2089},"to":{"krate":1,"index":12556}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/strftime.rs","byte_start":273838,"byte_end":273851,"line_start":216,"line_end":216,"column_start":10,"column_end":23},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":2373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/strftime.rs","byte_start":275238,"byte_end":275251,"line_start":259,"line_end":259,"column_start":23,"column_end":36},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":2373},"to":{"krate":1,"index":8186}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":145600,"byte_end":145607,"line_start":873,"line_end":873,"column_start":18,"column_end":25},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":2629},"to":{"krate":1,"index":12556}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/format/mod.rs","byte_start":147559,"byte_end":147564,"line_start":947,"line_end":947,"column_start":18,"column_end":23},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":2673},"to":{"krate":1,"index":12556}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":295387,"byte_end":295396,"line_start":62,"line_end":62,"column_start":6,"column_end":15},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":2392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":301135,"byte_end":301144,"line_start":207,"line_end":207,"column_start":6,"column_end":15},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":342465,"byte_end":342474,"line_start":1280,"line_end":1280,"column_start":19,"column_end":28},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":2397},"to":{"krate":0,"index":1987}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":354690,"byte_end":354699,"line_start":1644,"line_end":1644,"column_start":27,"column_end":36},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":2397},"to":{"krate":1,"index":3218}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":354918,"byte_end":354927,"line_start":1653,"line_end":1653,"column_start":33,"column_end":42},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":2397},"to":{"krate":1,"index":3249}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":355054,"byte_end":355063,"line_start":1660,"line_end":1660,"column_start":22,"column_end":31},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":2397},"to":{"krate":1,"index":3218}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":356069,"byte_end":356078,"line_start":1688,"line_end":1688,"column_start":22,"column_end":31},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":2397},"to":{"krate":1,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":358049,"byte_end":358058,"line_start":1736,"line_end":1736,"column_start":27,"column_end":36},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":2397},"to":{"krate":1,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":358277,"byte_end":358286,"line_start":1745,"line_end":1745,"column_start":33,"column_end":42},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2397},"to":{"krate":1,"index":3253}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":359462,"byte_end":359471,"line_start":1776,"line_end":1776,"column_start":25,"column_end":34},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2397},"to":{"krate":1,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":359824,"byte_end":359845,"line_start":1791,"line_end":1791,"column_start":19,"column_end":40},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2416},"to":{"krate":1,"index":8186}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":360446,"byte_end":360467,"line_start":1811,"line_end":1811,"column_start":28,"column_end":49},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2416},"to":{"krate":1,"index":8060}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":360501,"byte_end":360522,"line_start":1813,"line_end":1813,"column_start":30,"column_end":51},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":2416},"to":{"krate":1,"index":8035}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":360903,"byte_end":360925,"line_start":1829,"line_end":1829,"column_start":19,"column_end":41},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":2437},"to":{"krate":1,"index":8186}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":361452,"byte_end":361474,"line_start":1847,"line_end":1847,"column_start":28,"column_end":50},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2437},"to":{"krate":1,"index":8060}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":361508,"byte_end":361530,"line_start":1849,"line_end":1849,"column_start":30,"column_end":52},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2437},"to":{"krate":1,"index":8035}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":362842,"byte_end":362851,"line_start":1886,"line_end":1886,"column_start":21,"column_end":30},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2397},"to":{"krate":1,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":364106,"byte_end":364115,"line_start":1921,"line_end":1921,"column_start":23,"column_end":32},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2397},"to":{"krate":1,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":364715,"byte_end":364724,"line_start":1943,"line_end":1943,"column_start":23,"column_end":32},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2397},"to":{"krate":1,"index":12556}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/date.rs","byte_start":365559,"byte_end":365568,"line_start":1974,"line_end":1974,"column_start":18,"column_end":27},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2397},"to":{"krate":1,"index":3128}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":401107,"byte_end":401120,"line_start":81,"line_end":81,"column_start":6,"column_end":19},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":2458},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":429108,"byte_end":429121,"line_start":753,"line_end":753,"column_start":19,"column_end":32},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2458},"to":{"krate":0,"index":1987}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":439751,"byte_end":439764,"line_start":1064,"line_end":1064,"column_start":19,"column_end":32},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2458},"to":{"krate":0,"index":2006}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":447584,"byte_end":447597,"line_start":1276,"line_end":1276,"column_start":27,"column_end":40},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2458},"to":{"krate":1,"index":3218}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":447828,"byte_end":447841,"line_start":1285,"line_end":1285,"column_start":33,"column_end":46},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2458},"to":{"krate":1,"index":3249}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":450162,"byte_end":450175,"line_start":1340,"line_end":1340,"column_start":27,"column_end":40},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2458},"to":{"krate":1,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":450406,"byte_end":450419,"line_start":1349,"line_end":1349,"column_start":33,"column_end":46},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2458},"to":{"krate":1,"index":3253}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":452149,"byte_end":452162,"line_start":1395,"line_end":1395,"column_start":29,"column_end":42},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2458},"to":{"krate":1,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":453360,"byte_end":453373,"line_start":1431,"line_end":1431,"column_start":21,"column_end":34},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2458},"to":{"krate":1,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":454461,"byte_end":454474,"line_start":1462,"line_end":1462,"column_start":23,"column_end":36},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2458},"to":{"krate":1,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":455204,"byte_end":455217,"line_start":1484,"line_end":1484,"column_start":23,"column_end":36},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2458},"to":{"krate":1,"index":12556}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/datetime/mod.rs","byte_start":456564,"byte_end":456577,"line_start":1526,"line_end":1526,"column_start":18,"column_end":31},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2458},"to":{"krate":1,"index":3128}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/internals.rs","byte_start":467227,"byte_end":467236,"line_start":113,"line_end":113,"column_start":6,"column_end":15},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/internals.rs","byte_start":468175,"byte_end":468184,"line_start":150,"line_end":150,"column_start":21,"column_end":30},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2478},"to":{"krate":1,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/internals.rs","byte_start":476314,"byte_end":476316,"line_start":271,"line_end":271,"column_start":6,"column_end":8},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2491},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/internals.rs","byte_start":478391,"byte_end":478393,"line_start":355,"line_end":355,"column_start":21,"column_end":23},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2491},"to":{"krate":1,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/internals.rs","byte_start":479006,"byte_end":479009,"line_start":376,"line_end":376,"column_start":6,"column_end":9},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2503},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/internals.rs","byte_start":480988,"byte_end":480991,"line_start":460,"line_end":460,"column_start":21,"column_end":24},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2503},"to":{"krate":1,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":495321,"byte_end":495328,"line_start":52,"line_end":52,"column_start":6,"column_end":13},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2515},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/isoweek.rs","byte_start":497862,"byte_end":497869,"line_start":134,"line_end":134,"column_start":21,"column_end":28},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2515},"to":{"krate":1,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":507055,"byte_end":507064,"line_start":197,"line_end":197,"column_start":6,"column_end":15},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2531},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":531318,"byte_end":531327,"line_start":808,"line_end":808,"column_start":19,"column_end":28},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2531},"to":{"krate":0,"index":2006}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":540878,"byte_end":540887,"line_start":1066,"line_end":1066,"column_start":27,"column_end":36},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2531},"to":{"krate":1,"index":3218}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":541068,"byte_end":541077,"line_start":1075,"line_end":1075,"column_start":33,"column_end":42},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2531},"to":{"krate":1,"index":3249}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":543436,"byte_end":543445,"line_start":1127,"line_end":1127,"column_start":27,"column_end":36},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2531},"to":{"krate":1,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":543626,"byte_end":543635,"line_start":1136,"line_end":1136,"column_start":33,"column_end":42},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2531},"to":{"krate":1,"index":3253}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":546008,"byte_end":546017,"line_start":1188,"line_end":1188,"column_start":25,"column_end":34},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2531},"to":{"krate":1,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":547401,"byte_end":547410,"line_start":1225,"line_end":1225,"column_start":21,"column_end":30},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2531},"to":{"krate":1,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":549259,"byte_end":549268,"line_start":1275,"line_end":1275,"column_start":23,"column_end":32},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2531},"to":{"krate":1,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":550038,"byte_end":550047,"line_start":1300,"line_end":1300,"column_start":23,"column_end":32},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2531},"to":{"krate":1,"index":12556}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/naive/time/mod.rs","byte_start":550934,"byte_end":550943,"line_start":1332,"line_end":1332,"column_start":18,"column_end":27},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2531},"to":{"krate":1,"index":3128}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":576162,"byte_end":576173,"line_start":31,"line_end":31,"column_start":6,"column_end":17},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2551},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":578726,"byte_end":578737,"line_start":105,"line_end":105,"column_start":19,"column_end":30},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2551},"to":{"krate":0,"index":1814}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":579325,"byte_end":579336,"line_start":127,"line_end":127,"column_start":17,"column_end":28},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2551},"to":{"krate":0,"index":1812}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":579417,"byte_end":579428,"line_start":133,"line_end":133,"column_start":21,"column_end":32},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2551},"to":{"krate":1,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":579926,"byte_end":579937,"line_start":147,"line_end":147,"column_start":23,"column_end":34},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2551},"to":{"krate":1,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":580705,"byte_end":580714,"line_start":168,"line_end":168,"column_start":27,"column_end":36},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2531},"to":{"krate":1,"index":3218}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":580902,"byte_end":580911,"line_start":177,"line_end":177,"column_start":27,"column_end":36},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2531},"to":{"krate":1,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":581100,"byte_end":581113,"line_start":186,"line_end":186,"column_start":27,"column_end":40},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2458},"to":{"krate":1,"index":3218}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":581309,"byte_end":581322,"line_start":195,"line_end":195,"column_start":27,"column_end":40},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2458},"to":{"krate":1,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":581533,"byte_end":581541,"line_start":204,"line_end":204,"column_start":41,"column_end":49},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2089},"to":{"krate":1,"index":3218}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/fixed.rs","byte_start":581753,"byte_end":581761,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2089},"to":{"krate":1,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/utc.rs","byte_start":585083,"byte_end":585086,"line_start":69,"line_end":69,"column_start":19,"column_end":22},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2566},"to":{"krate":0,"index":1814}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/utc.rs","byte_start":585606,"byte_end":585609,"line_start":91,"line_end":91,"column_start":17,"column_end":20},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2566},"to":{"krate":0,"index":1812}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/utc.rs","byte_start":585705,"byte_end":585708,"line_start":97,"line_end":97,"column_start":21,"column_end":24},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2566},"to":{"krate":1,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/utc.rs","byte_start":585824,"byte_end":585827,"line_start":103,"line_end":103,"column_start":23,"column_end":26},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2566},"to":{"krate":1,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":556238,"byte_end":556249,"line_start":52,"line_end":52,"column_start":9,"column_end":20},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":557430,"byte_end":557441,"line_start":87,"line_end":87,"column_start":20,"column_end":31},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":560651,"byte_end":560662,"line_start":180,"line_end":180,"column_start":21,"column_end":32},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":561124,"byte_end":561129,"line_start":194,"line_end":194,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":1,"index":3155},"to":{"krate":0,"index":1812}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":561132,"byte_end":561137,"line_start":194,"line_end":194,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":1,"index":2772},"to":{"krate":0,"index":1812}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":561145,"byte_end":561150,"line_start":194,"line_end":194,"column_start":40,"column_end":45},"kind":"SuperTrait","from":{"krate":1,"index":9902},"to":{"krate":0,"index":1812}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":561440,"byte_end":561445,"line_start":203,"line_end":203,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":1,"index":3155},"to":{"krate":0,"index":1814}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/offset/mod.rs","byte_start":561448,"byte_end":561453,"line_start":203,"line_end":203,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":2772},"to":{"krate":0,"index":1814}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":587752,"byte_end":587753,"line_start":47,"line_end":47,"column_start":25,"column_end":26},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1891},"to":{"krate":0,"index":1887}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":589450,"byte_end":589455,"line_start":101,"line_end":101,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":3155},"to":{"krate":0,"index":1895}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":591134,"byte_end":591142,"line_start":148,"line_end":148,"column_start":38,"column_end":46},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2089},"to":{"krate":0,"index":1895}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":591491,"byte_end":591504,"line_start":160,"line_end":160,"column_start":24,"column_end":37},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2458},"to":{"krate":0,"index":1895}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/round.rs","byte_start":595380,"byte_end":595393,"line_start":280,"line_end":280,"column_start":23,"column_end":36},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2611},"to":{"krate":1,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":608607,"byte_end":608614,"line_start":31,"line_end":31,"column_start":6,"column_end":13},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":612605,"byte_end":612612,"line_start":141,"line_end":141,"column_start":23,"column_end":30},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":2629},"to":{"krate":1,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":613260,"byte_end":613267,"line_start":158,"line_end":158,"column_start":36,"column_end":43},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2629},"to":{"krate":5,"index":333}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":614276,"byte_end":614293,"line_start":197,"line_end":197,"column_start":23,"column_end":40},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2665},"to":{"krate":1,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/weekday.rs","byte_start":614432,"byte_end":614449,"line_start":203,"line_end":203,"column_start":21,"column_end":38},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":2665},"to":{"krate":1,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":618992,"byte_end":618997,"line_start":60,"line_end":60,"column_start":6,"column_end":11},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2673},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":622227,"byte_end":622232,"line_start":155,"line_end":155,"column_start":36,"column_end":41},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2673},"to":{"krate":5,"index":333}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":623535,"byte_end":623541,"line_start":196,"line_end":196,"column_start":6,"column_end":12},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/month.rs","byte_start":623838,"byte_end":623853,"line_start":209,"line_end":209,"column_start":21,"column_end":36},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2744},"to":{"krate":1,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":628089,"byte_end":628094,"line_start":4,"line_end":4,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":1,"index":3155},"to":{"krate":0,"index":1987}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.20/src/traits.rs","byte_start":632325,"byte_end":632330,"line_start":122,"line_end":122,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":1,"index":3155},"to":{"krate":0,"index":2006}}]}