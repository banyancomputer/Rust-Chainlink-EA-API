{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20","program":"/Users/zevkent/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","hyper","--edition=2018","/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"client\"","--cfg","feature=\"h2\"","--cfg","feature=\"http1\"","--cfg","feature=\"http2\"","--cfg","feature=\"runtime\"","--cfg","feature=\"server\"","--cfg","feature=\"socket2\"","--cfg","feature=\"stream\"","--cfg","feature=\"tcp\"","-C","metadata=451d732a883a9c57","-C","extra-filename=-451d732a883a9c57","--out-dir","/Users/zevkent/Rust-Chainlink-EA-API/target/rls/debug/deps","-L","dependency=/Users/zevkent/Rust-Chainlink-EA-API/target/rls/debug/deps","--extern","bytes=/Users/zevkent/Rust-Chainlink-EA-API/target/rls/debug/deps/libbytes-f25cbc5ffbca85cc.rmeta","--extern","futures_channel=/Users/zevkent/Rust-Chainlink-EA-API/target/rls/debug/deps/libfutures_channel-ce2a23f0325a2e89.rmeta","--extern","futures_core=/Users/zevkent/Rust-Chainlink-EA-API/target/rls/debug/deps/libfutures_core-9a7d33ff301970bb.rmeta","--extern","futures_util=/Users/zevkent/Rust-Chainlink-EA-API/target/rls/debug/deps/libfutures_util-e7838e61493b36b0.rmeta","--extern","h2=/Users/zevkent/Rust-Chainlink-EA-API/target/rls/debug/deps/libh2-7670babb02cfcc00.rmeta","--extern","http=/Users/zevkent/Rust-Chainlink-EA-API/target/rls/debug/deps/libhttp-cf10f4443471624f.rmeta","--extern","http_body=/Users/zevkent/Rust-Chainlink-EA-API/target/rls/debug/deps/libhttp_body-71c1692aca7a6833.rmeta","--extern","httparse=/Users/zevkent/Rust-Chainlink-EA-API/target/rls/debug/deps/libhttparse-e6972286ffaae513.rmeta","--extern","httpdate=/Users/zevkent/Rust-Chainlink-EA-API/target/rls/debug/deps/libhttpdate-870300c691106334.rmeta","--extern","itoa=/Users/zevkent/Rust-Chainlink-EA-API/target/rls/debug/deps/libitoa-070b247f78745b26.rmeta","--extern","pin_project_lite=/Users/zevkent/Rust-Chainlink-EA-API/target/rls/debug/deps/libpin_project_lite-d7b95066d42fff1e.rmeta","--extern","socket2=/Users/zevkent/Rust-Chainlink-EA-API/target/rls/debug/deps/libsocket2-15899d3484cf95fe.rmeta","--extern","tokio=/Users/zevkent/Rust-Chainlink-EA-API/target/rls/debug/deps/libtokio-86fe7b5a1f08c715.rmeta","--extern","tower_service=/Users/zevkent/Rust-Chainlink-EA-API/target/rls/debug/deps/libtower_service-cb5cd2e742332a22.rmeta","--extern","tracing=/Users/zevkent/Rust-Chainlink-EA-API/target/rls/debug/deps/libtracing-4cab319409cef571.rmeta","--extern","want=/Users/zevkent/Rust-Chainlink-EA-API/target/rls/debug/deps/libwant-a8ce1fef5396812a.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/zevkent/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/zevkent/Rust-Chainlink-EA-API/target/rls/debug/deps/libhyper-451d732a883a9c57.rmeta"},"prelude":{"crate_id":{"name":"hyper","disambiguator":[7818221561233040319,0]},"crate_root":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src","external_crates":[{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[10021291131669744914,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[10014640881818692046,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15800718316297612287,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6961639640463363723,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15443605689848621,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[16699447446517724675,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7072391781806093942,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4396878825326251599,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[8751207805142453879,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1923978614408483767,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[14411112285710781992,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[2356975140922920692,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[17423446140748502282,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[9260941638389817344,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[7858856860374224051,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[4855109919914642709,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[15652019722635755907,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[5018606611167862631,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[532173890138877460,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/date.rs","num":20,"id":{"name":"http","disambiguator":[1938210251500287573,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/date.rs","num":21,"id":{"name":"fnv","disambiguator":[6453642814982683344,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/buf.rs","num":22,"id":{"name":"bytes","disambiguator":[802779488117871190,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/buf.rs","num":23,"id":{"name":"serde","disambiguator":[1378058748385437960,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/buf.rs","num":24,"id":{"name":"serde_derive","disambiguator":[15017880620404699729,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/role.rs","num":25,"id":{"name":"itoa","disambiguator":[3057377181314501276,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/date.rs","num":26,"id":{"name":"httpdate","disambiguator":[13878509026338079105,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/drain.rs","num":27,"id":{"name":"pin_project_lite","disambiguator":[8925760499851170215,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/drain.rs","num":28,"id":{"name":"tokio","disambiguator":[1923218927259415044,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/drain.rs","num":29,"id":{"name":"mio","disambiguator":[13382296448695066117,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/drain.rs","num":30,"id":{"name":"log","disambiguator":[9020856470844256443,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/drain.rs","num":31,"id":{"name":"cfg_if","disambiguator":[12876857907742392029,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/drain.rs","num":32,"id":{"name":"libc","disambiguator":[1689377702869551898,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/drain.rs","num":33,"id":{"name":"once_cell","disambiguator":[8089632655117662906,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/drain.rs","num":34,"id":{"name":"tokio_macros","disambiguator":[2250387432715928785,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/drain.rs","num":35,"id":{"name":"memchr","disambiguator":[14279469149932160109,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","num":36,"id":{"name":"socket2","disambiguator":[14984477812466989263,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/drain.rs","num":37,"id":{"name":"num_cpus","disambiguator":[2144116687933513333,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/drain.rs","num":38,"id":{"name":"signal_hook_registry","disambiguator":[1717386396514083598,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/watch.rs","num":39,"id":{"name":"futures_util","disambiguator":[17798224580175975456,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","num":40,"id":{"name":"futures_core","disambiguator":[6257181743990401412,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/watch.rs","num":41,"id":{"name":"pin_utils","disambiguator":[5461708765941530531,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/watch.rs","num":42,"id":{"name":"futures_macro","disambiguator":[5500316571999041569,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/watch.rs","num":43,"id":{"name":"futures_task","disambiguator":[9800669718203905945,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/watch.rs","num":44,"id":{"name":"futures_sink","disambiguator":[4413753567771070779,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","num":45,"id":{"name":"futures_channel","disambiguator":[2792198606020329305,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/watch.rs","num":46,"id":{"name":"slab","disambiguator":[14287171814691735568,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/watch.rs","num":47,"id":{"name":"futures_io","disambiguator":[2477659211262778565,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/mod.rs","num":48,"id":{"name":"http_body","disambiguator":[9091641947416663326,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/length.rs","num":49,"id":{"name":"tracing","disambiguator":[4091936003831529625,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/length.rs","num":50,"id":{"name":"tracing_core","disambiguator":[16411292622748928434,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/length.rs","num":51,"id":{"name":"tracing_attributes","disambiguator":[14096048519600921662,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/mod.rs","num":52,"id":{"name":"tower_service","disambiguator":[4444813453484075171,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/mod.rs","num":53,"id":{"name":"h2","disambiguator":[14238235718311287717,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/mod.rs","num":54,"id":{"name":"tokio_util","disambiguator":[2486088283217014256,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/mod.rs","num":55,"id":{"name":"indexmap","disambiguator":[7998346367264030383,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/mod.rs","num":56,"id":{"name":"hashbrown","disambiguator":[4417249466297249746,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/mod.rs","num":57,"id":{"name":"httparse","disambiguator":[3366071081293553974,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/dispatch.rs","num":58,"id":{"name":"want","disambiguator":[16137234953882346786,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/dispatch.rs","num":59,"id":{"name":"try_lock","disambiguator":[13369545749394281044,0]}}],"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":0,"byte_end":3126,"line_start":1,"line_end":109,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":20,"index":0},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":2318,"byte_end":2322,"line_start":60,"line_end":60,"column_start":9,"column_end":13},"alias_span":null,"name":"http","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":5},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":2406,"byte_end":2412,"line_start":65,"line_end":65,"column_start":23,"column_end":29},"alias_span":null,"name":"header","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":3009},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":2414,"byte_end":2420,"line_start":65,"line_end":65,"column_start":31,"column_end":37},"alias_span":null,"name":"Method","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":1361},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":2422,"byte_end":2429,"line_start":65,"line_end":65,"column_start":39,"column_end":46},"alias_span":null,"name":"Request","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":1494},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":2431,"byte_end":2439,"line_start":65,"line_end":65,"column_start":48,"column_end":56},"alias_span":null,"name":"Response","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":3102},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":2441,"byte_end":2451,"line_start":65,"line_end":65,"column_start":58,"column_end":68},"alias_span":null,"name":"StatusCode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":3227},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":2453,"byte_end":2456,"line_start":65,"line_end":65,"column_start":70,"column_end":73},"alias_span":null,"name":"Uri","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":3283},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":2458,"byte_end":2465,"line_start":65,"line_end":65,"column_start":75,"column_end":82},"alias_span":null,"name":"Version","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":2392},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":2508,"byte_end":2517,"line_start":68,"line_end":68,"column_start":22,"column_end":31},"alias_span":null,"name":"HeaderMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":547},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":2541,"byte_end":2545,"line_start":70,"line_end":70,"column_start":22,"column_end":26},"alias_span":null,"name":"Body","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":719},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":2570,"byte_end":2575,"line_start":71,"line_end":71,"column_start":24,"column_end":29},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":716},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":2577,"byte_end":2583,"line_start":71,"line_end":71,"column_start":31,"column_end":37},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":42},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/mod.rs","byte_start":35837,"byte_end":35840,"line_start":18,"line_end":18,"column_start":17,"column_end":20},"alias_span":null,"name":"Buf","value":"","parent":{"krate":0,"index":437}},{"kind":"Use","ref_id":{"krate":22,"index":532},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/mod.rs","byte_start":35842,"byte_end":35847,"line_start":18,"line_end":18,"column_start":22,"column_end":27},"alias_span":null,"name":"Bytes","value":"","parent":{"krate":0,"index":437}},{"kind":"Use","ref_id":{"krate":48,"index":470},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/mod.rs","byte_start":35869,"byte_end":35873,"line_start":19,"line_end":19,"column_start":20,"column_end":24},"alias_span":null,"name":"HttpBody","value":"","parent":{"krate":0,"index":437}},{"kind":"Use","ref_id":{"krate":48,"index":642},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/mod.rs","byte_start":35906,"byte_end":35914,"line_start":20,"line_end":20,"column_start":20,"column_end":28},"alias_span":null,"name":"SizeHint","value":"","parent":{"krate":0,"index":437}},{"kind":"Use","ref_id":{"krate":0,"index":477},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/mod.rs","byte_start":35942,"byte_end":35951,"line_start":22,"line_end":22,"column_start":26,"column_end":35},"alias_span":null,"name":"aggregate","value":"","parent":{"krate":0,"index":437}},{"kind":"Use","ref_id":{"krate":0,"index":547},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/mod.rs","byte_start":35974,"byte_end":35978,"line_start":23,"line_end":23,"column_start":22,"column_end":26},"alias_span":null,"name":"Body","value":"","parent":{"krate":0,"index":437}},{"kind":"Use","ref_id":{"krate":0,"index":576},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/mod.rs","byte_start":35980,"byte_end":35986,"line_start":23,"line_end":23,"column_start":28,"column_end":34},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":437}},{"kind":"Use","ref_id":{"krate":0,"index":691},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/mod.rs","byte_start":36057,"byte_end":36065,"line_start":25,"line_end":25,"column_start":25,"column_end":33},"alias_span":null,"name":"to_bytes","value":"","parent":{"krate":0,"index":437}},{"kind":"Use","ref_id":{"krate":0,"index":1616},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext.rs","byte_start":90246,"byte_end":90258,"line_start":17,"line_end":17,"column_start":27,"column_end":39},"alias_span":null,"name":"ReasonPhrase","value":"","parent":{"krate":0,"index":811}},{"kind":"Use","ref_id":{"krate":52,"index":13},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/mod.rs","byte_start":105082,"byte_end":105089,"line_start":38,"line_end":38,"column_start":24,"column_end":31},"alias_span":null,"name":"Service","value":"","parent":{"krate":0,"index":894}},{"kind":"Use","ref_id":{"krate":0,"index":1033},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/mod.rs","byte_start":105633,"byte_end":105648,"line_start":54,"line_end":54,"column_start":21,"column_end":36},"alias_span":null,"name":"make_service_fn","value":"","parent":{"krate":0,"index":894}},{"kind":"Use","ref_id":{"krate":0,"index":1116},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/mod.rs","byte_start":105670,"byte_end":105680,"line_start":55,"line_end":55,"column_start":21,"column_end":31},"alias_span":null,"name":"service_fn","value":"","parent":{"krate":0,"index":894}},{"kind":"Use","ref_id":{"krate":0,"index":4466},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18287165,"byte_end":18287178,"line_start":52,"line_end":52,"column_start":24,"column_end":37},"alias_span":null,"name":"HttpConnector","value":"","parent":{"krate":0,"index":3953}},{"kind":"Use","ref_id":{"krate":0,"index":4466},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18290008,"byte_end":18290021,"line_start":89,"line_end":89,"column_start":26,"column_end":39},"alias_span":null,"name":"HttpConnector","value":"","parent":{"krate":0,"index":3957}},{"kind":"Use","ref_id":{"krate":0,"index":4473},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18290023,"byte_end":18290031,"line_start":89,"line_end":89,"column_start":41,"column_end":49},"alias_span":null,"name":"HttpInfo","value":"","parent":{"krate":0,"index":3957}},{"kind":"Use","ref_id":{"krate":0,"index":4028},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18290161,"byte_end":18290168,"line_start":98,"line_end":98,"column_start":27,"column_end":34},"alias_span":null,"name":"Connect","value":"","parent":{"krate":0,"index":3957}},{"kind":"Use","ref_id":{"krate":0,"index":5528},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18287342,"byte_end":18287349,"line_start":61,"line_end":61,"column_start":28,"column_end":35},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":3953}},{"kind":"Use","ref_id":{"krate":0,"index":4680},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18287351,"byte_end":18287357,"line_start":61,"line_end":61,"column_start":37,"column_end":43},"alias_span":null,"name":"Client","value":"","parent":{"krate":0,"index":3953}},{"kind":"Use","ref_id":{"krate":0,"index":4687},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18287359,"byte_end":18287373,"line_start":61,"line_end":61,"column_start":45,"column_end":59},"alias_span":null,"name":"ResponseFuture","value":"","parent":{"krate":0,"index":3953}},{"kind":"Use","ref_id":{"krate":0,"index":4680},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":2994,"byte_end":3000,"line_start":100,"line_end":100,"column_start":28,"column_end":34},"alias_span":null,"name":"Client","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6630},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18489499,"byte_end":18489509,"line_start":72,"line_end":72,"column_start":28,"column_end":38},"alias_span":null,"name":"Connecting","value":"","parent":{"krate":0,"index":5684}},{"kind":"Use","ref_id":{"krate":0,"index":5869},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18489915,"byte_end":18489927,"line_start":85,"line_end":85,"column_start":22,"column_end":34},"alias_span":null,"name":"AddrIncoming","value":"","parent":{"krate":0,"index":5684}},{"kind":"Use","ref_id":{"krate":0,"index":6074},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18489929,"byte_end":18489939,"line_start":85,"line_end":85,"column_start":36,"column_end":46},"alias_span":null,"name":"AddrStream","value":"","parent":{"krate":0,"index":5684}},{"kind":"Use","ref_id":{"krate":0,"index":6074},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18523882,"byte_end":18523892,"line_start":13,"line_end":13,"column_start":28,"column_end":38},"alias_span":null,"name":"AddrStream","value":"","parent":{"krate":0,"index":5817}},{"kind":"Use","ref_id":{"krate":0,"index":6863},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18484007,"byte_end":18484013,"line_start":156,"line_end":156,"column_start":23,"column_end":29},"alias_span":null,"name":"Server","value":"","parent":{"krate":0,"index":5631}},{"kind":"Use","ref_id":{"krate":0,"index":6484},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18484135,"byte_end":18484142,"line_start":162,"line_end":162,"column_start":27,"column_end":34},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":5631}},{"kind":"Use","ref_id":{"krate":0,"index":6863},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":3117,"byte_end":3123,"line_start":108,"line_end":108,"column_start":28,"column_end":34},"alias_span":null,"name":"Server","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":0,"byte_end":3126,"line_start":1,"line_end":109,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":437},{"krate":0,"index":709},{"krate":0,"index":811},{"krate":0,"index":890},{"krate":0,"index":894},{"krate":0,"index":1169},{"krate":0,"index":1808},{"krate":0,"index":1844},{"krate":0,"index":3953},{"krate":0,"index":4054},{"krate":0,"index":5631},{"krate":0,"index":5949}],"decl_id":null,"docs":" # hyper","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":23,"byte_end":62,"line_start":2,"line_end":2,"column_start":1,"column_end":40}},{"value":"/ # hyper","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":329,"byte_end":340,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":341,"byte_end":344,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ hyper is a **fast** and **correct** HTTP implementation written in and for Rust.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":345,"byte_end":429,"line_start":11,"line_end":11,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":430,"byte_end":433,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ## Features","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":434,"byte_end":449,"line_start":13,"line_end":13,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":450,"byte_end":453,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ - HTTP/1 and HTTP/2","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":454,"byte_end":477,"line_start":15,"line_end":15,"column_start":1,"column_end":24}},{"value":"/ - Asynchronous design","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":478,"byte_end":503,"line_start":16,"line_end":16,"column_start":1,"column_end":26}},{"value":"/ - Leading in performance","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":504,"byte_end":532,"line_start":17,"line_end":17,"column_start":1,"column_end":29}},{"value":"/ - Tested and **correct**","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":533,"byte_end":561,"line_start":18,"line_end":18,"column_start":1,"column_end":29}},{"value":"/ - Extensive production use","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":562,"byte_end":592,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/ - [Client](client/index.html) and [Server](server/index.html) APIs","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":593,"byte_end":663,"line_start":20,"line_end":20,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":664,"byte_end":667,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ If just starting out, **check out the [Guides](https://hyper.rs/guides)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":668,"byte_end":743,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ first.**","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":744,"byte_end":756,"line_start":23,"line_end":23,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":757,"byte_end":760,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ## \"Low-level\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":761,"byte_end":779,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":780,"byte_end":783,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ hyper is a lower-level HTTP library, meant to be a building block","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":784,"byte_end":853,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/ for libraries and applications.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":854,"byte_end":889,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":890,"byte_end":893,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ If looking for just a convenient HTTP client, consider the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":894,"byte_end":956,"line_start":30,"line_end":30,"column_start":1,"column_end":63}},{"value":"/ [reqwest](https://crates.io/crates/reqwest) crate.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":957,"byte_end":1011,"line_start":31,"line_end":31,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":1012,"byte_end":1015,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Optional Features","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":1016,"byte_end":1039,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":1040,"byte_end":1043,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ hyper uses a set of [feature flags] to reduce the amount of compiled code.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":1044,"byte_end":1122,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ It is possible to just enable certain features over others. By default,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":1123,"byte_end":1198,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/ hyper does not enable any features but allows one to enable a subset for","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":1199,"byte_end":1275,"line_start":37,"line_end":37,"column_start":1,"column_end":77}},{"value":"/ their use case. Below is a list of the available feature flags. You may","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":1276,"byte_end":1351,"line_start":38,"line_end":38,"column_start":1,"column_end":76}},{"value":"/ also notice above each function, struct and trait there is listed one or","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":1352,"byte_end":1428,"line_start":39,"line_end":39,"column_start":1,"column_end":77}},{"value":"/ more feature flags that are required for that item to be used.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":1429,"byte_end":1495,"line_start":40,"line_end":40,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":1496,"byte_end":1499,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ If you are new to hyper it is possible to enable the `full` feature flag","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":1500,"byte_end":1576,"line_start":42,"line_end":42,"column_start":1,"column_end":77}},{"value":"/ which will enable all public APIs. Beware though that this will pull in","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":1577,"byte_end":1652,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/ many extra dependencies that you may not need.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":1653,"byte_end":1703,"line_start":44,"line_end":44,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":1704,"byte_end":1707,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ The following optional features are available:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":1708,"byte_end":1758,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":1759,"byte_end":1762,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ - `http1`: Enables HTTP/1 support.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":1763,"byte_end":1801,"line_start":48,"line_end":48,"column_start":1,"column_end":39}},{"value":"/ - `http2`: Enables HTTP/2 support.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":1802,"byte_end":1840,"line_start":49,"line_end":49,"column_start":1,"column_end":39}},{"value":"/ - `client`: Enables the HTTP `client`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":1841,"byte_end":1883,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ - `server`: Enables the HTTP `server`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":1884,"byte_end":1926,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/ - `runtime`: Enables convenient integration with `tokio`, providing","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":1927,"byte_end":1998,"line_start":52,"line_end":52,"column_start":1,"column_end":72}},{"value":"/   connectors and acceptors for TCP, and a default executor.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":1999,"byte_end":2062,"line_start":53,"line_end":53,"column_start":1,"column_end":64}},{"value":"/ - `tcp`: Enables convenient implementations over TCP (using tokio).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":2063,"byte_end":2134,"line_start":54,"line_end":54,"column_start":1,"column_end":72}},{"value":"/ - `stream`: Provides `futures::Stream` capabilities.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":2135,"byte_end":2191,"line_start":55,"line_end":55,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":2192,"byte_end":2195,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":2196,"byte_end":2293,"line_start":57,"line_end":57,"column_start":1,"column_end":98}}]},{"kind":"Struct","id":{"krate":0,"index":1297},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/drain.rs","byte_start":12653,"byte_end":12661,"line_start":26,"line_end":26,"column_start":16,"column_end":24},"name":"Watching","qualname":"::common::drain::Watching","value":"Watching {  }","parent":null,"children":[{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1302},{"krate":0,"index":1303}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14632413,"byte_end":14632422,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/drain.rs","byte_start":13966,"byte_end":13970,"line_start":83,"line_end":83,"column_start":8,"column_end":12},"name":"poll","qualname":"<Watching<F, FN> as futures_util::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut task::Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13330},"children":[],"decl_id":{"krate":2,"index":13332},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":218},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/exec.rs","byte_start":18724,"byte_end":18738,"line_start":19,"line_end":19,"column_start":11,"column_end":25},"name":"ConnStreamExec","qualname":"::common::exec::ConnStreamExec","value":"ConnStreamExec<F, B>: Clone","parent":null,"children":[{"krate":0,"index":221}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"server\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/exec.rs","byte_start":18687,"byte_end":18713,"line_start":18,"line_end":18,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/exec.rs","byte_start":18771,"byte_end":18787,"line_start":20,"line_end":20,"column_start":8,"column_end":24},"name":"execute_h2stream","qualname":"::common::exec::ConnStreamExec::execute_h2stream","value":"fn execute_h2stream(&mut Self, H2Stream<F, B>)","parent":{"krate":0,"index":218},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":222},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/exec.rs","byte_start":18909,"byte_end":18919,"line_start":24,"line_end":24,"column_start":11,"column_end":21},"name":"NewSvcExec","qualname":"::common::exec::NewSvcExec","value":"NewSvcExec<I, N, S, E, W>: Clone","parent":null,"children":[{"krate":0,"index":228}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(all(feature = \"server\", any(feature = \"http1\", feature = \"http2\")))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/exec.rs","byte_start":18824,"byte_end":18898,"line_start":23,"line_end":23,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/exec.rs","byte_start":18988,"byte_end":19003,"line_start":25,"line_end":25,"column_start":8,"column_end":23},"name":"execute_new_svc","qualname":"::common::exec::NewSvcExec::execute_new_svc","value":"fn execute_new_svc(&mut Self, NewSvcTask<I, N, S, E, W>)","parent":{"krate":0,"index":222},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1351},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/exec.rs","byte_start":19254,"byte_end":19261,"line_start":34,"line_end":34,"column_start":5,"column_end":12},"name":"Default","qualname":"::common::exec::Exec::Default","value":"Exec::Default","parent":{"krate":0,"index":1350},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1353},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/exec.rs","byte_start":19267,"byte_end":19275,"line_start":35,"line_end":35,"column_start":5,"column_end":13},"name":"Executor","qualname":"::common::exec::Exec::Executor","value":"Exec::Executor(Arc<dyn Executor<BoxSendFuture> + Send + Sync>)","parent":{"krate":0,"index":1350},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1355},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/exec.rs","byte_start":19276,"byte_end":19322,"line_start":35,"line_end":35,"column_start":14,"column_end":60},"name":"0","qualname":"::common::exec::Exec::Executor::0","value":"std::sync::Arc<(dyn rt::Executor<std::pin::Pin<std::boxed::Box<(dyn futures_util::Future<Output = ()> + std::marker::Send + 'static)>>> + std::marker::Send + std::marker::Sync + 'static)>","parent":{"krate":0,"index":1353},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1350},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/exec.rs","byte_start":19243,"byte_end":19247,"line_start":33,"line_end":33,"column_start":10,"column_end":14},"name":"Exec","qualname":"::common::exec::Exec","value":"enum Exec {\n    Default,\n    Executor(Arc<dyn Executor<BoxSendFuture> + Send + Sync>),\n}","parent":null,"children":[{"krate":0,"index":1351},{"krate":0,"index":1353}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/exec.rs","byte_start":20002,"byte_end":20005,"line_start":65,"line_end":65,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Exec as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9902},"children":[],"decl_id":{"krate":2,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/exec.rs","byte_start":20265,"byte_end":20281,"line_start":76,"line_end":76,"column_start":8,"column_end":24},"name":"execute_h2stream","qualname":"<Exec as common::exec::ConnStreamExec>::execute_h2stream","value":"fn execute_h2stream(&mut Self, H2Stream<F, B>)","parent":{"krate":0,"index":218},"children":[],"decl_id":{"krate":0,"index":221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/exec.rs","byte_start":20616,"byte_end":20631,"line_start":88,"line_end":88,"column_start":8,"column_end":23},"name":"execute_new_svc","qualname":"<Exec as common::exec::NewSvcExec>::execute_new_svc","value":"fn execute_new_svc(&mut Self, NewSvcTask<I, N, S, E, W>)","parent":{"krate":0,"index":222},"children":[],"decl_id":{"krate":0,"index":228},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/exec.rs","byte_start":20923,"byte_end":20939,"line_start":102,"line_end":102,"column_start":8,"column_end":24},"name":"execute_h2stream","qualname":"<E as common::exec::ConnStreamExec>::execute_h2stream","value":"fn execute_h2stream(&mut Self, H2Stream<F, B>)","parent":{"krate":0,"index":218},"children":[],"decl_id":{"krate":0,"index":221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/exec.rs","byte_start":21306,"byte_end":21321,"line_start":115,"line_end":115,"column_start":8,"column_end":23},"name":"execute_new_svc","qualname":"<E as common::exec::NewSvcExec>::execute_new_svc","value":"fn execute_new_svc(&mut Self, NewSvcTask<I, N, S, E, W>)","parent":{"krate":0,"index":222},"children":[],"decl_id":{"krate":0,"index":228},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":437},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"body","qualname":"::body","value":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/mod.rs","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":442},{"krate":0,"index":445},{"krate":0,"index":448},{"krate":0,"index":451},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":458},{"krate":0,"index":461},{"krate":0,"index":464},{"krate":0,"index":467},{"krate":0,"index":482},{"krate":0,"index":653},{"krate":0,"index":677},{"krate":0,"index":695},{"krate":0,"index":704}],"decl_id":null,"docs":" Streaming bodies for Requests and Responses","sig":null,"attributes":[{"value":"/ Streaming bodies for Requests and Responses","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/mod.rs","byte_start":34913,"byte_end":34960,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/mod.rs","byte_start":34961,"byte_end":34964,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ For both [Clients](crate::client) and [Servers](crate::server), requests and","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/mod.rs","byte_start":34965,"byte_end":35045,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ responses use streaming bodies, instead of complete buffering. This","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/mod.rs","byte_start":35046,"byte_end":35117,"line_start":4,"line_end":4,"column_start":1,"column_end":72}},{"value":"/ allows applications to not use memory they don't need, and allows exerting","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/mod.rs","byte_start":35118,"byte_end":35196,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ back-pressure on connections by only reading when asked.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/mod.rs","byte_start":35197,"byte_end":35257,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/mod.rs","byte_start":35258,"byte_end":35261,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ There are two pieces to this in hyper:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/mod.rs","byte_start":35262,"byte_end":35304,"line_start":8,"line_end":8,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/mod.rs","byte_start":35305,"byte_end":35308,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ - **The [`HttpBody`](HttpBody) trait** describes all possible bodies.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/mod.rs","byte_start":35309,"byte_end":35382,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/   hyper allows any body type that implements `HttpBody`, allowing","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/mod.rs","byte_start":35383,"byte_end":35452,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/   applications to have fine-grained control over their streaming.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/mod.rs","byte_start":35453,"byte_end":35522,"line_start":12,"line_end":12,"column_start":1,"column_end":70}},{"value":"/ - **The [`Body`](Body) concrete type**, which is an implementation of","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/mod.rs","byte_start":35523,"byte_end":35596,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/   `HttpBody`, and returned by hyper as a \"receive stream\" (so, for server","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/mod.rs","byte_start":35597,"byte_end":35674,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/   requests and client responses). It is also a decent default implementation","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/mod.rs","byte_start":35675,"byte_end":35755,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"/   if you don't have very custom needs of your send streams.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/mod.rs","byte_start":35756,"byte_end":35819,"line_start":16,"line_end":16,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":477},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/aggregate.rs","byte_start":37819,"byte_end":37828,"line_start":16,"line_end":16,"column_start":14,"column_end":23},"name":"aggregate","qualname":"::body::aggregate::aggregate","value":"async fn aggregate<T>(T) -> /*impl Trait*/ where T: HttpBody","parent":null,"children":[],"decl_id":null,"docs":" Aggregate the data buffers from a body asynchronously.","sig":null,"attributes":[{"value":"/ Aggregate the data buffers from a body asynchronously.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/aggregate.rs","byte_start":37296,"byte_end":37354,"line_start":6,"line_end":6,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/aggregate.rs","byte_start":37355,"byte_end":37358,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The returned `impl Buf` groups the `Buf`s from the `HttpBody` without","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/aggregate.rs","byte_start":37359,"byte_end":37432,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/ copying them. This is ideal if you don't require a contiguous buffer.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/aggregate.rs","byte_start":37433,"byte_end":37506,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/aggregate.rs","byte_start":37507,"byte_end":37510,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/aggregate.rs","byte_start":37511,"byte_end":37521,"line_start":11,"line_end":11,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/aggregate.rs","byte_start":37522,"byte_end":37525,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Care needs to be taken if the remote is untrusted. The function doesn't implement any length","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/aggregate.rs","byte_start":37526,"byte_end":37622,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ checks and an malicious peer might make it consume arbitrary amounts of memory. Checking the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/aggregate.rs","byte_start":37623,"byte_end":37719,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ `Content-Length` is a possibility, but it is not strictly mandated to be present.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/aggregate.rs","byte_start":37720,"byte_end":37805,"line_start":15,"line_end":15,"column_start":1,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":547},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":39307,"byte_end":39311,"line_start":36,"line_end":36,"column_start":12,"column_end":16},"name":"Body","qualname":"::body::body::Body","value":"Body {  }","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":549}],"decl_id":null,"docs":" A stream of `Bytes`, used when receiving bodies.","sig":null,"attributes":[{"value":"/ A stream of `Bytes`, used when receiving bodies.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":38967,"byte_end":39019,"line_start":28,"line_end":28,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":39020,"byte_end":39023,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ A good default [`HttpBody`](crate::body::HttpBody) to use in many","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":39024,"byte_end":39093,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"/ applications.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":39094,"byte_end":39111,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":39112,"byte_end":39115,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Note: To read the full body, use [`body::to_bytes`](crate::body::to_bytes)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":39116,"byte_end":39194,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ or [`body::aggregate`](crate::body::aggregate).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":39195,"byte_end":39246,"line_start":34,"line_end":34,"column_start":1,"column_end":52}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":39247,"byte_end":39295,"line_start":35,"line_end":35,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":576},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":42000,"byte_end":42006,"line_start":109,"line_end":109,"column_start":12,"column_end":18},"name":"Sender","qualname":"::body::body::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579}],"decl_id":null,"docs":" A sender half created through [`Body::channel()`].","sig":null,"attributes":[{"value":"/ A sender half created through [`Body::channel()`].","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":41292,"byte_end":41346,"line_start":95,"line_end":95,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":41347,"byte_end":41350,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ Useful when wanting to stream chunks from another thread.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":41351,"byte_end":41412,"line_start":97,"line_end":97,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":41413,"byte_end":41416,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ## Body Closing","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":41417,"byte_end":41436,"line_start":99,"line_end":99,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":41437,"byte_end":41440,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ Note that the request body will always be closed normally when the sender is dropped (meaning","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":41441,"byte_end":41538,"line_start":101,"line_end":101,"column_start":1,"column_end":98}},{"value":"/ that the empty terminating chunk will be sent to the remote). If you desire to close the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":41539,"byte_end":41631,"line_start":102,"line_end":102,"column_start":1,"column_end":93}},{"value":"/ connection with an incomplete response (e.g. in the case of an error during asynchronous","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":41632,"byte_end":41724,"line_start":103,"line_end":103,"column_start":1,"column_end":93}},{"value":"/ processing), call the [`Sender::abort()`] method to abort the body in an abnormal fashion.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":41725,"byte_end":41819,"line_start":104,"line_end":104,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":41820,"byte_end":41823,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ [`Body::channel()`]: struct.Body.html#method.channel","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":41824,"byte_end":41880,"line_start":106,"line_end":106,"column_start":1,"column_end":57}},{"value":"/ [`Sender::abort()`]: struct.Sender.html#method.abort","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":41881,"byte_end":41937,"line_start":107,"line_end":107,"column_start":1,"column_end":57}},{"value":"must_use = \"Sender does nothing unless sent on\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":41938,"byte_end":41988,"line_start":108,"line_end":108,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":42430,"byte_end":42435,"line_start":130,"line_end":130,"column_start":12,"column_end":17},"name":"empty","qualname":"<Body>::empty","value":"fn empty() -> Body","parent":null,"children":[],"decl_id":null,"docs":" Create an empty `Body` stream.","sig":null,"attributes":[{"value":"/ Create an empty `Body` stream.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":42185,"byte_end":42219,"line_start":119,"line_end":119,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":42224,"byte_end":42227,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":42232,"byte_end":42245,"line_start":121,"line_end":121,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":42250,"byte_end":42253,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":42258,"byte_end":42265,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use hyper::{Body, Request};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":42270,"byte_end":42301,"line_start":124,"line_end":124,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":42306,"byte_end":42309,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ // create a `GET /` request","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":42314,"byte_end":42345,"line_start":126,"line_end":126,"column_start":5,"column_end":36}},{"value":"/ let get = Request::new(Body::empty());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":42350,"byte_end":42392,"line_start":127,"line_end":127,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":42397,"byte_end":42404,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":42409,"byte_end":42418,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":42653,"byte_end":42660,"line_start":138,"line_end":138,"column_start":12,"column_end":19},"name":"channel","qualname":"<Body>::channel","value":"fn channel() -> (Sender, Body)","parent":null,"children":[],"decl_id":null,"docs":" Create a `Body` stream with an associated sender half.","sig":null,"attributes":[{"value":"/ Create a `Body` stream with an associated sender half.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":42495,"byte_end":42553,"line_start":134,"line_end":134,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":42558,"byte_end":42561,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Useful when wanting to stream chunks from another thread.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":42566,"byte_end":42627,"line_start":136,"line_end":136,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":42632,"byte_end":42641,"line_start":137,"line_end":137,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":44143,"byte_end":44154,"line_start":190,"line_end":190,"column_start":12,"column_end":23},"name":"wrap_stream","qualname":"<Body>::wrap_stream","value":"fn wrap_stream<S, O, E>(S) -> Body where S: Stream<Item = Result<O, E>> +\nSend + 'static, O: Into<Bytes> + 'static,\nE: Into<Box<dyn StdError + Send + Sync>> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Wrap a futures `Stream` in a box inside `Body`.","sig":null,"attributes":[{"value":"/ Wrap a futures `Stream` in a box inside `Body`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":43524,"byte_end":43575,"line_start":167,"line_end":167,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":43580,"byte_end":43583,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":43588,"byte_end":43601,"line_start":169,"line_end":169,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":43606,"byte_end":43609,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":43614,"byte_end":43621,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"/ # use hyper::Body;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":43626,"byte_end":43648,"line_start":172,"line_end":172,"column_start":5,"column_end":27}},{"value":"/ let chunks: Vec<Result<_, std::io::Error>> = vec![","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":43653,"byte_end":43707,"line_start":173,"line_end":173,"column_start":5,"column_end":59}},{"value":"/     Ok(\"hello\"),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":43712,"byte_end":43732,"line_start":174,"line_end":174,"column_start":5,"column_end":25}},{"value":"/     Ok(\" \"),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":43737,"byte_end":43753,"line_start":175,"line_end":175,"column_start":5,"column_end":21}},{"value":"/     Ok(\"world\"),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":43758,"byte_end":43778,"line_start":176,"line_end":176,"column_start":5,"column_end":25}},{"value":"/ ];","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":43783,"byte_end":43789,"line_start":177,"line_end":177,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":43794,"byte_end":43797,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ let stream = futures_util::stream::iter(chunks);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":43802,"byte_end":43854,"line_start":179,"line_end":179,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":43859,"byte_end":43862,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ let body = Body::wrap_stream(stream);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":43867,"byte_end":43908,"line_start":181,"line_end":181,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":43913,"byte_end":43920,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":43925,"byte_end":43928,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ # Optional","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":43933,"byte_end":43947,"line_start":184,"line_end":184,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":43952,"byte_end":43955,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ This function requires enabling the `stream` feature in your","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":43960,"byte_end":44024,"line_start":186,"line_end":186,"column_start":5,"column_end":69}},{"value":"/ `Cargo.toml`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":44029,"byte_end":44046,"line_start":187,"line_end":187,"column_start":5,"column_end":22}},{"value":"cfg(feature = \"stream\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":44051,"byte_end":44077,"line_start":188,"line_end":188,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":49991,"byte_end":49998,"line_start":354,"line_end":354,"column_start":8,"column_end":15},"name":"default","qualname":"<Body as std::default::Default>::default","value":"fn default() -> Body","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":" Returns `Body::empty()`.\n","sig":null,"attributes":[{"value":"/ Returns `Body::empty()`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":49941,"byte_end":49969,"line_start":352,"line_end":352,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":49974,"byte_end":49983,"line_start":353,"line_end":353,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":50129,"byte_end":50138,"line_start":363,"line_end":363,"column_start":8,"column_end":17},"name":"poll_data","qualname":"<Body as http_body::Body>::poll_data","value":"fn poll_data(Pin<&mut Self>, &mut task::Context)\n-> Poll<Option<Result<Self::Data, Self::Error>>>","parent":{"krate":48,"index":470},"children":[],"decl_id":{"krate":48,"index":473},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":50307,"byte_end":50320,"line_start":370,"line_end":370,"column_start":8,"column_end":21},"name":"poll_trailers","qualname":"<Body as http_body::Body>::poll_trailers","value":"fn poll_trailers(Pin<&mut Self>, &mut task::Context)\n-> Poll<Result<Option<HeaderMap>, Self::Error>>","parent":{"krate":48,"index":470},"children":[],"decl_id":{"krate":48,"index":474},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":51459,"byte_end":51472,"line_start":400,"line_end":400,"column_start":8,"column_end":21},"name":"is_end_stream","qualname":"<Body as http_body::Body>::is_end_stream","value":"fn is_end_stream(&Self) -> bool","parent":{"krate":48,"index":470},"children":[],"decl_id":{"krate":48,"index":475},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":51982,"byte_end":51991,"line_start":413,"line_end":413,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Body as http_body::Body>::size_hint","value":"fn size_hint(&Self) -> SizeHint","parent":{"krate":48,"index":470},"children":[],"decl_id":{"krate":48,"index":476},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":52964,"byte_end":52967,"line_start":441,"line_end":441,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Body as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9902},"children":[],"decl_id":{"krate":2,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":53670,"byte_end":53679,"line_start":468,"line_end":468,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Body as futures_util::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut task::Context) -> Poll<Option<Self::Item>>","parent":{"krate":40,"index":96},"children":[],"decl_id":{"krate":40,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":54057,"byte_end":54061,"line_start":480,"line_end":480,"column_start":8,"column_end":12},"name":"from","qualname":"<Body as std::convert::From>::from","value":"fn from(Box<dyn Stream<Item =\n    Result<Bytes, Box<dyn StdError + Send + Sync>>> + Send>) -> Body","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":54040,"byte_end":54049,"line_start":479,"line_end":479,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":54298,"byte_end":54302,"line_start":489,"line_end":489,"column_start":8,"column_end":12},"name":"from","qualname":"<Body as std::convert::From>::from","value":"fn from(Bytes) -> Body","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":54281,"byte_end":54290,"line_start":488,"line_end":488,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":54517,"byte_end":54521,"line_start":500,"line_end":500,"column_start":8,"column_end":12},"name":"from","qualname":"<Body as std::convert::From>::from","value":"fn from(Vec<u8>) -> Body","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":54500,"byte_end":54509,"line_start":499,"line_end":499,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":54649,"byte_end":54653,"line_start":507,"line_end":507,"column_start":8,"column_end":12},"name":"from","qualname":"<Body as std::convert::From>::from","value":"fn from(&'static [u8]) -> Body","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":54632,"byte_end":54641,"line_start":506,"line_end":506,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":54796,"byte_end":54800,"line_start":514,"line_end":514,"column_start":8,"column_end":12},"name":"from","qualname":"<Body as std::convert::From>::from","value":"fn from(Cow) -> Body","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":54779,"byte_end":54788,"line_start":513,"line_end":513,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":55016,"byte_end":55020,"line_start":524,"line_end":524,"column_start":8,"column_end":12},"name":"from","qualname":"<Body as std::convert::From>::from","value":"fn from(String) -> Body","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":54999,"byte_end":55008,"line_start":523,"line_end":523,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":55155,"byte_end":55159,"line_start":531,"line_end":531,"column_start":8,"column_end":12},"name":"from","qualname":"<Body as std::convert::From>::from","value":"fn from(&'static str) -> Body","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":55138,"byte_end":55147,"line_start":530,"line_end":530,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":55311,"byte_end":55315,"line_start":538,"line_end":538,"column_start":8,"column_end":12},"name":"from","qualname":"<Body as std::convert::From>::from","value":"fn from(Cow) -> Body","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":55294,"byte_end":55303,"line_start":537,"line_end":537,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":55563,"byte_end":55573,"line_start":548,"line_end":548,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<Sender>::poll_ready","value":"fn poll_ready(&mut Self, &mut task::Context) -> Poll<crate::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Check to see if this `Sender` can send more data.\n","sig":null,"attributes":[{"value":"/ Check to see if this `Sender` can send more data.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":55498,"byte_end":55551,"line_start":547,"line_end":547,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":56437,"byte_end":56446,"line_start":570,"line_end":570,"column_start":18,"column_end":27},"name":"send_data","qualname":"<Sender>::send_data","value":"async fn send_data<'_>(&'_ mut Self, Bytes) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Send data on data channel when it is ready.\n","sig":null,"attributes":[{"value":"/ Send data on data channel when it is ready.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":56372,"byte_end":56419,"line_start":569,"line_end":569,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":56698,"byte_end":56711,"line_start":578,"line_end":578,"column_start":18,"column_end":31},"name":"send_trailers","qualname":"<Sender>::send_trailers","value":"async fn send_trailers<'_>(&'_ mut Self, HeaderMap) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Send trailers on trailers channel.\n","sig":null,"attributes":[{"value":"/ Send trailers on trailers channel.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":56642,"byte_end":56680,"line_start":577,"line_end":577,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":57386,"byte_end":57399,"line_start":598,"line_end":598,"column_start":12,"column_end":25},"name":"try_send_data","qualname":"<Sender>::try_send_data","value":"fn try_send_data(&mut Self, Bytes) -> Result<(), Bytes>","parent":null,"children":[],"decl_id":null,"docs":" Try to send data on this channel.","sig":null,"attributes":[{"value":"/ Try to send data on this channel.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":56992,"byte_end":57029,"line_start":586,"line_end":586,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":57034,"byte_end":57037,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":57042,"byte_end":57054,"line_start":588,"line_end":588,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":57059,"byte_end":57062,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(Bytes)` if the channel could not (currently) accept","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":57067,"byte_end":57135,"line_start":590,"line_end":590,"column_start":5,"column_end":73}},{"value":"/ another `Bytes`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":57140,"byte_end":57160,"line_start":591,"line_end":591,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":57165,"byte_end":57168,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":57173,"byte_end":57183,"line_start":593,"line_end":593,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":57188,"byte_end":57191,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ This is mostly useful for when trying to send from some other thread","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":57196,"byte_end":57268,"line_start":595,"line_end":595,"column_start":5,"column_end":77}},{"value":"/ that doesn't have an async context. If in an async context, prefer","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":57273,"byte_end":57343,"line_start":596,"line_end":596,"column_start":5,"column_end":75}},{"value":"/ `send_data()` instead.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":57348,"byte_end":57374,"line_start":597,"line_end":597,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":57636,"byte_end":57641,"line_start":605,"line_end":605,"column_start":12,"column_end":17},"name":"abort","qualname":"<Sender>::abort","value":"fn abort(Self)","parent":null,"children":[],"decl_id":null,"docs":" Aborts the body in an abnormal fashion.\n","sig":null,"attributes":[{"value":"/ Aborts the body in an abnormal fashion.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":57581,"byte_end":57624,"line_start":604,"line_end":604,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":58035,"byte_end":58038,"line_start":620,"line_end":620,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Sender as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9902},"children":[],"decl_id":{"krate":2,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":691},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":68035,"byte_end":68043,"line_start":47,"line_end":47,"column_start":14,"column_end":22},"name":"to_bytes","qualname":"::body::to_bytes::to_bytes","value":"async fn to_bytes<T>(T) -> /*impl Trait*/ where T: HttpBody","parent":null,"children":[],"decl_id":null,"docs":" Concatenate the buffers from a body into a single `Bytes` asynchronously.","sig":null,"attributes":[{"value":"/ Concatenate the buffers from a body into a single `Bytes` asynchronously.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":66418,"byte_end":66495,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":66496,"byte_end":66499,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This may require copying the data into a single buffer. If you don't need","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":66500,"byte_end":66577,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"/ a contiguous buffer, prefer the [`aggregate`](crate::body::aggregate())","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":66578,"byte_end":66653,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ function.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":66654,"byte_end":66667,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":66668,"byte_end":66671,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":66672,"byte_end":66682,"line_start":11,"line_end":11,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":66683,"byte_end":66686,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Care needs to be taken if the remote is untrusted. The function doesn't implement any length","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":66687,"byte_end":66783,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ checks and an malicious peer might make it consume arbitrary amounts of memory. Checking the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":66784,"byte_end":66880,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ `Content-Length` is a possibility, but it is not strictly mandated to be present.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":66881,"byte_end":66966,"line_start":15,"line_end":15,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":66967,"byte_end":66970,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":66971,"byte_end":66984,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":66985,"byte_end":66988,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":66989,"byte_end":66996,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(all(feature = \"client\", feature = \"tcp\", any(feature = \"http1\", feature = \"http2\")))]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":66997,"byte_end":67094,"line_start":20,"line_end":20,"column_start":1,"column_end":98}},{"value":"/ # async fn doc() -> hyper::Result<()> {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":67095,"byte_end":67138,"line_start":21,"line_end":21,"column_start":1,"column_end":44}},{"value":"/ use hyper::{body::HttpBody};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":67139,"byte_end":67171,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":67172,"byte_end":67175,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # let request = hyper::Request::builder()","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":67176,"byte_end":67221,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/ #        .method(hyper::Method::POST)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":67222,"byte_end":67263,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/ #        .uri(\"http://httpbin.org/post\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":67264,"byte_end":67308,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"/ #        .header(\"content-type\", \"application/json\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":67309,"byte_end":67365,"line_start":27,"line_end":27,"column_start":1,"column_end":57}},{"value":"/ #        .body(hyper::Body::from(r#\"{\"library\":\"hyper\"}\"#)).unwrap();","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":67366,"byte_end":67439,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/ # let client = hyper::Client::new();","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":67440,"byte_end":67480,"line_start":29,"line_end":29,"column_start":1,"column_end":41}},{"value":"/ let response = client.request(request).await?;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":67481,"byte_end":67531,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":67532,"byte_end":67535,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ const MAX_ALLOWED_RESPONSE_SIZE: u64 = 1024;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":67536,"byte_end":67584,"line_start":32,"line_end":32,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":67585,"byte_end":67588,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let response_content_length = match response.body().size_hint().upper() {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":67589,"byte_end":67666,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/     Some(v) => v,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":67667,"byte_end":67688,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/     None => MAX_ALLOWED_RESPONSE_SIZE + 1 // Just to protect ourselves from a malicious response","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":67689,"byte_end":67789,"line_start":36,"line_end":36,"column_start":1,"column_end":101}},{"value":"/ };","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":67790,"byte_end":67796,"line_start":37,"line_end":37,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":67797,"byte_end":67800,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ if response_content_length < MAX_ALLOWED_RESPONSE_SIZE {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":67801,"byte_end":67861,"line_start":39,"line_end":39,"column_start":1,"column_end":61}},{"value":"/     let body_bytes = hyper::body::to_bytes(response.into_body()).await?;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":67862,"byte_end":67938,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"/     println!(\"body: {:?}\", body_bytes);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":67939,"byte_end":67982,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":67983,"byte_end":67988,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":67989,"byte_end":67992,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Ok(())","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":67993,"byte_end":68005,"line_start":44,"line_end":44,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":68006,"byte_end":68013,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/to_bytes.rs","byte_start":68014,"byte_end":68021,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":716},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":68984,"byte_end":68990,"line_start":6,"line_end":6,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Result type often returned from methods that can have hyper `Error`s.\n","sig":null,"attributes":[{"value":"/ Result type often returned from methods that can have hyper `Error`s.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":68901,"byte_end":68974,"line_start":5,"line_end":5,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":719},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":69146,"byte_end":69151,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":720}],"decl_id":null,"docs":" Represents errors that can occur handling HTTP streams.\n","sig":null,"attributes":[{"value":"/ Represents errors that can occur handling HTTP streams.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":69075,"byte_end":69134,"line_start":10,"line_end":10,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":73387,"byte_end":73395,"line_start":151,"line_end":151,"column_start":12,"column_end":20},"name":"is_parse","qualname":"<Error>::is_parse","value":"fn is_parse(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this was an HTTP parse error.\n","sig":null,"attributes":[{"value":"/ Returns true if this was an HTTP parse error.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":73326,"byte_end":73375,"line_start":150,"line_end":150,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":73574,"byte_end":73592,"line_start":156,"line_end":156,"column_start":12,"column_end":30},"name":"is_parse_too_large","qualname":"<Error>::is_parse_too_large","value":"fn is_parse_too_large(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this was an HTTP parse error caused by a message that was too large.\n","sig":null,"attributes":[{"value":"/ Returns true if this was an HTTP parse error caused by a message that was too large.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":73474,"byte_end":73562,"line_start":155,"line_end":155,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":73880,"byte_end":73895,"line_start":165,"line_end":165,"column_start":12,"column_end":27},"name":"is_parse_status","qualname":"<Error>::is_parse_status","value":"fn is_parse_status(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this was an HTTP parse error caused by an invalid response status code or\n reason phrase.\n","sig":null,"attributes":[{"value":"/ Returns true if this was an HTTP parse error caused by an invalid response status code or","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":73752,"byte_end":73845,"line_start":163,"line_end":163,"column_start":5,"column_end":98}},{"value":"/ reason phrase.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":73850,"byte_end":73868,"line_start":164,"line_end":164,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":74053,"byte_end":74060,"line_start":170,"line_end":170,"column_start":12,"column_end":19},"name":"is_user","qualname":"<Error>::is_user","value":"fn is_user(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this error was caused by user code.\n","sig":null,"attributes":[{"value":"/ Returns true if this error was caused by user code.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":73986,"byte_end":74041,"line_start":169,"line_end":169,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":74215,"byte_end":74226,"line_start":175,"line_end":175,"column_start":12,"column_end":23},"name":"is_canceled","qualname":"<Error>::is_canceled","value":"fn is_canceled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this was about a `Request` that was canceled.\n","sig":null,"attributes":[{"value":"/ Returns true if this was about a `Request` that was canceled.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":74138,"byte_end":74203,"line_start":174,"line_end":174,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":74366,"byte_end":74375,"line_start":180,"line_end":180,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Error>::is_closed","value":"fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if a sender's channel is closed.\n","sig":null,"attributes":[{"value":"/ Returns true if a sender's channel is closed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":74305,"byte_end":74354,"line_start":179,"line_end":179,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":74524,"byte_end":74534,"line_start":185,"line_end":185,"column_start":12,"column_end":22},"name":"is_connect","qualname":"<Error>::is_connect","value":"fn is_connect(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this was an error from `Connect`.\n","sig":null,"attributes":[{"value":"/ Returns true if this was an error from `Connect`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":74459,"byte_end":74512,"line_start":184,"line_end":184,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":74698,"byte_end":74719,"line_start":190,"line_end":190,"column_start":12,"column_end":33},"name":"is_incomplete_message","qualname":"<Error>::is_incomplete_message","value":"fn is_incomplete_message(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the connection closed before a message could complete.\n","sig":null,"attributes":[{"value":"/ Returns true if the connection closed before a message could complete.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":74612,"byte_end":74686,"line_start":189,"line_end":189,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":74866,"byte_end":74887,"line_start":195,"line_end":195,"column_start":12,"column_end":33},"name":"is_body_write_aborted","qualname":"<Error>::is_body_write_aborted","value":"fn is_body_write_aborted(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the body write was aborted.\n","sig":null,"attributes":[{"value":"/ Returns true if the body write was aborted.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":74807,"byte_end":74854,"line_start":194,"line_end":194,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":75052,"byte_end":75062,"line_start":200,"line_end":200,"column_start":12,"column_end":22},"name":"is_timeout","qualname":"<Error>::is_timeout","value":"fn is_timeout(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by a timeout.\n","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by a timeout.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":74986,"byte_end":75040,"line_start":199,"line_end":199,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":75196,"byte_end":75206,"line_start":205,"line_end":205,"column_start":12,"column_end":22},"name":"into_cause","qualname":"<Error>::into_cause","value":"fn into_cause(Self) -> Option<Box<dyn StdError + Send + Sync>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the error, returning its cause.\n","sig":null,"attributes":[{"value":"/ Consumes the error, returning its cause.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":75140,"byte_end":75184,"line_start":204,"line_end":204,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":780},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":81208,"byte_end":81215,"line_start":400,"line_end":400,"column_start":12,"column_end":19},"name":"message","qualname":"<Error>::message","value":"fn message(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" The error's standalone message, without the message from the source.\n","sig":null,"attributes":[{"value":"/ The error's standalone message, without the message from the source.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":81124,"byte_end":81196,"line_start":399,"line_end":399,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":86155,"byte_end":86158,"line_start":493,"line_end":493,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Error as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9902},"children":[],"decl_id":{"krate":2,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":86452,"byte_end":86455,"line_start":504,"line_end":504,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Error as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":86732,"byte_end":86738,"line_start":514,"line_end":514,"column_start":8,"column_end":14},"name":"source","qualname":"<Error as std::error::Error>::source","value":"fn source(&Self) -> Option<&dyn StdError + 'static>","parent":{"krate":1,"index":2555},"children":[],"decl_id":{"krate":1,"index":2556},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":86969,"byte_end":86973,"line_start":524,"line_end":524,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(Parse) -> Error","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":811},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ext","qualname":"::ext","value":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext.rs","parent":null,"children":[{"krate":0,"index":812},{"krate":0,"index":815},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":822},{"krate":0,"index":825},{"krate":0,"index":828},{"krate":0,"index":831},{"krate":0,"index":865},{"krate":0,"index":1641},{"krate":0,"index":1643},{"krate":0,"index":1645},{"krate":0,"index":1646},{"krate":0,"index":1648},{"krate":0,"index":1649},{"krate":0,"index":868},{"krate":0,"index":873},{"krate":0,"index":876},{"krate":0,"index":878},{"krate":0,"index":1652},{"krate":0,"index":1655},{"krate":0,"index":1657},{"krate":0,"index":880}],"decl_id":null,"docs":" HTTP extensions.\n","sig":null,"attributes":[{"value":"/ HTTP extensions.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext.rs","byte_start":89794,"byte_end":89814,"line_start":1,"line_end":1,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":1616},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":97960,"byte_end":97972,"line_start":36,"line_end":36,"column_start":12,"column_end":24},"name":"ReasonPhrase","qualname":"::ext::h1_reason_phrase::ReasonPhrase","value":"","parent":null,"children":[],"decl_id":null,"docs":" A reason phrase in an HTTP/1 response.","sig":null,"attributes":[{"value":"/ A reason phrase in an HTTP/1 response.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":96583,"byte_end":96625,"line_start":5,"line_end":5,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":96626,"byte_end":96629,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Clients","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":96630,"byte_end":96643,"line_start":7,"line_end":7,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":96644,"byte_end":96647,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ For clients, a `ReasonPhrase` will be present in the extensions of the `http::Response` returned","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":96648,"byte_end":96748,"line_start":9,"line_end":9,"column_start":1,"column_end":101}},{"value":"/ for a request if the reason phrase is different from the canonical reason phrase for the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":96749,"byte_end":96841,"line_start":10,"line_end":10,"column_start":1,"column_end":93}},{"value":"/ response's status code. For example, if a server returns `HTTP/1.1 200 Awesome`, the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":96842,"byte_end":96930,"line_start":11,"line_end":11,"column_start":1,"column_end":89}},{"value":"/ `ReasonPhrase` will be present and contain `Awesome`, but if a server returns `HTTP/1.1 200 OK`,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":96931,"byte_end":97031,"line_start":12,"line_end":12,"column_start":1,"column_end":101}},{"value":"/ the response will not contain a `ReasonPhrase`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":97032,"byte_end":97083,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":97084,"byte_end":97087,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":97088,"byte_end":97101,"line_start":15,"line_end":15,"column_start":1,"column_end":14}},{"value":"/ # #[cfg(all(feature = \"tcp\", feature = \"client\", feature = \"http1\"))]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":97102,"byte_end":97175,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"/ # async fn fake_fetch() -> hyper::Result<()> {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":97176,"byte_end":97226,"line_start":17,"line_end":17,"column_start":1,"column_end":51}},{"value":"/ use hyper::{Client, Uri};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":97227,"byte_end":97256,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/ use hyper::ext::ReasonPhrase;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":97257,"byte_end":97290,"line_start":19,"line_end":19,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":97291,"byte_end":97294,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ let res = Client::new().get(Uri::from_static(\"http://example.com/non_canonical_reason\")).await?;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":97295,"byte_end":97395,"line_start":21,"line_end":21,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":97396,"byte_end":97399,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ // Print out the non-canonical reason phrase, if it has one...","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":97400,"byte_end":97466,"line_start":23,"line_end":23,"column_start":1,"column_end":67}},{"value":"/ if let Some(reason) = res.extensions().get::<ReasonPhrase>() {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":97467,"byte_end":97533,"line_start":24,"line_end":24,"column_start":1,"column_end":67}},{"value":"/     println!(\"non-canonical reason: {}\", std::str::from_utf8(reason.as_bytes()).unwrap());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":97534,"byte_end":97628,"line_start":25,"line_end":25,"column_start":1,"column_end":95}},{"value":"/ }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":97629,"byte_end":97634,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ # Ok(())","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":97635,"byte_end":97647,"line_start":27,"line_end":27,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":97648,"byte_end":97655,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":97656,"byte_end":97663,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":97664,"byte_end":97667,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Servers","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":97668,"byte_end":97681,"line_start":31,"line_end":31,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":97682,"byte_end":97685,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ When a `ReasonPhrase` is present in the extensions of the `http::Response` written by a server,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":97686,"byte_end":97785,"line_start":33,"line_end":33,"column_start":1,"column_end":100}},{"value":"/ its contents will be written in place of the canonical reason phrase when responding via HTTP/1.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":97786,"byte_end":97886,"line_start":34,"line_end":34,"column_start":1,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":98054,"byte_end":98062,"line_start":40,"line_end":40,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<ReasonPhrase>::as_bytes","value":"fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Gets the reason phrase as bytes.\n","sig":null,"attributes":[{"value":"/ Gets the reason phrase as bytes.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":98006,"byte_end":98042,"line_start":39,"line_end":39,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":98172,"byte_end":98183,"line_start":45,"line_end":45,"column_start":12,"column_end":23},"name":"from_static","qualname":"<ReasonPhrase>::from_static","value":"fn from_static(&'static [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts a static byte slice to a reason phrase.\n","sig":null,"attributes":[{"value":"/ Converts a static byte slice to a reason phrase.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":98108,"byte_end":98160,"line_start":44,"line_end":44,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":98677,"byte_end":98697,"line_start":57,"line_end":57,"column_start":19,"column_end":39},"name":"from_bytes_unchecked","qualname":"<ReasonPhrase>::from_bytes_unchecked","value":"unsafe fn from_bytes_unchecked(Bytes) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Bytes` directly into a `ReasonPhrase` without validating.","sig":null,"attributes":[{"value":"/ Converts a `Bytes` directly into a `ReasonPhrase` without validating.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":98451,"byte_end":98524,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":98529,"byte_end":98532,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Use with care; invalid bytes in a reason phrase can cause serious security problems if","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":98537,"byte_end":98627,"line_start":55,"line_end":55,"column_start":5,"column_end":95}},{"value":"/ emitted in a response.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":98632,"byte_end":98658,"line_start":56,"line_end":56,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":98838,"byte_end":98846,"line_start":65,"line_end":65,"column_start":8,"column_end":16},"name":"try_from","qualname":"<ReasonPhrase as std::convert::TryFrom>::try_from","value":"fn try_from(&[u8]) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":99179,"byte_end":99187,"line_start":77,"line_end":77,"column_start":8,"column_end":16},"name":"try_from","qualname":"<ReasonPhrase as std::convert::TryFrom>::try_from","value":"fn try_from(Vec<u8>) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":99511,"byte_end":99519,"line_start":89,"line_end":89,"column_start":8,"column_end":16},"name":"try_from","qualname":"<ReasonPhrase as std::convert::TryFrom>::try_from","value":"fn try_from(String) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":99851,"byte_end":99859,"line_start":101,"line_end":101,"column_start":8,"column_end":16},"name":"try_from","qualname":"<ReasonPhrase as std::convert::TryFrom>::try_from","value":"fn try_from(Bytes) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":100125,"byte_end":100129,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"into","qualname":"<ReasonPhrase as std::convert::Into>::into","value":"fn into(Self) -> Bytes","parent":{"krate":2,"index":3053},"children":[],"decl_id":{"krate":2,"index":3055},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":857},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":100214,"byte_end":100220,"line_start":117,"line_end":117,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<ReasonPhrase as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &[u8]","parent":{"krate":2,"index":3047},"children":[],"decl_id":{"krate":2,"index":3049},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1637},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":100528,"byte_end":100547,"line_start":128,"line_end":128,"column_start":12,"column_end":31},"name":"InvalidReasonPhrase","qualname":"::ext::h1_reason_phrase::InvalidReasonPhrase","value":"InvalidReasonPhrase {  }","parent":null,"children":[{"krate":0,"index":1638}],"decl_id":null,"docs":" Error indicating an invalid byte when constructing a `ReasonPhrase`.","sig":null,"attributes":[{"value":"/ Error indicating an invalid byte when constructing a `ReasonPhrase`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":100264,"byte_end":100336,"line_start":122,"line_end":122,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":100337,"byte_end":100340,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ See [the spec][spec] for details on allowed bytes.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":100341,"byte_end":100395,"line_start":124,"line_end":124,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":100396,"byte_end":100399,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ [spec]: https://httpwg.org/http-core/draft-ietf-httpbis-messaging-latest.html#rfc.section.4.p.7","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":100400,"byte_end":100499,"line_start":126,"line_end":126,"column_start":1,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":859},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":100627,"byte_end":100630,"line_start":133,"line_end":133,"column_start":8,"column_end":11},"name":"fmt","qualname":"<InvalidReasonPhrase as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut std::fmt::Formatter) -> std::fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1641},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext.rs","byte_start":90513,"byte_end":90521,"line_start":25,"line_end":25,"column_start":12,"column_end":20},"name":"Protocol","qualname":"::ext::Protocol","value":"Protocol {  }","parent":null,"children":[{"krate":0,"index":1642}],"decl_id":null,"docs":" Represents the `:protocol` pseudo-header used by\n the [Extended CONNECT Protocol].","sig":null,"attributes":[{"value":"cfg(feature = \"http2\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext.rs","byte_start":90261,"byte_end":90286,"line_start":19,"line_end":19,"column_start":1,"column_end":26}},{"value":"/ Represents the `:protocol` pseudo-header used by","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext.rs","byte_start":90287,"byte_end":90339,"line_start":20,"line_end":20,"column_start":1,"column_end":53}},{"value":"/ the [Extended CONNECT Protocol].","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext.rs","byte_start":90340,"byte_end":90376,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext.rs","byte_start":90377,"byte_end":90380,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [Extended CONNECT Protocol]: https://datatracker.ietf.org/doc/html/rfc8441#section-4","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext.rs","byte_start":90381,"byte_end":90469,"line_start":23,"line_end":23,"column_start":1,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext.rs","byte_start":90669,"byte_end":90680,"line_start":32,"line_end":32,"column_start":18,"column_end":29},"name":"from_static","qualname":"<Protocol>::from_static","value":"const fn from_static(&'static str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts a static string to a protocol name.\n","sig":null,"attributes":[{"value":"/ Converts a static string to a protocol name.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext.rs","byte_start":90603,"byte_end":90651,"line_start":31,"line_end":31,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext.rs","byte_start":90865,"byte_end":90871,"line_start":39,"line_end":39,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Protocol>::as_str","value":"fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns a str representation of the header.\n","sig":null,"attributes":[{"value":"/ Returns a str representation of the header.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext.rs","byte_start":90806,"byte_end":90853,"line_start":38,"line_end":38,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext.rs","byte_start":91176,"byte_end":91180,"line_start":54,"line_end":54,"column_start":8,"column_end":12},"name":"from","qualname":"<Protocol as std::convert::From>::from","value":"fn from(&'a str) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext.rs","byte_start":91357,"byte_end":91363,"line_start":63,"line_end":63,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Protocol as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &[u8]","parent":{"krate":2,"index":3047},"children":[],"decl_id":{"krate":2,"index":3049},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext.rs","byte_start":91483,"byte_end":91486,"line_start":70,"line_end":70,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Protocol as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9902},"children":[],"decl_id":{"krate":2,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":890},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/rt.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rt","qualname":"::rt","value":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/rt.rs","parent":null,"children":[{"krate":0,"index":891}],"decl_id":null,"docs":" Runtime components","sig":null,"attributes":[{"value":"/ Runtime components","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/rt.rs","byte_start":103095,"byte_end":103117,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/rt.rs","byte_start":103118,"byte_end":103121,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ By default, hyper includes the [tokio](https://tokio.rs) runtime.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/rt.rs","byte_start":103122,"byte_end":103191,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/rt.rs","byte_start":103192,"byte_end":103195,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ If the `runtime` feature is disabled, the types in this module can be used","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/rt.rs","byte_start":103196,"byte_end":103274,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ to plug in other runtimes.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/rt.rs","byte_start":103275,"byte_end":103305,"line_start":6,"line_end":6,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":891},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/rt.rs","byte_start":103345,"byte_end":103353,"line_start":9,"line_end":9,"column_start":11,"column_end":19},"name":"Executor","qualname":"::rt::Executor","value":"Executor<Fut>","parent":null,"children":[{"krate":0,"index":893}],"decl_id":null,"docs":" An executor of futures.\n","sig":null,"attributes":[{"value":"/ An executor of futures.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/rt.rs","byte_start":103307,"byte_end":103334,"line_start":8,"line_end":8,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/rt.rs","byte_start":103422,"byte_end":103429,"line_start":11,"line_end":11,"column_start":8,"column_end":15},"name":"execute","qualname":"::rt::Executor::execute","value":"fn execute(&Self, Fut)","parent":{"krate":0,"index":891},"children":[],"decl_id":null,"docs":" Place the future into the executor to be run.\n","sig":null,"attributes":[{"value":"/ Place the future into the executor to be run.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/rt.rs","byte_start":103365,"byte_end":103414,"line_start":10,"line_end":10,"column_start":5,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":894},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"service","qualname":"::service","value":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/mod.rs","parent":null,"children":[{"krate":0,"index":895},{"krate":0,"index":898},{"krate":0,"index":945},{"krate":0,"index":1058},{"krate":0,"index":1086},{"krate":0,"index":1147},{"krate":0,"index":1150},{"krate":0,"index":1153},{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1160},{"krate":0,"index":1163},{"krate":0,"index":1166}],"decl_id":null,"docs":" Asynchronous Services","sig":null,"attributes":[{"value":"/ Asynchronous Services","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/mod.rs","byte_start":103451,"byte_end":103476,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/mod.rs","byte_start":103477,"byte_end":103480,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A [`Service`](Service) is a trait representing an asynchronous","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/mod.rs","byte_start":103481,"byte_end":103547,"line_start":3,"line_end":3,"column_start":1,"column_end":67}},{"value":"/ function of a request to a response. It's similar to","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/mod.rs","byte_start":103548,"byte_end":103604,"line_start":4,"line_end":4,"column_start":1,"column_end":57}},{"value":"/ `async fn(Request) -> Result<Response, Error>`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/mod.rs","byte_start":103605,"byte_end":103656,"line_start":5,"line_end":5,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/mod.rs","byte_start":103657,"byte_end":103660,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The argument and return value isn't strictly required to be for HTTP.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/mod.rs","byte_start":103661,"byte_end":103734,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"/ Therefore, hyper uses several \"trait aliases\" to reduce clutter around","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/mod.rs","byte_start":103735,"byte_end":103809,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ bounds. These are:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/mod.rs","byte_start":103810,"byte_end":103832,"line_start":9,"line_end":9,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/mod.rs","byte_start":103833,"byte_end":103836,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ - `HttpService`: This is blanketly implemented for all types that","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/mod.rs","byte_start":103837,"byte_end":103906,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/   implement `Service<http::Request<B1>, Response = http::Response<B2>>`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/mod.rs","byte_start":103907,"byte_end":103983,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ - `MakeService`: When a `Service` returns a new `Service` as its \"response\",","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/mod.rs","byte_start":103984,"byte_end":104064,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/   we consider it a `MakeService`. Again, blanketly implemented in those cases.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/mod.rs","byte_start":104065,"byte_end":104147,"line_start":14,"line_end":14,"column_start":1,"column_end":83}},{"value":"/ - `MakeConnection`: A `Service` that returns a \"connection\", a type that","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/mod.rs","byte_start":104148,"byte_end":104224,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/   implements `AsyncRead` and `AsyncWrite`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/mod.rs","byte_start":104225,"byte_end":104271,"line_start":16,"line_end":16,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/mod.rs","byte_start":104272,"byte_end":104275,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # HttpService","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/mod.rs","byte_start":104276,"byte_end":104293,"line_start":18,"line_end":18,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/mod.rs","byte_start":104294,"byte_end":104297,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ In hyper, especially in the server setting, a `Service` is usually bound","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/mod.rs","byte_start":104298,"byte_end":104374,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/ to a single connection. It defines how to respond to **all** requests that","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/mod.rs","byte_start":104375,"byte_end":104453,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ connection will receive.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/mod.rs","byte_start":104454,"byte_end":104482,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/mod.rs","byte_start":104483,"byte_end":104486,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The helper [`service_fn`](service_fn) should be sufficient for most cases, but","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/mod.rs","byte_start":104487,"byte_end":104569,"line_start":24,"line_end":24,"column_start":1,"column_end":83}},{"value":"/ if you need to implement `Service` for a type manually, you can follow the example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/mod.rs","byte_start":104570,"byte_end":104656,"line_start":25,"line_end":25,"column_start":1,"column_end":87}},{"value":"/ in `service_struct_impl.rs`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/mod.rs","byte_start":104657,"byte_end":104689,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/mod.rs","byte_start":104690,"byte_end":104693,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # MakeService","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/mod.rs","byte_start":104694,"byte_end":104711,"line_start":28,"line_end":28,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/mod.rs","byte_start":104712,"byte_end":104715,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Since a `Service` is bound to a single connection, a [`Server`](crate::Server)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/mod.rs","byte_start":104716,"byte_end":104798,"line_start":30,"line_end":30,"column_start":1,"column_end":83}},{"value":"/ needs a way to make them as it accepts connections. This is what a","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/mod.rs","byte_start":104799,"byte_end":104869,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ `MakeService` does.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/mod.rs","byte_start":104870,"byte_end":104893,"line_start":32,"line_end":32,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/mod.rs","byte_start":104894,"byte_end":104897,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Resources that need to be shared by all `Service`s can be put into a","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/mod.rs","byte_start":104898,"byte_end":104970,"line_start":34,"line_end":34,"column_start":1,"column_end":73}},{"value":"/ `MakeService`, and then passed to individual `Service`s when `call`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/mod.rs","byte_start":104971,"byte_end":105042,"line_start":35,"line_end":35,"column_start":1,"column_end":72}},{"value":"/ is called.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/mod.rs","byte_start":105043,"byte_end":105057,"line_start":36,"line_end":36,"column_start":1,"column_end":15}}]},{"kind":"Trait","id":{"krate":0,"index":922},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/http.rs","byte_start":105889,"byte_end":105900,"line_start":8,"line_end":8,"column_start":11,"column_end":22},"name":"HttpService","qualname":"::service::http::HttpService","value":"HttpService<ReqBody>: sealed::Sealed<ReqBody>","parent":null,"children":[{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928}],"decl_id":null,"docs":" An asynchronous function from `Request` to `Response`.\n","sig":null,"attributes":[{"value":"/ An asynchronous function from `Request` to `Response`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/http.rs","byte_start":105820,"byte_end":105878,"line_start":7,"line_end":7,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":924},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/http.rs","byte_start":105999,"byte_end":106006,"line_start":10,"line_end":10,"column_start":10,"column_end":17},"name":"ResBody","qualname":"::service::http::HttpService::ResBody","value":"type ResBody: HttpBody;","parent":{"krate":0,"index":922},"children":[],"decl_id":null,"docs":" The `HttpBody` body of the `http::Response`.\n","sig":null,"attributes":[{"value":"/ The `HttpBody` body of the `http::Response`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/http.rs","byte_start":105941,"byte_end":105989,"line_start":9,"line_end":9,"column_start":5,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":925},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/http.rs","byte_start":106298,"byte_end":106303,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"name":"Error","qualname":"::service::http::HttpService::Error","value":"type Error: Into<Box<dyn StdError + Send + Sync>>;","parent":{"krate":0,"index":922},"children":[],"decl_id":null,"docs":" The error type that can occur within this `Service`.","sig":null,"attributes":[{"value":"/ The error type that can occur within this `Service`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/http.rs","byte_start":106023,"byte_end":106079,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/http.rs","byte_start":106084,"byte_end":106087,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ Note: Returning an `Error` to a hyper server will cause the connection","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/http.rs","byte_start":106092,"byte_end":106166,"line_start":14,"line_end":14,"column_start":5,"column_end":79}},{"value":"/ to be abruptly aborted. In most cases, it is better to return a `Response`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/http.rs","byte_start":106171,"byte_end":106249,"line_start":15,"line_end":15,"column_start":5,"column_end":83}},{"value":"/ with a 4xx or 5xx status code.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/http.rs","byte_start":106254,"byte_end":106288,"line_start":16,"line_end":16,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":926},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/http.rs","byte_start":106403,"byte_end":106409,"line_start":20,"line_end":20,"column_start":10,"column_end":16},"name":"Future","qualname":"::service::http::HttpService::Future","value":"type Future: Future<Output = Result<Response<Self::ResBody>, Self::Error>>;","parent":{"krate":0,"index":922},"children":[],"decl_id":null,"docs":" The `Future` returned by this `Service`.\n","sig":null,"attributes":[{"value":"/ The `Future` returned by this `Service`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/http.rs","byte_start":106349,"byte_end":106393,"line_start":19,"line_end":19,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/http.rs","byte_start":106501,"byte_end":106511,"line_start":23,"line_end":23,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"::service::http::HttpService::poll_ready","value":"fn poll_ready(&mut Self, &mut task::Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":0,"index":922},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/http.rs","byte_start":106612,"byte_end":106616,"line_start":26,"line_end":26,"column_start":8,"column_end":12},"name":"call","qualname":"::service::http::HttpService::call","value":"fn call(&mut Self, Request<ReqBody>) -> Self::Future","parent":{"krate":0,"index":922},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":936},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/http.rs","byte_start":106945,"byte_end":106955,"line_start":40,"line_end":40,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<T as service::http::HttpService>::poll_ready","value":"fn poll_ready(&mut Self, &mut task::Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":0,"index":922},"children":[],"decl_id":{"krate":0,"index":927},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":937},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/http.rs","byte_start":107097,"byte_end":107101,"line_start":44,"line_end":44,"column_start":8,"column_end":12},"name":"call","qualname":"<T as service::http::HttpService>::call","value":"fn call(&mut Self, Request<B1>) -> Self::Future","parent":{"krate":0,"index":922},"children":[],"decl_id":{"krate":0,"index":928},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":943},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/http.rs","byte_start":107372,"byte_end":107378,"line_start":57,"line_end":57,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::service::http::sealed::Sealed","value":"Sealed<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":979},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":107684,"byte_end":107698,"line_start":12,"line_end":12,"column_start":11,"column_end":25},"name":"MakeConnection","qualname":"::service::make::MakeConnection","value":"MakeConnection<Target>: self::sealed::Sealed<(Target,)>","parent":null,"children":[{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":981},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":107751,"byte_end":107761,"line_start":13,"line_end":13,"column_start":10,"column_end":20},"name":"Connection","qualname":"::service::make::MakeConnection::Connection","value":"type Connection: AsyncRead + AsyncWrite;","parent":{"krate":0,"index":979},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":982},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":107796,"byte_end":107801,"line_start":14,"line_end":14,"column_start":10,"column_end":15},"name":"Error","qualname":"::service::make::MakeConnection::Error","value":"type Error;","parent":{"krate":0,"index":979},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":983},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":107812,"byte_end":107818,"line_start":15,"line_end":15,"column_start":10,"column_end":16},"name":"Future","qualname":"::service::make::MakeConnection::Future","value":"type Future: Future<Output = Result<Self::Connection, Self::Error>>;","parent":{"krate":0,"index":979},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":984},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":107884,"byte_end":107894,"line_start":17,"line_end":17,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"::service::make::MakeConnection::poll_ready","value":"fn poll_ready(&mut Self, &mut task::Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":0,"index":979},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":985},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":107975,"byte_end":107990,"line_start":18,"line_end":18,"column_start":8,"column_end":23},"name":"make_connection","qualname":"::service::make::MakeConnection::make_connection","value":"fn make_connection(&mut Self, Target) -> Self::Future","parent":{"krate":0,"index":979},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":995},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":108338,"byte_end":108348,"line_start":32,"line_end":32,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<S as service::make::MakeConnection>::poll_ready","value":"fn poll_ready(&mut Self, &mut task::Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":0,"index":979},"children":[],"decl_id":{"krate":0,"index":984},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":108475,"byte_end":108490,"line_start":36,"line_end":36,"column_start":8,"column_end":23},"name":"make_connection","qualname":"<S as service::make::MakeConnection>::make_connection","value":"fn make_connection(&mut Self, Target) -> Self::Future","parent":{"krate":0,"index":979},"children":[],"decl_id":{"krate":0,"index":985},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":997},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":108698,"byte_end":108712,"line_start":43,"line_end":43,"column_start":11,"column_end":25},"name":"MakeServiceRef","qualname":"::service::make::MakeServiceRef","value":"MakeServiceRef<Target, ReqBody>: self::sealed::Sealed<(Target, ReqBody)>","parent":null,"children":[{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1007}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1000},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":108782,"byte_end":108789,"line_start":44,"line_end":44,"column_start":10,"column_end":17},"name":"ResBody","qualname":"::service::make::MakeServiceRef::ResBody","value":"type ResBody: HttpBody;","parent":{"krate":0,"index":997},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1001},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":108810,"byte_end":108815,"line_start":45,"line_end":45,"column_start":10,"column_end":15},"name":"Error","qualname":"::service::make::MakeServiceRef::Error","value":"type Error: Into<Box<dyn StdError + Send + Sync>>;","parent":{"krate":0,"index":997},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1002},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":108865,"byte_end":108872,"line_start":46,"line_end":46,"column_start":10,"column_end":17},"name":"Service","qualname":"::service::make::MakeServiceRef::Service","value":"type Service: HttpService<ReqBody, ResBody = Self::ResBody, Error = Self::Error>;","parent":{"krate":0,"index":997},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1003},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":108951,"byte_end":108960,"line_start":47,"line_end":47,"column_start":10,"column_end":19},"name":"MakeError","qualname":"::service::make::MakeServiceRef::MakeError","value":"type MakeError: Into<Box<dyn StdError + Send + Sync>>;","parent":{"krate":0,"index":997},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1004},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":109010,"byte_end":109016,"line_start":48,"line_end":48,"column_start":10,"column_end":16},"name":"Future","qualname":"::service::make::MakeServiceRef::Future","value":"type Future: Future<Output = Result<Self::Service, Self::MakeError>>;","parent":{"krate":0,"index":997},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1005},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":109524,"byte_end":109536,"line_start":59,"line_end":59,"column_start":10,"column_end":22},"name":"__DontNameMe","qualname":"::service::make::MakeServiceRef::__DontNameMe","value":"type __DontNameMe: self::sealed::CantImpl;","parent":{"krate":0,"index":997},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":109570,"byte_end":109584,"line_start":61,"line_end":61,"column_start":8,"column_end":22},"name":"poll_ready_ref","qualname":"::service::make::MakeServiceRef::poll_ready_ref","value":"fn poll_ready_ref(&mut Self, &mut task::Context)\n-> Poll<Result<(), Self::MakeError>>","parent":{"krate":0,"index":997},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1007},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":109670,"byte_end":109686,"line_start":63,"line_end":63,"column_start":8,"column_end":24},"name":"make_service_ref","qualname":"::service::make::MakeServiceRef::make_service_ref","value":"fn make_service_ref(&mut Self, &Target) -> Self::Future","parent":{"krate":0,"index":997},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":110272,"byte_end":110286,"line_start":84,"line_end":84,"column_start":8,"column_end":22},"name":"poll_ready_ref","qualname":"<T as service::make::MakeServiceRef>::poll_ready_ref","value":"fn poll_ready_ref(&mut Self, &mut task::Context)\n-> Poll<Result<(), Self::MakeError>>","parent":{"krate":0,"index":997},"children":[],"decl_id":{"krate":0,"index":1006},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1025},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":110407,"byte_end":110423,"line_start":88,"line_end":88,"column_start":8,"column_end":24},"name":"make_service_ref","qualname":"<T as service::make::MakeServiceRef>::make_service_ref","value":"fn make_service_ref(&mut Self, &Target) -> Self::Future","parent":{"krate":0,"index":997},"children":[],"decl_id":{"krate":0,"index":1007},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1033},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":111729,"byte_end":111744,"line_start":138,"line_end":138,"column_start":8,"column_end":23},"name":"make_service_fn","qualname":"::service::make::make_service_fn","value":"fn make_service_fn<F, Target, Ret>(F) -> MakeServiceFn<F> where\nF: FnMut(&Target) -> Ret, Ret: Future","parent":null,"children":[],"decl_id":null,"docs":" Create a `MakeService` from a function.","sig":null,"attributes":[{"value":"/ Create a `MakeService` from a function.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":110708,"byte_end":110751,"line_start":102,"line_end":102,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":110752,"byte_end":110755,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":110756,"byte_end":110769,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":110770,"byte_end":110773,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":110774,"byte_end":110781,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"runtime\")]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":110782,"byte_end":110815,"line_start":107,"line_end":107,"column_start":1,"column_end":34}},{"value":"/ # async fn run() {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":110816,"byte_end":110838,"line_start":108,"line_end":108,"column_start":1,"column_end":23}},{"value":"/ use std::convert::Infallible;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":110839,"byte_end":110872,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/ use hyper::{Body, Request, Response, Server};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":110873,"byte_end":110922,"line_start":110,"line_end":110,"column_start":1,"column_end":50}},{"value":"/ use hyper::server::conn::AddrStream;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":110923,"byte_end":110963,"line_start":111,"line_end":111,"column_start":1,"column_end":41}},{"value":"/ use hyper::service::{make_service_fn, service_fn};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":110964,"byte_end":111018,"line_start":112,"line_end":112,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":111019,"byte_end":111022,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ let addr = ([127, 0, 0, 1], 3000).into();","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":111023,"byte_end":111068,"line_start":114,"line_end":114,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":111069,"byte_end":111072,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ let make_svc = make_service_fn(|socket: &AddrStream| {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":111073,"byte_end":111131,"line_start":116,"line_end":116,"column_start":1,"column_end":59}},{"value":"/     let remote_addr = socket.remote_addr();","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":111132,"byte_end":111179,"line_start":117,"line_end":117,"column_start":1,"column_end":48}},{"value":"/     async move {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":111180,"byte_end":111200,"line_start":118,"line_end":118,"column_start":1,"column_end":21}},{"value":"/         Ok::<_, Infallible>(service_fn(move |_: Request<Body>| async move {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":111201,"byte_end":111280,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"/             Ok::<_, Infallible>(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":111281,"byte_end":111317,"line_start":120,"line_end":120,"column_start":1,"column_end":37}},{"value":"/                 Response::new(Body::from(format!(\"Hello, {}!\", remote_addr)))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":111318,"byte_end":111399,"line_start":121,"line_end":121,"column_start":1,"column_end":82}},{"value":"/             )","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":111400,"byte_end":111417,"line_start":122,"line_end":122,"column_start":1,"column_end":18}},{"value":"/         }))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":111418,"byte_end":111433,"line_start":123,"line_end":123,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":111434,"byte_end":111443,"line_start":124,"line_end":124,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":111444,"byte_end":111451,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":111452,"byte_end":111455,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ // Then bind and serve...","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":111456,"byte_end":111485,"line_start":127,"line_end":127,"column_start":1,"column_end":30}},{"value":"/ let server = Server::bind(&addr)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":111486,"byte_end":111522,"line_start":128,"line_end":128,"column_start":1,"column_end":37}},{"value":"/     .serve(make_svc);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":111523,"byte_end":111548,"line_start":129,"line_end":129,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":111549,"byte_end":111552,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ // Finally, spawn `server` onto an Executor...","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":111553,"byte_end":111603,"line_start":131,"line_end":131,"column_start":1,"column_end":51}},{"value":"/ if let Err(e) = server.await {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":111604,"byte_end":111638,"line_start":132,"line_end":132,"column_start":1,"column_end":35}},{"value":"/     eprintln!(\"server error: {}\", e);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":111639,"byte_end":111680,"line_start":133,"line_end":133,"column_start":1,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":111681,"byte_end":111686,"line_start":134,"line_end":134,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":111687,"byte_end":111694,"line_start":135,"line_end":135,"column_start":1,"column_end":8}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":111695,"byte_end":111713,"line_start":136,"line_end":136,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":111714,"byte_end":111721,"line_start":137,"line_end":137,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1659},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":111955,"byte_end":111968,"line_start":148,"line_end":148,"column_start":12,"column_end":25},"name":"MakeServiceFn","qualname":"::service::make::MakeServiceFn","value":"MakeServiceFn {  }","parent":null,"children":[{"krate":0,"index":1661}],"decl_id":null,"docs":" `MakeService` returned from [`make_service_fn`]\n","sig":null,"attributes":[{"value":"/ `MakeService` returned from [`make_service_fn`]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":111869,"byte_end":111920,"line_start":146,"line_end":146,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1047},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":112279,"byte_end":112289,"line_start":162,"line_end":162,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<MakeServiceFn<F> as tower_service::Service>::poll_ready","value":"fn poll_ready(&mut Self, &mut task::Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":52,"index":13},"children":[],"decl_id":{"krate":52,"index":18},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1048},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":112407,"byte_end":112411,"line_start":166,"line_end":166,"column_start":8,"column_end":12},"name":"call","qualname":"<MakeServiceFn<F> as tower_service::Service>::call","value":"fn call(&mut Self, &'t Target) -> Self::Future","parent":{"krate":52,"index":13},"children":[],"decl_id":{"krate":52,"index":19},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1051},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":112544,"byte_end":112547,"line_start":172,"line_end":172,"column_start":8,"column_end":11},"name":"fmt","qualname":"<MakeServiceFn<F> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9902},"children":[],"decl_id":{"krate":2,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1053},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":112685,"byte_end":112691,"line_start":178,"line_end":178,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::service::make::sealed::Sealed","value":"Sealed<X>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1056},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":112837,"byte_end":112845,"line_start":184,"line_end":184,"column_start":14,"column_end":22},"name":"CantName","qualname":"::service::make::sealed::CantName","value":"enum CantName { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":112784,"byte_end":112823,"line_start":183,"line_end":183,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1667},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/oneshot.rs","byte_start":113485,"byte_end":113492,"line_start":22,"line_end":22,"column_start":16,"column_end":23},"name":"Oneshot","qualname":"::service::oneshot::Oneshot","value":"Oneshot {  }","parent":null,"children":[{"krate":0,"index":1670}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14632413,"byte_end":14632422,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/oneshot.rs","byte_start":113985,"byte_end":113989,"line_start":50,"line_end":50,"column_start":8,"column_end":12},"name":"poll","qualname":"<Oneshot<S, Req> as futures_util::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut task::Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13330},"children":[],"decl_id":{"krate":2,"index":13332},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1116},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/util.rs","byte_start":115548,"byte_end":115558,"line_start":27,"line_end":27,"column_start":8,"column_end":18},"name":"service_fn","qualname":"::service::util::service_fn","value":"fn service_fn<F, R, S>(F) -> ServiceFn<F, R> where F: FnMut(Request<R>) -> S,\nS: Future","parent":null,"children":[],"decl_id":null,"docs":" Create a `Service` from a function.","sig":null,"attributes":[{"value":"/ Create a `Service` from a function.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/util.rs","byte_start":114993,"byte_end":115032,"line_start":9,"line_end":9,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/util.rs","byte_start":115033,"byte_end":115036,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/util.rs","byte_start":115037,"byte_end":115050,"line_start":11,"line_end":11,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/util.rs","byte_start":115051,"byte_end":115054,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/util.rs","byte_start":115055,"byte_end":115062,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ use hyper::{Body, Request, Response, Version};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/util.rs","byte_start":115063,"byte_end":115113,"line_start":14,"line_end":14,"column_start":1,"column_end":51}},{"value":"/ use hyper::service::service_fn;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/util.rs","byte_start":115114,"byte_end":115149,"line_start":15,"line_end":15,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/util.rs","byte_start":115150,"byte_end":115153,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ let service = service_fn(|req: Request<Body>| async move {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/util.rs","byte_start":115154,"byte_end":115216,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/     if req.version() == Version::HTTP_11 {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/util.rs","byte_start":115217,"byte_end":115263,"line_start":18,"line_end":18,"column_start":1,"column_end":47}},{"value":"/         Ok(Response::new(Body::from(\"Hello World\")))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/util.rs","byte_start":115264,"byte_end":115320,"line_start":19,"line_end":19,"column_start":1,"column_end":57}},{"value":"/     } else {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/util.rs","byte_start":115321,"byte_end":115337,"line_start":20,"line_end":20,"column_start":1,"column_end":17}},{"value":"/         // Note: it's usually better to return a Response","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/util.rs","byte_start":115338,"byte_end":115399,"line_start":21,"line_end":21,"column_start":1,"column_end":62}},{"value":"/         // with an appropriate StatusCode instead of an Err.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/util.rs","byte_start":115400,"byte_end":115464,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"/         Err(\"not HTTP/1.1, abort connection\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/util.rs","byte_start":115465,"byte_end":115514,"line_start":23,"line_end":23,"column_start":1,"column_end":50}},{"value":"/     }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/util.rs","byte_start":115515,"byte_end":115524,"line_start":24,"line_end":24,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/util.rs","byte_start":115525,"byte_end":115532,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/util.rs","byte_start":115533,"byte_end":115540,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1120},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/util.rs","byte_start":115760,"byte_end":115769,"line_start":39,"line_end":39,"column_start":12,"column_end":21},"name":"ServiceFn","qualname":"::service::util::ServiceFn","value":"ServiceFn {  }","parent":null,"children":[{"krate":0,"index":1123},{"krate":0,"index":1124}],"decl_id":null,"docs":" Service returned by [`service_fn`]\n","sig":null,"attributes":[{"value":"/ Service returned by [`service_fn`]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/util.rs","byte_start":115710,"byte_end":115748,"line_start":38,"line_end":38,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1134},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/util.rs","byte_start":116225,"byte_end":116235,"line_start":57,"line_end":57,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<ServiceFn<F, ReqBody> as tower_service::Service>::poll_ready","value":"fn poll_ready(&mut Self, &mut task::Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":52,"index":13},"children":[],"decl_id":{"krate":52,"index":18},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1135},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/util.rs","byte_start":116353,"byte_end":116357,"line_start":61,"line_end":61,"column_start":8,"column_end":12},"name":"call","qualname":"<ServiceFn<F, ReqBody> as tower_service::Service>::call","value":"fn call(&mut Self, Request<ReqBody>) -> Self::Future","parent":{"krate":52,"index":13},"children":[],"decl_id":{"krate":52,"index":19},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/util.rs","byte_start":116492,"byte_end":116495,"line_start":67,"line_end":67,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ServiceFn<F, R> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9902},"children":[],"decl_id":{"krate":2,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1143},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/util.rs","byte_start":116671,"byte_end":116676,"line_start":76,"line_end":76,"column_start":8,"column_end":13},"name":"clone","qualname":"<ServiceFn<F, R> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2772},"children":[],"decl_id":{"krate":2,"index":2773},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1169},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"upgrade","qualname":"::upgrade","value":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","parent":null,"children":[{"krate":0,"index":1170},{"krate":0,"index":1173},{"krate":0,"index":1176},{"krate":0,"index":1179},{"krate":0,"index":1182},{"krate":0,"index":1185},{"krate":0,"index":1188},{"krate":0,"index":1189},{"krate":0,"index":1192},{"krate":0,"index":1195},{"krate":0,"index":1198},{"krate":0,"index":1201},{"krate":0,"index":1204},{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":1211},{"krate":0,"index":1214},{"krate":0,"index":1217},{"krate":0,"index":1220},{"krate":0,"index":1222},{"krate":0,"index":1764},{"krate":0,"index":1769},{"krate":0,"index":1224},{"krate":0,"index":1226},{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1234},{"krate":0,"index":1236},{"krate":0,"index":1242},{"krate":0,"index":1244},{"krate":0,"index":1247},{"krate":0,"index":1251},{"krate":0,"index":1253},{"krate":0,"index":1804},{"krate":0,"index":1806},{"krate":0,"index":1256},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1261},{"krate":0,"index":1263},{"krate":0,"index":1268}],"decl_id":null,"docs":" HTTP Upgrades","sig":null,"attributes":[{"value":"/ HTTP Upgrades","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":116849,"byte_end":116866,"line_start":1,"line_end":1,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":116867,"byte_end":116870,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module deals with managing [HTTP Upgrades][mdn] in hyper. Since","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":116871,"byte_end":116943,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"/ several concepts in HTTP allow for first talking HTTP, and then converting","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":116944,"byte_end":117022,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ to a different protocol, this module conflates them into a single API.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":117023,"byte_end":117097,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/ Those include:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":117098,"byte_end":117116,"line_start":6,"line_end":6,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":117117,"byte_end":117120,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ - HTTP/1.1 Upgrades","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":117121,"byte_end":117144,"line_start":8,"line_end":8,"column_start":1,"column_end":24}},{"value":"/ - HTTP `CONNECT`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":117145,"byte_end":117165,"line_start":9,"line_end":9,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":117166,"byte_end":117169,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ You are responsible for any other pre-requisites to establish an upgrade,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":117170,"byte_end":117247,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ such as sending the appropriate headers, methods, and status codes. You can","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":117248,"byte_end":117327,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ then use [`on`][] to grab a `Future` which will resolve to the upgraded","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":117328,"byte_end":117403,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ connection object, or an error if the upgrade fails.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":117404,"byte_end":117460,"line_start":14,"line_end":14,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":117461,"byte_end":117464,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [mdn]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Protocol_upgrade_mechanism","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":117465,"byte_end":117552,"line_start":16,"line_end":16,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":117553,"byte_end":117556,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Client","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":117557,"byte_end":117569,"line_start":18,"line_end":18,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":117570,"byte_end":117573,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Sending an HTTP upgrade from the [`client`](super::client) involves setting","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":117574,"byte_end":117653,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ either the appropriate method, if wanting to `CONNECT`, or headers such as","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":117654,"byte_end":117732,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ `Upgrade` and `Connection`, on the `http::Request`. Once receiving the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":117733,"byte_end":117807,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ `http::Response` back, you must check for the specific information that the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":117808,"byte_end":117887,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ upgrade is agreed upon by the server (such as a `101` status code), and then","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":117888,"byte_end":117968,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ get the `Future` from the `Response`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":117969,"byte_end":118010,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":118011,"byte_end":118014,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Server","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":118015,"byte_end":118027,"line_start":27,"line_end":27,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":118028,"byte_end":118031,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Receiving upgrade requests in a server requires you to check the relevant","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":118032,"byte_end":118109,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ headers in a `Request`, and if an upgrade should be done, you then send the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":118110,"byte_end":118189,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ corresponding headers in a response. To then wait for hyper to finish the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":118190,"byte_end":118267,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ upgrade, you call `on()` with the `Request`, and then can spawn a task","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":118268,"byte_end":118342,"line_start":32,"line_end":32,"column_start":1,"column_end":75}},{"value":"/ awaiting it.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":118343,"byte_end":118359,"line_start":33,"line_end":33,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":118360,"byte_end":118363,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":118364,"byte_end":118377,"line_start":35,"line_end":35,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":118378,"byte_end":118381,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ See [this example][example] showing how upgrades work with both","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":118382,"byte_end":118449,"line_start":37,"line_end":37,"column_start":1,"column_end":68}},{"value":"/ Clients and Servers.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":118450,"byte_end":118474,"line_start":38,"line_end":38,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":118475,"byte_end":118478,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [example]: https://github.com/hyperium/hyper/blob/master/examples/upgrades.rs","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":118479,"byte_end":118560,"line_start":40,"line_end":40,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":1220},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":119243,"byte_end":119251,"line_start":65,"line_end":65,"column_start":12,"column_end":20},"name":"Upgraded","qualname":"::upgrade::Upgraded","value":"Upgraded {  }","parent":null,"children":[{"krate":0,"index":1221}],"decl_id":null,"docs":" An upgraded HTTP connection.","sig":null,"attributes":[{"value":"/ An upgraded HTTP connection.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":118913,"byte_end":118945,"line_start":57,"line_end":57,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":118946,"byte_end":118949,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ This type holds a trait object internally of the original IO that","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":118950,"byte_end":119019,"line_start":59,"line_end":59,"column_start":1,"column_end":70}},{"value":"/ was used to speak HTTP before the upgrade. It can be used directly","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":119020,"byte_end":119090,"line_start":60,"line_end":60,"column_start":1,"column_end":71}},{"value":"/ as a `Read` or `Write` for convenience.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":119091,"byte_end":119134,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":119135,"byte_end":119138,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ Alternatively, if the exact type is known, this can be deconstructed","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":119139,"byte_end":119211,"line_start":63,"line_end":63,"column_start":1,"column_end":73}},{"value":"/ into its parts.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":119212,"byte_end":119231,"line_start":64,"line_end":64,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1222},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":119425,"byte_end":119434,"line_start":72,"line_end":72,"column_start":12,"column_end":21},"name":"OnUpgrade","qualname":"::upgrade::OnUpgrade","value":"OnUpgrade {  }","parent":null,"children":[{"krate":0,"index":1223}],"decl_id":null,"docs":" A future for a possible HTTP upgrade.","sig":null,"attributes":[{"value":"/ A future for a possible HTTP upgrade.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":119293,"byte_end":119334,"line_start":69,"line_end":69,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":119335,"byte_end":119338,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ If no upgrade was available, or it doesn't succeed, yields an `Error`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":119339,"byte_end":119413,"line_start":71,"line_end":71,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1764},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":119741,"byte_end":119746,"line_start":81,"line_end":81,"column_start":12,"column_end":17},"name":"Parts","qualname":"::upgrade::Parts","value":"Parts { io, read_buf }","parent":null,"children":[{"krate":0,"index":1766},{"krate":0,"index":1767},{"krate":0,"index":1768}],"decl_id":null,"docs":" The deconstructed parts of an [`Upgraded`](Upgraded) type.","sig":null,"attributes":[{"value":"/ The deconstructed parts of an [`Upgraded`](Upgraded) type.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":119500,"byte_end":119562,"line_start":76,"line_end":76,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":119563,"byte_end":119566,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ Includes the original IO type, and a read buffer of bytes that the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":119567,"byte_end":119637,"line_start":78,"line_end":78,"column_start":1,"column_end":71}},{"value":"/ HTTP state machine may have already read before completing an upgrade.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":119638,"byte_end":119712,"line_start":79,"line_end":79,"column_start":1,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":1766},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":119816,"byte_end":119818,"line_start":83,"line_end":83,"column_start":9,"column_end":11},"name":"io","qualname":"::upgrade::Parts::io","value":"T","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":" The original IO object used before the upgrade.\n","sig":null,"attributes":[{"value":"/ The original IO object used before the upgrade.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":119756,"byte_end":119807,"line_start":82,"line_end":82,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1767},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":120238,"byte_end":120246,"line_start":92,"line_end":92,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::upgrade::Parts::read_buf","value":"bytes::Bytes","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":" A buffer of bytes that have been read but not processed as HTTP.","sig":null,"attributes":[{"value":"/ A buffer of bytes that have been read but not processed as HTTP.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":119827,"byte_end":119895,"line_start":84,"line_end":84,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":119900,"byte_end":119903,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ For instance, if the `Connection` is used for an HTTP upgrade request,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":119908,"byte_end":119982,"line_start":86,"line_end":86,"column_start":5,"column_end":79}},{"value":"/ it is possible the server sent back the first bytes of the new protocol","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":119987,"byte_end":120062,"line_start":87,"line_end":87,"column_start":5,"column_end":80}},{"value":"/ along with the response upgrade.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":120067,"byte_end":120103,"line_start":88,"line_end":88,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":120108,"byte_end":120111,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ You will want to check for any existing bytes if you plan to continue","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":120116,"byte_end":120189,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ communicating on the IO object.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":120194,"byte_end":120229,"line_start":91,"line_end":91,"column_start":5,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1224},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":120499,"byte_end":120501,"line_start":104,"line_end":104,"column_start":8,"column_end":10},"name":"on","qualname":"::upgrade::on","value":"fn on<T>(T) -> OnUpgrade where T: sealed::CanUpgrade","parent":null,"children":[],"decl_id":null,"docs":" Gets a pending HTTP upgrade from this message.","sig":null,"attributes":[{"value":"/ Gets a pending HTTP upgrade from this message.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":120274,"byte_end":120324,"line_start":96,"line_end":96,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":120325,"byte_end":120328,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ This can be called on the following types:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":120329,"byte_end":120375,"line_start":98,"line_end":98,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":120376,"byte_end":120379,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ - `http::Request<B>`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":120380,"byte_end":120404,"line_start":100,"line_end":100,"column_start":1,"column_end":25}},{"value":"/ - `http::Response<B>`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":120405,"byte_end":120430,"line_start":101,"line_end":101,"column_start":1,"column_end":26}},{"value":"/ - `&mut http::Request<B>`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":120431,"byte_end":120460,"line_start":102,"line_end":102,"column_start":1,"column_end":30}},{"value":"/ - `&mut http::Response<B>`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":120461,"byte_end":120491,"line_start":103,"line_end":103,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1232},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":121419,"byte_end":121427,"line_start":136,"line_end":136,"column_start":12,"column_end":20},"name":"downcast","qualname":"<Upgraded>::downcast","value":"fn downcast<T>(Self) -> Result<Parts<T>, Self> where T: AsyncRead +\nAsyncWrite + Unpin + 'static","parent":null,"children":[],"decl_id":null,"docs":" Tries to downcast the internal trait object to the type passed.","sig":null,"attributes":[{"value":"/ Tries to downcast the internal trait object to the type passed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":121235,"byte_end":121302,"line_start":132,"line_end":132,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":121307,"byte_end":121310,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ On success, returns the downcasted parts. On error, returns the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":121315,"byte_end":121382,"line_start":134,"line_end":134,"column_start":5,"column_end":72}},{"value":"/ `Upgraded` back.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":121387,"byte_end":121407,"line_start":135,"line_end":135,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1235},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":121883,"byte_end":121892,"line_start":152,"line_end":152,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<Upgraded as tokio::io::AsyncRead>::poll_read","value":"fn poll_read(Pin<&mut Self>, &mut task::Context, &mut ReadBuf)\n-> Poll<io::Result<()>>","parent":{"krate":28,"index":231},"children":[],"decl_id":{"krate":28,"index":232},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1237},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":122124,"byte_end":122134,"line_start":162,"line_end":162,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<Upgraded as tokio::io::AsyncWrite>::poll_write","value":"fn poll_write(Pin<&mut Self>, &mut task::Context, &[u8])\n-> Poll<io::Result<usize>>","parent":{"krate":28,"index":310},"children":[],"decl_id":{"krate":28,"index":311},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1238},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":122326,"byte_end":122345,"line_start":170,"line_end":170,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"<Upgraded as tokio::io::AsyncWrite>::poll_write_vectored","value":"fn poll_write_vectored(Pin<&mut Self>, &mut task::Context, &[io::IoSlice])\n-> Poll<io::Result<usize>>","parent":{"krate":28,"index":310},"children":[],"decl_id":{"krate":28,"index":314},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1239},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":122561,"byte_end":122571,"line_start":178,"line_end":178,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Upgraded as tokio::io::AsyncWrite>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut task::Context) -> Poll<io::Result<()>>","parent":{"krate":28,"index":310},"children":[],"decl_id":{"krate":28,"index":312},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1240},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":122712,"byte_end":122725,"line_start":182,"line_end":182,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"<Upgraded as tokio::io::AsyncWrite>::poll_shutdown","value":"fn poll_shutdown(Pin<&mut Self>, &mut task::Context) -> Poll<io::Result<()>>","parent":{"krate":28,"index":310},"children":[],"decl_id":{"krate":28,"index":313},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1241},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":122869,"byte_end":122886,"line_start":186,"line_end":186,"column_start":8,"column_end":25},"name":"is_write_vectored","qualname":"<Upgraded as tokio::io::AsyncWrite>::is_write_vectored","value":"fn is_write_vectored(&Self) -> bool","parent":{"krate":28,"index":310},"children":[],"decl_id":{"krate":28,"index":317},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1243},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":122987,"byte_end":122990,"line_start":192,"line_end":192,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Upgraded as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9902},"children":[],"decl_id":{"krate":2,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1249},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":123411,"byte_end":123415,"line_start":213,"line_end":213,"column_start":8,"column_end":12},"name":"poll","qualname":"<OnUpgrade as futures_util::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut task::Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13330},"children":[],"decl_id":{"krate":2,"index":13332},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1252},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":123934,"byte_end":123937,"line_start":226,"line_end":226,"column_start":8,"column_end":11},"name":"fmt","qualname":"<OnUpgrade as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9902},"children":[],"decl_id":{"krate":2,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1272},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":125852,"byte_end":125862,"line_start":298,"line_end":298,"column_start":15,"column_end":25},"name":"CanUpgrade","qualname":"::upgrade::sealed::CanUpgrade","value":"CanUpgrade","parent":null,"children":[{"krate":0,"index":1273}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1273},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":125876,"byte_end":125886,"line_start":299,"line_end":299,"column_start":12,"column_end":22},"name":"on_upgrade","qualname":"::upgrade::sealed::CanUpgrade::on_upgrade","value":"fn on_upgrade(Self) -> OnUpgrade","parent":{"krate":0,"index":1272},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1276},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":125971,"byte_end":125981,"line_start":303,"line_end":303,"column_start":12,"column_end":22},"name":"on_upgrade","qualname":"<http::Request<B> as upgrade::sealed::CanUpgrade>::on_upgrade","value":"fn on_upgrade(Self) -> OnUpgrade","parent":{"krate":0,"index":1272},"children":[],"decl_id":{"krate":0,"index":1273},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1279},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":126211,"byte_end":126221,"line_start":311,"line_end":311,"column_start":12,"column_end":22},"name":"on_upgrade","qualname":"<&'_ mut http::Request<B> as upgrade::sealed::CanUpgrade>::on_upgrade","value":"fn on_upgrade(Self) -> OnUpgrade","parent":{"krate":0,"index":1272},"children":[],"decl_id":{"krate":0,"index":1273},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1282},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":126440,"byte_end":126450,"line_start":319,"line_end":319,"column_start":12,"column_end":22},"name":"on_upgrade","qualname":"<http::Response<B> as upgrade::sealed::CanUpgrade>::on_upgrade","value":"fn on_upgrade(Self) -> OnUpgrade","parent":{"krate":0,"index":1272},"children":[],"decl_id":{"krate":0,"index":1273},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1285},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":126681,"byte_end":126691,"line_start":327,"line_end":327,"column_start":12,"column_end":22},"name":"on_upgrade","qualname":"<&'_ mut http::Response<B> as upgrade::sealed::CanUpgrade>::on_upgrade","value":"fn on_upgrade(Self) -> OnUpgrade","parent":{"krate":0,"index":1272},"children":[],"decl_id":{"krate":0,"index":1273},"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2627},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/dispatch.rs","byte_start":18079338,"byte_end":18079346,"line_start":25,"line_end":25,"column_start":10,"column_end":18},"name":"PollItem","qualname":"::proto::h1::dispatch::Dispatch::PollItem","value":"type PollItem;","parent":{"krate":0,"index":2626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2628},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/dispatch.rs","byte_start":18079357,"byte_end":18079365,"line_start":26,"line_end":26,"column_start":10,"column_end":18},"name":"PollBody","qualname":"::proto::h1::dispatch::Dispatch::PollBody","value":"type PollBody;","parent":{"krate":0,"index":2626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2629},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/dispatch.rs","byte_start":18079376,"byte_end":18079385,"line_start":27,"line_end":27,"column_start":10,"column_end":19},"name":"PollError","qualname":"::proto::h1::dispatch::Dispatch::PollError","value":"type PollError;","parent":{"krate":0,"index":2626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2630},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/dispatch.rs","byte_start":18079396,"byte_end":18079404,"line_start":28,"line_end":28,"column_start":10,"column_end":18},"name":"RecvItem","qualname":"::proto::h1::dispatch::Dispatch::RecvItem","value":"type RecvItem;","parent":{"krate":0,"index":2626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3148},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/mod.rs","byte_start":18003097,"byte_end":18003105,"line_start":36,"line_end":36,"column_start":10,"column_end":18},"name":"Incoming","qualname":"::proto::h1::Http1Transaction::Incoming","value":"type Incoming;","parent":{"krate":0,"index":3147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3149},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/mod.rs","byte_start":18003116,"byte_end":18003124,"line_start":37,"line_end":37,"column_start":10,"column_end":18},"name":"Outgoing","qualname":"::proto::h1::Http1Transaction::Outgoing","value":"type Outgoing: Default;","parent":{"krate":0,"index":3147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8268},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/server.rs","byte_start":18279229,"byte_end":18279237,"line_start":374,"line_end":374,"column_start":16,"column_end":24},"name":"H2Stream","qualname":"::proto::h2::server::H2Stream","value":"H2Stream {  }","parent":null,"children":[{"krate":0,"index":8271},{"krate":0,"index":8272}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14632413,"byte_end":14632422,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3901},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/server.rs","byte_start":18285111,"byte_end":18285115,"line_start":541,"line_end":541,"column_start":8,"column_end":12},"name":"poll","qualname":"<H2Stream<F, B> as futures_util::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut task::Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13330},"children":[],"decl_id":{"krate":2,"index":13332},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3953},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"client","qualname":"::client","value":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","parent":null,"children":[{"krate":0,"index":3954},{"krate":0,"index":3957},{"krate":0,"index":4522},{"krate":0,"index":4523},{"krate":0,"index":4526},{"krate":0,"index":4529},{"krate":0,"index":4532},{"krate":0,"index":4860},{"krate":0,"index":5099},{"krate":0,"index":5221},{"krate":0,"index":5442}],"decl_id":null,"docs":" HTTP Client","sig":null,"attributes":[{"value":"cfg(feature = \"client\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/cfg.rs","byte_start":3241,"byte_end":3254,"line_start":7,"line_end":7,"column_start":13,"column_end":26}},{"value":"/ HTTP Client","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18285340,"byte_end":18285355,"line_start":1,"line_end":1,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18285356,"byte_end":18285359,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ There are two levels of APIs provided for construct HTTP clients:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18285360,"byte_end":18285429,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18285430,"byte_end":18285433,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The higher-level [`Client`](Client) type.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18285434,"byte_end":18285481,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"/ - The lower-level [`conn`](conn) module.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18285482,"byte_end":18285526,"line_start":6,"line_end":6,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18285527,"byte_end":18285530,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Client","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18285531,"byte_end":18285543,"line_start":8,"line_end":8,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18285544,"byte_end":18285547,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The [`Client`](Client) is the main way to send HTTP requests to a server.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18285548,"byte_end":18285625,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ The default `Client` provides these things on top of the lower-level API:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18285626,"byte_end":18285703,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18285704,"byte_end":18285707,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ - A default **connector**, able to resolve hostnames and connect to","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18285708,"byte_end":18285779,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/   destinations over plain-text TCP.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18285780,"byte_end":18285819,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/ - A **pool** of existing connections, allowing better performance when","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18285820,"byte_end":18285894,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/   making multiple requests to the same hostname.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18285895,"byte_end":18285947,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/ - Automatic setting of the `Host` header, based on the request `Uri`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18285948,"byte_end":18286021,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/ - Automatic request **retries** when a pooled connection is closed by the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18286022,"byte_end":18286099,"line_start":18,"line_end":18,"column_start":1,"column_end":78}},{"value":"/   server before any bytes have been written.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18286100,"byte_end":18286148,"line_start":19,"line_end":19,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18286149,"byte_end":18286152,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Many of these features can configured, by making use of","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18286153,"byte_end":18286212,"line_start":21,"line_end":21,"column_start":1,"column_end":60}},{"value":"/ [`Client::builder`](Client::builder).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18286213,"byte_end":18286254,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18286255,"byte_end":18286258,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18286259,"byte_end":18286273,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18286274,"byte_end":18286277,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ For a small example program simply fetching a URL, take a look at the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18286278,"byte_end":18286351,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/ [full client example](https://github.com/hyperium/hyper/blob/master/examples/client.rs).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18286352,"byte_end":18286444,"line_start":27,"line_end":27,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18286445,"byte_end":18286448,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18286449,"byte_end":18286456,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(all(feature = \"tcp\", feature = \"client\", any(feature = \"http1\", feature = \"http2\")))]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18286457,"byte_end":18286554,"line_start":30,"line_end":30,"column_start":1,"column_end":98}},{"value":"/ # async fn fetch_httpbin() -> hyper::Result<()> {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18286555,"byte_end":18286608,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/ use hyper::{body::HttpBody as _, Client, Uri};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18286609,"byte_end":18286659,"line_start":32,"line_end":32,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18286660,"byte_end":18286663,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let client = Client::new();","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18286664,"byte_end":18286695,"line_start":34,"line_end":34,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18286696,"byte_end":18286699,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Make a GET /ip to 'http://httpbin.org'","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18286700,"byte_end":18286745,"line_start":36,"line_end":36,"column_start":1,"column_end":46}},{"value":"/ let res = client.get(Uri::from_static(\"http://httpbin.org/ip\")).await?;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18286746,"byte_end":18286821,"line_start":37,"line_end":37,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18286822,"byte_end":18286825,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ // And then, if the request gets a response...","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18286826,"byte_end":18286876,"line_start":39,"line_end":39,"column_start":1,"column_end":51}},{"value":"/ println!(\"status: {}\", res.status());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18286877,"byte_end":18286918,"line_start":40,"line_end":40,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18286919,"byte_end":18286922,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Concatenate the body stream into a single buffer...","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18286923,"byte_end":18286981,"line_start":42,"line_end":42,"column_start":1,"column_end":59}},{"value":"/ let buf = hyper::body::to_bytes(res).await?;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18286982,"byte_end":18287030,"line_start":43,"line_end":43,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18287031,"byte_end":18287034,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ println!(\"body: {:?}\", buf);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18287035,"byte_end":18287067,"line_start":45,"line_end":45,"column_start":1,"column_end":33}},{"value":"/ # Ok(())","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18287068,"byte_end":18287080,"line_start":46,"line_end":46,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18287081,"byte_end":18287088,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ # fn main () {}","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18287089,"byte_end":18287108,"line_start":48,"line_end":48,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18287109,"byte_end":18287116,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":3957},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"connect","qualname":"::client::connect","value":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","parent":null,"children":[{"krate":0,"index":3958},{"krate":0,"index":3961},{"krate":0,"index":4057},{"krate":0,"index":4058},{"krate":0,"index":4061},{"krate":0,"index":4064},{"krate":0,"index":4220},{"krate":0,"index":4493},{"krate":0,"index":3964},{"krate":0,"index":4496},{"krate":0,"index":4500},{"krate":0,"index":3966},{"krate":0,"index":4502},{"krate":0,"index":4507},{"krate":0,"index":4509},{"krate":0,"index":4510},{"krate":0,"index":4512},{"krate":0,"index":4513},{"krate":0,"index":3969},{"krate":0,"index":3979},{"krate":0,"index":3981},{"krate":0,"index":3983},{"krate":0,"index":3985},{"krate":0,"index":4515},{"krate":0,"index":4519},{"krate":0,"index":3988},{"krate":0,"index":3992},{"krate":0,"index":3997},{"krate":0,"index":4000},{"krate":0,"index":4004}],"decl_id":null,"docs":" Connectors used by the `Client`.","sig":null,"attributes":[{"value":"/ Connectors used by the `Client`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18287478,"byte_end":18287514,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18287515,"byte_end":18287518,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18287519,"byte_end":18287544,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18287545,"byte_end":18287548,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - A default [`HttpConnector`][] that does DNS resolution and establishes","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18287549,"byte_end":18287625,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/   connections over TCP.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18287626,"byte_end":18287653,"line_start":6,"line_end":6,"column_start":1,"column_end":28}},{"value":"/ - Types to build custom connectors.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18287654,"byte_end":18287693,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18287694,"byte_end":18287697,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Connectors","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18287698,"byte_end":18287714,"line_start":9,"line_end":9,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18287715,"byte_end":18287718,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ A \"connector\" is a [`Service`][] that takes a [`Uri`][] destination, and","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18287719,"byte_end":18287795,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ its `Response` is some type implementing [`AsyncRead`][], [`AsyncWrite`][],","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18287796,"byte_end":18287875,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ and [`Connection`][].","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18287876,"byte_end":18287901,"line_start":13,"line_end":13,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18287902,"byte_end":18287905,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ## Custom Connectors","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18287906,"byte_end":18287930,"line_start":15,"line_end":15,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18287931,"byte_end":18287934,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ A simple connector that ignores the `Uri` destination and always returns","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18287935,"byte_end":18288011,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ a TCP connection to the same address could be written like this:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18288012,"byte_end":18288080,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18288081,"byte_end":18288084,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18288085,"byte_end":18288103,"line_start":20,"line_end":20,"column_start":1,"column_end":19}},{"value":"/ let connector = tower::service_fn(|_dst| async {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18288104,"byte_end":18288156,"line_start":21,"line_end":21,"column_start":1,"column_end":53}},{"value":"/     tokio::net::TcpStream::connect(\"127.0.0.1:1337\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18288157,"byte_end":18288213,"line_start":22,"line_end":22,"column_start":1,"column_end":57}},{"value":"/ })","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18288214,"byte_end":18288220,"line_start":23,"line_end":23,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18288221,"byte_end":18288228,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18288229,"byte_end":18288232,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Or, fully written out:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18288233,"byte_end":18288259,"line_start":26,"line_end":26,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18288260,"byte_end":18288263,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18288264,"byte_end":18288271,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"runtime\")]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18288272,"byte_end":18288305,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/ # mod rt {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18288306,"byte_end":18288320,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/ use std::{future::Future, net::SocketAddr, pin::Pin, task::{self, Poll}};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18288321,"byte_end":18288398,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ use hyper::{service::Service, Uri};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18288399,"byte_end":18288438,"line_start":32,"line_end":32,"column_start":1,"column_end":40}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18288439,"byte_end":18288469,"line_start":33,"line_end":33,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18288470,"byte_end":18288473,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone)]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18288474,"byte_end":18288494,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"/ struct LocalConnector;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18288495,"byte_end":18288521,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18288522,"byte_end":18288525,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ impl Service<Uri> for LocalConnector {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18288526,"byte_end":18288568,"line_start":38,"line_end":38,"column_start":1,"column_end":43}},{"value":"/     type Response = TcpStream;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18288569,"byte_end":18288603,"line_start":39,"line_end":39,"column_start":1,"column_end":35}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18288604,"byte_end":18288640,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/     // We can't \"name\" an `async` generated future.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18288641,"byte_end":18288696,"line_start":41,"line_end":41,"column_start":1,"column_end":56}},{"value":"/     type Future = Pin<Box<","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18288697,"byte_end":18288727,"line_start":42,"line_end":42,"column_start":1,"column_end":31}},{"value":"/         dyn Future<Output = Result<Self::Response, Self::Error>> + Send","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18288728,"byte_end":18288803,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/     >>;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18288804,"byte_end":18288815,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18288816,"byte_end":18288819,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     fn poll_ready(&mut self, _: &mut task::Context<'_>) -> Poll<Result<(), Self::Error>> {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18288820,"byte_end":18288914,"line_start":46,"line_end":46,"column_start":1,"column_end":95}},{"value":"/         // This connector is always ready, but others might not be.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18288915,"byte_end":18288986,"line_start":47,"line_end":47,"column_start":1,"column_end":72}},{"value":"/         Poll::Ready(Ok(()))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18288987,"byte_end":18289018,"line_start":48,"line_end":48,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18289019,"byte_end":18289028,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18289029,"byte_end":18289032,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     fn call(&mut self, _: Uri) -> Self::Future {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18289033,"byte_end":18289085,"line_start":51,"line_end":51,"column_start":1,"column_end":53}},{"value":"/         Box::pin(TcpStream::connect(SocketAddr::from(([127, 0, 0, 1], 1337))))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18289086,"byte_end":18289168,"line_start":52,"line_end":52,"column_start":1,"column_end":83}},{"value":"/     }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18289169,"byte_end":18289178,"line_start":53,"line_end":53,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18289179,"byte_end":18289184,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18289185,"byte_end":18289192,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18289193,"byte_end":18289200,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18289201,"byte_end":18289204,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ It's worth noting that for `TcpStream`s, the [`HttpConnector`][] is a","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18289205,"byte_end":18289278,"line_start":58,"line_end":58,"column_start":1,"column_end":74}},{"value":"/ better starting place to extend from.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18289279,"byte_end":18289320,"line_start":59,"line_end":59,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18289321,"byte_end":18289324,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Using either of the above connector examples, it can be used with the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18289325,"byte_end":18289398,"line_start":61,"line_end":61,"column_start":1,"column_end":74}},{"value":"/ `Client` like this:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18289399,"byte_end":18289422,"line_start":62,"line_end":62,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18289423,"byte_end":18289426,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18289427,"byte_end":18289434,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"runtime\")]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18289435,"byte_end":18289468,"line_start":65,"line_end":65,"column_start":1,"column_end":34}},{"value":"/ # fn rt () {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18289469,"byte_end":18289485,"line_start":66,"line_end":66,"column_start":1,"column_end":17}},{"value":"/ # let connector = hyper::client::HttpConnector::new();","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18289486,"byte_end":18289544,"line_start":67,"line_end":67,"column_start":1,"column_end":59}},{"value":"/ // let connector = ...","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18289545,"byte_end":18289571,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18289572,"byte_end":18289575,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ let client = hyper::Client::builder()","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18289576,"byte_end":18289617,"line_start":70,"line_end":70,"column_start":1,"column_end":42}},{"value":"/     .build::<_, hyper::Body>(connector);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18289618,"byte_end":18289662,"line_start":71,"line_end":71,"column_start":1,"column_end":45}},{"value":"/ # }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18289663,"byte_end":18289670,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18289671,"byte_end":18289678,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18289679,"byte_end":18289682,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18289683,"byte_end":18289686,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ [`HttpConnector`]: HttpConnector","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18289687,"byte_end":18289723,"line_start":76,"line_end":76,"column_start":1,"column_end":37}},{"value":"/ [`Service`]: crate::service::Service","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18289724,"byte_end":18289764,"line_start":77,"line_end":77,"column_start":1,"column_end":41}},{"value":"/ [`Uri`]: ::http::Uri","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18289765,"byte_end":18289789,"line_start":78,"line_end":78,"column_start":1,"column_end":25}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18289790,"byte_end":18289829,"line_start":79,"line_end":79,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18289830,"byte_end":18289871,"line_start":80,"line_end":80,"column_start":1,"column_end":42}},{"value":"/ [`Connection`]: Connection","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18289872,"byte_end":18289902,"line_start":81,"line_end":81,"column_start":1,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":4064},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dns","qualname":"::client::connect::dns","value":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","parent":null,"children":[{"krate":0,"index":4065},{"krate":0,"index":4068},{"krate":0,"index":4071},{"krate":0,"index":4072},{"krate":0,"index":4075},{"krate":0,"index":4078},{"krate":0,"index":4081},{"krate":0,"index":4084},{"krate":0,"index":4087},{"krate":0,"index":4090},{"krate":0,"index":4093},{"krate":0,"index":4096},{"krate":0,"index":4097},{"krate":0,"index":4100},{"krate":0,"index":4103},{"krate":0,"index":4104},{"krate":0,"index":4107},{"krate":0,"index":4110},{"krate":0,"index":4111},{"krate":0,"index":4113},{"krate":0,"index":4116},{"krate":0,"index":4119},{"krate":0,"index":4122},{"krate":0,"index":4443},{"krate":0,"index":4445},{"krate":0,"index":4447},{"krate":0,"index":4450},{"krate":0,"index":4451},{"krate":0,"index":4453},{"krate":0,"index":4454},{"krate":0,"index":4457},{"krate":0,"index":4459},{"krate":0,"index":4125},{"krate":0,"index":4127},{"krate":0,"index":4129},{"krate":0,"index":4132},{"krate":0,"index":4134},{"krate":0,"index":4136},{"krate":0,"index":4461},{"krate":0,"index":4464},{"krate":0,"index":4139},{"krate":0,"index":4141},{"krate":0,"index":4142},{"krate":0,"index":4144},{"krate":0,"index":4152},{"krate":0,"index":4154},{"krate":0,"index":4158},{"krate":0,"index":4160},{"krate":0,"index":4162},{"krate":0,"index":4165},{"krate":0,"index":4167},{"krate":0,"index":4169},{"krate":0,"index":4178},{"krate":0,"index":4181},{"krate":0,"index":4215}],"decl_id":null,"docs":" DNS Resolution used by the `HttpConnector`.","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/cfg.rs","byte_start":3241,"byte_end":3254,"line_start":7,"line_end":7,"column_start":13,"column_end":26}},{"value":"/ DNS Resolution used by the `HttpConnector`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18299071,"byte_end":18299118,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18299119,"byte_end":18299122,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18299123,"byte_end":18299148,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18299149,"byte_end":18299152,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - A [`GaiResolver`](GaiResolver) that is the default resolver for the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18299153,"byte_end":18299226,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/   `HttpConnector`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18299227,"byte_end":18299249,"line_start":6,"line_end":6,"column_start":1,"column_end":23}},{"value":"/ - The `Name` type used as an argument to custom resolvers.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18299250,"byte_end":18299312,"line_start":7,"line_end":7,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18299313,"byte_end":18299316,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Resolvers are `Service`s","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18299317,"byte_end":18299347,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18299348,"byte_end":18299351,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ A resolver is just a","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18299352,"byte_end":18299376,"line_start":11,"line_end":11,"column_start":1,"column_end":25}},{"value":"/ `Service<Name, Response = impl Iterator<Item = SocketAddr>>`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18299377,"byte_end":18299442,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18299443,"byte_end":18299446,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A simple resolver that ignores the name and always returns a specific","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18299447,"byte_end":18299520,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ address:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18299521,"byte_end":18299533,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18299534,"byte_end":18299537,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18299538,"byte_end":18299556,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/ use std::{convert::Infallible, iter, net::SocketAddr};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18299557,"byte_end":18299615,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18299616,"byte_end":18299619,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ let resolver = tower::service_fn(|_name| async {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18299620,"byte_end":18299672,"line_start":20,"line_end":20,"column_start":1,"column_end":53}},{"value":"/     Ok::<_, Infallible>(iter::once(SocketAddr::from(([127, 0, 0, 1], 8080))))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18299673,"byte_end":18299754,"line_start":21,"line_end":21,"column_start":1,"column_end":82}},{"value":"/ });","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18299755,"byte_end":18299762,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18299763,"byte_end":18299770,"line_start":23,"line_end":23,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4443},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18300221,"byte_end":18300225,"line_start":40,"line_end":40,"column_start":12,"column_end":16},"name":"Name","qualname":"::client::connect::dns::Name","value":"Name {  }","parent":null,"children":[{"krate":0,"index":4444}],"decl_id":null,"docs":" A domain name to resolve into IP addresses.\n","sig":null,"attributes":[{"value":"/ A domain name to resolve into IP addresses.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18300124,"byte_end":18300171,"line_start":38,"line_end":38,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":4457},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18300346,"byte_end":18300357,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"GaiResolver","qualname":"::client::connect::dns::GaiResolver","value":"GaiResolver {  }","parent":null,"children":[{"krate":0,"index":4458}],"decl_id":null,"docs":" A resolver using blocking `getaddrinfo` calls in a threadpool.\n","sig":null,"attributes":[{"value":"/ A resolver using blocking `getaddrinfo` calls in a threadpool.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18300251,"byte_end":18300317,"line_start":44,"line_end":44,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":4125},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18300450,"byte_end":18300458,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"GaiAddrs","qualname":"::client::connect::dns::GaiAddrs","value":"GaiAddrs {  }","parent":null,"children":[{"krate":0,"index":4126}],"decl_id":null,"docs":" An iterator of IP addresses returned from `getaddrinfo`.\n","sig":null,"attributes":[{"value":"/ An iterator of IP addresses returned from `getaddrinfo`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18300378,"byte_end":18300438,"line_start":50,"line_end":50,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":4127},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18300557,"byte_end":18300566,"line_start":56,"line_end":56,"column_start":12,"column_end":21},"name":"GaiFuture","qualname":"::client::connect::dns::GaiFuture","value":"GaiFuture {  }","parent":null,"children":[{"krate":0,"index":4128}],"decl_id":null,"docs":" A future to resolve a name returned by `GaiResolver`.\n","sig":null,"attributes":[{"value":"/ A future to resolve a name returned by `GaiResolver`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18300488,"byte_end":18300545,"line_start":55,"line_end":55,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4131},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18300772,"byte_end":18300778,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Name>::as_str","value":"fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" View the hostname as a string slice.\n","sig":null,"attributes":[{"value":"/ View the hostname as a string slice.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18300720,"byte_end":18300760,"line_start":65,"line_end":65,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":4133},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18300858,"byte_end":18300861,"line_start":72,"line_end":72,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Name as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9902},"children":[],"decl_id":{"krate":2,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4135},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18300998,"byte_end":18301001,"line_start":78,"line_end":78,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Name as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4138},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18301169,"byte_end":18301177,"line_start":86,"line_end":86,"column_start":8,"column_end":16},"name":"from_str","qualname":"<Name as std::str::FromStr>::from_str","value":"fn from_str(&str) -> Result<Self, Self::Err>","parent":{"krate":2,"index":12556},"children":[],"decl_id":{"krate":2,"index":12558},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4461},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18301397,"byte_end":18301413,"line_start":94,"line_end":94,"column_start":12,"column_end":28},"name":"InvalidNameError","qualname":"::client::connect::dns::InvalidNameError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating a given string was not a valid domain name.\n","sig":null,"attributes":[{"value":"/ Error indicating a given string was not a valid domain name.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18301304,"byte_end":18301368,"line_start":92,"line_end":92,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":4140},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18301468,"byte_end":18301471,"line_start":97,"line_end":97,"column_start":8,"column_end":11},"name":"fmt","qualname":"<InvalidNameError as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4143},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18301685,"byte_end":18301688,"line_start":106,"line_end":106,"column_start":12,"column_end":15},"name":"new","qualname":"<GaiResolver>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `GaiResolver`.\n","sig":null,"attributes":[{"value":"/ Construct a new `GaiResolver`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18301639,"byte_end":18301673,"line_start":105,"line_end":105,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":4148},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18301876,"byte_end":18301886,"line_start":116,"line_end":116,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<GaiResolver as tower_service::Service>::poll_ready","value":"fn poll_ready(&mut Self, &mut task::Context) -> Poll<Result<(), io::Error>>","parent":{"krate":52,"index":13},"children":[],"decl_id":{"krate":52,"index":18},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4149},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18302002,"byte_end":18302006,"line_start":120,"line_end":120,"column_start":8,"column_end":12},"name":"call","qualname":"<GaiResolver as tower_service::Service>::call","value":"fn call(&mut Self, Name) -> Self::Future","parent":{"krate":52,"index":13},"children":[],"decl_id":{"krate":52,"index":19},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4153},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18302378,"byte_end":18302381,"line_start":133,"line_end":133,"column_start":8,"column_end":11},"name":"fmt","qualname":"<GaiResolver as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9902},"children":[],"decl_id":{"krate":2,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4156},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18302555,"byte_end":18302559,"line_start":141,"line_end":141,"column_start":8,"column_end":12},"name":"poll","qualname":"<GaiFuture as futures_util::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut task::Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13330},"children":[],"decl_id":{"krate":2,"index":13332},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4159},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18303144,"byte_end":18303147,"line_start":157,"line_end":157,"column_start":8,"column_end":11},"name":"fmt","qualname":"<GaiFuture as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9902},"children":[],"decl_id":{"krate":2,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4161},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18303269,"byte_end":18303273,"line_start":163,"line_end":163,"column_start":8,"column_end":12},"name":"drop","qualname":"<GaiFuture as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3393},"children":[],"decl_id":{"krate":2,"index":3394},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4164},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18303389,"byte_end":18303393,"line_start":171,"line_end":171,"column_start":8,"column_end":12},"name":"next","qualname":"<GaiAddrs as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8186},"children":[],"decl_id":{"krate":2,"index":8188},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4166},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18303502,"byte_end":18303505,"line_start":177,"line_end":177,"column_start":8,"column_end":11},"name":"fmt","qualname":"<GaiAddrs as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9902},"children":[],"decl_id":{"krate":2,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4202},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18307915,"byte_end":18307922,"line_start":326,"line_end":326,"column_start":15,"column_end":22},"name":"Resolve","qualname":"::client::connect::dns::sealed::Resolve","value":"Resolve","parent":null,"children":[{"krate":0,"index":4203},{"krate":0,"index":4204},{"krate":0,"index":4205},{"krate":0,"index":4206},{"krate":0,"index":4207}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4203},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18307938,"byte_end":18307943,"line_start":327,"line_end":327,"column_start":14,"column_end":19},"name":"Addrs","qualname":"::client::connect::dns::sealed::Resolve::Addrs","value":"type Addrs: Iterator<Item = SocketAddr>;","parent":{"krate":0,"index":4202},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4204},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18307987,"byte_end":18307992,"line_start":328,"line_end":328,"column_start":14,"column_end":19},"name":"Error","qualname":"::client::connect::dns::sealed::Resolve::Error","value":"type Error: Into<Box<dyn std::error::Error + Send + Sync>>;","parent":{"krate":0,"index":4202},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4205},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18308055,"byte_end":18308061,"line_start":329,"line_end":329,"column_start":14,"column_end":20},"name":"Future","qualname":"::client::connect::dns::sealed::Resolve::Future","value":"type Future: Future<Output = Result<Self::Addrs, Self::Error>>;","parent":{"krate":0,"index":4202},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4206},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18308126,"byte_end":18308136,"line_start":331,"line_end":331,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"::client::connect::dns::sealed::Resolve::poll_ready","value":"fn poll_ready(&mut Self, &mut task::Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":0,"index":4202},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4207},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18308221,"byte_end":18308228,"line_start":332,"line_end":332,"column_start":12,"column_end":19},"name":"resolve","qualname":"::client::connect::dns::sealed::Resolve::resolve","value":"fn resolve(&mut Self, Name) -> Self::Future","parent":{"krate":0,"index":4202},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4213},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18308570,"byte_end":18308580,"line_start":345,"line_end":345,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<S as client::connect::dns::sealed::Resolve>::poll_ready","value":"fn poll_ready(&mut Self, &mut task::Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":0,"index":4202},"children":[],"decl_id":{"krate":0,"index":4206},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4214},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18308719,"byte_end":18308726,"line_start":349,"line_end":349,"column_start":12,"column_end":19},"name":"resolve","qualname":"<S as client::connect::dns::sealed::Resolve>::resolve","value":"fn resolve(&mut Self, Name) -> Self::Future","parent":{"krate":0,"index":4202},"children":[],"decl_id":{"krate":0,"index":4207},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4466},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18312271,"byte_end":18312284,"line_start":33,"line_end":33,"column_start":12,"column_end":25},"name":"HttpConnector","qualname":"::client::connect::http::HttpConnector","value":"HttpConnector {  }","parent":null,"children":[{"krate":0,"index":4468},{"krate":0,"index":4469}],"decl_id":null,"docs":" A connector for the `http` scheme.","sig":null,"attributes":[{"value":"/ A connector for the `http` scheme.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18311923,"byte_end":18311961,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18311962,"byte_end":18311965,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Performs DNS resolution in a thread pool, and then connects over TCP.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18311966,"byte_end":18312039,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18312040,"byte_end":18312043,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18312044,"byte_end":18312054,"line_start":27,"line_end":27,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18312055,"byte_end":18312058,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Sets the [`HttpInfo`](HttpInfo) value on responses, which includes","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18312059,"byte_end":18312129,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ transport information such as the remote socket address used.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18312130,"byte_end":18312195,"line_start":30,"line_end":30,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":4473},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18313163,"byte_end":18313171,"line_start":67,"line_end":67,"column_start":12,"column_end":20},"name":"HttpInfo","qualname":"::client::connect::http::HttpInfo","value":"HttpInfo {  }","parent":null,"children":[{"krate":0,"index":4474},{"krate":0,"index":4475}],"decl_id":null,"docs":" Extra information about the transport when an HttpConnector is used.","sig":null,"attributes":[{"value":"/ Extra information about the transport when an HttpConnector is used.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18312349,"byte_end":18312421,"line_start":38,"line_end":38,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18312422,"byte_end":18312425,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18312426,"byte_end":18312439,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18312440,"byte_end":18312443,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18312444,"byte_end":18312451,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ # async fn doc() -> hyper::Result<()> {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18312452,"byte_end":18312495,"line_start":43,"line_end":43,"column_start":1,"column_end":44}},{"value":"/ use hyper::Uri;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18312496,"byte_end":18312515,"line_start":44,"line_end":44,"column_start":1,"column_end":20}},{"value":"/ use hyper::client::{Client, connect::HttpInfo};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18312516,"byte_end":18312567,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18312568,"byte_end":18312571,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ let client = Client::new();","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18312572,"byte_end":18312603,"line_start":47,"line_end":47,"column_start":1,"column_end":32}},{"value":"/ let uri = Uri::from_static(\"http://example.com\");","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18312604,"byte_end":18312657,"line_start":48,"line_end":48,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18312658,"byte_end":18312661,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ let res = client.get(uri).await?;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18312662,"byte_end":18312699,"line_start":50,"line_end":50,"column_start":1,"column_end":38}},{"value":"/ res","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18312700,"byte_end":18312707,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/     .extensions()","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18312708,"byte_end":18312729,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"/     .get::<HttpInfo>()","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18312730,"byte_end":18312756,"line_start":53,"line_end":53,"column_start":1,"column_end":27}},{"value":"/     .map(|info| {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18312757,"byte_end":18312778,"line_start":54,"line_end":54,"column_start":1,"column_end":22}},{"value":"/         println!(\"remote addr = {}\", info.remote_addr());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18312779,"byte_end":18312840,"line_start":55,"line_end":55,"column_start":1,"column_end":62}},{"value":"/     });","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18312841,"byte_end":18312852,"line_start":56,"line_end":56,"column_start":1,"column_end":12}},{"value":"/ # Ok(())","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18312853,"byte_end":18312865,"line_start":57,"line_end":57,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18312866,"byte_end":18312873,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18312874,"byte_end":18312881,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18312882,"byte_end":18312885,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18312886,"byte_end":18312896,"line_start":61,"line_end":61,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18312897,"byte_end":18312900,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ If a different connector is used besides [`HttpConnector`](HttpConnector),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18312901,"byte_end":18312979,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"/ this value will not exist in the extensions. Consult that specific","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18312980,"byte_end":18313050,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ connector to see what \"extra\" information it might provide to responses.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18313051,"byte_end":18313127,"line_start":65,"line_end":65,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":4319},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18313729,"byte_end":18313732,"line_start":90,"line_end":90,"column_start":12,"column_end":15},"name":"new","qualname":"<HttpConnector>::new","value":"fn new() -> HttpConnector","parent":null,"children":[],"decl_id":null,"docs":" Construct a new HttpConnector.\n","sig":null,"attributes":[{"value":"/ Construct a new HttpConnector.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18313683,"byte_end":18313717,"line_start":89,"line_end":89,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":4322},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18314395,"byte_end":18314412,"line_start":111,"line_end":111,"column_start":12,"column_end":29},"name":"new_with_resolver","qualname":"<HttpConnector<R>>::new_with_resolver","value":"fn new_with_resolver(R) -> HttpConnector<R>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new HttpConnector.","sig":null,"attributes":[{"value":"/ Construct a new HttpConnector.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18314237,"byte_end":18314271,"line_start":108,"line_end":108,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18314276,"byte_end":18314279,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ Takes a [`Resolver`](crate::client::connect::dns#resolvers-are-services) to handle DNS lookups.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18314284,"byte_end":18314383,"line_start":110,"line_end":110,"column_start":5,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":4323},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18315112,"byte_end":18315124,"line_start":133,"line_end":133,"column_start":12,"column_end":24},"name":"enforce_http","qualname":"<HttpConnector<R>>::enforce_http","value":"fn enforce_http(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Option to enforce all `Uri`s have the `http` scheme.","sig":null,"attributes":[{"value":"/ Option to enforce all `Uri`s have the `http` scheme.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18314994,"byte_end":18315050,"line_start":129,"line_end":129,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18315055,"byte_end":18315058,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Enabled by default.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18315063,"byte_end":18315086,"line_start":131,"line_end":131,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18315091,"byte_end":18315100,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4324},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18315414,"byte_end":18315427,"line_start":143,"line_end":143,"column_start":12,"column_end":25},"name":"set_keepalive","qualname":"<HttpConnector<R>>::set_keepalive","value":"fn set_keepalive(&mut Self, Option<Duration>)","parent":null,"children":[],"decl_id":null,"docs":" Set that all sockets have `SO_KEEPALIVE` set with the supplied duration.","sig":null,"attributes":[{"value":"/ Set that all sockets have `SO_KEEPALIVE` set with the supplied duration.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18315222,"byte_end":18315298,"line_start":137,"line_end":137,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18315303,"byte_end":18315306,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ If `None`, the option will not be set.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18315311,"byte_end":18315353,"line_start":139,"line_end":139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18315358,"byte_end":18315361,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Default is `None`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18315366,"byte_end":18315388,"line_start":141,"line_end":141,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18315393,"byte_end":18315402,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4325},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18315668,"byte_end":18315679,"line_start":151,"line_end":151,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<HttpConnector<R>>::set_nodelay","value":"fn set_nodelay(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Set that all sockets have `SO_NODELAY` set to the supplied value `nodelay`.","sig":null,"attributes":[{"value":"/ Set that all sockets have `SO_NODELAY` set to the supplied value `nodelay`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18315527,"byte_end":18315606,"line_start":147,"line_end":147,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18315611,"byte_end":18315614,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Default is `false`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18315619,"byte_end":18315642,"line_start":149,"line_end":149,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18315647,"byte_end":18315656,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4326},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18315847,"byte_end":18315867,"line_start":157,"line_end":157,"column_start":12,"column_end":32},"name":"set_send_buffer_size","qualname":"<HttpConnector<R>>::set_send_buffer_size","value":"fn set_send_buffer_size(&mut Self, Option<usize>)","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the SO_SNDBUF option on the socket.\n","sig":null,"attributes":[{"value":"/ Sets the value of the SO_SNDBUF option on the socket.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18315764,"byte_end":18315821,"line_start":155,"line_end":155,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18315826,"byte_end":18315835,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4327},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18316047,"byte_end":18316067,"line_start":163,"line_end":163,"column_start":12,"column_end":32},"name":"set_recv_buffer_size","qualname":"<HttpConnector<R>>::set_recv_buffer_size","value":"fn set_recv_buffer_size(&mut Self, Option<usize>)","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the SO_RCVBUF option on the socket.\n","sig":null,"attributes":[{"value":"/ Sets the value of the SO_RCVBUF option on the socket.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18315964,"byte_end":18316021,"line_start":161,"line_end":161,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18316026,"byte_end":18316035,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4328},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18316362,"byte_end":18316379,"line_start":173,"line_end":173,"column_start":12,"column_end":29},"name":"set_local_address","qualname":"<HttpConnector<R>>::set_local_address","value":"fn set_local_address(&mut Self, Option<IpAddr>)","parent":null,"children":[],"decl_id":null,"docs":" Set that all sockets are bound to the configured address before connection.","sig":null,"attributes":[{"value":"/ Set that all sockets are bound to the configured address before connection.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18316164,"byte_end":18316243,"line_start":167,"line_end":167,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18316248,"byte_end":18316251,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ If `None`, the sockets will not be bound.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18316256,"byte_end":18316301,"line_start":169,"line_end":169,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18316306,"byte_end":18316309,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Default is `None`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18316314,"byte_end":18316336,"line_start":171,"line_end":171,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18316341,"byte_end":18316350,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4329},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18316881,"byte_end":18316900,"line_start":189,"line_end":189,"column_start":12,"column_end":31},"name":"set_local_addresses","qualname":"<HttpConnector<R>>::set_local_addresses","value":"fn set_local_addresses(&mut Self, Ipv4Addr, Ipv6Addr)","parent":null,"children":[],"decl_id":null,"docs":" Set that all sockets are bound to the configured IPv4 or IPv6 address (depending on host's\n preferences) before connection.\n","sig":null,"attributes":[{"value":"/ Set that all sockets are bound to the configured IPv4 or IPv6 address (depending on host's","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18316721,"byte_end":18316815,"line_start":186,"line_end":186,"column_start":5,"column_end":99}},{"value":"/ preferences) before connection.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18316820,"byte_end":18316855,"line_start":187,"line_end":187,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18316860,"byte_end":18316869,"line_start":188,"line_end":188,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4330},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18317313,"byte_end":18317332,"line_start":203,"line_end":203,"column_start":12,"column_end":31},"name":"set_connect_timeout","qualname":"<HttpConnector<R>>::set_connect_timeout","value":"fn set_connect_timeout(&mut Self, Option<Duration>)","parent":null,"children":[],"decl_id":null,"docs":" Set the connect timeout.","sig":null,"attributes":[{"value":"/ Set the connect timeout.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18317105,"byte_end":18317133,"line_start":196,"line_end":196,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18317138,"byte_end":18317141,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ If a domain resolves to multiple IP addresses, the timeout will be","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18317146,"byte_end":18317216,"line_start":198,"line_end":198,"column_start":5,"column_end":75}},{"value":"/ evenly divided across them.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18317221,"byte_end":18317252,"line_start":199,"line_end":199,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18317257,"byte_end":18317260,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Default is `None`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18317265,"byte_end":18317287,"line_start":201,"line_end":201,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18317292,"byte_end":18317301,"line_start":202,"line_end":202,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4331},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18317966,"byte_end":18317992,"line_start":220,"line_end":220,"column_start":12,"column_end":38},"name":"set_happy_eyeballs_timeout","qualname":"<HttpConnector<R>>::set_happy_eyeballs_timeout","value":"fn set_happy_eyeballs_timeout(&mut Self, Option<Duration>)","parent":null,"children":[],"decl_id":null,"docs":" Set timeout for [RFC 6555 (Happy Eyeballs)][RFC 6555] algorithm.","sig":null,"attributes":[{"value":"/ Set timeout for [RFC 6555 (Happy Eyeballs)][RFC 6555] algorithm.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18317429,"byte_end":18317497,"line_start":207,"line_end":207,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18317502,"byte_end":18317505,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ If hostname resolves to both IPv4 and IPv6 addresses and connection","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18317510,"byte_end":18317581,"line_start":209,"line_end":209,"column_start":5,"column_end":76}},{"value":"/ cannot be established using preferred address family before timeout","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18317586,"byte_end":18317657,"line_start":210,"line_end":210,"column_start":5,"column_end":76}},{"value":"/ elapses, then connector will in parallel attempt connection using other","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18317662,"byte_end":18317737,"line_start":211,"line_end":211,"column_start":5,"column_end":80}},{"value":"/ address family.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18317742,"byte_end":18317761,"line_start":212,"line_end":212,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18317766,"byte_end":18317769,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ If `None`, parallel connection attempts are disabled.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18317774,"byte_end":18317831,"line_start":214,"line_end":214,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18317836,"byte_end":18317839,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ Default is 300 milliseconds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18317844,"byte_end":18317876,"line_start":216,"line_end":216,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18317881,"byte_end":18317884,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ [RFC 6555]: https://tools.ietf.org/html/rfc6555","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18317889,"byte_end":18317940,"line_start":218,"line_end":218,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18317945,"byte_end":18317954,"line_start":219,"line_end":219,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4332},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18318244,"byte_end":18318261,"line_start":228,"line_end":228,"column_start":12,"column_end":29},"name":"set_reuse_address","qualname":"<HttpConnector<R>>::set_reuse_address","value":"fn set_reuse_address(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set that all socket have `SO_REUSEADDR` set to the supplied value `reuse_address`.","sig":null,"attributes":[{"value":"/ Set that all socket have `SO_REUSEADDR` set to the supplied value `reuse_address`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18318096,"byte_end":18318182,"line_start":224,"line_end":224,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18318187,"byte_end":18318190,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ Default is `false`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18318195,"byte_end":18318218,"line_start":226,"line_end":226,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18318223,"byte_end":18318232,"line_start":227,"line_end":227,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4339},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18318997,"byte_end":18319000,"line_start":249,"line_end":249,"column_start":8,"column_end":11},"name":"fmt","qualname":"<HttpConnector<R> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9902},"children":[],"decl_id":{"krate":2,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4345},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18319352,"byte_end":18319362,"line_start":263,"line_end":263,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<HttpConnector<R> as tower_service::Service>::poll_ready","value":"fn poll_ready(&mut Self, &mut task::Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":52,"index":13},"children":[],"decl_id":{"krate":52,"index":18},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4346},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18319553,"byte_end":18319557,"line_start":268,"line_end":268,"column_start":8,"column_end":12},"name":"call","qualname":"<HttpConnector<R> as tower_service::Service>::call","value":"fn call(&mut Self, Uri) -> Self::Future","parent":{"krate":52,"index":13},"children":[],"decl_id":{"krate":52,"index":19},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4357},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18322080,"byte_end":18322089,"line_start":362,"line_end":362,"column_start":8,"column_end":17},"name":"connected","qualname":"<TcpStream as client::connect::Connection>::connected","value":"fn connected(&Self) -> Connected","parent":{"krate":0,"index":3964},"children":[],"decl_id":{"krate":0,"index":3965},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4359},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18322450,"byte_end":18322461,"line_start":374,"line_end":374,"column_start":12,"column_end":23},"name":"remote_addr","qualname":"<HttpInfo>::remote_addr","value":"fn remote_addr(&Self) -> SocketAddr","parent":null,"children":[],"decl_id":null,"docs":" Get the remote address of the transport used.\n","sig":null,"attributes":[{"value":"/ Get the remote address of the transport used.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18322389,"byte_end":18322438,"line_start":373,"line_end":373,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4360},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18322581,"byte_end":18322591,"line_start":379,"line_end":379,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<HttpInfo>::local_addr","value":"fn local_addr(&Self) -> SocketAddr","parent":null,"children":[],"decl_id":null,"docs":" Get the local address of the transport used.\n","sig":null,"attributes":[{"value":"/ Get the local address of the transport used.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18322521,"byte_end":18322569,"line_start":378,"line_end":378,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":7846},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18323059,"byte_end":18323073,"line_start":392,"line_end":392,"column_start":16,"column_end":30},"name":"HttpConnecting","qualname":"::client::connect::http::HttpConnecting","value":"HttpConnecting {  }","parent":null,"children":[{"krate":0,"index":7848},{"krate":0,"index":7849}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14632413,"byte_end":14632422,"line_start":633,"line_end":633,"column_start":11,"column_end":20}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14632413,"byte_end":14632422,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4366},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18323382,"byte_end":18323386,"line_start":405,"line_end":405,"column_start":8,"column_end":12},"name":"poll","qualname":"<HttpConnecting<R> as futures_util::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut task::Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13330},"children":[],"decl_id":{"krate":2,"index":13332},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4367},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18323577,"byte_end":18323589,"line_start":411,"line_end":411,"column_start":12,"column_end":24},"name":"ConnectError","qualname":"::client::connect::http::ConnectError","value":"ConnectError {  }","parent":null,"children":[{"krate":0,"index":4368},{"krate":0,"index":4369}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4382},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18324349,"byte_end":18324352,"line_start":445,"line_end":445,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ConnectError as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9902},"children":[],"decl_id":{"krate":2,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4384},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18324691,"byte_end":18324694,"line_start":458,"line_end":458,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ConnectError as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4386},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18324941,"byte_end":18324947,"line_start":470,"line_end":470,"column_start":8,"column_end":14},"name":"source","qualname":"<ConnectError as std::error::Error>::source","value":"fn source(&Self) -> Option<&dyn StdError + 'static>","parent":{"krate":1,"index":2555},"children":[],"decl_id":{"krate":1,"index":2556},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3964},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18290229,"byte_end":18290239,"line_start":102,"line_end":102,"column_start":11,"column_end":21},"name":"Connection","qualname":"::client::connect::Connection","value":"Connection","parent":null,"children":[{"krate":0,"index":3965}],"decl_id":null,"docs":" Describes a type returned by a connector.\n","sig":null,"attributes":[{"value":"/ Describes a type returned by a connector.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18290173,"byte_end":18290218,"line_start":101,"line_end":101,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3965},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18290300,"byte_end":18290309,"line_start":104,"line_end":104,"column_start":8,"column_end":17},"name":"connected","qualname":"::client::connect::Connection::connected","value":"fn connected(&Self) -> Connected","parent":{"krate":0,"index":3964},"children":[],"decl_id":null,"docs":" Return metadata describing the connection.\n","sig":null,"attributes":[{"value":"/ Return metadata describing the connection.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18290246,"byte_end":18290292,"line_start":103,"line_end":103,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":4496},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18290535,"byte_end":18290544,"line_start":112,"line_end":112,"column_start":12,"column_end":21},"name":"Connected","qualname":"::client::connect::Connected","value":"Connected {  }","parent":null,"children":[{"krate":0,"index":4497},{"krate":0,"index":4498},{"krate":0,"index":4499}],"decl_id":null,"docs":" Extra information about the connected transport.","sig":null,"attributes":[{"value":"/ Extra information about the connected transport.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18290334,"byte_end":18290386,"line_start":107,"line_end":107,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18290387,"byte_end":18290390,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This can be used to inform recipients about things like if ALPN","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18290391,"byte_end":18290458,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/ was used, or if connected to an HTTP proxy.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18290459,"byte_end":18290506,"line_start":110,"line_end":110,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3970},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18290864,"byte_end":18290867,"line_start":128,"line_end":128,"column_start":12,"column_end":15},"name":"new","qualname":"<Connected>::new","value":"fn new() -> Connected","parent":null,"children":[],"decl_id":null,"docs":" Create new `Connected` type with empty metadata.\n","sig":null,"attributes":[{"value":"/ Create new `Connected` type with empty metadata.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18290800,"byte_end":18290852,"line_start":127,"line_end":127,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3971},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18291495,"byte_end":18291500,"line_start":154,"line_end":154,"column_start":12,"column_end":17},"name":"proxy","qualname":"<Connected>::proxy","value":"fn proxy(Self, bool) -> Connected","parent":null,"children":[],"decl_id":null,"docs":" Set whether the connected transport is to an HTTP proxy.","sig":null,"attributes":[{"value":"/ Set whether the connected transport is to an HTTP proxy.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18291012,"byte_end":18291072,"line_start":136,"line_end":136,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18291077,"byte_end":18291080,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ This setting will affect if HTTP/1 requests written on the transport","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18291085,"byte_end":18291157,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ will have the request-target in absolute-form or origin-form:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18291162,"byte_end":18291227,"line_start":139,"line_end":139,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18291232,"byte_end":18291235,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ - When `proxy(false)`:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18291240,"byte_end":18291266,"line_start":141,"line_end":141,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18291271,"byte_end":18291274,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```http","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18291279,"byte_end":18291290,"line_start":143,"line_end":143,"column_start":5,"column_end":16}},{"value":"/ GET /guide HTTP/1.1","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18291295,"byte_end":18291318,"line_start":144,"line_end":144,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18291323,"byte_end":18291330,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18291335,"byte_end":18291338,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ - When `proxy(true)`:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18291343,"byte_end":18291368,"line_start":147,"line_end":147,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18291373,"byte_end":18291376,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ ```http","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18291381,"byte_end":18291392,"line_start":149,"line_end":149,"column_start":5,"column_end":16}},{"value":"/ GET http://hyper.rs/guide HTTP/1.1","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18291397,"byte_end":18291435,"line_start":150,"line_end":150,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18291440,"byte_end":18291447,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18291452,"byte_end":18291455,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ Default is `false`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18291460,"byte_end":18291483,"line_start":153,"line_end":153,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3972},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18291680,"byte_end":18291690,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"is_proxied","qualname":"<Connected>::is_proxied","value":"fn is_proxied(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines if the connected transport is to an HTTP proxy.\n","sig":null,"attributes":[{"value":"/ Determines if the connected transport is to an HTTP proxy.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18291606,"byte_end":18291668,"line_start":159,"line_end":159,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3973},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18291840,"byte_end":18291845,"line_start":165,"line_end":165,"column_start":12,"column_end":17},"name":"extra","qualname":"<Connected>::extra","value":"fn extra<T>(Self, T) -> Connected where T: Clone + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Set extra connection information to be set in the extensions of every `Response`.\n","sig":null,"attributes":[{"value":"/ Set extra connection information to be set in the extensions of every `Response`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18291743,"byte_end":18291828,"line_start":164,"line_end":164,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":3975},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18292233,"byte_end":18292243,"line_start":175,"line_end":175,"column_start":12,"column_end":22},"name":"get_extras","qualname":"<Connected>::get_extras","value":"fn get_extras(&Self, &mut Extensions)","parent":null,"children":[],"decl_id":null,"docs":" Copies the extra connection information into an `Extensions` map.\n","sig":null,"attributes":[{"value":"/ Copies the extra connection information into an `Extensions` map.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18292152,"byte_end":18292221,"line_start":174,"line_end":174,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3976},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18292469,"byte_end":18292482,"line_start":182,"line_end":182,"column_start":12,"column_end":25},"name":"negotiated_h2","qualname":"<Connected>::negotiated_h2","value":"fn negotiated_h2(Self) -> Connected","parent":null,"children":[],"decl_id":null,"docs":" Set that the connected transport negotiated HTTP/2 as its next protocol.\n","sig":null,"attributes":[{"value":"/ Set that the connected transport negotiated HTTP/2 as its next protocol.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18292381,"byte_end":18292457,"line_start":181,"line_end":181,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3977},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18292655,"byte_end":18292671,"line_start":188,"line_end":188,"column_start":12,"column_end":28},"name":"is_negotiated_h2","qualname":"<Connected>::is_negotiated_h2","value":"fn is_negotiated_h2(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines if the connected transport negotiated HTTP/2 as its next protocol.\n","sig":null,"attributes":[{"value":"/ Determines if the connected transport negotiated HTTP/2 as its next protocol.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18292562,"byte_end":18292643,"line_start":187,"line_end":187,"column_start":5,"column_end":86}}]},{"kind":"Trait","id":{"krate":0,"index":4028},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18295400,"byte_end":18295407,"line_start":292,"line_end":292,"column_start":15,"column_end":22},"name":"Connect","qualname":"::client::connect::sealed::Connect","value":"Connect: Sealed + Sized","parent":null,"children":[{"krate":0,"index":4029},{"krate":0,"index":4030}],"decl_id":null,"docs":" Connect to a destination, returning an IO transport.","sig":null,"attributes":[{"value":"/ Connect to a destination, returning an IO transport.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18294797,"byte_end":18294853,"line_start":280,"line_end":280,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18294858,"byte_end":18294861,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ A connector receives a [`Uri`](::http::Uri) and returns a `Future` of the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18294866,"byte_end":18294943,"line_start":282,"line_end":282,"column_start":5,"column_end":82}},{"value":"/ ready connection.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18294948,"byte_end":18294969,"line_start":283,"line_end":283,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18294974,"byte_end":18294977,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ # Trait Alias","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18294982,"byte_end":18294999,"line_start":285,"line_end":285,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18295004,"byte_end":18295007,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ This is really just an *alias* for the `tower::Service` trait, with","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18295012,"byte_end":18295083,"line_start":287,"line_end":287,"column_start":5,"column_end":76}},{"value":"/ additional bounds set for convenience *inside* hyper. You don't actually","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18295088,"byte_end":18295164,"line_start":288,"line_end":288,"column_start":5,"column_end":81}},{"value":"/ implement this trait, but `tower::Service<Uri>` instead.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18295169,"byte_end":18295229,"line_start":289,"line_end":289,"column_start":5,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":4029},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18295462,"byte_end":18295466,"line_start":294,"line_end":294,"column_start":14,"column_end":18},"name":"_Svc","qualname":"::client::connect::sealed::Connect::_Svc","value":"type _Svc: ConnectSvc;","parent":{"krate":0,"index":4028},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4030},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18295514,"byte_end":18295521,"line_start":296,"line_end":296,"column_start":12,"column_end":19},"name":"connect","qualname":"::client::connect::sealed::Connect::connect","value":"fn connect(Self, Internal, Uri) -> <Self::_Svc as ConnectSvc>::Future","parent":{"krate":0,"index":4028},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4031},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18295623,"byte_end":18295633,"line_start":299,"line_end":299,"column_start":15,"column_end":25},"name":"ConnectSvc","qualname":"::client::connect::sealed::ConnectSvc","value":"ConnectSvc","parent":null,"children":[{"krate":0,"index":4032},{"krate":0,"index":4033},{"krate":0,"index":4034},{"krate":0,"index":4035}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4032},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18295649,"byte_end":18295659,"line_start":300,"line_end":300,"column_start":14,"column_end":24},"name":"Connection","qualname":"::client::connect::sealed::ConnectSvc::Connection","value":"type Connection: AsyncRead + AsyncWrite + Connection + Unpin + Send + 'static;","parent":{"krate":0,"index":4031},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4033},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18295736,"byte_end":18295741,"line_start":301,"line_end":301,"column_start":14,"column_end":19},"name":"Error","qualname":"::client::connect::sealed::ConnectSvc::Error","value":"type Error: Into<Box<dyn StdError + Send + Sync>>;","parent":{"krate":0,"index":4031},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4034},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18295795,"byte_end":18295801,"line_start":302,"line_end":302,"column_start":14,"column_end":20},"name":"Future","qualname":"::client::connect::sealed::ConnectSvc::Future","value":"type Future: Future<Output = Result<Self::Connection, Self::Error>> + Unpin + Send + 'static;","parent":{"krate":0,"index":4031},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4035},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18295896,"byte_end":18295903,"line_start":304,"line_end":304,"column_start":12,"column_end":19},"name":"connect","qualname":"::client::connect::sealed::ConnectSvc::connect","value":"fn connect(Self, Internal, Uri) -> Self::Future","parent":{"krate":0,"index":4031},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4040},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18296283,"byte_end":18296290,"line_start":316,"line_end":316,"column_start":12,"column_end":19},"name":"connect","qualname":"<S as client::connect::sealed::Connect>::connect","value":"fn connect(Self, Internal, Uri) -> crate::service::Oneshot<S, Uri>","parent":{"krate":0,"index":4028},"children":[],"decl_id":{"krate":0,"index":4030},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4047},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18296830,"byte_end":18296837,"line_start":332,"line_end":332,"column_start":12,"column_end":19},"name":"connect","qualname":"<S as client::connect::sealed::ConnectSvc>::connect","value":"fn connect(Self, Internal, Uri) -> Self::Future","parent":{"krate":0,"index":4031},"children":[],"decl_id":{"krate":0,"index":4035},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4051},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18297238,"byte_end":18297244,"line_start":346,"line_end":346,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::client::connect::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4052},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18297307,"byte_end":18297315,"line_start":348,"line_end":348,"column_start":16,"column_end":24},"name":"Internal","qualname":"::client::connect::sealed::Internal","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18297252,"byte_end":18297291,"line_start":347,"line_end":347,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":4680},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18344806,"byte_end":18344812,"line_start":29,"line_end":29,"column_start":12,"column_end":18},"name":"Client","qualname":"::client::client::Client","value":"Client {  }","parent":null,"children":[{"krate":0,"index":4683},{"krate":0,"index":4684},{"krate":0,"index":4685},{"krate":0,"index":4686}],"decl_id":null,"docs":" A Client to make outgoing HTTP requests.","sig":null,"attributes":[{"value":"/ A Client to make outgoing HTTP requests.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18344535,"byte_end":18344579,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18344580,"byte_end":18344583,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ `Client` is cheap to clone and cloning is the recommended way to share a `Client`. The","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18344584,"byte_end":18344674,"line_start":26,"line_end":26,"column_start":1,"column_end":91}},{"value":"/ underlying connection pool will be reused.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18344675,"byte_end":18344721,"line_start":27,"line_end":27,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":4687},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18345232,"byte_end":18345246,"line_start":47,"line_end":47,"column_start":12,"column_end":26},"name":"ResponseFuture","qualname":"::client::client::ResponseFuture","value":"ResponseFuture {  }","parent":null,"children":[{"krate":0,"index":4688}],"decl_id":null,"docs":" A `Future` that will resolve to an HTTP Response.","sig":null,"attributes":[{"value":"/ A `Future` that will resolve to an HTTP Response.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18345051,"byte_end":18345104,"line_start":43,"line_end":43,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18345105,"byte_end":18345108,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ This is returned by `Client::request` (and `Client::get`).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18345109,"byte_end":18345171,"line_start":45,"line_end":45,"column_start":1,"column_end":63}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18345172,"byte_end":18345220,"line_start":46,"line_end":46,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4690},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18345813,"byte_end":18345816,"line_start":64,"line_end":64,"column_start":12,"column_end":15},"name":"new","qualname":"<Client<HttpConnector, Body>>::new","value":"fn new() -> Client<HttpConnector, Body>","parent":null,"children":[],"decl_id":null,"docs":" Create a new Client with the default [config](Builder).","sig":null,"attributes":[{"value":"/ Create a new Client with the default [config](Builder).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18345436,"byte_end":18345495,"line_start":55,"line_end":55,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18345500,"byte_end":18345503,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18345508,"byte_end":18345518,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18345523,"byte_end":18345526,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ The default connector does **not** handle TLS. Speaking to `https`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18345531,"byte_end":18345601,"line_start":59,"line_end":59,"column_start":5,"column_end":75}},{"value":"/ destinations will require [configuring a connector that implements","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18345606,"byte_end":18345676,"line_start":60,"line_end":60,"column_start":5,"column_end":75}},{"value":"/ TLS](https://hyper.rs/guides/client/configuration).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18345681,"byte_end":18345736,"line_start":61,"line_end":61,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18345792,"byte_end":18345801,"line_start":63,"line_end":63,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4692},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18345979,"byte_end":18345986,"line_start":71,"line_end":71,"column_start":8,"column_end":15},"name":"default","qualname":"<Client<HttpConnector, Body> as std::default::Default>::default","value":"fn default() -> Client<HttpConnector, Body>","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4694},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18346607,"byte_end":18346614,"line_start":97,"line_end":97,"column_start":12,"column_end":19},"name":"builder","qualname":"<Client<(), Body>>::builder","value":"fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Create a builder to configure a new `Client`.","sig":null,"attributes":[{"value":"/ Create a builder to configure a new `Client`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18346081,"byte_end":18346130,"line_start":77,"line_end":77,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18346135,"byte_end":18346138,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18346143,"byte_end":18346156,"line_start":79,"line_end":79,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18346161,"byte_end":18346164,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18346169,"byte_end":18346176,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(feature  = \"runtime\")]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18346181,"byte_end":18346215,"line_start":82,"line_end":82,"column_start":5,"column_end":39}},{"value":"/ # fn run () {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18346220,"byte_end":18346237,"line_start":83,"line_end":83,"column_start":5,"column_end":22}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18346242,"byte_end":18346270,"line_start":84,"line_end":84,"column_start":5,"column_end":33}},{"value":"/ use hyper::Client;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18346275,"byte_end":18346297,"line_start":85,"line_end":85,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18346302,"byte_end":18346305,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let client = Client::builder()","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18346310,"byte_end":18346344,"line_start":87,"line_end":87,"column_start":5,"column_end":39}},{"value":"/     .pool_idle_timeout(Duration::from_secs(30))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18346349,"byte_end":18346400,"line_start":88,"line_end":88,"column_start":5,"column_end":56}},{"value":"/     .http2_only(true)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18346405,"byte_end":18346430,"line_start":89,"line_end":89,"column_start":5,"column_end":30}},{"value":"/     .build_http();","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18346435,"byte_end":18346457,"line_start":90,"line_end":90,"column_start":5,"column_end":27}},{"value":"/ # let infer: Client<_, hyper::Body> = client;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18346462,"byte_end":18346511,"line_start":91,"line_end":91,"column_start":5,"column_end":54}},{"value":"/ # drop(infer);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18346516,"byte_end":18346534,"line_start":92,"line_end":92,"column_start":5,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18346539,"byte_end":18346546,"line_start":93,"line_end":93,"column_start":5,"column_end":12}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18346551,"byte_end":18346569,"line_start":94,"line_end":94,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18346574,"byte_end":18346581,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18346586,"byte_end":18346595,"line_start":96,"line_end":96,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4698},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18347454,"byte_end":18347457,"line_start":130,"line_end":130,"column_start":12,"column_end":15},"name":"get","qualname":"<Client<C, B>>::get","value":"fn get(&Self, Uri) -> ResponseFuture where B: Default","parent":null,"children":[],"decl_id":null,"docs":" Send a `GET` request to the supplied `Uri`.","sig":null,"attributes":[{"value":"/ Send a `GET` request to the supplied `Uri`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18346856,"byte_end":18346903,"line_start":109,"line_end":109,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18346908,"byte_end":18346911,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18346916,"byte_end":18346926,"line_start":111,"line_end":111,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18346931,"byte_end":18346934,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ This requires that the `HttpBody` type have a `Default` implementation.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18346939,"byte_end":18347014,"line_start":113,"line_end":113,"column_start":5,"column_end":80}},{"value":"/ It *should* return an \"empty\" version of itself, such that","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18347019,"byte_end":18347081,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"/ `HttpBody::is_end_stream` is `true`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18347086,"byte_end":18347126,"line_start":115,"line_end":115,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18347131,"byte_end":18347134,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18347139,"byte_end":18347152,"line_start":117,"line_end":117,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18347157,"byte_end":18347160,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18347165,"byte_end":18347172,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(feature  = \"runtime\")]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18347177,"byte_end":18347211,"line_start":120,"line_end":120,"column_start":5,"column_end":39}},{"value":"/ # fn run () {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18347216,"byte_end":18347233,"line_start":121,"line_end":121,"column_start":5,"column_end":22}},{"value":"/ use hyper::{Client, Uri};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18347238,"byte_end":18347267,"line_start":122,"line_end":122,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18347272,"byte_end":18347275,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let client = Client::new();","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18347280,"byte_end":18347311,"line_start":124,"line_end":124,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18347316,"byte_end":18347319,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let future = client.get(Uri::from_static(\"http://httpbin.org/ip\"));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18347324,"byte_end":18347395,"line_start":126,"line_end":126,"column_start":5,"column_end":76}},{"value":"/ # }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18347400,"byte_end":18347407,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18347412,"byte_end":18347430,"line_start":128,"line_end":128,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18347435,"byte_end":18347442,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4699},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18348378,"byte_end":18348385,"line_start":165,"line_end":165,"column_start":12,"column_end":19},"name":"request","qualname":"<Client<C, B>>::request","value":"fn request(&Self, Request<B>) -> ResponseFuture","parent":null,"children":[],"decl_id":null,"docs":" Send a constructed `Request` using this `Client`.","sig":null,"attributes":[{"value":"/ Send a constructed `Request` using this `Client`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18347810,"byte_end":18347863,"line_start":144,"line_end":144,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18347868,"byte_end":18347871,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18347876,"byte_end":18347889,"line_start":146,"line_end":146,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18347894,"byte_end":18347897,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18347902,"byte_end":18347909,"line_start":148,"line_end":148,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(feature  = \"runtime\")]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18347914,"byte_end":18347948,"line_start":149,"line_end":149,"column_start":5,"column_end":39}},{"value":"/ # fn run () {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18347953,"byte_end":18347970,"line_start":150,"line_end":150,"column_start":5,"column_end":22}},{"value":"/ use hyper::{Body, Method, Client, Request};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18347975,"byte_end":18348022,"line_start":151,"line_end":151,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18348027,"byte_end":18348030,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ let client = Client::new();","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18348035,"byte_end":18348066,"line_start":153,"line_end":153,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18348071,"byte_end":18348074,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ let req = Request::builder()","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18348079,"byte_end":18348111,"line_start":155,"line_end":155,"column_start":5,"column_end":37}},{"value":"/     .method(Method::POST)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18348116,"byte_end":18348145,"line_start":156,"line_end":156,"column_start":5,"column_end":34}},{"value":"/     .uri(\"http://httpbin.org/post\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18348150,"byte_end":18348189,"line_start":157,"line_end":157,"column_start":5,"column_end":44}},{"value":"/     .body(Body::from(\"Hallo!\"))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18348194,"byte_end":18348229,"line_start":158,"line_end":158,"column_start":5,"column_end":40}},{"value":"/     .expect(\"request builder\");","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18348234,"byte_end":18348269,"line_start":159,"line_end":159,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18348274,"byte_end":18348277,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let future = client.request(req);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18348282,"byte_end":18348319,"line_start":161,"line_end":161,"column_start":5,"column_end":42}},{"value":"/ # }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18348324,"byte_end":18348331,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18348336,"byte_end":18348354,"line_start":163,"line_end":163,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18348359,"byte_end":18348366,"line_start":164,"line_end":164,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4731},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18363753,"byte_end":18363763,"line_start":535,"line_end":535,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<Client<C, B> as tower_service::Service>::poll_ready","value":"fn poll_ready(&mut Self, &mut task::Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":52,"index":13},"children":[],"decl_id":{"krate":52,"index":18},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4732},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18363879,"byte_end":18363883,"line_start":539,"line_end":539,"column_start":8,"column_end":12},"name":"call","qualname":"<Client<C, B> as tower_service::Service>::call","value":"fn call(&mut Self, Request<B>) -> Self::Future","parent":{"krate":52,"index":13},"children":[],"decl_id":{"krate":52,"index":19},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4739},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18364303,"byte_end":18364313,"line_start":555,"line_end":555,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<&'_ Client<C, B> as tower_service::Service>::poll_ready","value":"fn poll_ready(&mut Self, &mut task::Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":52,"index":13},"children":[],"decl_id":{"krate":52,"index":18},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4740},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18364429,"byte_end":18364433,"line_start":559,"line_end":559,"column_start":8,"column_end":12},"name":"call","qualname":"<&'_ Client<C, B> as tower_service::Service>::call","value":"fn call(&mut Self, Request<B>) -> Self::Future","parent":{"krate":52,"index":13},"children":[],"decl_id":{"krate":52,"index":19},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4744},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18364565,"byte_end":18364570,"line_start":565,"line_end":565,"column_start":8,"column_end":13},"name":"clone","qualname":"<Client<C, B> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Client<C, B>","parent":{"krate":2,"index":2772},"children":[],"decl_id":{"krate":2,"index":2773},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4748},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18364858,"byte_end":18364861,"line_start":576,"line_end":576,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Client<C, B> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9902},"children":[],"decl_id":{"krate":2,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4754},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18365514,"byte_end":18365517,"line_start":602,"line_end":602,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ResponseFuture as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9902},"children":[],"decl_id":{"krate":2,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4757},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18365703,"byte_end":18365707,"line_start":610,"line_end":610,"column_start":8,"column_end":12},"name":"poll","qualname":"<ResponseFuture as futures_util::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut task::Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13330},"children":[],"decl_id":{"krate":2,"index":13332},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5528},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18373865,"byte_end":18373872,"line_start":895,"line_end":895,"column_start":12,"column_end":19},"name":"Builder","qualname":"::client::client::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":5529},{"krate":0,"index":5530},{"krate":0,"index":5531}],"decl_id":null,"docs":" A builder to configure a new [`Client`](Client).","sig":null,"attributes":[{"value":"/ A builder to configure a new [`Client`](Client).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18373332,"byte_end":18373384,"line_start":874,"line_end":874,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18373385,"byte_end":18373388,"line_start":875,"line_end":875,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18373389,"byte_end":18373402,"line_start":876,"line_end":876,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18373403,"byte_end":18373406,"line_start":877,"line_end":877,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18373407,"byte_end":18373414,"line_start":878,"line_end":878,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature  = \"runtime\")]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18373415,"byte_end":18373449,"line_start":879,"line_end":879,"column_start":1,"column_end":35}},{"value":"/ # fn run () {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18373450,"byte_end":18373467,"line_start":880,"line_end":880,"column_start":1,"column_end":18}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18373468,"byte_end":18373496,"line_start":881,"line_end":881,"column_start":1,"column_end":29}},{"value":"/ use hyper::Client;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18373497,"byte_end":18373519,"line_start":882,"line_end":882,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18373520,"byte_end":18373523,"line_start":883,"line_end":883,"column_start":1,"column_end":4}},{"value":"/ let client = Client::builder()","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18373524,"byte_end":18373558,"line_start":884,"line_end":884,"column_start":1,"column_end":35}},{"value":"/     .pool_idle_timeout(Duration::from_secs(30))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18373559,"byte_end":18373610,"line_start":885,"line_end":885,"column_start":1,"column_end":52}},{"value":"/     .http2_only(true)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18373611,"byte_end":18373636,"line_start":886,"line_end":886,"column_start":1,"column_end":26}},{"value":"/     .build_http();","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18373637,"byte_end":18373659,"line_start":887,"line_end":887,"column_start":1,"column_end":23}},{"value":"/ # let infer: Client<_, hyper::Body> = client;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18373660,"byte_end":18373709,"line_start":888,"line_end":888,"column_start":1,"column_end":50}},{"value":"/ # drop(infer);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18373710,"byte_end":18373728,"line_start":889,"line_end":889,"column_start":1,"column_end":19}},{"value":"/ # }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18373729,"byte_end":18373736,"line_start":890,"line_end":890,"column_start":1,"column_end":8}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18373737,"byte_end":18373755,"line_start":891,"line_end":891,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18373756,"byte_end":18373763,"line_start":892,"line_end":892,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4818},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18374003,"byte_end":18374010,"line_start":902,"line_end":902,"column_start":8,"column_end":15},"name":"default","qualname":"<Builder as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4820},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18374604,"byte_end":18374614,"line_start":923,"line_end":923,"column_start":12,"column_end":22},"name":"keep_alive","qualname":"<Builder>::keep_alive","value":"fn keep_alive(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note =\n\"name is confusing, to disable the connection pool, call pool_max_idle_per_host(0)\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18374473,"byte_end":18374592,"line_start":920,"line_end":922,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":4821},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18375046,"byte_end":18375064,"line_start":938,"line_end":938,"column_start":12,"column_end":30},"name":"keep_alive_timeout","qualname":"<Builder>::keep_alive_timeout","value":"fn keep_alive_timeout<D>(&mut Self, D) -> &mut Self where\nD: Into<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"renamed to `pool_idle_timeout`\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18374980,"byte_end":18375034,"line_start":937,"line_end":937,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":4823},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18375359,"byte_end":18375376,"line_start":950,"line_end":950,"column_start":12,"column_end":29},"name":"pool_idle_timeout","qualname":"<Builder>::pool_idle_timeout","value":"fn pool_idle_timeout<D>(&mut Self, D) -> &mut Self where\nD: Into<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Set an optional timeout for idle sockets being kept-alive.","sig":null,"attributes":[{"value":"/ Set an optional timeout for idle sockets being kept-alive.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18375198,"byte_end":18375260,"line_start":945,"line_end":945,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18375265,"byte_end":18375268,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/ Pass `None` to disable timeout.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18375273,"byte_end":18375308,"line_start":947,"line_end":947,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18375313,"byte_end":18375316,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/ Default is 90 seconds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18375321,"byte_end":18375347,"line_start":949,"line_end":949,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":4825},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18375629,"byte_end":18375646,"line_start":960,"line_end":960,"column_start":12,"column_end":29},"name":"max_idle_per_host","qualname":"<Builder>::max_idle_per_host","value":"fn max_idle_per_host(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"renamed to `pool_max_idle_per_host`\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18375558,"byte_end":18375617,"line_start":959,"line_end":959,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":4826},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18375899,"byte_end":18375921,"line_start":968,"line_end":968,"column_start":12,"column_end":34},"name":"pool_max_idle_per_host","qualname":"<Builder>::pool_max_idle_per_host","value":"fn pool_max_idle_per_host(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum idle connection per host allowed in the pool.","sig":null,"attributes":[{"value":"/ Sets the maximum idle connection per host allowed in the pool.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18375769,"byte_end":18375835,"line_start":965,"line_end":965,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18375840,"byte_end":18375843,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ Default is `usize::MAX` (no limit).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18375848,"byte_end":18375887,"line_start":967,"line_end":967,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4827},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18376276,"byte_end":18376301,"line_start":980,"line_end":980,"column_start":12,"column_end":37},"name":"http1_read_buf_exact_size","qualname":"<Builder>::http1_read_buf_exact_size","value":"fn http1_read_buf_exact_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the exact size of the read buffer to *always* use.","sig":null,"attributes":[{"value":"/ Sets the exact size of the read buffer to *always* use.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18376067,"byte_end":18376126,"line_start":975,"line_end":975,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18376131,"byte_end":18376134,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ Note that setting this option unsets the `http1_max_buf_size` option.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18376139,"byte_end":18376212,"line_start":977,"line_end":977,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18376217,"byte_end":18376220,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/ Default is an adaptive read buffer.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18376225,"byte_end":18376264,"line_start":979,"line_end":979,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4828},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18376841,"byte_end":18376859,"line_start":996,"line_end":996,"column_start":12,"column_end":30},"name":"http1_max_buf_size","qualname":"<Builder>::http1_max_buf_size","value":"fn http1_max_buf_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum buffer size for the connection.","sig":null,"attributes":[{"value":"/ Set the maximum buffer size for the connection.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18376426,"byte_end":18376477,"line_start":985,"line_end":985,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18376482,"byte_end":18376485,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ Default is ~400kb.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18376490,"byte_end":18376512,"line_start":987,"line_end":987,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18376517,"byte_end":18376520,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ Note that setting this option unsets the `http1_read_exact_buf_size` option.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18376525,"byte_end":18376605,"line_start":989,"line_end":989,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18376610,"byte_end":18376613,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18376618,"byte_end":18376630,"line_start":991,"line_end":991,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18376635,"byte_end":18376638,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ The minimum value allowed is 8192. This method panics if the passed `max` is less than the minimum.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18376643,"byte_end":18376746,"line_start":993,"line_end":993,"column_start":5,"column_end":108}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18376751,"byte_end":18376776,"line_start":994,"line_end":994,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4829},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18378064,"byte_end":18378113,"line_start":1023,"line_end":1023,"column_start":12,"column_end":61},"name":"http1_allow_spaces_after_header_name_in_responses","qualname":"<Builder>::http1_allow_spaces_after_header_name_in_responses","value":"fn http1_allow_spaces_after_header_name_in_responses(&mut Self, bool)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/1 connections will accept spaces between header names\n and the colon that follow them in responses.","sig":null,"attributes":[{"value":"/ Set whether HTTP/1 connections will accept spaces between header names","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18376973,"byte_end":18377047,"line_start":1001,"line_end":1001,"column_start":5,"column_end":79}},{"value":"/ and the colon that follow them in responses.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18377052,"byte_end":18377100,"line_start":1002,"line_end":1002,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18377105,"byte_end":18377108,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ Newline codepoints (`\\r` and `\\n`) will be transformed to spaces when","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18377113,"byte_end":18377186,"line_start":1004,"line_end":1004,"column_start":5,"column_end":78}},{"value":"/ parsing.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18377191,"byte_end":18377203,"line_start":1005,"line_end":1005,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18377208,"byte_end":18377211,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ You probably don't need this, here is what [RFC 7230 Section 3.2.4.] has","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18377216,"byte_end":18377292,"line_start":1007,"line_end":1007,"column_start":5,"column_end":81}},{"value":"/ to say about it:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18377297,"byte_end":18377317,"line_start":1008,"line_end":1008,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18377322,"byte_end":18377325,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ > No whitespace is allowed between the header field-name and colon. In","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18377330,"byte_end":18377404,"line_start":1010,"line_end":1010,"column_start":5,"column_end":79}},{"value":"/ > the past, differences in the handling of such whitespace have led to","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18377409,"byte_end":18377483,"line_start":1011,"line_end":1011,"column_start":5,"column_end":79}},{"value":"/ > security vulnerabilities in request routing and response handling. A","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18377488,"byte_end":18377562,"line_start":1012,"line_end":1012,"column_start":5,"column_end":79}},{"value":"/ > server MUST reject any received request message that contains","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18377567,"byte_end":18377634,"line_start":1013,"line_end":1013,"column_start":5,"column_end":72}},{"value":"/ > whitespace between a header field-name and colon with a response code","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18377639,"byte_end":18377714,"line_start":1014,"line_end":1014,"column_start":5,"column_end":80}},{"value":"/ > of 400 (Bad Request). A proxy MUST remove any such whitespace from a","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18377719,"byte_end":18377793,"line_start":1015,"line_end":1015,"column_start":5,"column_end":79}},{"value":"/ > response message before forwarding the message downstream.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18377798,"byte_end":18377862,"line_start":1016,"line_end":1016,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18377867,"byte_end":18377870,"line_start":1017,"line_end":1017,"column_start":5,"column_end":8}},{"value":"/ Note that this setting does not affect HTTP/2.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18377875,"byte_end":18377925,"line_start":1018,"line_end":1018,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18377930,"byte_end":18377933,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18377938,"byte_end":18377959,"line_start":1020,"line_end":1020,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18377964,"byte_end":18377967,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ [RFC 7230 Section 3.2.4.]: https://tools.ietf.org/html/rfc7230#section-3.2.4","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18377972,"byte_end":18378052,"line_start":1022,"line_end":1022,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4830},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18379889,"byte_end":18379940,"line_start":1060,"line_end":1060,"column_start":12,"column_end":63},"name":"http1_allow_obsolete_multiline_headers_in_responses","qualname":"<Builder>::http1_allow_obsolete_multiline_headers_in_responses","value":"fn http1_allow_obsolete_multiline_headers_in_responses(&mut Self, bool)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/1 connections will accept obsolete line folding for\n header values.","sig":null,"attributes":[{"value":"/ Set whether HTTP/1 connections will accept obsolete line folding for","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18378270,"byte_end":18378342,"line_start":1029,"line_end":1029,"column_start":5,"column_end":77}},{"value":"/ header values.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18378347,"byte_end":18378365,"line_start":1030,"line_end":1030,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18378370,"byte_end":18378373,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ You probably don't need this, here is what [RFC 7230 Section 3.2.4.] has","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18378378,"byte_end":18378454,"line_start":1032,"line_end":1032,"column_start":5,"column_end":81}},{"value":"/ to say about it:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18378459,"byte_end":18378479,"line_start":1033,"line_end":1033,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18378484,"byte_end":18378487,"line_start":1034,"line_end":1034,"column_start":5,"column_end":8}},{"value":"/ > A server that receives an obs-fold in a request message that is not","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18378492,"byte_end":18378565,"line_start":1035,"line_end":1035,"column_start":5,"column_end":78}},{"value":"/ > within a message/http container MUST either reject the message by","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18378570,"byte_end":18378641,"line_start":1036,"line_end":1036,"column_start":5,"column_end":76}},{"value":"/ > sending a 400 (Bad Request), preferably with a representation","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18378646,"byte_end":18378713,"line_start":1037,"line_end":1037,"column_start":5,"column_end":72}},{"value":"/ > explaining that obsolete line folding is unacceptable, or replace","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18378718,"byte_end":18378789,"line_start":1038,"line_end":1038,"column_start":5,"column_end":76}},{"value":"/ > each received obs-fold with one or more SP octets prior to","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18378794,"byte_end":18378858,"line_start":1039,"line_end":1039,"column_start":5,"column_end":69}},{"value":"/ > interpreting the field value or forwarding the message downstream.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18378863,"byte_end":18378935,"line_start":1040,"line_end":1040,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18378940,"byte_end":18378943,"line_start":1041,"line_end":1041,"column_start":5,"column_end":8}},{"value":"/ > A proxy or gateway that receives an obs-fold in a response message","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18378948,"byte_end":18379020,"line_start":1042,"line_end":1042,"column_start":5,"column_end":77}},{"value":"/ > that is not within a message/http container MUST either discard the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18379025,"byte_end":18379098,"line_start":1043,"line_end":1043,"column_start":5,"column_end":78}},{"value":"/ > message and replace it with a 502 (Bad Gateway) response, preferably","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18379103,"byte_end":18379177,"line_start":1044,"line_end":1044,"column_start":5,"column_end":79}},{"value":"/ > with a representation explaining that unacceptable line folding was","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18379182,"byte_end":18379255,"line_start":1045,"line_end":1045,"column_start":5,"column_end":78}},{"value":"/ > received, or replace each received obs-fold with one or more SP","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18379260,"byte_end":18379329,"line_start":1046,"line_end":1046,"column_start":5,"column_end":74}},{"value":"/ > octets prior to interpreting the field value or forwarding the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18379334,"byte_end":18379402,"line_start":1047,"line_end":1047,"column_start":5,"column_end":73}},{"value":"/ > message downstream.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18379407,"byte_end":18379432,"line_start":1048,"line_end":1048,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18379437,"byte_end":18379440,"line_start":1049,"line_end":1049,"column_start":5,"column_end":8}},{"value":"/ > A user agent that receives an obs-fold in a response message that is","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18379445,"byte_end":18379519,"line_start":1050,"line_end":1050,"column_start":5,"column_end":79}},{"value":"/ > not within a message/http container MUST replace each received","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18379524,"byte_end":18379592,"line_start":1051,"line_end":1051,"column_start":5,"column_end":73}},{"value":"/ > obs-fold with one or more SP octets prior to interpreting the field","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18379597,"byte_end":18379670,"line_start":1052,"line_end":1052,"column_start":5,"column_end":78}},{"value":"/ > value.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18379675,"byte_end":18379687,"line_start":1053,"line_end":1053,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18379692,"byte_end":18379695,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ Note that this setting does not affect HTTP/2.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18379700,"byte_end":18379750,"line_start":1055,"line_end":1055,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18379755,"byte_end":18379758,"line_start":1056,"line_end":1056,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18379763,"byte_end":18379784,"line_start":1057,"line_end":1057,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18379789,"byte_end":18379792,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ [RFC 7230 Section 3.2.4.]: https://tools.ietf.org/html/rfc7230#section-3.2.4","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18379797,"byte_end":18379877,"line_start":1059,"line_end":1059,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4831},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18380697,"byte_end":18380709,"line_start":1078,"line_end":1078,"column_start":12,"column_end":24},"name":"http1_writev","qualname":"<Builder>::http1_writev","value":"fn http1_writev(&mut Self, bool) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/1 connections should try to use vectored writes,\n or always flatten into a single buffer.","sig":null,"attributes":[{"value":"/ Set whether HTTP/1 connections should try to use vectored writes,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18380099,"byte_end":18380168,"line_start":1066,"line_end":1066,"column_start":5,"column_end":74}},{"value":"/ or always flatten into a single buffer.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18380173,"byte_end":18380216,"line_start":1067,"line_end":1067,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18380221,"byte_end":18380224,"line_start":1068,"line_end":1068,"column_start":5,"column_end":8}},{"value":"/ Note that setting this to false may mean more copies of body data,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18380229,"byte_end":18380299,"line_start":1069,"line_end":1069,"column_start":5,"column_end":75}},{"value":"/ but may also improve performance when an IO transport doesn't","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18380304,"byte_end":18380369,"line_start":1070,"line_end":1070,"column_start":5,"column_end":70}},{"value":"/ support vectored writes well, such as most TLS implementations.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18380374,"byte_end":18380441,"line_start":1071,"line_end":1071,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18380446,"byte_end":18380449,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/ Setting this to true will force hyper to use queued strategy","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18380454,"byte_end":18380518,"line_start":1073,"line_end":1073,"column_start":5,"column_end":69}},{"value":"/ which may eliminate unnecessary cloning on some TLS backends","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18380523,"byte_end":18380587,"line_start":1074,"line_end":1074,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18380592,"byte_end":18380595,"line_start":1075,"line_end":1075,"column_start":5,"column_end":8}},{"value":"/ Default is `auto`. In this mode hyper will try to guess which","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18380600,"byte_end":18380665,"line_start":1076,"line_end":1076,"column_start":5,"column_end":70}},{"value":"/ mode to use","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18380670,"byte_end":18380685,"line_start":1077,"line_end":1077,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4832},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18381037,"byte_end":18381061,"line_start":1089,"line_end":1089,"column_start":12,"column_end":36},"name":"http1_title_case_headers","qualname":"<Builder>::http1_title_case_headers","value":"fn http1_title_case_headers(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/1 connections will write header names as title case at\n the socket level.","sig":null,"attributes":[{"value":"/ Set whether HTTP/1 connections will write header names as title case at","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18380827,"byte_end":18380902,"line_start":1083,"line_end":1083,"column_start":5,"column_end":80}},{"value":"/ the socket level.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18380907,"byte_end":18380928,"line_start":1084,"line_end":1084,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18380933,"byte_end":18380936,"line_start":1085,"line_end":1085,"column_start":5,"column_end":8}},{"value":"/ Note that this setting does not affect HTTP/2.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18380941,"byte_end":18380991,"line_start":1086,"line_end":1086,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18380996,"byte_end":18380999,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18381004,"byte_end":18381025,"line_start":1088,"line_end":1088,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4833},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18381785,"byte_end":18381811,"line_start":1107,"line_end":1107,"column_start":12,"column_end":38},"name":"http1_preserve_header_case","qualname":"<Builder>::http1_preserve_header_case","value":"fn http1_preserve_header_case(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether to support preserving original header cases.","sig":null,"attributes":[{"value":"/ Set whether to support preserving original header cases.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18381180,"byte_end":18381240,"line_start":1094,"line_end":1094,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18381245,"byte_end":18381248,"line_start":1095,"line_end":1095,"column_start":5,"column_end":8}},{"value":"/ Currently, this will record the original cases received, and store them","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18381253,"byte_end":18381328,"line_start":1096,"line_end":1096,"column_start":5,"column_end":80}},{"value":"/ in a private extension on the `Response`. It will also look for and use","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18381333,"byte_end":18381408,"line_start":1097,"line_end":1097,"column_start":5,"column_end":80}},{"value":"/ such an extension in any provided `Request`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18381413,"byte_end":18381461,"line_start":1098,"line_end":1098,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18381466,"byte_end":18381469,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ Since the relevant extension is still private, there is no way to","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18381474,"byte_end":18381543,"line_start":1100,"line_end":1100,"column_start":5,"column_end":74}},{"value":"/ interact with the original cases. The only effect this can have now is","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18381548,"byte_end":18381622,"line_start":1101,"line_end":1101,"column_start":5,"column_end":79}},{"value":"/ to forward the cases in a proxy-like fashion.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18381627,"byte_end":18381676,"line_start":1102,"line_end":1102,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18381681,"byte_end":18381684,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ Note that this setting does not affect HTTP/2.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18381689,"byte_end":18381739,"line_start":1104,"line_end":1104,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18381744,"byte_end":18381747,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18381752,"byte_end":18381773,"line_start":1106,"line_end":1106,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4834},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18382033,"byte_end":18382049,"line_start":1115,"line_end":1115,"column_start":12,"column_end":28},"name":"http09_responses","qualname":"<Builder>::http09_responses","value":"fn http09_responses(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/0.9 responses should be tolerated.","sig":null,"attributes":[{"value":"/ Set whether HTTP/0.9 responses should be tolerated.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18381932,"byte_end":18381987,"line_start":1112,"line_end":1112,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18381992,"byte_end":18381995,"line_start":1113,"line_end":1113,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18382000,"byte_end":18382021,"line_start":1114,"line_end":1114,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4835},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18382683,"byte_end":18382693,"line_start":1132,"line_end":1132,"column_start":12,"column_end":22},"name":"http2_only","qualname":"<Builder>::http2_only","value":"fn http2_only(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether the connection **must** use HTTP/2.","sig":null,"attributes":[{"value":"/ Set whether the connection **must** use HTTP/2.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18382160,"byte_end":18382211,"line_start":1120,"line_end":1120,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18382216,"byte_end":18382219,"line_start":1121,"line_end":1121,"column_start":5,"column_end":8}},{"value":"/ The destination must either allow HTTP2 Prior Knowledge, or the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18382224,"byte_end":18382291,"line_start":1122,"line_end":1122,"column_start":5,"column_end":72}},{"value":"/ `Connect` should be configured to do use ALPN to upgrade to `h2`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18382296,"byte_end":18382364,"line_start":1123,"line_end":1123,"column_start":5,"column_end":73}},{"value":"/ as part of the connection process. This will not make the `Client`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18382369,"byte_end":18382439,"line_start":1124,"line_end":1124,"column_start":5,"column_end":75}},{"value":"/ utilize ALPN by itself.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18382444,"byte_end":18382471,"line_start":1125,"line_end":1125,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18382476,"byte_end":18382479,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ Note that setting this to true prevents HTTP/1 from being allowed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18382484,"byte_end":18382554,"line_start":1127,"line_end":1127,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18382559,"byte_end":18382562,"line_start":1128,"line_end":1128,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18382567,"byte_end":18382588,"line_start":1129,"line_end":1129,"column_start":5,"column_end":26}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18382593,"byte_end":18382618,"line_start":1130,"line_end":1130,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4836},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18383219,"byte_end":18383251,"line_start":1147,"line_end":1147,"column_start":12,"column_end":44},"name":"http2_initial_stream_window_size","qualname":"<Builder>::http2_initial_stream_window_size","value":"fn http2_initial_stream_window_size<impl Into<Option<u32>>>(&mut Self,\nimpl Into<Option<u32>>) -> &mut Self where\nimpl Into<Option<u32>>: Into<Option<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2\n stream-level flow control.","sig":null,"attributes":[{"value":"/ Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18382830,"byte_end":18382898,"line_start":1137,"line_end":1137,"column_start":5,"column_end":73}},{"value":"/ stream-level flow control.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18382903,"byte_end":18382933,"line_start":1138,"line_end":1138,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18382938,"byte_end":18382941,"line_start":1139,"line_end":1139,"column_start":5,"column_end":8}},{"value":"/ Passing `None` will do nothing.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18382946,"byte_end":18382981,"line_start":1140,"line_end":1140,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18382986,"byte_end":18382989,"line_start":1141,"line_end":1141,"column_start":5,"column_end":8}},{"value":"/ If not set, hyper will use a default.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18382994,"byte_end":18383035,"line_start":1142,"line_end":1142,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18383040,"byte_end":18383043,"line_start":1143,"line_end":1143,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://http2.github.io/http2-spec/#SETTINGS_INITIAL_WINDOW_SIZE","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18383048,"byte_end":18383124,"line_start":1144,"line_end":1144,"column_start":5,"column_end":81}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18383129,"byte_end":18383154,"line_start":1145,"line_end":1145,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4838},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18383667,"byte_end":18383703,"line_start":1160,"line_end":1160,"column_start":12,"column_end":48},"name":"http2_initial_connection_window_size","qualname":"<Builder>::http2_initial_connection_window_size","value":"fn http2_initial_connection_window_size<impl Into<Option<u32>>>(&mut Self,\nimpl Into<Option<u32>>) -> &mut Self where\nimpl Into<Option<u32>>: Into<Option<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Sets the max connection-level flow control for HTTP2","sig":null,"attributes":[{"value":"/ Sets the max connection-level flow control for HTTP2","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18383414,"byte_end":18383470,"line_start":1153,"line_end":1153,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18383475,"byte_end":18383478,"line_start":1154,"line_end":1154,"column_start":5,"column_end":8}},{"value":"/ Passing `None` will do nothing.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18383483,"byte_end":18383518,"line_start":1155,"line_end":1155,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18383523,"byte_end":18383526,"line_start":1156,"line_end":1156,"column_start":5,"column_end":8}},{"value":"/ If not set, hyper will use a default.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18383531,"byte_end":18383572,"line_start":1157,"line_end":1157,"column_start":5,"column_end":46}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18383577,"byte_end":18383602,"line_start":1158,"line_end":1158,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4840},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18384194,"byte_end":18384215,"line_start":1176,"line_end":1176,"column_start":12,"column_end":33},"name":"http2_adaptive_window","qualname":"<Builder>::http2_adaptive_window","value":"fn http2_adaptive_window(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether to use an adaptive flow control.","sig":null,"attributes":[{"value":"/ Sets whether to use an adaptive flow control.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18383893,"byte_end":18383942,"line_start":1169,"line_end":1169,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18383947,"byte_end":18383950,"line_start":1170,"line_end":1170,"column_start":5,"column_end":8}},{"value":"/ Enabling this will override the limits set in","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18383955,"byte_end":18384004,"line_start":1171,"line_end":1171,"column_start":5,"column_end":54}},{"value":"/ `http2_initial_stream_window_size` and","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18384009,"byte_end":18384051,"line_start":1172,"line_end":1172,"column_start":5,"column_end":47}},{"value":"/ `http2_initial_connection_window_size`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18384056,"byte_end":18384099,"line_start":1173,"line_end":1173,"column_start":5,"column_end":48}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18384104,"byte_end":18384129,"line_start":1174,"line_end":1174,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4841},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18384585,"byte_end":18384605,"line_start":1188,"line_end":1188,"column_start":12,"column_end":32},"name":"http2_max_frame_size","qualname":"<Builder>::http2_max_frame_size","value":"fn http2_max_frame_size<impl Into<Option<u32>>>(&mut Self,\nimpl Into<Option<u32>>) -> &mut Self where\nimpl Into<Option<u32>>: Into<Option<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum frame size to use for HTTP2.","sig":null,"attributes":[{"value":"/ Sets the maximum frame size to use for HTTP2.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18384339,"byte_end":18384388,"line_start":1181,"line_end":1181,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18384393,"byte_end":18384396,"line_start":1182,"line_end":1182,"column_start":5,"column_end":8}},{"value":"/ Passing `None` will do nothing.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18384401,"byte_end":18384436,"line_start":1183,"line_end":1183,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18384441,"byte_end":18384444,"line_start":1184,"line_end":1184,"column_start":5,"column_end":8}},{"value":"/ If not set, hyper will use a default.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18384449,"byte_end":18384490,"line_start":1185,"line_end":1185,"column_start":5,"column_end":46}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18384495,"byte_end":18384520,"line_start":1186,"line_end":1186,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4843},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18385160,"byte_end":18385185,"line_start":1206,"line_end":1206,"column_start":12,"column_end":37},"name":"http2_keep_alive_interval","qualname":"<Builder>::http2_keep_alive_interval","value":"fn http2_keep_alive_interval<impl Into<Option<Duration>>>(&mut Self,\nimpl Into<Option<Duration>>) -> &mut Self where\nimpl Into<Option<Duration>>: Into<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Sets an interval for HTTP2 Ping frames should be sent to keep a\n connection alive.","sig":null,"attributes":[{"value":"/ Sets an interval for HTTP2 Ping frames should be sent to keep a","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18384736,"byte_end":18384803,"line_start":1193,"line_end":1193,"column_start":5,"column_end":72}},{"value":"/ connection alive.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18384808,"byte_end":18384829,"line_start":1194,"line_end":1194,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18384834,"byte_end":18384837,"line_start":1195,"line_end":1195,"column_start":5,"column_end":8}},{"value":"/ Pass `None` to disable HTTP2 keep-alive.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18384842,"byte_end":18384886,"line_start":1196,"line_end":1196,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18384891,"byte_end":18384894,"line_start":1197,"line_end":1197,"column_start":5,"column_end":8}},{"value":"/ Default is currently disabled.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18384899,"byte_end":18384933,"line_start":1198,"line_end":1198,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18384938,"byte_end":18384941,"line_start":1199,"line_end":1199,"column_start":5,"column_end":8}},{"value":"/ # Cargo Feature","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18384946,"byte_end":18384965,"line_start":1200,"line_end":1200,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18384970,"byte_end":18384973,"line_start":1201,"line_end":1201,"column_start":5,"column_end":8}},{"value":"/ Requires the `runtime` cargo feature to be enabled.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18384978,"byte_end":18385033,"line_start":1202,"line_end":1202,"column_start":5,"column_end":60}},{"value":"cfg(feature = \"runtime\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18385038,"byte_end":18385065,"line_start":1203,"line_end":1203,"column_start":5,"column_end":32}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18385070,"byte_end":18385095,"line_start":1204,"line_end":1204,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4845},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18385866,"byte_end":18385890,"line_start":1227,"line_end":1227,"column_start":12,"column_end":36},"name":"http2_keep_alive_timeout","qualname":"<Builder>::http2_keep_alive_timeout","value":"fn http2_keep_alive_timeout(&mut Self, Duration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a timeout for receiving an acknowledgement of the keep-alive ping.","sig":null,"attributes":[{"value":"/ Sets a timeout for receiving an acknowledgement of the keep-alive ping.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18385361,"byte_end":18385436,"line_start":1214,"line_end":1214,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18385441,"byte_end":18385444,"line_start":1215,"line_end":1215,"column_start":5,"column_end":8}},{"value":"/ If the ping is not acknowledged within the timeout, the connection will","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18385449,"byte_end":18385524,"line_start":1216,"line_end":1216,"column_start":5,"column_end":80}},{"value":"/ be closed. Does nothing if `http2_keep_alive_interval` is disabled.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18385529,"byte_end":18385600,"line_start":1217,"line_end":1217,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18385605,"byte_end":18385608,"line_start":1218,"line_end":1218,"column_start":5,"column_end":8}},{"value":"/ Default is 20 seconds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18385613,"byte_end":18385639,"line_start":1219,"line_end":1219,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18385644,"byte_end":18385647,"line_start":1220,"line_end":1220,"column_start":5,"column_end":8}},{"value":"/ # Cargo Feature","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18385652,"byte_end":18385671,"line_start":1221,"line_end":1221,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18385676,"byte_end":18385679,"line_start":1222,"line_end":1222,"column_start":5,"column_end":8}},{"value":"/ Requires the `runtime` cargo feature to be enabled.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18385684,"byte_end":18385739,"line_start":1223,"line_end":1223,"column_start":5,"column_end":60}},{"value":"cfg(feature = \"runtime\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18385744,"byte_end":18385771,"line_start":1224,"line_end":1224,"column_start":5,"column_end":32}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18385776,"byte_end":18385801,"line_start":1225,"line_end":1225,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4846},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18386609,"byte_end":18386636,"line_start":1247,"line_end":1247,"column_start":12,"column_end":39},"name":"http2_keep_alive_while_idle","qualname":"<Builder>::http2_keep_alive_while_idle","value":"fn http2_keep_alive_while_idle(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether HTTP2 keep-alive should apply while the connection is idle.","sig":null,"attributes":[{"value":"/ Sets whether HTTP2 keep-alive should apply while the connection is idle.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18386021,"byte_end":18386097,"line_start":1232,"line_end":1232,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18386102,"byte_end":18386105,"line_start":1233,"line_end":1233,"column_start":5,"column_end":8}},{"value":"/ If disabled, keep-alive pings are only sent while there are open","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18386110,"byte_end":18386178,"line_start":1234,"line_end":1234,"column_start":5,"column_end":73}},{"value":"/ request/responses streams. If enabled, pings are also sent when no","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18386183,"byte_end":18386253,"line_start":1235,"line_end":1235,"column_start":5,"column_end":75}},{"value":"/ streams are active. Does nothing if `http2_keep_alive_interval` is","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18386258,"byte_end":18386328,"line_start":1236,"line_end":1236,"column_start":5,"column_end":75}},{"value":"/ disabled.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18386333,"byte_end":18386346,"line_start":1237,"line_end":1237,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18386351,"byte_end":18386354,"line_start":1238,"line_end":1238,"column_start":5,"column_end":8}},{"value":"/ Default is `false`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18386359,"byte_end":18386382,"line_start":1239,"line_end":1239,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18386387,"byte_end":18386390,"line_start":1240,"line_end":1240,"column_start":5,"column_end":8}},{"value":"/ # Cargo Feature","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18386395,"byte_end":18386414,"line_start":1241,"line_end":1241,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18386419,"byte_end":18386422,"line_start":1242,"line_end":1242,"column_start":5,"column_end":8}},{"value":"/ Requires the `runtime` cargo feature to be enabled.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18386427,"byte_end":18386482,"line_start":1243,"line_end":1243,"column_start":5,"column_end":60}},{"value":"cfg(feature = \"runtime\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18386487,"byte_end":18386514,"line_start":1244,"line_end":1244,"column_start":5,"column_end":32}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18386519,"byte_end":18386544,"line_start":1245,"line_end":1245,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4847},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18387272,"byte_end":18387306,"line_start":1262,"line_end":1262,"column_start":12,"column_end":46},"name":"http2_max_concurrent_reset_streams","qualname":"<Builder>::http2_max_concurrent_reset_streams","value":"fn http2_max_concurrent_reset_streams(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of HTTP2 concurrent locally reset streams.","sig":null,"attributes":[{"value":"/ Sets the maximum number of HTTP2 concurrent locally reset streams.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18386766,"byte_end":18386836,"line_start":1252,"line_end":1252,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18386841,"byte_end":18386844,"line_start":1253,"line_end":1253,"column_start":5,"column_end":8}},{"value":"/ See the documentation of [`h2::client::Builder::max_concurrent_reset_streams`] for more","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18386849,"byte_end":18386940,"line_start":1254,"line_end":1254,"column_start":5,"column_end":96}},{"value":"/ details.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18386945,"byte_end":18386957,"line_start":1255,"line_end":1255,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18386962,"byte_end":18386965,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ The default value is determined by the `h2` crate.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18386970,"byte_end":18387024,"line_start":1257,"line_end":1257,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18387029,"byte_end":18387032,"line_start":1258,"line_end":1258,"column_start":5,"column_end":8}},{"value":"/ [`h2::client::Builder::max_concurrent_reset_streams`]: https://docs.rs/h2/client/struct.Builder.html#method.max_concurrent_reset_streams","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18387037,"byte_end":18387177,"line_start":1259,"line_end":1259,"column_start":5,"column_end":145}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18387182,"byte_end":18387207,"line_start":1260,"line_end":1260,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4848},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18387736,"byte_end":18387759,"line_start":1276,"line_end":1276,"column_start":12,"column_end":35},"name":"http2_max_send_buf_size","qualname":"<Builder>::http2_max_send_buf_size","value":"fn http2_max_send_buf_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum write buffer size for each HTTP/2 stream.","sig":null,"attributes":[{"value":"/ Set the maximum write buffer size for each HTTP/2 stream.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18387436,"byte_end":18387497,"line_start":1267,"line_end":1267,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18387502,"byte_end":18387505,"line_start":1268,"line_end":1268,"column_start":5,"column_end":8}},{"value":"/ Default is currently 1MB, but may change.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18387510,"byte_end":18387555,"line_start":1269,"line_end":1269,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18387560,"byte_end":18387563,"line_start":1270,"line_end":1270,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18387568,"byte_end":18387580,"line_start":1271,"line_end":1271,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18387585,"byte_end":18387588,"line_start":1272,"line_end":1272,"column_start":5,"column_end":8}},{"value":"/ The value must be no larger than `u32::MAX`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18387593,"byte_end":18387641,"line_start":1273,"line_end":1273,"column_start":5,"column_end":53}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18387646,"byte_end":18387671,"line_start":1274,"line_end":1274,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4849},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18388359,"byte_end":18388382,"line_start":1293,"line_end":1293,"column_start":12,"column_end":35},"name":"retry_canceled_requests","qualname":"<Builder>::retry_canceled_requests","value":"fn retry_canceled_requests(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether to retry requests that get disrupted before ever starting\n to write.","sig":null,"attributes":[{"value":"/ Set whether to retry requests that get disrupted before ever starting","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18387878,"byte_end":18387951,"line_start":1281,"line_end":1281,"column_start":5,"column_end":78}},{"value":"/ to write.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18387956,"byte_end":18387969,"line_start":1282,"line_end":1282,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18387974,"byte_end":18387977,"line_start":1283,"line_end":1283,"column_start":5,"column_end":8}},{"value":"/ This means a request that is queued, and gets given an idle, reused","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18387982,"byte_end":18388053,"line_start":1284,"line_end":1284,"column_start":5,"column_end":76}},{"value":"/ connection, and then encounters an error immediately as the idle","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18388058,"byte_end":18388126,"line_start":1285,"line_end":1285,"column_start":5,"column_end":73}},{"value":"/ connection was found to be unusable.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18388131,"byte_end":18388171,"line_start":1286,"line_end":1286,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18388176,"byte_end":18388179,"line_start":1287,"line_end":1287,"column_start":5,"column_end":8}},{"value":"/ When this is set to `false`, the related `ResponseFuture` would instead","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18388184,"byte_end":18388259,"line_start":1288,"line_end":1288,"column_start":5,"column_end":80}},{"value":"/ resolve to an `Error::Cancel`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18388264,"byte_end":18388298,"line_start":1289,"line_end":1289,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18388303,"byte_end":18388306,"line_start":1290,"line_end":1290,"column_start":5,"column_end":8}},{"value":"/ Default is `true`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18388311,"byte_end":18388333,"line_start":1291,"line_end":1291,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18388338,"byte_end":18388347,"line_start":1292,"line_end":1292,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4850},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18388785,"byte_end":18388793,"line_start":1305,"line_end":1305,"column_start":12,"column_end":20},"name":"set_host","qualname":"<Builder>::set_host","value":"fn set_host(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether to automatically add the `Host` header to requests.","sig":null,"attributes":[{"value":"/ Set whether to automatically add the `Host` header to requests.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18388502,"byte_end":18388569,"line_start":1298,"line_end":1298,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18388574,"byte_end":18388577,"line_start":1299,"line_end":1299,"column_start":5,"column_end":8}},{"value":"/ If true, and a request does not include a `Host` header, one will be","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18388582,"byte_end":18388654,"line_start":1300,"line_end":1300,"column_start":5,"column_end":77}},{"value":"/ added automatically, derived from the authority of the `Uri`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18388659,"byte_end":18388724,"line_start":1301,"line_end":1301,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18388729,"byte_end":18388732,"line_start":1302,"line_end":1302,"column_start":5,"column_end":8}},{"value":"/ Default is `true`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18388737,"byte_end":18388759,"line_start":1303,"line_end":1303,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18388764,"byte_end":18388773,"line_start":1304,"line_end":1304,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4851},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18388975,"byte_end":18388983,"line_start":1311,"line_end":1311,"column_start":12,"column_end":20},"name":"executor","qualname":"<Builder>::executor","value":"fn executor<E>(&mut Self, E) -> &mut Self where E: Executor<BoxSendFuture> +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Provide an executor to execute background `Connection` tasks.\n","sig":null,"attributes":[{"value":"/ Provide an executor to execute background `Connection` tasks.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18388898,"byte_end":18388963,"line_start":1310,"line_end":1310,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":4853},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18389279,"byte_end":18389289,"line_start":1321,"line_end":1321,"column_start":12,"column_end":22},"name":"build_http","qualname":"<Builder>::build_http","value":"fn build_http<B>(&Self) -> Client<HttpConnector, B> where B: HttpBody + Send,\nB::Data: Send","parent":null,"children":[],"decl_id":null,"docs":" Builder a client with this configuration and the default `HttpConnector`.\n","sig":null,"attributes":[{"value":"/ Builder a client with this configuration and the default `HttpConnector`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18389162,"byte_end":18389239,"line_start":1319,"line_end":1319,"column_start":5,"column_end":82}},{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18389244,"byte_end":18389267,"line_start":1320,"line_end":1320,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4855},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18389703,"byte_end":18389708,"line_start":1334,"line_end":1334,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"fn build<C, B>(&Self, C) -> Client<C, B> where C: Connect + Clone,\nB: HttpBody + Send, B::Data: Send","parent":null,"children":[],"decl_id":null,"docs":" Combine the configuration of this builder with a connector to create a `Client`.\n","sig":null,"attributes":[{"value":"/ Combine the configuration of this builder with a connector to create a `Client`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18389607,"byte_end":18389691,"line_start":1333,"line_end":1333,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":4859},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18390108,"byte_end":18390111,"line_start":1350,"line_end":1350,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Builder as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9902},"children":[],"decl_id":{"krate":2,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4860},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"conn","qualname":"::client::conn","value":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","parent":null,"children":[{"krate":0,"index":4861},{"krate":0,"index":4864},{"krate":0,"index":4867},{"krate":0,"index":4870},{"krate":0,"index":4873},{"krate":0,"index":4876},{"krate":0,"index":4877},{"krate":0,"index":4880},{"krate":0,"index":4883},{"krate":0,"index":4886},{"krate":0,"index":4889},{"krate":0,"index":4892},{"krate":0,"index":4893},{"krate":0,"index":4896},{"krate":0,"index":4899},{"krate":0,"index":4902},{"krate":0,"index":4903},{"krate":0,"index":4906},{"krate":0,"index":4909},{"krate":0,"index":4912},{"krate":0,"index":4915},{"krate":0,"index":4916},{"krate":0,"index":4917},{"krate":0,"index":4920},{"krate":0,"index":4923},{"krate":0,"index":4926},{"krate":0,"index":4929},{"krate":0,"index":4932},{"krate":0,"index":4935},{"krate":0,"index":4938},{"krate":0,"index":4941},{"krate":0,"index":4944},{"krate":0,"index":4945},{"krate":0,"index":4948},{"krate":0,"index":4951},{"krate":0,"index":4954},{"krate":0,"index":4957},{"krate":0,"index":7520},{"krate":0,"index":7527},{"krate":0,"index":7535},{"krate":0,"index":4959},{"krate":0,"index":4963},{"krate":0,"index":4966},{"krate":0,"index":5534},{"krate":0,"index":5545},{"krate":0,"index":5547},{"krate":0,"index":5549},{"krate":0,"index":5554},{"krate":0,"index":5556},{"krate":0,"index":4970},{"krate":0,"index":4972},{"krate":0,"index":5558},{"krate":0,"index":5563},{"krate":0,"index":4979},{"krate":0,"index":4982},{"krate":0,"index":4992},{"krate":0,"index":4998},{"krate":0,"index":5005},{"krate":0,"index":5008},{"krate":0,"index":5012},{"krate":0,"index":5017},{"krate":0,"index":5020},{"krate":0,"index":5023},{"krate":0,"index":5033},{"krate":0,"index":5038},{"krate":0,"index":5042},{"krate":0,"index":5076},{"krate":0,"index":5080},{"krate":0,"index":5082},{"krate":0,"index":5087},{"krate":0,"index":5088},{"krate":0,"index":5089},{"krate":0,"index":5091},{"krate":0,"index":5094},{"krate":0,"index":5097},{"krate":0,"index":5098}],"decl_id":null,"docs":" Lower-level client connection API.","sig":null,"attributes":[{"value":"cfg(any(feature = \"http1\", feature = \"http2\"))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/cfg.rs","byte_start":3241,"byte_end":3254,"line_start":7,"line_end":7,"column_start":13,"column_end":26}},{"value":"/ Lower-level client connection API.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18393596,"byte_end":18393634,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18393635,"byte_end":18393638,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The types in this module are to provide a lower-level API based around a","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18393639,"byte_end":18393715,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ single connection. Connecting to a host, pooling connections, and the like","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18393716,"byte_end":18393794,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ are not handled at this level. This module provides the building blocks to","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18393795,"byte_end":18393873,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ customize those things externally.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18393874,"byte_end":18393912,"line_start":6,"line_end":6,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18393913,"byte_end":18393916,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ If don't have need to manage connections yourself, consider using the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18393917,"byte_end":18393990,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/ higher-level [Client](super) API.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18393991,"byte_end":18394028,"line_start":9,"line_end":9,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18394029,"byte_end":18394032,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18394033,"byte_end":18394047,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/ A simple example that uses the `SendRequest` struct to talk HTTP over a Tokio TCP stream","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18394048,"byte_end":18394140,"line_start":12,"line_end":12,"column_start":1,"column_end":93}},{"value":"/ ```no_run","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18394141,"byte_end":18394154,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/ # #[cfg(all(feature = \"client\", feature = \"http1\", feature = \"runtime\"))]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18394155,"byte_end":18394232,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ # mod rt {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18394233,"byte_end":18394247,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/ use tower::ServiceExt;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18394248,"byte_end":18394274,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/ use http::{Request, StatusCode};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18394275,"byte_end":18394311,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ use hyper::{client::conn, Body};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18394312,"byte_end":18394348,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18394349,"byte_end":18394379,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18394380,"byte_end":18394383,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18394384,"byte_end":18394402,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18394403,"byte_end":18394466,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/     let target_stream = TcpStream::connect(\"example.com:80\").await?;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18394467,"byte_end":18394539,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18394540,"byte_end":18394543,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/     let (mut request_sender, connection) = conn::handshake(target_stream).await?;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18394544,"byte_end":18394629,"line_start":25,"line_end":25,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18394630,"byte_end":18394633,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/     // spawn a task to poll the connection and drive the HTTP state","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18394634,"byte_end":18394705,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18394706,"byte_end":18394739,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/         if let Err(e) = connection.await {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18394740,"byte_end":18394786,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/             eprintln!(\"Error in connection: {}\", e);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18394787,"byte_end":18394843,"line_start":30,"line_end":30,"column_start":1,"column_end":57}},{"value":"/         }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18394844,"byte_end":18394857,"line_start":31,"line_end":31,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18394858,"byte_end":18394869,"line_start":32,"line_end":32,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18394870,"byte_end":18394873,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/     let request = Request::builder()","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18394874,"byte_end":18394914,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"/         // We need to manually add the host header because SendRequest does not","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18394915,"byte_end":18394998,"line_start":35,"line_end":35,"column_start":1,"column_end":84}},{"value":"/         .header(\"Host\", \"example.com\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18394999,"byte_end":18395041,"line_start":36,"line_end":36,"column_start":1,"column_end":43}},{"value":"/         .method(\"GET\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18395042,"byte_end":18395068,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/         .body(Body::from(\"\"))?;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18395069,"byte_end":18395104,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/     let response = request_sender.send_request(request).await?;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18395105,"byte_end":18395172,"line_start":39,"line_end":39,"column_start":1,"column_end":68}},{"value":"/     assert!(response.status() == StatusCode::OK);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18395173,"byte_end":18395226,"line_start":40,"line_end":40,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18395227,"byte_end":18395230,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/     // To send via the same connection again, it may not work as it may not be ready,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18395231,"byte_end":18395320,"line_start":42,"line_end":42,"column_start":1,"column_end":90}},{"value":"/     // so we have to wait until the request_sender becomes ready.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18395321,"byte_end":18395390,"line_start":43,"line_end":43,"column_start":1,"column_end":70}},{"value":"/     request_sender.ready().await?;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18395391,"byte_end":18395429,"line_start":44,"line_end":44,"column_start":1,"column_end":39}},{"value":"/     let request = Request::builder()","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18395430,"byte_end":18395470,"line_start":45,"line_end":45,"column_start":1,"column_end":41}},{"value":"/         .header(\"Host\", \"example.com\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18395471,"byte_end":18395513,"line_start":46,"line_end":46,"column_start":1,"column_end":43}},{"value":"/         .method(\"GET\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18395514,"byte_end":18395540,"line_start":47,"line_end":47,"column_start":1,"column_end":27}},{"value":"/         .body(Body::from(\"\"))?;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18395541,"byte_end":18395576,"line_start":48,"line_end":48,"column_start":1,"column_end":36}},{"value":"/     let response = request_sender.send_request(request).await?;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18395577,"byte_end":18395644,"line_start":49,"line_end":49,"column_start":1,"column_end":68}},{"value":"/     assert!(response.status() == StatusCode::OK);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18395645,"byte_end":18395698,"line_start":50,"line_end":50,"column_start":1,"column_end":54}},{"value":"/     Ok(())","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18395699,"byte_end":18395713,"line_start":51,"line_end":51,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18395714,"byte_end":18395719,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18395720,"byte_end":18395723,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18395724,"byte_end":18395731,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18395732,"byte_end":18395739,"line_start":55,"line_end":55,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4959},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18397448,"byte_end":18397457,"line_start":121,"line_end":121,"column_start":14,"column_end":23},"name":"handshake","qualname":"::client::conn::handshake","value":"async fn handshake<T>(T) -> /*impl Trait*/ where T: AsyncRead + AsyncWrite +\nUnpin + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Returns a handshake future over some IO.","sig":null,"attributes":[{"value":"/ Returns a handshake future over some IO.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18397271,"byte_end":18397315,"line_start":117,"line_end":117,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18397316,"byte_end":18397319,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ This is a shortcut for `Builder::new().handshake(io)`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18397320,"byte_end":18397378,"line_start":119,"line_end":119,"column_start":1,"column_end":59}},{"value":"/ See [`client::conn`](crate::client::conn) for more.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18397379,"byte_end":18397434,"line_start":120,"line_end":120,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":4963},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18397715,"byte_end":18397726,"line_start":131,"line_end":131,"column_start":12,"column_end":23},"name":"SendRequest","qualname":"::client::conn::SendRequest","value":"SendRequest {  }","parent":null,"children":[{"krate":0,"index":4965}],"decl_id":null,"docs":" The sender side of an established connection.\n","sig":null,"attributes":[{"value":"/ The sender side of an established connection.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18397654,"byte_end":18397703,"line_start":130,"line_end":130,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":4966},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18398075,"byte_end":18398085,"line_start":140,"line_end":140,"column_start":12,"column_end":22},"name":"Connection","qualname":"::client::conn::Connection","value":"Connection {  }","parent":null,"children":[{"krate":0,"index":4969}],"decl_id":null,"docs":" A future that processes all HTTP state for the IO object.","sig":null,"attributes":[{"value":"/ A future that processes all HTTP state for the IO object.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18397795,"byte_end":18397856,"line_start":135,"line_end":135,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18397857,"byte_end":18397860,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ In most cases, this should just be spawned into an executor, so that it","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18397861,"byte_end":18397936,"line_start":137,"line_end":137,"column_start":1,"column_end":76}},{"value":"/ can process incoming and outgoing messages, notice hangups, and the like.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18397937,"byte_end":18398014,"line_start":138,"line_end":138,"column_start":1,"column_end":78}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18398015,"byte_end":18398063,"line_start":139,"line_end":139,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":5534},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18398379,"byte_end":18398386,"line_start":152,"line_end":152,"column_start":12,"column_end":19},"name":"Builder","qualname":"::client::conn::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":5535},{"krate":0,"index":5536},{"krate":0,"index":5537},{"krate":0,"index":5538},{"krate":0,"index":5539},{"krate":0,"index":5540},{"krate":0,"index":5541},{"krate":0,"index":5542},{"krate":0,"index":5543},{"krate":0,"index":5544}],"decl_id":null,"docs":" A builder to configure an HTTP connection.","sig":null,"attributes":[{"value":"/ A builder to configure an HTTP connection.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18398216,"byte_end":18398262,"line_start":148,"line_end":148,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18398263,"byte_end":18398266,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ After setting options, the builder is used to create a handshake future.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18398267,"byte_end":18398343,"line_start":150,"line_end":150,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":4970},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18399146,"byte_end":18399160,"line_start":182,"line_end":182,"column_start":12,"column_end":26},"name":"ResponseFuture","qualname":"::client::conn::ResponseFuture","value":"ResponseFuture {  }","parent":null,"children":[{"krate":0,"index":4971}],"decl_id":null,"docs":" A future returned by `SendRequest::send_request`.","sig":null,"attributes":[{"value":"/ A future returned by `SendRequest::send_request`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18398989,"byte_end":18399042,"line_start":178,"line_end":178,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18399043,"byte_end":18399046,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ Yields a `Response` if successful.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18399047,"byte_end":18399085,"line_start":180,"line_end":180,"column_start":1,"column_end":39}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18399086,"byte_end":18399134,"line_start":181,"line_end":181,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":5558},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18399568,"byte_end":18399573,"line_start":197,"line_end":197,"column_start":12,"column_end":17},"name":"Parts","qualname":"::client::conn::Parts","value":"Parts { io, read_buf }","parent":null,"children":[{"krate":0,"index":5560},{"krate":0,"index":5561},{"krate":0,"index":5562}],"decl_id":null,"docs":" Deconstructed parts of a `Connection`.","sig":null,"attributes":[{"value":"/ Deconstructed parts of a `Connection`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18399362,"byte_end":18399404,"line_start":192,"line_end":192,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18399405,"byte_end":18399408,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ This allows taking apart a `Connection` at a later time, in order to","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18399409,"byte_end":18399481,"line_start":194,"line_end":194,"column_start":1,"column_end":73}},{"value":"/ reclaim the IO object, and additional related pieces.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18399482,"byte_end":18399539,"line_start":195,"line_end":195,"column_start":1,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":5560},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18399641,"byte_end":18399643,"line_start":199,"line_end":199,"column_start":9,"column_end":11},"name":"io","qualname":"::client::conn::Parts::io","value":"T","parent":{"krate":0,"index":5558},"children":[],"decl_id":null,"docs":" The original IO object used in the handshake.\n","sig":null,"attributes":[{"value":"/ The original IO object used in the handshake.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18399583,"byte_end":18399632,"line_start":198,"line_end":198,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":5561},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18400063,"byte_end":18400071,"line_start":208,"line_end":208,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::client::conn::Parts::read_buf","value":"bytes::Bytes","parent":{"krate":0,"index":5558},"children":[],"decl_id":null,"docs":" A buffer of bytes that have been read but not processed as HTTP.","sig":null,"attributes":[{"value":"/ A buffer of bytes that have been read but not processed as HTTP.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18399652,"byte_end":18399720,"line_start":200,"line_end":200,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18399725,"byte_end":18399728,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ For instance, if the `Connection` is used for an HTTP upgrade request,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18399733,"byte_end":18399807,"line_start":202,"line_end":202,"column_start":5,"column_end":79}},{"value":"/ it is possible the server sent back the first bytes of the new protocol","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18399812,"byte_end":18399887,"line_start":203,"line_end":203,"column_start":5,"column_end":80}},{"value":"/ along with the response upgrade.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18399892,"byte_end":18399928,"line_start":204,"line_end":204,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18399933,"byte_end":18399936,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ You will want to check for any existing bytes if you plan to continue","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18399941,"byte_end":18400014,"line_start":206,"line_end":206,"column_start":5,"column_end":78}},{"value":"/ communicating on the IO object.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18400019,"byte_end":18400054,"line_start":207,"line_end":207,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4984},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18400662,"byte_end":18400672,"line_start":228,"line_end":228,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<SendRequest<B>>::poll_ready","value":"fn poll_ready(&mut Self, &mut task::Context) -> Poll<crate::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to determine whether this sender can be used yet for a request.","sig":null,"attributes":[{"value":"/ Polls to determine whether this sender can be used yet for a request.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18400498,"byte_end":18400571,"line_start":225,"line_end":225,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18400576,"byte_end":18400579,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ If the associated connection is closed, this returns an Error.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18400584,"byte_end":18400650,"line_start":227,"line_end":227,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":4994},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18402901,"byte_end":18402913,"line_start":302,"line_end":302,"column_start":12,"column_end":24},"name":"send_request","qualname":"<SendRequest<B>>::send_request","value":"fn send_request(&mut Self, Request<B>) -> ResponseFuture","parent":null,"children":[],"decl_id":null,"docs":" Sends a `Request` on the associated connection.","sig":null,"attributes":[{"value":"/ Sends a `Request` on the associated connection.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18401474,"byte_end":18401525,"line_start":261,"line_end":261,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18401530,"byte_end":18401533,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ Returns a future that if successful, yields the `Response`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18401538,"byte_end":18401601,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18401606,"byte_end":18401609,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18401614,"byte_end":18401624,"line_start":265,"line_end":265,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18401629,"byte_end":18401632,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ There are some key differences in what automatic things the `Client`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18401637,"byte_end":18401709,"line_start":267,"line_end":267,"column_start":5,"column_end":77}},{"value":"/ does for you that will not be done here:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18401714,"byte_end":18401758,"line_start":268,"line_end":268,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18401763,"byte_end":18401766,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ - `Client` requires absolute-form `Uri`s, since the scheme and","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18401771,"byte_end":18401837,"line_start":270,"line_end":270,"column_start":5,"column_end":71}},{"value":"/   authority are needed to connect. They aren't required here.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18401842,"byte_end":18401907,"line_start":271,"line_end":271,"column_start":5,"column_end":70}},{"value":"/ - Since the `Client` requires absolute-form `Uri`s, it can add","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18401912,"byte_end":18401978,"line_start":272,"line_end":272,"column_start":5,"column_end":71}},{"value":"/   the `Host` header based on it. You must add a `Host` header yourself","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18401983,"byte_end":18402057,"line_start":273,"line_end":273,"column_start":5,"column_end":79}},{"value":"/   before calling this method.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18402062,"byte_end":18402095,"line_start":274,"line_end":274,"column_start":5,"column_end":38}},{"value":"/ - Since absolute-form `Uri`s are not required, if received, they will","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18402100,"byte_end":18402173,"line_start":275,"line_end":275,"column_start":5,"column_end":78}},{"value":"/   be serialized as-is.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18402178,"byte_end":18402204,"line_start":276,"line_end":276,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18402209,"byte_end":18402212,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18402217,"byte_end":18402230,"line_start":278,"line_end":278,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18402235,"byte_end":18402238,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18402243,"byte_end":18402250,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"/ # use http::header::HOST;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18402255,"byte_end":18402284,"line_start":281,"line_end":281,"column_start":5,"column_end":34}},{"value":"/ # use hyper::client::conn::SendRequest;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18402289,"byte_end":18402332,"line_start":282,"line_end":282,"column_start":5,"column_end":48}},{"value":"/ # use hyper::Body;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18402337,"byte_end":18402359,"line_start":283,"line_end":283,"column_start":5,"column_end":27}},{"value":"/ use hyper::Request;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18402364,"byte_end":18402387,"line_start":284,"line_end":284,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18402392,"byte_end":18402395,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # async fn doc(mut tx: SendRequest<Body>) -> hyper::Result<()> {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18402400,"byte_end":18402468,"line_start":286,"line_end":286,"column_start":5,"column_end":73}},{"value":"/ // build a Request","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18402473,"byte_end":18402495,"line_start":287,"line_end":287,"column_start":5,"column_end":27}},{"value":"/ let req = Request::builder()","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18402500,"byte_end":18402532,"line_start":288,"line_end":288,"column_start":5,"column_end":37}},{"value":"/     .uri(\"/foo/bar\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18402537,"byte_end":18402561,"line_start":289,"line_end":289,"column_start":5,"column_end":29}},{"value":"/     .header(HOST, \"hyper.rs\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18402566,"byte_end":18402599,"line_start":290,"line_end":290,"column_start":5,"column_end":38}},{"value":"/     .body(Body::empty())","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18402604,"byte_end":18402632,"line_start":291,"line_end":291,"column_start":5,"column_end":33}},{"value":"/     .unwrap();","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18402637,"byte_end":18402655,"line_start":292,"line_end":292,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18402660,"byte_end":18402663,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ // send it and await a Response","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18402668,"byte_end":18402703,"line_start":294,"line_end":294,"column_start":5,"column_end":40}},{"value":"/ let res = tx.send_request(req).await?;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18402708,"byte_end":18402750,"line_start":295,"line_end":295,"column_start":5,"column_end":47}},{"value":"/ // assert the Response","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18402755,"byte_end":18402781,"line_start":296,"line_end":296,"column_start":5,"column_end":31}},{"value":"/ assert!(res.status().is_success());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18402786,"byte_end":18402825,"line_start":297,"line_end":297,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18402830,"byte_end":18402842,"line_start":298,"line_end":298,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18402847,"byte_end":18402854,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18402859,"byte_end":18402877,"line_start":300,"line_end":300,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18402882,"byte_end":18402889,"line_start":301,"line_end":301,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5003},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18404521,"byte_end":18404531,"line_start":350,"line_end":350,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<SendRequest<B> as tower_service::Service>::poll_ready","value":"fn poll_ready(&mut Self, &mut task::Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":52,"index":13},"children":[],"decl_id":{"krate":52,"index":18},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5004},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18404648,"byte_end":18404652,"line_start":354,"line_end":354,"column_start":8,"column_end":12},"name":"call","qualname":"<SendRequest<B> as tower_service::Service>::call","value":"fn call(&mut Self, Request<B>) -> Self::Future","parent":{"krate":52,"index":13},"children":[],"decl_id":{"krate":52,"index":19},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5007},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18404786,"byte_end":18404789,"line_start":360,"line_end":360,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SendRequest<B> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9902},"children":[],"decl_id":{"krate":2,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5026},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18406982,"byte_end":18406992,"line_start":438,"line_end":438,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Connection<T, B>>::into_parts","value":"fn into_parts(Self) -> Parts<T>","parent":null,"children":[],"decl_id":null,"docs":" Return the inner IO object, and additional information.","sig":null,"attributes":[{"value":"/ Return the inner IO object, and additional information.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18406829,"byte_end":18406888,"line_start":435,"line_end":435,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18406893,"byte_end":18406896,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ Only works for HTTP/1 connections. HTTP/2 connections will panic.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18406901,"byte_end":18406970,"line_start":437,"line_end":437,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":5027},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18408223,"byte_end":18408244,"line_start":469,"line_end":469,"column_start":12,"column_end":33},"name":"poll_without_shutdown","qualname":"<Connection<T, B>>::poll_without_shutdown","value":"fn poll_without_shutdown(&mut Self, &mut task::Context)\n-> Poll<crate::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Poll the connection for completion, but without calling `shutdown`\n on the underlying IO.","sig":null,"attributes":[{"value":"/ Poll the connection for completion, but without calling `shutdown`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18407567,"byte_end":18407637,"line_start":458,"line_end":458,"column_start":5,"column_end":75}},{"value":"/ on the underlying IO.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18407642,"byte_end":18407667,"line_start":459,"line_end":459,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18407672,"byte_end":18407675,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow running a connection while doing an HTTP","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18407680,"byte_end":18407748,"line_start":461,"line_end":461,"column_start":5,"column_end":73}},{"value":"/ upgrade. Once the upgrade is completed, the connection would be \"done\",","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18407753,"byte_end":18407828,"line_start":462,"line_end":462,"column_start":5,"column_end":80}},{"value":"/ but it is not desired to actually shutdown the IO object. Instead you","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18407833,"byte_end":18407906,"line_start":463,"line_end":463,"column_start":5,"column_end":78}},{"value":"/ would take it back using `into_parts`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18407911,"byte_end":18407953,"line_start":464,"line_end":464,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18407958,"byte_end":18407961,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ Use [`poll_fn`](https://docs.rs/futures/0.1.25/futures/future/fn.poll_fn.html)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18407966,"byte_end":18408048,"line_start":466,"line_end":466,"column_start":5,"column_end":87}},{"value":"/ and [`try_ready!`](https://docs.rs/futures/0.1.25/futures/macro.try_ready.html)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18408053,"byte_end":18408136,"line_start":467,"line_end":467,"column_start":5,"column_end":88}},{"value":"/ to work with this function; or use the `without_shutdown` wrapper.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18408141,"byte_end":18408211,"line_start":468,"line_end":468,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":5029},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18409040,"byte_end":18409056,"line_start":485,"line_end":485,"column_start":12,"column_end":28},"name":"without_shutdown","qualname":"<Connection<T, B>>::without_shutdown","value":"fn without_shutdown(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Prevent shutdown of the underlying IO object at the end of service the request,\n instead run `into_parts`. This is a convenience wrapper over `poll_without_shutdown`.\n","sig":null,"attributes":[{"value":"/ Prevent shutdown of the underlying IO object at the end of service the request,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18408851,"byte_end":18408934,"line_start":483,"line_end":483,"column_start":5,"column_end":88}},{"value":"/ instead run `into_parts`. This is a convenience wrapper over `poll_without_shutdown`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18408939,"byte_end":18409028,"line_start":484,"line_end":484,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":5032},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18409888,"byte_end":18409930,"line_start":503,"line_end":503,"column_start":12,"column_end":54},"name":"http2_is_extended_connect_protocol_enabled","qualname":"<Connection<T, B>>::http2_is_extended_connect_protocol_enabled","value":"fn http2_is_extended_connect_protocol_enabled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the [extended CONNECT protocol][1] is enabled or not.","sig":null,"attributes":[{"value":"/ Returns whether the [extended CONNECT protocol][1] is enabled or not.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18409374,"byte_end":18409447,"line_start":493,"line_end":493,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18409452,"byte_end":18409455,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ This setting is configured by the server peer by sending the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18409460,"byte_end":18409524,"line_start":495,"line_end":495,"column_start":5,"column_end":69}},{"value":"/ [`SETTINGS_ENABLE_CONNECT_PROTOCOL` parameter][2] in a `SETTINGS` frame.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18409529,"byte_end":18409605,"line_start":496,"line_end":496,"column_start":5,"column_end":81}},{"value":"/ This method returns the currently acknowledged value received from the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18409610,"byte_end":18409684,"line_start":497,"line_end":497,"column_start":5,"column_end":79}},{"value":"/ remote.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18409689,"byte_end":18409700,"line_start":498,"line_end":498,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18409705,"byte_end":18409708,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ [1]: https://datatracker.ietf.org/doc/html/rfc8441#section-4","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18409713,"byte_end":18409777,"line_start":500,"line_end":500,"column_start":5,"column_end":69}},{"value":"/ [2]: https://datatracker.ietf.org/doc/html/rfc8441#section-3","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18409782,"byte_end":18409846,"line_start":501,"line_end":501,"column_start":5,"column_end":69}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18409851,"byte_end":18409876,"line_start":502,"line_end":502,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5037},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18410392,"byte_end":18410396,"line_start":520,"line_end":520,"column_start":8,"column_end":12},"name":"poll","qualname":"<Connection<T, B> as futures_util::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut task::Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13330},"children":[],"decl_id":{"krate":2,"index":13332},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5041},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18411264,"byte_end":18411267,"line_start":544,"line_end":544,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Connection<T, B> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9902},"children":[],"decl_id":{"krate":2,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5043},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18411480,"byte_end":18411483,"line_start":554,"line_end":554,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new connection builder.\n","sig":null,"attributes":[{"value":"/ Creates a new connection builder.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18411417,"byte_end":18411454,"line_start":552,"line_end":552,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18411459,"byte_end":18411468,"line_start":553,"line_end":553,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5044},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18412302,"byte_end":18412310,"line_start":578,"line_end":578,"column_start":12,"column_end":20},"name":"executor","qualname":"<Builder>::executor","value":"fn executor<E>(&mut Self, E) -> &mut Builder where\nE: Executor<BoxSendFuture> + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Provide an executor to execute background HTTP2 tasks.\n","sig":null,"attributes":[{"value":"/ Provide an executor to execute background HTTP2 tasks.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18412232,"byte_end":18412290,"line_start":577,"line_end":577,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":5046},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18412603,"byte_end":18412619,"line_start":589,"line_end":589,"column_start":12,"column_end":28},"name":"http09_responses","qualname":"<Builder>::http09_responses","value":"fn http09_responses(&mut Self, bool) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/0.9 responses should be tolerated.","sig":null,"attributes":[{"value":"/ Set whether HTTP/0.9 responses should be tolerated.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18412502,"byte_end":18412557,"line_start":586,"line_end":586,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18412562,"byte_end":18412565,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18412570,"byte_end":18412591,"line_start":588,"line_end":588,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":5047},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18413714,"byte_end":18413763,"line_start":613,"line_end":613,"column_start":12,"column_end":61},"name":"http1_allow_spaces_after_header_name_in_responses","qualname":"<Builder>::http1_allow_spaces_after_header_name_in_responses","value":"fn http1_allow_spaces_after_header_name_in_responses(&mut Self, bool)\n-> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/1 connections will accept spaces between header names\n and the colon that follow them in responses.","sig":null,"attributes":[{"value":"/ Set whether HTTP/1 connections will accept spaces between header names","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18412726,"byte_end":18412800,"line_start":594,"line_end":594,"column_start":5,"column_end":79}},{"value":"/ and the colon that follow them in responses.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18412805,"byte_end":18412853,"line_start":595,"line_end":595,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18412858,"byte_end":18412861,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ You probably don't need this, here is what [RFC 7230 Section 3.2.4.] has","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18412866,"byte_end":18412942,"line_start":597,"line_end":597,"column_start":5,"column_end":81}},{"value":"/ to say about it:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18412947,"byte_end":18412967,"line_start":598,"line_end":598,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18412972,"byte_end":18412975,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ > No whitespace is allowed between the header field-name and colon. In","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18412980,"byte_end":18413054,"line_start":600,"line_end":600,"column_start":5,"column_end":79}},{"value":"/ > the past, differences in the handling of such whitespace have led to","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18413059,"byte_end":18413133,"line_start":601,"line_end":601,"column_start":5,"column_end":79}},{"value":"/ > security vulnerabilities in request routing and response handling. A","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18413138,"byte_end":18413212,"line_start":602,"line_end":602,"column_start":5,"column_end":79}},{"value":"/ > server MUST reject any received request message that contains","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18413217,"byte_end":18413284,"line_start":603,"line_end":603,"column_start":5,"column_end":72}},{"value":"/ > whitespace between a header field-name and colon with a response code","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18413289,"byte_end":18413364,"line_start":604,"line_end":604,"column_start":5,"column_end":80}},{"value":"/ > of 400 (Bad Request). A proxy MUST remove any such whitespace from a","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18413369,"byte_end":18413443,"line_start":605,"line_end":605,"column_start":5,"column_end":79}},{"value":"/ > response message before forwarding the message downstream.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18413448,"byte_end":18413512,"line_start":606,"line_end":606,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18413517,"byte_end":18413520,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ Note that this setting does not affect HTTP/2.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18413525,"byte_end":18413575,"line_start":608,"line_end":608,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18413580,"byte_end":18413583,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18413588,"byte_end":18413609,"line_start":610,"line_end":610,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18413614,"byte_end":18413617,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ [RFC 7230 Section 3.2.4.]: https://tools.ietf.org/html/rfc7230#section-3.2.4","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18413622,"byte_end":18413702,"line_start":612,"line_end":612,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":5048},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18415674,"byte_end":18415725,"line_start":656,"line_end":656,"column_start":12,"column_end":63},"name":"http1_allow_obsolete_multiline_headers_in_responses","qualname":"<Builder>::http1_allow_obsolete_multiline_headers_in_responses","value":"fn http1_allow_obsolete_multiline_headers_in_responses(&mut Self, bool)\n-> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/1 connections will accept obsolete line folding for\n header values.","sig":null,"attributes":[{"value":"/ Set whether HTTP/1 connections will accept obsolete line folding for","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18413952,"byte_end":18414024,"line_start":622,"line_end":622,"column_start":5,"column_end":77}},{"value":"/ header values.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18414029,"byte_end":18414047,"line_start":623,"line_end":623,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18414052,"byte_end":18414055,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ Newline codepoints (`\\r` and `\\n`) will be transformed to spaces when","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18414060,"byte_end":18414133,"line_start":625,"line_end":625,"column_start":5,"column_end":78}},{"value":"/ parsing.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18414138,"byte_end":18414150,"line_start":626,"line_end":626,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18414155,"byte_end":18414158,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ You probably don't need this, here is what [RFC 7230 Section 3.2.4.] has","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18414163,"byte_end":18414239,"line_start":628,"line_end":628,"column_start":5,"column_end":81}},{"value":"/ to say about it:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18414244,"byte_end":18414264,"line_start":629,"line_end":629,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18414269,"byte_end":18414272,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ > A server that receives an obs-fold in a request message that is not","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18414277,"byte_end":18414350,"line_start":631,"line_end":631,"column_start":5,"column_end":78}},{"value":"/ > within a message/http container MUST either reject the message by","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18414355,"byte_end":18414426,"line_start":632,"line_end":632,"column_start":5,"column_end":76}},{"value":"/ > sending a 400 (Bad Request), preferably with a representation","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18414431,"byte_end":18414498,"line_start":633,"line_end":633,"column_start":5,"column_end":72}},{"value":"/ > explaining that obsolete line folding is unacceptable, or replace","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18414503,"byte_end":18414574,"line_start":634,"line_end":634,"column_start":5,"column_end":76}},{"value":"/ > each received obs-fold with one or more SP octets prior to","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18414579,"byte_end":18414643,"line_start":635,"line_end":635,"column_start":5,"column_end":69}},{"value":"/ > interpreting the field value or forwarding the message downstream.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18414648,"byte_end":18414720,"line_start":636,"line_end":636,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18414725,"byte_end":18414728,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ > A proxy or gateway that receives an obs-fold in a response message","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18414733,"byte_end":18414805,"line_start":638,"line_end":638,"column_start":5,"column_end":77}},{"value":"/ > that is not within a message/http container MUST either discard the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18414810,"byte_end":18414883,"line_start":639,"line_end":639,"column_start":5,"column_end":78}},{"value":"/ > message and replace it with a 502 (Bad Gateway) response, preferably","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18414888,"byte_end":18414962,"line_start":640,"line_end":640,"column_start":5,"column_end":79}},{"value":"/ > with a representation explaining that unacceptable line folding was","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18414967,"byte_end":18415040,"line_start":641,"line_end":641,"column_start":5,"column_end":78}},{"value":"/ > received, or replace each received obs-fold with one or more SP","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18415045,"byte_end":18415114,"line_start":642,"line_end":642,"column_start":5,"column_end":74}},{"value":"/ > octets prior to interpreting the field value or forwarding the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18415119,"byte_end":18415187,"line_start":643,"line_end":643,"column_start":5,"column_end":73}},{"value":"/ > message downstream.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18415192,"byte_end":18415217,"line_start":644,"line_end":644,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18415222,"byte_end":18415225,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ > A user agent that receives an obs-fold in a response message that is","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18415230,"byte_end":18415304,"line_start":646,"line_end":646,"column_start":5,"column_end":79}},{"value":"/ > not within a message/http container MUST replace each received","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18415309,"byte_end":18415377,"line_start":647,"line_end":647,"column_start":5,"column_end":73}},{"value":"/ > obs-fold with one or more SP octets prior to interpreting the field","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18415382,"byte_end":18415455,"line_start":648,"line_end":648,"column_start":5,"column_end":78}},{"value":"/ > value.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18415460,"byte_end":18415472,"line_start":649,"line_end":649,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18415477,"byte_end":18415480,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ Note that this setting does not affect HTTP/2.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18415485,"byte_end":18415535,"line_start":651,"line_end":651,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18415540,"byte_end":18415543,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18415548,"byte_end":18415569,"line_start":653,"line_end":653,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18415574,"byte_end":18415577,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ [RFC 7230 Section 3.2.4.]: https://tools.ietf.org/html/rfc7230#section-3.2.4","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18415582,"byte_end":18415662,"line_start":655,"line_end":655,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":5049},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18416514,"byte_end":18416526,"line_start":677,"line_end":677,"column_start":12,"column_end":24},"name":"http1_writev","qualname":"<Builder>::http1_writev","value":"fn http1_writev(&mut Self, bool) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/1 connections should try to use vectored writes,\n or always flatten into a single buffer.","sig":null,"attributes":[{"value":"/ Set whether HTTP/1 connections should try to use vectored writes,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18415916,"byte_end":18415985,"line_start":665,"line_end":665,"column_start":5,"column_end":74}},{"value":"/ or always flatten into a single buffer.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18415990,"byte_end":18416033,"line_start":666,"line_end":666,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18416038,"byte_end":18416041,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ Note that setting this to false may mean more copies of body data,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18416046,"byte_end":18416116,"line_start":668,"line_end":668,"column_start":5,"column_end":75}},{"value":"/ but may also improve performance when an IO transport doesn't","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18416121,"byte_end":18416186,"line_start":669,"line_end":669,"column_start":5,"column_end":70}},{"value":"/ support vectored writes well, such as most TLS implementations.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18416191,"byte_end":18416258,"line_start":670,"line_end":670,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18416263,"byte_end":18416266,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ Setting this to true will force hyper to use queued strategy","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18416271,"byte_end":18416335,"line_start":672,"line_end":672,"column_start":5,"column_end":69}},{"value":"/ which may eliminate unnecessary cloning on some TLS backends","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18416340,"byte_end":18416404,"line_start":673,"line_end":673,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18416409,"byte_end":18416412,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ Default is `auto`. In this mode hyper will try to guess which","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18416417,"byte_end":18416482,"line_start":675,"line_end":675,"column_start":5,"column_end":70}},{"value":"/ mode to use","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18416487,"byte_end":18416502,"line_start":676,"line_end":676,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5050},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18416845,"byte_end":18416869,"line_start":688,"line_end":688,"column_start":12,"column_end":36},"name":"http1_title_case_headers","qualname":"<Builder>::http1_title_case_headers","value":"fn http1_title_case_headers(&mut Self, bool) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/1 connections will write header names as title case at\n the socket level.","sig":null,"attributes":[{"value":"/ Set whether HTTP/1 connections will write header names as title case at","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18416635,"byte_end":18416710,"line_start":682,"line_end":682,"column_start":5,"column_end":80}},{"value":"/ the socket level.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18416715,"byte_end":18416736,"line_start":683,"line_end":683,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18416741,"byte_end":18416744,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ Note that this setting does not affect HTTP/2.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18416749,"byte_end":18416799,"line_start":685,"line_end":685,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18416804,"byte_end":18416807,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18416812,"byte_end":18416833,"line_start":687,"line_end":687,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":5051},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18417589,"byte_end":18417615,"line_start":706,"line_end":706,"column_start":12,"column_end":38},"name":"http1_preserve_header_case","qualname":"<Builder>::http1_preserve_header_case","value":"fn http1_preserve_header_case(&mut Self, bool) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Set whether to support preserving original header cases.","sig":null,"attributes":[{"value":"/ Set whether to support preserving original header cases.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18416984,"byte_end":18417044,"line_start":693,"line_end":693,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18417049,"byte_end":18417052,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ Currently, this will record the original cases received, and store them","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18417057,"byte_end":18417132,"line_start":695,"line_end":695,"column_start":5,"column_end":80}},{"value":"/ in a private extension on the `Response`. It will also look for and use","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18417137,"byte_end":18417212,"line_start":696,"line_end":696,"column_start":5,"column_end":80}},{"value":"/ such an extension in any provided `Request`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18417217,"byte_end":18417265,"line_start":697,"line_end":697,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18417270,"byte_end":18417273,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ Since the relevant extension is still private, there is no way to","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18417278,"byte_end":18417347,"line_start":699,"line_end":699,"column_start":5,"column_end":74}},{"value":"/ interact with the original cases. The only effect this can have now is","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18417352,"byte_end":18417426,"line_start":700,"line_end":700,"column_start":5,"column_end":79}},{"value":"/ to forward the cases in a proxy-like fashion.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18417431,"byte_end":18417480,"line_start":701,"line_end":701,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18417485,"byte_end":18417488,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ Note that this setting does not affect HTTP/2.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18417493,"byte_end":18417543,"line_start":703,"line_end":703,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18417548,"byte_end":18417551,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18417556,"byte_end":18417577,"line_start":705,"line_end":705,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":5052},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18418525,"byte_end":18418550,"line_start":731,"line_end":731,"column_start":12,"column_end":37},"name":"http1_read_buf_exact_size","qualname":"<Builder>::http1_read_buf_exact_size","value":"fn http1_read_buf_exact_size(&mut Self, Option<usize>) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Sets the exact size of the read buffer to *always* use.","sig":null,"attributes":[{"value":"/ Sets the exact size of the read buffer to *always* use.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18418316,"byte_end":18418375,"line_start":726,"line_end":726,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18418380,"byte_end":18418383,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ Note that setting this option unsets the `http1_max_buf_size` option.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18418388,"byte_end":18418461,"line_start":728,"line_end":728,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18418466,"byte_end":18418469,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ Default is an adaptive read buffer.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18418474,"byte_end":18418513,"line_start":730,"line_end":730,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":5053},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18419117,"byte_end":18419135,"line_start":748,"line_end":748,"column_start":12,"column_end":30},"name":"http1_max_buf_size","qualname":"<Builder>::http1_max_buf_size","value":"fn http1_max_buf_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum buffer size for the connection.","sig":null,"attributes":[{"value":"/ Set the maximum buffer size for the connection.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18418702,"byte_end":18418753,"line_start":737,"line_end":737,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18418758,"byte_end":18418761,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ Default is ~400kb.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18418766,"byte_end":18418788,"line_start":739,"line_end":739,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18418793,"byte_end":18418796,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ Note that setting this option unsets the `http1_read_exact_buf_size` option.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18418801,"byte_end":18418881,"line_start":741,"line_end":741,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18418886,"byte_end":18418889,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18418894,"byte_end":18418906,"line_start":743,"line_end":743,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18418911,"byte_end":18418914,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ The minimum value allowed is 8192. This method panics if the passed `max` is less than the minimum.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18418919,"byte_end":18419022,"line_start":745,"line_end":745,"column_start":5,"column_end":108}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18419027,"byte_end":18419052,"line_start":746,"line_end":746,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5054},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18419781,"byte_end":18419791,"line_start":770,"line_end":770,"column_start":12,"column_end":22},"name":"http2_only","qualname":"<Builder>::http2_only","value":"fn http2_only(&mut Self, bool) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Sets whether HTTP2 is required.","sig":null,"attributes":[{"value":"/ Sets whether HTTP2 is required.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18419617,"byte_end":18419652,"line_start":765,"line_end":765,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18419657,"byte_end":18419660,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18419665,"byte_end":18419686,"line_start":767,"line_end":767,"column_start":5,"column_end":26}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18419691,"byte_end":18419716,"line_start":768,"line_end":768,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5055},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18420320,"byte_end":18420352,"line_start":787,"line_end":787,"column_start":12,"column_end":44},"name":"http2_initial_stream_window_size","qualname":"<Builder>::http2_initial_stream_window_size","value":"fn http2_initial_stream_window_size<impl Into<Option<u32>>>(&mut Self,\nimpl Into<Option<u32>>) -> &mut Self where\nimpl Into<Option<u32>>: Into<Option<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2\n stream-level flow control.","sig":null,"attributes":[{"value":"/ Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18419931,"byte_end":18419999,"line_start":777,"line_end":777,"column_start":5,"column_end":73}},{"value":"/ stream-level flow control.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18420004,"byte_end":18420034,"line_start":778,"line_end":778,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18420039,"byte_end":18420042,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ Passing `None` will do nothing.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18420047,"byte_end":18420082,"line_start":780,"line_end":780,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18420087,"byte_end":18420090,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ If not set, hyper will use a default.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18420095,"byte_end":18420136,"line_start":782,"line_end":782,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18420141,"byte_end":18420144,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://http2.github.io/http2-spec/#SETTINGS_INITIAL_WINDOW_SIZE","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18420149,"byte_end":18420225,"line_start":784,"line_end":784,"column_start":5,"column_end":81}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18420230,"byte_end":18420255,"line_start":785,"line_end":785,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5057},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18420846,"byte_end":18420882,"line_start":802,"line_end":802,"column_start":12,"column_end":48},"name":"http2_initial_connection_window_size","qualname":"<Builder>::http2_initial_connection_window_size","value":"fn http2_initial_connection_window_size<impl Into<Option<u32>>>(&mut Self,\nimpl Into<Option<u32>>) -> &mut Self where\nimpl Into<Option<u32>>: Into<Option<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Sets the max connection-level flow control for HTTP2","sig":null,"attributes":[{"value":"/ Sets the max connection-level flow control for HTTP2","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18420593,"byte_end":18420649,"line_start":795,"line_end":795,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18420654,"byte_end":18420657,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ Passing `None` will do nothing.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18420662,"byte_end":18420697,"line_start":797,"line_end":797,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18420702,"byte_end":18420705,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ If not set, hyper will use a default.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18420710,"byte_end":18420751,"line_start":799,"line_end":799,"column_start":5,"column_end":46}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18420756,"byte_end":18420781,"line_start":800,"line_end":800,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5059},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18421445,"byte_end":18421466,"line_start":820,"line_end":820,"column_start":12,"column_end":33},"name":"http2_adaptive_window","qualname":"<Builder>::http2_adaptive_window","value":"fn http2_adaptive_window(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether to use an adaptive flow control.","sig":null,"attributes":[{"value":"/ Sets whether to use an adaptive flow control.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18421144,"byte_end":18421193,"line_start":813,"line_end":813,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18421198,"byte_end":18421201,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ Enabling this will override the limits set in","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18421206,"byte_end":18421255,"line_start":815,"line_end":815,"column_start":5,"column_end":54}},{"value":"/ `http2_initial_stream_window_size` and","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18421260,"byte_end":18421302,"line_start":816,"line_end":816,"column_start":5,"column_end":47}},{"value":"/ `http2_initial_connection_window_size`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18421307,"byte_end":18421350,"line_start":817,"line_end":817,"column_start":5,"column_end":48}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18421355,"byte_end":18421380,"line_start":818,"line_end":818,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5063},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18422050,"byte_end":18422070,"line_start":838,"line_end":838,"column_start":12,"column_end":32},"name":"http2_max_frame_size","qualname":"<Builder>::http2_max_frame_size","value":"fn http2_max_frame_size<impl Into<Option<u32>>>(&mut Self,\nimpl Into<Option<u32>>) -> &mut Self where\nimpl Into<Option<u32>>: Into<Option<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum frame size to use for HTTP2.","sig":null,"attributes":[{"value":"/ Sets the maximum frame size to use for HTTP2.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18421804,"byte_end":18421853,"line_start":831,"line_end":831,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18421858,"byte_end":18421861,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ Passing `None` will do nothing.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18421866,"byte_end":18421901,"line_start":833,"line_end":833,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18421906,"byte_end":18421909,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ If not set, hyper will use a default.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18421914,"byte_end":18421955,"line_start":835,"line_end":835,"column_start":5,"column_end":46}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18421960,"byte_end":18421985,"line_start":836,"line_end":836,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5065},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18422670,"byte_end":18422695,"line_start":858,"line_end":858,"column_start":12,"column_end":37},"name":"http2_keep_alive_interval","qualname":"<Builder>::http2_keep_alive_interval","value":"fn http2_keep_alive_interval<impl Into<Option<Duration>>>(&mut Self,\nimpl Into<Option<Duration>>) -> &mut Self where\nimpl Into<Option<Duration>>: Into<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Sets an interval for HTTP2 Ping frames should be sent to keep a\n connection alive.","sig":null,"attributes":[{"value":"/ Sets an interval for HTTP2 Ping frames should be sent to keep a","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18422246,"byte_end":18422313,"line_start":845,"line_end":845,"column_start":5,"column_end":72}},{"value":"/ connection alive.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18422318,"byte_end":18422339,"line_start":846,"line_end":846,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18422344,"byte_end":18422347,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ Pass `None` to disable HTTP2 keep-alive.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18422352,"byte_end":18422396,"line_start":848,"line_end":848,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18422401,"byte_end":18422404,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ Default is currently disabled.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18422409,"byte_end":18422443,"line_start":850,"line_end":850,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18422448,"byte_end":18422451,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ # Cargo Feature","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18422456,"byte_end":18422475,"line_start":852,"line_end":852,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18422480,"byte_end":18422483,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ Requires the `runtime` cargo feature to be enabled.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18422488,"byte_end":18422543,"line_start":854,"line_end":854,"column_start":5,"column_end":60}},{"value":"cfg(feature = \"runtime\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18422548,"byte_end":18422575,"line_start":855,"line_end":855,"column_start":5,"column_end":32}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18422580,"byte_end":18422605,"line_start":856,"line_end":856,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5067},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18423376,"byte_end":18423400,"line_start":879,"line_end":879,"column_start":12,"column_end":36},"name":"http2_keep_alive_timeout","qualname":"<Builder>::http2_keep_alive_timeout","value":"fn http2_keep_alive_timeout(&mut Self, Duration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a timeout for receiving an acknowledgement of the keep-alive ping.","sig":null,"attributes":[{"value":"/ Sets a timeout for receiving an acknowledgement of the keep-alive ping.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18422871,"byte_end":18422946,"line_start":866,"line_end":866,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18422951,"byte_end":18422954,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ If the ping is not acknowledged within the timeout, the connection will","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18422959,"byte_end":18423034,"line_start":868,"line_end":868,"column_start":5,"column_end":80}},{"value":"/ be closed. Does nothing if `http2_keep_alive_interval` is disabled.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18423039,"byte_end":18423110,"line_start":869,"line_end":869,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18423115,"byte_end":18423118,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ Default is 20 seconds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18423123,"byte_end":18423149,"line_start":871,"line_end":871,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18423154,"byte_end":18423157,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ # Cargo Feature","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18423162,"byte_end":18423181,"line_start":873,"line_end":873,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18423186,"byte_end":18423189,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ Requires the `runtime` cargo feature to be enabled.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18423194,"byte_end":18423249,"line_start":875,"line_end":875,"column_start":5,"column_end":60}},{"value":"cfg(feature = \"runtime\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18423254,"byte_end":18423281,"line_start":876,"line_end":876,"column_start":5,"column_end":32}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18423286,"byte_end":18423311,"line_start":877,"line_end":877,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5068},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18424112,"byte_end":18424139,"line_start":899,"line_end":899,"column_start":12,"column_end":39},"name":"http2_keep_alive_while_idle","qualname":"<Builder>::http2_keep_alive_while_idle","value":"fn http2_keep_alive_while_idle(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether HTTP2 keep-alive should apply while the connection is idle.","sig":null,"attributes":[{"value":"/ Sets whether HTTP2 keep-alive should apply while the connection is idle.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18423524,"byte_end":18423600,"line_start":884,"line_end":884,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18423605,"byte_end":18423608,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ If disabled, keep-alive pings are only sent while there are open","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18423613,"byte_end":18423681,"line_start":886,"line_end":886,"column_start":5,"column_end":73}},{"value":"/ request/responses streams. If enabled, pings are also sent when no","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18423686,"byte_end":18423756,"line_start":887,"line_end":887,"column_start":5,"column_end":75}},{"value":"/ streams are active. Does nothing if `http2_keep_alive_interval` is","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18423761,"byte_end":18423831,"line_start":888,"line_end":888,"column_start":5,"column_end":75}},{"value":"/ disabled.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18423836,"byte_end":18423849,"line_start":889,"line_end":889,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18423854,"byte_end":18423857,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ Default is `false`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18423862,"byte_end":18423885,"line_start":891,"line_end":891,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18423890,"byte_end":18423893,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ # Cargo Feature","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18423898,"byte_end":18423917,"line_start":893,"line_end":893,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18423922,"byte_end":18423925,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ Requires the `runtime` cargo feature to be enabled.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18423930,"byte_end":18423985,"line_start":895,"line_end":895,"column_start":5,"column_end":60}},{"value":"cfg(feature = \"runtime\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18423990,"byte_end":18424017,"line_start":896,"line_end":896,"column_start":5,"column_end":32}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18424022,"byte_end":18424047,"line_start":897,"line_end":897,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5069},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18424768,"byte_end":18424802,"line_start":914,"line_end":914,"column_start":12,"column_end":46},"name":"http2_max_concurrent_reset_streams","qualname":"<Builder>::http2_max_concurrent_reset_streams","value":"fn http2_max_concurrent_reset_streams(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of HTTP2 concurrent locally reset streams.","sig":null,"attributes":[{"value":"/ Sets the maximum number of HTTP2 concurrent locally reset streams.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18424262,"byte_end":18424332,"line_start":904,"line_end":904,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18424337,"byte_end":18424340,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ See the documentation of [`h2::client::Builder::max_concurrent_reset_streams`] for more","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18424345,"byte_end":18424436,"line_start":906,"line_end":906,"column_start":5,"column_end":96}},{"value":"/ details.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18424441,"byte_end":18424453,"line_start":907,"line_end":907,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18424458,"byte_end":18424461,"line_start":908,"line_end":908,"column_start":5,"column_end":8}},{"value":"/ The default value is determined by the `h2` crate.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18424466,"byte_end":18424520,"line_start":909,"line_end":909,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18424525,"byte_end":18424528,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ [`h2::client::Builder::max_concurrent_reset_streams`]: https://docs.rs/h2/client/struct.Builder.html#method.max_concurrent_reset_streams","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18424533,"byte_end":18424673,"line_start":911,"line_end":911,"column_start":5,"column_end":145}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18424678,"byte_end":18424703,"line_start":912,"line_end":912,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5070},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18425231,"byte_end":18425254,"line_start":928,"line_end":928,"column_start":12,"column_end":35},"name":"http2_max_send_buf_size","qualname":"<Builder>::http2_max_send_buf_size","value":"fn http2_max_send_buf_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum write buffer size for each HTTP/2 stream.","sig":null,"attributes":[{"value":"/ Set the maximum write buffer size for each HTTP/2 stream.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18424931,"byte_end":18424992,"line_start":919,"line_end":919,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18424997,"byte_end":18425000,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ Default is currently 1MB, but may change.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18425005,"byte_end":18425050,"line_start":921,"line_end":921,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18425055,"byte_end":18425058,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18425063,"byte_end":18425075,"line_start":923,"line_end":923,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18425080,"byte_end":18425083,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/ The value must be no larger than `u32::MAX`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18425088,"byte_end":18425136,"line_start":925,"line_end":925,"column_start":5,"column_end":53}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18425141,"byte_end":18425166,"line_start":926,"line_end":926,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5071},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18425652,"byte_end":18425661,"line_start":939,"line_end":939,"column_start":12,"column_end":21},"name":"handshake","qualname":"<Builder>::handshake","value":"fn handshake<T, B>(&Self, T) -> /*impl Trait*/ where T: AsyncRead +\nAsyncWrite + Unpin + Send + 'static, B: HttpBody + 'static, B::Data: Send,\nB::Error: Into<Box<dyn StdError + Send + Sync>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a connection with the configured options and IO.\n See [`client::conn`](crate::client::conn) for more.","sig":null,"attributes":[{"value":"/ Constructs a connection with the configured options and IO.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18425417,"byte_end":18425480,"line_start":934,"line_end":934,"column_start":5,"column_end":68}},{"value":"/ See [`client::conn`](crate::client::conn) for more.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18425485,"byte_end":18425540,"line_start":935,"line_end":935,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18425545,"byte_end":18425548,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ Note, if [`Connection`] is not `await`-ed, [`SendRequest`] will","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18425553,"byte_end":18425620,"line_start":937,"line_end":937,"column_start":5,"column_end":72}},{"value":"/ do nothing.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18425625,"byte_end":18425640,"line_start":938,"line_end":938,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5078},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18428424,"byte_end":18428428,"line_start":1016,"line_end":1016,"column_start":8,"column_end":12},"name":"poll","qualname":"<ResponseFuture as futures_util::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut task::Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13330},"children":[],"decl_id":{"krate":2,"index":13332},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5081},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18429159,"byte_end":18429162,"line_start":1034,"line_end":1034,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ResponseFuture as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9902},"children":[],"decl_id":{"krate":2,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":5442},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/service.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"service","qualname":"::client::service","value":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/service.rs","parent":null,"children":[{"krate":0,"index":5443},{"krate":0,"index":5446},{"krate":0,"index":5449},{"krate":0,"index":5450},{"krate":0,"index":5452},{"krate":0,"index":5455},{"krate":0,"index":5456},{"krate":0,"index":5459},{"krate":0,"index":5462},{"krate":0,"index":5463},{"krate":0,"index":5466},{"krate":0,"index":5467},{"krate":0,"index":5470},{"krate":0,"index":5473},{"krate":0,"index":5476},{"krate":0,"index":5477},{"krate":0,"index":5480},{"krate":0,"index":5619},{"krate":0,"index":5626},{"krate":0,"index":5483},{"krate":0,"index":5488}],"decl_id":null,"docs":" Utilities used to interact with the Tower ecosystem.","sig":null,"attributes":[{"value":"cfg(any(feature = \"http1\", feature = \"http2\"))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/cfg.rs","byte_start":3241,"byte_end":3254,"line_start":7,"line_end":7,"column_start":13,"column_end":26}},{"value":"/ Utilities used to interact with the Tower ecosystem.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/service.rs","byte_start":18476420,"byte_end":18476476,"line_start":1,"line_end":1,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/service.rs","byte_start":18476477,"byte_end":18476480,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides `Connect` which hook-ins into the Tower ecosystem.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/service.rs","byte_start":18476481,"byte_end":18476556,"line_start":3,"line_end":3,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5619},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/service.rs","byte_start":18477041,"byte_end":18477048,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"name":"Connect","qualname":"::client::service::Connect","value":"Connect {  }","parent":null,"children":[{"krate":0,"index":5623},{"krate":0,"index":5624},{"krate":0,"index":5625}],"decl_id":null,"docs":" Creates a connection via `SendRequest`.","sig":null,"attributes":[{"value":"/ Creates a connection via `SendRequest`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/service.rs","byte_start":18476819,"byte_end":18476862,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/service.rs","byte_start":18476863,"byte_end":18476866,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This accepts a `hyper::client::conn::Builder` and provides","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/service.rs","byte_start":18476867,"byte_end":18476929,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/ a `MakeService` implementation to create connections from some","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/service.rs","byte_start":18476930,"byte_end":18476996,"line_start":21,"line_end":21,"column_start":1,"column_end":67}},{"value":"/ target `T`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/service.rs","byte_start":18476997,"byte_end":18477012,"line_start":22,"line_end":22,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5487},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/service.rs","byte_start":18477270,"byte_end":18477273,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<Connect<C, B, T>>::new","value":"fn new(C, Builder) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Connect` with some inner connector `C` and a connection\n builder.\n","sig":null,"attributes":[{"value":"/ Create a new `Connect` with some inner connector `C` and a connection","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/service.rs","byte_start":18477168,"byte_end":18477241,"line_start":31,"line_end":31,"column_start":5,"column_end":78}},{"value":"/ builder.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/service.rs","byte_start":18477246,"byte_end":18477258,"line_start":32,"line_end":32,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":5495},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/service.rs","byte_start":18477938,"byte_end":18477948,"line_start":57,"line_end":57,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<Connect<C, B, T> as tower_service::Service>::poll_ready","value":"fn poll_ready(&mut Self, &mut task::Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":52,"index":13},"children":[],"decl_id":{"krate":52,"index":18},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5497},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/service.rs","byte_start":18478172,"byte_end":18478176,"line_start":63,"line_end":63,"column_start":8,"column_end":12},"name":"call","qualname":"<Connect<C, B, T> as tower_service::Service>::call","value":"fn call(&mut Self, T) -> Self::Future","parent":{"krate":52,"index":13},"children":[],"decl_id":{"krate":52,"index":19},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":5631},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"server","qualname":"::server","value":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","parent":null,"children":[{"krate":0,"index":5632},{"krate":0,"index":5684},{"krate":0,"index":5817},{"krate":0,"index":5946},{"krate":0,"index":6109},{"krate":0,"index":6372},{"krate":0,"index":6375}],"decl_id":null,"docs":" HTTP Server","sig":null,"attributes":[{"value":"cfg(feature = \"server\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/cfg.rs","byte_start":3241,"byte_end":3254,"line_start":7,"line_end":7,"column_start":13,"column_end":26}},{"value":"/ HTTP Server","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18479048,"byte_end":18479063,"line_start":1,"line_end":1,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18479064,"byte_end":18479067,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A `Server` is created to listen on a port, parse HTTP requests, and hand","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18479068,"byte_end":18479144,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ them off to a `Service`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18479145,"byte_end":18479173,"line_start":4,"line_end":4,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18479174,"byte_end":18479177,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ There are two levels of APIs provide for constructing HTTP servers:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18479178,"byte_end":18479249,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18479250,"byte_end":18479253,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ - The higher-level [`Server`](Server) type.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18479254,"byte_end":18479301,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/ - The lower-level [`conn`](conn) module.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18479302,"byte_end":18479346,"line_start":9,"line_end":9,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18479347,"byte_end":18479350,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Server","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18479351,"byte_end":18479363,"line_start":11,"line_end":11,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18479364,"byte_end":18479367,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The [`Server`](Server) is main way to start listening for HTTP requests.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18479368,"byte_end":18479444,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ It wraps a listener with a [`MakeService`](crate::service), and then should","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18479445,"byte_end":18479524,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ be executed to start serving requests.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18479525,"byte_end":18479567,"line_start":15,"line_end":15,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18479568,"byte_end":18479571,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`Server`](Server) accepts connections in both HTTP1 and HTTP2 by default.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18479572,"byte_end":18479650,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18479651,"byte_end":18479654,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18479655,"byte_end":18479670,"line_start":19,"line_end":19,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18479671,"byte_end":18479674,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18479675,"byte_end":18479688,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ use std::convert::Infallible;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18479689,"byte_end":18479722,"line_start":22,"line_end":22,"column_start":1,"column_end":34}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18479723,"byte_end":18479752,"line_start":23,"line_end":23,"column_start":1,"column_end":30}},{"value":"/ use hyper::{Body, Request, Response, Server};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18479753,"byte_end":18479802,"line_start":24,"line_end":24,"column_start":1,"column_end":50}},{"value":"/ use hyper::service::{make_service_fn, service_fn};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18479803,"byte_end":18479857,"line_start":25,"line_end":25,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18479858,"byte_end":18479861,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ async fn handle(_req: Request<Body>) -> Result<Response<Body>, Infallible> {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18479862,"byte_end":18479942,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/     Ok(Response::new(Body::from(\"Hello World\")))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18479943,"byte_end":18479995,"line_start":28,"line_end":28,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18479996,"byte_end":18480001,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18480002,"byte_end":18480005,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # #[cfg(feature = \"runtime\")]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18480006,"byte_end":18480039,"line_start":31,"line_end":31,"column_start":1,"column_end":34}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18480040,"byte_end":18480058,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18480059,"byte_end":18480080,"line_start":33,"line_end":33,"column_start":1,"column_end":22}},{"value":"/     // Construct our SocketAddr to listen on...","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18480081,"byte_end":18480132,"line_start":34,"line_end":34,"column_start":1,"column_end":52}},{"value":"/     let addr = SocketAddr::from(([127, 0, 0, 1], 3000));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18480133,"byte_end":18480193,"line_start":35,"line_end":35,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18480194,"byte_end":18480197,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // And a MakeService to handle each connection...","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18480198,"byte_end":18480255,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/     let make_service = make_service_fn(|_conn| async {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18480256,"byte_end":18480314,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/         Ok::<_, Infallible>(service_fn(handle))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18480315,"byte_end":18480366,"line_start":39,"line_end":39,"column_start":1,"column_end":52}},{"value":"/     });","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18480367,"byte_end":18480378,"line_start":40,"line_end":40,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18480379,"byte_end":18480382,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/     // Then bind and serve...","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18480383,"byte_end":18480416,"line_start":42,"line_end":42,"column_start":1,"column_end":34}},{"value":"/     let server = Server::bind(&addr).serve(make_service);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18480417,"byte_end":18480478,"line_start":43,"line_end":43,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18480479,"byte_end":18480482,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/     // And run forever...","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18480483,"byte_end":18480512,"line_start":45,"line_end":45,"column_start":1,"column_end":30}},{"value":"/     if let Err(e) = server.await {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18480513,"byte_end":18480551,"line_start":46,"line_end":46,"column_start":1,"column_end":39}},{"value":"/         eprintln!(\"server error: {}\", e);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18480552,"byte_end":18480597,"line_start":47,"line_end":47,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18480598,"byte_end":18480607,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18480608,"byte_end":18480613,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ # #[cfg(not(feature = \"runtime\"))]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18480614,"byte_end":18480652,"line_start":50,"line_end":50,"column_start":1,"column_end":39}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18480653,"byte_end":18480671,"line_start":51,"line_end":51,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18480672,"byte_end":18480679,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18480680,"byte_end":18480683,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ If you don't need the connection and your service implements `Clone` you can use","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18480684,"byte_end":18480768,"line_start":54,"line_end":54,"column_start":1,"column_end":85}},{"value":"/ [`tower::make::Shared`] instead of `make_service_fn` which is a bit simpler:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18480769,"byte_end":18480849,"line_start":55,"line_end":55,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18480850,"byte_end":18480853,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18480854,"byte_end":18480867,"line_start":57,"line_end":57,"column_start":1,"column_end":14}},{"value":"/ # use std::convert::Infallible;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18480868,"byte_end":18480903,"line_start":58,"line_end":58,"column_start":1,"column_end":36}},{"value":"/ # use std::net::SocketAddr;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18480904,"byte_end":18480935,"line_start":59,"line_end":59,"column_start":1,"column_end":32}},{"value":"/ # use hyper::{Body, Request, Response, Server};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18480936,"byte_end":18480987,"line_start":60,"line_end":60,"column_start":1,"column_end":52}},{"value":"/ # use hyper::service::{make_service_fn, service_fn};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18480988,"byte_end":18481044,"line_start":61,"line_end":61,"column_start":1,"column_end":57}},{"value":"/ # use tower::make::Shared;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18481045,"byte_end":18481075,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/ # async fn handle(_req: Request<Body>) -> Result<Response<Body>, Infallible> {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18481076,"byte_end":18481158,"line_start":63,"line_end":63,"column_start":1,"column_end":83}},{"value":"/ #     Ok(Response::new(Body::from(\"Hello World\")))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18481159,"byte_end":18481213,"line_start":64,"line_end":64,"column_start":1,"column_end":55}},{"value":"/ # }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18481214,"byte_end":18481221,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"runtime\")]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18481222,"byte_end":18481255,"line_start":66,"line_end":66,"column_start":1,"column_end":34}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18481256,"byte_end":18481274,"line_start":67,"line_end":67,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18481275,"byte_end":18481296,"line_start":68,"line_end":68,"column_start":1,"column_end":22}},{"value":"/     // Construct our SocketAddr to listen on...","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18481297,"byte_end":18481348,"line_start":69,"line_end":69,"column_start":1,"column_end":52}},{"value":"/     let addr = SocketAddr::from(([127, 0, 0, 1], 3000));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18481349,"byte_end":18481409,"line_start":70,"line_end":70,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18481410,"byte_end":18481413,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/     // Shared is a MakeService that produces services by cloning an inner service...","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18481414,"byte_end":18481502,"line_start":72,"line_end":72,"column_start":1,"column_end":89}},{"value":"/     let make_service = Shared::new(service_fn(handle));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18481503,"byte_end":18481562,"line_start":73,"line_end":73,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18481563,"byte_end":18481566,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/     // Then bind and serve...","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18481567,"byte_end":18481600,"line_start":75,"line_end":75,"column_start":1,"column_end":34}},{"value":"/     let server = Server::bind(&addr).serve(make_service);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18481601,"byte_end":18481662,"line_start":76,"line_end":76,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18481663,"byte_end":18481666,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/     // And run forever...","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18481667,"byte_end":18481696,"line_start":78,"line_end":78,"column_start":1,"column_end":30}},{"value":"/     if let Err(e) = server.await {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18481697,"byte_end":18481735,"line_start":79,"line_end":79,"column_start":1,"column_end":39}},{"value":"/         eprintln!(\"server error: {}\", e);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18481736,"byte_end":18481781,"line_start":80,"line_end":80,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18481782,"byte_end":18481791,"line_start":81,"line_end":81,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18481792,"byte_end":18481797,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/ # #[cfg(not(feature = \"runtime\"))]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18481798,"byte_end":18481836,"line_start":83,"line_end":83,"column_start":1,"column_end":39}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18481837,"byte_end":18481855,"line_start":84,"line_end":84,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18481856,"byte_end":18481863,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18481864,"byte_end":18481867,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Passing data to your request handler can be done like so:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18481868,"byte_end":18481929,"line_start":87,"line_end":87,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18481930,"byte_end":18481933,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18481934,"byte_end":18481947,"line_start":89,"line_end":89,"column_start":1,"column_end":14}},{"value":"/ use std::convert::Infallible;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18481948,"byte_end":18481981,"line_start":90,"line_end":90,"column_start":1,"column_end":34}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18481982,"byte_end":18482011,"line_start":91,"line_end":91,"column_start":1,"column_end":30}},{"value":"/ use hyper::{Body, Request, Response, Server};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18482012,"byte_end":18482061,"line_start":92,"line_end":92,"column_start":1,"column_end":50}},{"value":"/ use hyper::service::{make_service_fn, service_fn};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18482062,"byte_end":18482116,"line_start":93,"line_end":93,"column_start":1,"column_end":55}},{"value":"/ # #[cfg(feature = \"runtime\")]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18482117,"byte_end":18482150,"line_start":94,"line_end":94,"column_start":1,"column_end":34}},{"value":"/ use hyper::server::conn::AddrStream;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18482151,"byte_end":18482191,"line_start":95,"line_end":95,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18482192,"byte_end":18482195,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone)]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18482196,"byte_end":18482216,"line_start":97,"line_end":97,"column_start":1,"column_end":21}},{"value":"/ struct AppContext {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18482217,"byte_end":18482240,"line_start":98,"line_end":98,"column_start":1,"column_end":24}},{"value":"/     // Whatever data your application needs can go here","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18482241,"byte_end":18482300,"line_start":99,"line_end":99,"column_start":1,"column_end":60}},{"value":"/ }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18482301,"byte_end":18482306,"line_start":100,"line_end":100,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18482307,"byte_end":18482310,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ async fn handle(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18482311,"byte_end":18482331,"line_start":102,"line_end":102,"column_start":1,"column_end":21}},{"value":"/     context: AppContext,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18482332,"byte_end":18482360,"line_start":103,"line_end":103,"column_start":1,"column_end":29}},{"value":"/     addr: SocketAddr,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18482361,"byte_end":18482386,"line_start":104,"line_end":104,"column_start":1,"column_end":26}},{"value":"/     req: Request<Body>","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18482387,"byte_end":18482413,"line_start":105,"line_end":105,"column_start":1,"column_end":27}},{"value":"/ ) -> Result<Response<Body>, Infallible> {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18482414,"byte_end":18482459,"line_start":106,"line_end":106,"column_start":1,"column_end":46}},{"value":"/     Ok(Response::new(Body::from(\"Hello World\")))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18482460,"byte_end":18482512,"line_start":107,"line_end":107,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18482513,"byte_end":18482518,"line_start":108,"line_end":108,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18482519,"byte_end":18482522,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ # #[cfg(feature = \"runtime\")]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18482523,"byte_end":18482556,"line_start":110,"line_end":110,"column_start":1,"column_end":34}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18482557,"byte_end":18482575,"line_start":111,"line_end":111,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18482576,"byte_end":18482597,"line_start":112,"line_end":112,"column_start":1,"column_end":22}},{"value":"/     let context = AppContext {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18482598,"byte_end":18482632,"line_start":113,"line_end":113,"column_start":1,"column_end":35}},{"value":"/         // ...","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18482633,"byte_end":18482651,"line_start":114,"line_end":114,"column_start":1,"column_end":19}},{"value":"/     };","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18482652,"byte_end":18482662,"line_start":115,"line_end":115,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18482663,"byte_end":18482666,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     // A `MakeService` that produces a `Service` to handle each connection.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18482667,"byte_end":18482746,"line_start":117,"line_end":117,"column_start":1,"column_end":80}},{"value":"/     let make_service = make_service_fn(move |conn: &AddrStream| {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18482747,"byte_end":18482816,"line_start":118,"line_end":118,"column_start":1,"column_end":70}},{"value":"/         // We have to clone the context to share it with each invocation of","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18482817,"byte_end":18482896,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"/         // `make_service`. If your data doesn't implement `Clone` consider using","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18482897,"byte_end":18482981,"line_start":120,"line_end":120,"column_start":1,"column_end":85}},{"value":"/         // an `std::sync::Arc`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18482982,"byte_end":18483017,"line_start":121,"line_end":121,"column_start":1,"column_end":36}},{"value":"/         let context = context.clone();","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18483018,"byte_end":18483060,"line_start":122,"line_end":122,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18483061,"byte_end":18483064,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/         // You can grab the address of the incoming connection like so.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18483065,"byte_end":18483140,"line_start":124,"line_end":124,"column_start":1,"column_end":76}},{"value":"/         let addr = conn.remote_addr();","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18483141,"byte_end":18483183,"line_start":125,"line_end":125,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18483184,"byte_end":18483187,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/         // Create a `Service` for responding to the request.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18483188,"byte_end":18483252,"line_start":127,"line_end":127,"column_start":1,"column_end":65}},{"value":"/         let service = service_fn(move |req| {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18483253,"byte_end":18483302,"line_start":128,"line_end":128,"column_start":1,"column_end":50}},{"value":"/             handle(context.clone(), addr, req)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18483303,"byte_end":18483353,"line_start":129,"line_end":129,"column_start":1,"column_end":51}},{"value":"/         });","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18483354,"byte_end":18483369,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18483370,"byte_end":18483373,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Return the service to hyper.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18483374,"byte_end":18483417,"line_start":132,"line_end":132,"column_start":1,"column_end":44}},{"value":"/         async move { Ok::<_, Infallible>(service) }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18483418,"byte_end":18483473,"line_start":133,"line_end":133,"column_start":1,"column_end":56}},{"value":"/     });","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18483474,"byte_end":18483485,"line_start":134,"line_end":134,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18483486,"byte_end":18483489,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/     // Run the server like above...","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18483490,"byte_end":18483529,"line_start":136,"line_end":136,"column_start":1,"column_end":40}},{"value":"/     let addr = SocketAddr::from(([127, 0, 0, 1], 3000));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18483530,"byte_end":18483590,"line_start":137,"line_end":137,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18483591,"byte_end":18483594,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/     let server = Server::bind(&addr).serve(make_service);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18483595,"byte_end":18483656,"line_start":139,"line_end":139,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18483657,"byte_end":18483660,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/     if let Err(e) = server.await {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18483661,"byte_end":18483699,"line_start":141,"line_end":141,"column_start":1,"column_end":39}},{"value":"/         eprintln!(\"server error: {}\", e);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18483700,"byte_end":18483745,"line_start":142,"line_end":142,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18483746,"byte_end":18483755,"line_start":143,"line_end":143,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18483756,"byte_end":18483761,"line_start":144,"line_end":144,"column_start":1,"column_end":6}},{"value":"/ # #[cfg(not(feature = \"runtime\"))]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18483762,"byte_end":18483800,"line_start":145,"line_end":145,"column_start":1,"column_end":39}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18483801,"byte_end":18483819,"line_start":146,"line_end":146,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18483820,"byte_end":18483827,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18483828,"byte_end":18483831,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ [`tower::make::Shared`]: https://docs.rs/tower/latest/tower/make/struct.Shared.html","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18483832,"byte_end":18483919,"line_start":149,"line_end":149,"column_start":1,"column_end":88}}]},{"kind":"Mod","id":{"krate":0,"index":5632},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"accept","qualname":"::server::accept","value":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","parent":null,"children":[{"krate":0,"index":5633},{"krate":0,"index":5636},{"krate":0,"index":5639},{"krate":0,"index":5640},{"krate":0,"index":5641},{"krate":0,"index":5644},{"krate":0,"index":5647},{"krate":0,"index":5650},{"krate":0,"index":5654},{"krate":0,"index":5672}],"decl_id":null,"docs":" The `Accept` trait and supporting types.","sig":null,"attributes":[{"value":"/ The `Accept` trait and supporting types.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18484292,"byte_end":18484336,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18484337,"byte_end":18484340,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18484341,"byte_end":18484366,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18484367,"byte_end":18484370,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Accept`](Accept) trait used to asynchronously accept incoming","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18484371,"byte_end":18484444,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/   connections.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18484445,"byte_end":18484463,"line_start":6,"line_end":6,"column_start":1,"column_end":19}},{"value":"/ - Utilities like `poll_fn` to ease creating a custom `Accept`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18484464,"byte_end":18484530,"line_start":7,"line_end":7,"column_start":1,"column_end":67}}]},{"kind":"Trait","id":{"krate":0,"index":5650},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18484764,"byte_end":18484770,"line_start":20,"line_end":20,"column_start":11,"column_end":17},"name":"Accept","qualname":"::server::accept::Accept","value":"Accept","parent":null,"children":[{"krate":0,"index":5651},{"krate":0,"index":5652},{"krate":0,"index":5653}],"decl_id":null,"docs":" Asynchronously accept incoming connections.\n","sig":null,"attributes":[{"value":"/ Asynchronously accept incoming connections.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18484706,"byte_end":18484753,"line_start":19,"line_end":19,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":5651},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18484832,"byte_end":18484836,"line_start":22,"line_end":22,"column_start":10,"column_end":14},"name":"Conn","qualname":"::server::accept::Accept::Conn","value":"type Conn;","parent":{"krate":0,"index":5650},"children":[],"decl_id":null,"docs":" The connection type that can be accepted.\n","sig":null,"attributes":[{"value":"/ The connection type that can be accepted.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18484777,"byte_end":18484822,"line_start":21,"line_end":21,"column_start":5,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":5652},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18484914,"byte_end":18484919,"line_start":24,"line_end":24,"column_start":10,"column_end":15},"name":"Error","qualname":"::server::accept::Accept::Error","value":"type Error;","parent":{"krate":0,"index":5650},"children":[],"decl_id":null,"docs":" The error type that can occur when accepting a connection.\n","sig":null,"attributes":[{"value":"/ The error type that can occur when accepting a connection.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18484842,"byte_end":18484904,"line_start":23,"line_end":23,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":5653},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18484973,"byte_end":18484984,"line_start":27,"line_end":27,"column_start":8,"column_end":19},"name":"poll_accept","qualname":"::server::accept::Accept::poll_accept","value":"fn poll_accept(Pin<&mut Self>, &mut task::Context)\n-> Poll<Option<Result<Self::Conn, Self::Error>>>","parent":{"krate":0,"index":5650},"children":[],"decl_id":null,"docs":" Poll to accept the next connection.\n","sig":null,"attributes":[{"value":"/ Poll to accept the next connection.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18484926,"byte_end":18484965,"line_start":26,"line_end":26,"column_start":5,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":5654},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18485580,"byte_end":18485587,"line_start":52,"line_end":52,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::server::accept::poll_fn","value":"fn poll_fn<F, IO, E>(F) -> /*impl Trait*/ where F: FnMut(&mut task::Context)\n-> Poll<Option<Result<IO, E>>>","parent":null,"children":[],"decl_id":null,"docs":" Create an `Accept` with a polling function.","sig":null,"attributes":[{"value":"/ Create an `Accept` with a polling function.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18485111,"byte_end":18485158,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18485159,"byte_end":18485162,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18485163,"byte_end":18485176,"line_start":35,"line_end":35,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18485177,"byte_end":18485180,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18485181,"byte_end":18485188,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ use std::task::Poll;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18485189,"byte_end":18485213,"line_start":38,"line_end":38,"column_start":1,"column_end":25}},{"value":"/ use hyper::server::{accept, Server};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18485214,"byte_end":18485254,"line_start":39,"line_end":39,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18485255,"byte_end":18485258,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # let mock_conn = ();","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18485259,"byte_end":18485284,"line_start":41,"line_end":41,"column_start":1,"column_end":26}},{"value":"/ // If we created some mocked connection...","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18485285,"byte_end":18485331,"line_start":42,"line_end":42,"column_start":1,"column_end":47}},{"value":"/ let mut conn = Some(mock_conn);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18485332,"byte_end":18485367,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18485368,"byte_end":18485371,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // And accept just the mocked conn once...","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18485372,"byte_end":18485418,"line_start":45,"line_end":45,"column_start":1,"column_end":47}},{"value":"/ let once = accept::poll_fn(move |cx| {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18485419,"byte_end":18485461,"line_start":46,"line_end":46,"column_start":1,"column_end":43}},{"value":"/     Poll::Ready(conn.take().map(Ok::<_, ()>))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18485462,"byte_end":18485511,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/ });","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18485512,"byte_end":18485519,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18485520,"byte_end":18485523,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ let builder = Server::builder(once);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18485524,"byte_end":18485564,"line_start":50,"line_end":50,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18485565,"byte_end":18485572,"line_start":51,"line_end":51,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":5672},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18486433,"byte_end":18486444,"line_start":85,"line_end":85,"column_start":8,"column_end":19},"name":"from_stream","qualname":"::server::accept::from_stream","value":"fn from_stream<S, IO, E>(S) -> /*impl Trait*/ where S: Stream<Item =\nResult<IO, E>>","parent":null,"children":[],"decl_id":null,"docs":" Adapt a `Stream` of incoming connections into an `Accept`.","sig":null,"attributes":[{"value":"/ Adapt a `Stream` of incoming connections into an `Accept`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18486230,"byte_end":18486292,"line_start":78,"line_end":78,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18486293,"byte_end":18486296,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ # Optional","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18486297,"byte_end":18486311,"line_start":80,"line_end":80,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18486312,"byte_end":18486315,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ This function requires enabling the `stream` feature in your","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18486316,"byte_end":18486380,"line_start":82,"line_end":82,"column_start":1,"column_end":65}},{"value":"/ `Cargo.toml`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18486381,"byte_end":18486398,"line_start":83,"line_end":83,"column_start":1,"column_end":18}},{"value":"cfg(feature = \"stream\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18486399,"byte_end":18486425,"line_start":84,"line_end":84,"column_start":1,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":5684},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"conn","qualname":"::server::conn","value":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","parent":null,"children":[{"krate":0,"index":5685},{"krate":0,"index":5688},{"krate":0,"index":5691},{"krate":0,"index":5692},{"krate":0,"index":5695},{"krate":0,"index":5698},{"krate":0,"index":5952},{"krate":0,"index":5955},{"krate":0,"index":5958},{"krate":0,"index":5961},{"krate":0,"index":5964},{"krate":0,"index":5965},{"krate":0,"index":5968},{"krate":0,"index":5971},{"krate":0,"index":5974},{"krate":0,"index":5977},{"krate":0,"index":5978},{"krate":0,"index":5981},{"krate":0,"index":5984},{"krate":0,"index":5985},{"krate":0,"index":5988},{"krate":0,"index":5991},{"krate":0,"index":5994},{"krate":0,"index":5997},{"krate":0,"index":6000},{"krate":0,"index":6001},{"krate":0,"index":6004},{"krate":0,"index":6007},{"krate":0,"index":6010},{"krate":0,"index":6013},{"krate":0,"index":5701},{"krate":0,"index":5702},{"krate":0,"index":5705},{"krate":0,"index":6016},{"krate":0,"index":6029},{"krate":0,"index":6032},{"krate":0,"index":6035},{"krate":0,"index":6042},{"krate":0,"index":6044},{"krate":0,"index":6046},{"krate":0,"index":6047},{"krate":0,"index":7050},{"krate":0,"index":7056},{"krate":0,"index":5708},{"krate":0,"index":5712},{"krate":0,"index":7000},{"krate":0,"index":7009},{"krate":0,"index":7019},{"krate":0,"index":6049},{"krate":0,"index":6057},{"krate":0,"index":6060},{"krate":0,"index":5717},{"krate":0,"index":5720},{"krate":0,"index":6063},{"krate":0,"index":6070},{"krate":0,"index":5722},{"krate":0,"index":5724},{"krate":0,"index":5761},{"krate":0,"index":5777},{"krate":0,"index":5784},{"krate":0,"index":5788},{"krate":0,"index":5790},{"krate":0,"index":5797}],"decl_id":null,"docs":" Lower-level Server connection API.","sig":null,"attributes":[{"value":"/ Lower-level Server connection API.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18487059,"byte_end":18487097,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18487098,"byte_end":18487101,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The types in this module are to provide a lower-level API based around a","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18487102,"byte_end":18487178,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ single connection. Accepting a connection and binding it with a service","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18487179,"byte_end":18487254,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ are not handled at this level. This module provides the building blocks to","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18487255,"byte_end":18487333,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ customize those things externally.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18487334,"byte_end":18487372,"line_start":6,"line_end":6,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18487373,"byte_end":18487376,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ If you don't have need to manage connections yourself, consider using the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18487377,"byte_end":18487454,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ higher-level [Server](super) API.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18487455,"byte_end":18487492,"line_start":9,"line_end":9,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18487493,"byte_end":18487496,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18487497,"byte_end":18487511,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/ A simple example that uses the `Http` struct to talk HTTP over a Tokio TCP stream","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18487512,"byte_end":18487597,"line_start":12,"line_end":12,"column_start":1,"column_end":86}},{"value":"/ ```no_run","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18487598,"byte_end":18487611,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/ # #[cfg(all(feature = \"http1\", feature = \"runtime\"))]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18487612,"byte_end":18487669,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/ # mod rt {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18487670,"byte_end":18487684,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/ use http::{Request, Response, StatusCode};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18487685,"byte_end":18487731,"line_start":16,"line_end":16,"column_start":1,"column_end":47}},{"value":"/ use hyper::{server::conn::Http, service::service_fn, Body};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18487732,"byte_end":18487795,"line_start":17,"line_end":17,"column_start":1,"column_end":64}},{"value":"/ use std::{net::SocketAddr, convert::Infallible};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18487796,"byte_end":18487848,"line_start":18,"line_end":18,"column_start":1,"column_end":53}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18487849,"byte_end":18487881,"line_start":19,"line_end":19,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18487882,"byte_end":18487885,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18487886,"byte_end":18487904,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync>> {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18487905,"byte_end":18487982,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/     let addr: SocketAddr = ([127, 0, 0, 1], 8080).into();","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18487983,"byte_end":18488044,"line_start":23,"line_end":23,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18488045,"byte_end":18488048,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/     let mut tcp_listener = TcpListener::bind(addr).await?;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18488049,"byte_end":18488111,"line_start":25,"line_end":25,"column_start":1,"column_end":63}},{"value":"/     loop {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18488112,"byte_end":18488126,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"/         let (tcp_stream, _) = tcp_listener.accept().await?;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18488127,"byte_end":18488190,"line_start":27,"line_end":27,"column_start":1,"column_end":64}},{"value":"/         tokio::task::spawn(async move {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18488191,"byte_end":18488234,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/             if let Err(http_err) = Http::new()","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18488235,"byte_end":18488285,"line_start":29,"line_end":29,"column_start":1,"column_end":51}},{"value":"/                     .http1_only(true)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18488286,"byte_end":18488327,"line_start":30,"line_end":30,"column_start":1,"column_end":42}},{"value":"/                     .http1_keep_alive(true)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18488328,"byte_end":18488375,"line_start":31,"line_end":31,"column_start":1,"column_end":48}},{"value":"/                     .serve_connection(tcp_stream, service_fn(hello))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18488376,"byte_end":18488448,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"/                     .await {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18488449,"byte_end":18488481,"line_start":33,"line_end":33,"column_start":1,"column_end":33}},{"value":"/                 eprintln!(\"Error while serving HTTP connection: {}\", http_err);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18488482,"byte_end":18488565,"line_start":34,"line_end":34,"column_start":1,"column_end":84}},{"value":"/             }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18488566,"byte_end":18488583,"line_start":35,"line_end":35,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18488584,"byte_end":18488599,"line_start":36,"line_end":36,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18488600,"byte_end":18488609,"line_start":37,"line_end":37,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18488610,"byte_end":18488615,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18488616,"byte_end":18488619,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ async fn hello(_req: Request<Body>) -> Result<Response<Body>, Infallible> {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18488620,"byte_end":18488699,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/    Ok(Response::new(Body::from(\"Hello World!\")))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18488700,"byte_end":18488752,"line_start":41,"line_end":41,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18488753,"byte_end":18488758,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18488759,"byte_end":18488766,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18488767,"byte_end":18488774,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6016},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18490358,"byte_end":18490362,"line_start":96,"line_end":96,"column_start":12,"column_end":16},"name":"Http","qualname":"::server::conn::Http","value":"Http {  }","parent":null,"children":[{"krate":0,"index":6018},{"krate":0,"index":6019},{"krate":0,"index":6020},{"krate":0,"index":6021},{"krate":0,"index":6022},{"krate":0,"index":6023},{"krate":0,"index":6024},{"krate":0,"index":6025},{"krate":0,"index":6026},{"krate":0,"index":6027},{"krate":0,"index":6028}],"decl_id":null,"docs":" A lower-level configuration of the HTTP protocol.","sig":null,"attributes":[{"value":"/ A lower-level configuration of the HTTP protocol.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18489943,"byte_end":18489996,"line_start":87,"line_end":87,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18489997,"byte_end":18490000,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ This structure is used to configure options for an HTTP server connection.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18490001,"byte_end":18490079,"line_start":89,"line_end":89,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18490080,"byte_end":18490083,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ If you don't have need to manage connections yourself, consider using the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18490084,"byte_end":18490161,"line_start":91,"line_end":91,"column_start":1,"column_end":78}},{"value":"/ higher-level [Server](super) API.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18490162,"byte_end":18490199,"line_start":92,"line_end":92,"column_start":1,"column_end":38}},{"value":"cfg(any(feature = \"http1\", feature = \"http2\"))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18490224,"byte_end":18490273,"line_start":94,"line_end":94,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":7050},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18491661,"byte_end":18491671,"line_start":134,"line_end":134,"column_start":16,"column_end":26},"name":"Connection","qualname":"::server::conn::Connection","value":"Connection {  }","parent":null,"children":[{"krate":0,"index":7054},{"krate":0,"index":7055}],"decl_id":null,"docs":" A future binding a connection with a Service.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14632413,"byte_end":14632422,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6063},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18493737,"byte_end":18493742,"line_start":211,"line_end":211,"column_start":12,"column_end":17},"name":"Parts","qualname":"::server::conn::Parts","value":"Parts { io, read_buf, service }","parent":null,"children":[{"krate":0,"index":6066},{"krate":0,"index":6067},{"krate":0,"index":6068},{"krate":0,"index":6069}],"decl_id":null,"docs":" Deconstructed parts of a `Connection`.","sig":null,"attributes":[{"value":"/ Deconstructed parts of a `Connection`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18493408,"byte_end":18493450,"line_start":204,"line_end":204,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18493451,"byte_end":18493454,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ This allows taking apart a `Connection` at a later time, in order to","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18493455,"byte_end":18493527,"line_start":206,"line_end":206,"column_start":1,"column_end":73}},{"value":"/ reclaim the IO object, and additional related pieces.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18493528,"byte_end":18493585,"line_start":207,"line_end":207,"column_start":1,"column_end":58}},{"value":"cfg(any(feature = \"http1\", feature = \"http2\"))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18493603,"byte_end":18493652,"line_start":209,"line_end":209,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":6066},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18493813,"byte_end":18493815,"line_start":213,"line_end":213,"column_start":9,"column_end":11},"name":"io","qualname":"::server::conn::Parts::io","value":"T","parent":{"krate":0,"index":6063},"children":[],"decl_id":null,"docs":" The original IO object used in the handshake.\n","sig":null,"attributes":[{"value":"/ The original IO object used in the handshake.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18493755,"byte_end":18493804,"line_start":212,"line_end":212,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":6067},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18494206,"byte_end":18494214,"line_start":222,"line_end":222,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::server::conn::Parts::read_buf","value":"bytes::Bytes","parent":{"krate":0,"index":6063},"children":[],"decl_id":null,"docs":" A buffer of bytes that have been read but not processed as HTTP.","sig":null,"attributes":[{"value":"/ A buffer of bytes that have been read but not processed as HTTP.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18493824,"byte_end":18493892,"line_start":214,"line_end":214,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18493897,"byte_end":18493900,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ If the client sent additional bytes after its last request, and","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18493905,"byte_end":18493972,"line_start":216,"line_end":216,"column_start":5,"column_end":72}},{"value":"/ this connection \"ended\" with an upgrade, the read buffer will contain","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18493977,"byte_end":18494050,"line_start":217,"line_end":217,"column_start":5,"column_end":78}},{"value":"/ those bytes.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18494055,"byte_end":18494071,"line_start":218,"line_end":218,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18494076,"byte_end":18494079,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ You will want to check for any existing bytes if you plan to continue","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18494084,"byte_end":18494157,"line_start":220,"line_end":220,"column_start":5,"column_end":78}},{"value":"/ communicating on the IO object.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18494162,"byte_end":18494197,"line_start":221,"line_end":221,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":6068},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18494284,"byte_end":18494291,"line_start":224,"line_end":224,"column_start":9,"column_end":16},"name":"service","qualname":"::server::conn::Parts::service","value":"S","parent":{"krate":0,"index":6063},"children":[],"decl_id":null,"docs":" The `Service` used to serve this connection.\n","sig":null,"attributes":[{"value":"/ The `Service` used to serve this connection.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18494227,"byte_end":18494275,"line_start":223,"line_end":223,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":5723},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18494531,"byte_end":18494534,"line_start":234,"line_end":234,"column_start":12,"column_end":15},"name":"new","qualname":"<Http>::new","value":"fn new() -> Http","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of the HTTP protocol, ready to spawn a server or\n start accepting connections.\n","sig":null,"attributes":[{"value":"/ Creates a new instance of the HTTP protocol, ready to spawn a server or","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18494407,"byte_end":18494482,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ start accepting connections.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18494487,"byte_end":18494519,"line_start":233,"line_end":233,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":5726},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18495331,"byte_end":18495341,"line_start":260,"line_end":260,"column_start":12,"column_end":22},"name":"http1_only","qualname":"<Http<E>>::http1_only","value":"fn http1_only(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether HTTP1 is required.","sig":null,"attributes":[{"value":"/ Sets whether HTTP1 is required.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18495168,"byte_end":18495203,"line_start":255,"line_end":255,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18495208,"byte_end":18495211,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ Default is false","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18495216,"byte_end":18495236,"line_start":257,"line_end":257,"column_start":5,"column_end":25}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18495241,"byte_end":18495266,"line_start":258,"line_end":258,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5727},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18496062,"byte_end":18496078,"line_start":282,"line_end":282,"column_start":12,"column_end":28},"name":"http1_half_close","qualname":"<Http<E>>::http1_half_close","value":"fn http1_half_close(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/1 connections should support half-closures.","sig":null,"attributes":[{"value":"/ Set whether HTTP/1 connections should support half-closures.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18495615,"byte_end":18495679,"line_start":272,"line_end":272,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18495684,"byte_end":18495687,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Clients can chose to shutdown their write-side while waiting","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18495692,"byte_end":18495756,"line_start":274,"line_end":274,"column_start":5,"column_end":69}},{"value":"/ for the server to respond. Setting this to `true` will","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18495761,"byte_end":18495819,"line_start":275,"line_end":275,"column_start":5,"column_end":63}},{"value":"/ prevent closing the connection immediately if `read`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18495824,"byte_end":18495880,"line_start":276,"line_end":276,"column_start":5,"column_end":61}},{"value":"/ detects an EOF in the middle of a request.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18495885,"byte_end":18495931,"line_start":277,"line_end":277,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18495936,"byte_end":18495939,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ Default is `false`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18495944,"byte_end":18495967,"line_start":279,"line_end":279,"column_start":5,"column_end":28}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18495972,"byte_end":18495997,"line_start":280,"line_end":280,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5728},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18496344,"byte_end":18496360,"line_start":292,"line_end":292,"column_start":12,"column_end":28},"name":"http1_keep_alive","qualname":"<Http<E>>::http1_keep_alive","value":"fn http1_keep_alive(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables or disables HTTP/1 keep-alive.","sig":null,"attributes":[{"value":"/ Enables or disables HTTP/1 keep-alive.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18496174,"byte_end":18496216,"line_start":287,"line_end":287,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18496221,"byte_end":18496224,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ Default is true.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18496229,"byte_end":18496249,"line_start":289,"line_end":289,"column_start":5,"column_end":25}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18496254,"byte_end":18496279,"line_start":290,"line_end":290,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5729},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18496749,"byte_end":18496773,"line_start":305,"line_end":305,"column_start":12,"column_end":36},"name":"http1_title_case_headers","qualname":"<Http<E>>::http1_title_case_headers","value":"fn http1_title_case_headers(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/1 connections will write header names as title case at\n the socket level.","sig":null,"attributes":[{"value":"/ Set whether HTTP/1 connections will write header names as title case at","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18496456,"byte_end":18496531,"line_start":297,"line_end":297,"column_start":5,"column_end":80}},{"value":"/ the socket level.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18496536,"byte_end":18496557,"line_start":298,"line_end":298,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18496562,"byte_end":18496565,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ Note that this setting does not affect HTTP/2.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18496570,"byte_end":18496620,"line_start":300,"line_end":300,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18496625,"byte_end":18496628,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18496633,"byte_end":18496654,"line_start":302,"line_end":302,"column_start":5,"column_end":26}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18496659,"byte_end":18496684,"line_start":303,"line_end":303,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5730},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18497573,"byte_end":18497599,"line_start":325,"line_end":325,"column_start":12,"column_end":38},"name":"http1_preserve_header_case","qualname":"<Http<E>>::http1_preserve_header_case","value":"fn http1_preserve_header_case(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether to support preserving original header cases.","sig":null,"attributes":[{"value":"/ Set whether to support preserving original header cases.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18496885,"byte_end":18496945,"line_start":310,"line_end":310,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18496950,"byte_end":18496953,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ Currently, this will record the original cases received, and store them","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18496958,"byte_end":18497033,"line_start":312,"line_end":312,"column_start":5,"column_end":80}},{"value":"/ in a private extension on the `Request`. It will also look for and use","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18497038,"byte_end":18497112,"line_start":313,"line_end":313,"column_start":5,"column_end":79}},{"value":"/ such an extension in any provided `Response`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18497117,"byte_end":18497166,"line_start":314,"line_end":314,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18497171,"byte_end":18497174,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ Since the relevant extension is still private, there is no way to","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18497179,"byte_end":18497248,"line_start":316,"line_end":316,"column_start":5,"column_end":74}},{"value":"/ interact with the original cases. The only effect this can have now is","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18497253,"byte_end":18497327,"line_start":317,"line_end":317,"column_start":5,"column_end":79}},{"value":"/ to forward the cases in a proxy-like fashion.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18497332,"byte_end":18497381,"line_start":318,"line_end":318,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18497386,"byte_end":18497389,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ Note that this setting does not affect HTTP/2.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18497394,"byte_end":18497444,"line_start":320,"line_end":320,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18497449,"byte_end":18497452,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18497457,"byte_end":18497478,"line_start":322,"line_end":322,"column_start":5,"column_end":26}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18497483,"byte_end":18497508,"line_start":323,"line_end":323,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5731},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18498047,"byte_end":18498072,"line_start":336,"line_end":336,"column_start":12,"column_end":37},"name":"http1_header_read_timeout","qualname":"<Http<E>>::http1_header_read_timeout","value":"fn http1_header_read_timeout(&mut Self, Duration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set a timeout for reading client request headers. If a client does not \n transmit the entire header within this time, the connection is closed.","sig":null,"attributes":[{"value":"/ Set a timeout for reading client request headers. If a client does not ","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18497713,"byte_end":18497788,"line_start":330,"line_end":330,"column_start":5,"column_end":80}},{"value":"/ transmit the entire header within this time, the connection is closed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18497793,"byte_end":18497867,"line_start":331,"line_end":331,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18497872,"byte_end":18497875,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ Default is None.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18497880,"byte_end":18497900,"line_start":333,"line_end":333,"column_start":5,"column_end":25}},{"value":"cfg(all(feature = \"http1\", feature = \"runtime\"))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18497905,"byte_end":18497956,"line_start":334,"line_end":334,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":5732},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18498900,"byte_end":18498912,"line_start":356,"line_end":356,"column_start":12,"column_end":24},"name":"http1_writev","qualname":"<Http<E>>::http1_writev","value":"fn http1_writev(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/1 connections should try to use vectored writes,\n or always flatten into a single buffer.","sig":null,"attributes":[{"value":"/ Set whether HTTP/1 connections should try to use vectored writes,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18498205,"byte_end":18498274,"line_start":341,"line_end":341,"column_start":5,"column_end":74}},{"value":"/ or always flatten into a single buffer.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18498279,"byte_end":18498322,"line_start":342,"line_end":342,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18498327,"byte_end":18498330,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ Note that setting this to false may mean more copies of body data,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18498335,"byte_end":18498405,"line_start":344,"line_end":344,"column_start":5,"column_end":75}},{"value":"/ but may also improve performance when an IO transport doesn't","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18498410,"byte_end":18498475,"line_start":345,"line_end":345,"column_start":5,"column_end":70}},{"value":"/ support vectored writes well, such as most TLS implementations.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18498480,"byte_end":18498547,"line_start":346,"line_end":346,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18498552,"byte_end":18498555,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ Setting this to true will force hyper to use queued strategy","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18498560,"byte_end":18498624,"line_start":348,"line_end":348,"column_start":5,"column_end":69}},{"value":"/ which may eliminate unnecessary cloning on some TLS backends","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18498629,"byte_end":18498693,"line_start":349,"line_end":349,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18498698,"byte_end":18498701,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ Default is `auto`. In this mode hyper will try to guess which","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18498706,"byte_end":18498771,"line_start":351,"line_end":351,"column_start":5,"column_end":70}},{"value":"/ mode to use","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18498776,"byte_end":18498791,"line_start":352,"line_end":352,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18498796,"byte_end":18498805,"line_start":353,"line_end":353,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18498810,"byte_end":18498835,"line_start":354,"line_end":354,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5733},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18499173,"byte_end":18499183,"line_start":366,"line_end":366,"column_start":12,"column_end":22},"name":"http2_only","qualname":"<Http<E>>::http2_only","value":"fn http2_only(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether HTTP2 is required.","sig":null,"attributes":[{"value":"/ Sets whether HTTP2 is required.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18499010,"byte_end":18499045,"line_start":361,"line_end":361,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18499050,"byte_end":18499053,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ Default is false","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18499058,"byte_end":18499078,"line_start":363,"line_end":363,"column_start":5,"column_end":25}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18499083,"byte_end":18499108,"line_start":364,"line_end":364,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5734},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18499846,"byte_end":18499878,"line_start":388,"line_end":388,"column_start":12,"column_end":44},"name":"http2_initial_stream_window_size","qualname":"<Http<E>>::http2_initial_stream_window_size","value":"fn http2_initial_stream_window_size<impl Into<Option<u32>>>(&mut Self,\nimpl Into<Option<u32>>) -> &mut Self where\nimpl Into<Option<u32>>: Into<Option<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2\n stream-level flow control.","sig":null,"attributes":[{"value":"/ Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18499457,"byte_end":18499525,"line_start":378,"line_end":378,"column_start":5,"column_end":73}},{"value":"/ stream-level flow control.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18499530,"byte_end":18499560,"line_start":379,"line_end":379,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18499565,"byte_end":18499568,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ Passing `None` will do nothing.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18499573,"byte_end":18499608,"line_start":381,"line_end":381,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18499613,"byte_end":18499616,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ If not set, hyper will use a default.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18499621,"byte_end":18499662,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18499667,"byte_end":18499670,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://http2.github.io/http2-spec/#SETTINGS_INITIAL_WINDOW_SIZE","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18499675,"byte_end":18499751,"line_start":385,"line_end":385,"column_start":5,"column_end":81}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18499756,"byte_end":18499781,"line_start":386,"line_end":386,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5736},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18500373,"byte_end":18500409,"line_start":403,"line_end":403,"column_start":12,"column_end":48},"name":"http2_initial_connection_window_size","qualname":"<Http<E>>::http2_initial_connection_window_size","value":"fn http2_initial_connection_window_size<impl Into<Option<u32>>>(&mut Self,\nimpl Into<Option<u32>>) -> &mut Self where\nimpl Into<Option<u32>>: Into<Option<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Sets the max connection-level flow control for HTTP2.","sig":null,"attributes":[{"value":"/ Sets the max connection-level flow control for HTTP2.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18500119,"byte_end":18500176,"line_start":396,"line_end":396,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18500181,"byte_end":18500184,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ Passing `None` will do nothing.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18500189,"byte_end":18500224,"line_start":398,"line_end":398,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18500229,"byte_end":18500232,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ If not set, hyper will use a default.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18500237,"byte_end":18500278,"line_start":400,"line_end":400,"column_start":5,"column_end":46}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18500283,"byte_end":18500308,"line_start":401,"line_end":401,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5738},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18500972,"byte_end":18500993,"line_start":421,"line_end":421,"column_start":12,"column_end":33},"name":"http2_adaptive_window","qualname":"<Http<E>>::http2_adaptive_window","value":"fn http2_adaptive_window(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether to use an adaptive flow control.","sig":null,"attributes":[{"value":"/ Sets whether to use an adaptive flow control.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18500671,"byte_end":18500720,"line_start":414,"line_end":414,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18500725,"byte_end":18500728,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ Enabling this will override the limits set in","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18500733,"byte_end":18500782,"line_start":416,"line_end":416,"column_start":5,"column_end":54}},{"value":"/ `http2_initial_stream_window_size` and","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18500787,"byte_end":18500829,"line_start":417,"line_end":417,"column_start":5,"column_end":47}},{"value":"/ `http2_initial_connection_window_size`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18500834,"byte_end":18500877,"line_start":418,"line_end":418,"column_start":5,"column_end":48}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18500882,"byte_end":18500907,"line_start":419,"line_end":419,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5742},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18501577,"byte_end":18501597,"line_start":439,"line_end":439,"column_start":12,"column_end":32},"name":"http2_max_frame_size","qualname":"<Http<E>>::http2_max_frame_size","value":"fn http2_max_frame_size<impl Into<Option<u32>>>(&mut Self,\nimpl Into<Option<u32>>) -> &mut Self where\nimpl Into<Option<u32>>: Into<Option<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum frame size to use for HTTP2.","sig":null,"attributes":[{"value":"/ Sets the maximum frame size to use for HTTP2.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18501331,"byte_end":18501380,"line_start":432,"line_end":432,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18501385,"byte_end":18501388,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ Passing `None` will do nothing.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18501393,"byte_end":18501428,"line_start":434,"line_end":434,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18501433,"byte_end":18501436,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ If not set, hyper will use a default.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18501441,"byte_end":18501482,"line_start":436,"line_end":436,"column_start":5,"column_end":46}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18501487,"byte_end":18501512,"line_start":437,"line_end":437,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5744},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18502139,"byte_end":18502167,"line_start":454,"line_end":454,"column_start":12,"column_end":40},"name":"http2_max_concurrent_streams","qualname":"<Http<E>>::http2_max_concurrent_streams","value":"fn http2_max_concurrent_streams<impl Into<Option<u32>>>(&mut Self,\nimpl Into<Option<u32>>) -> &mut Self where\nimpl Into<Option<u32>>: Into<Option<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`SETTINGS_MAX_CONCURRENT_STREAMS`][spec] option for HTTP2\n connections.","sig":null,"attributes":[{"value":"/ Sets the [`SETTINGS_MAX_CONCURRENT_STREAMS`][spec] option for HTTP2","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18501773,"byte_end":18501844,"line_start":446,"line_end":446,"column_start":5,"column_end":76}},{"value":"/ connections.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18501849,"byte_end":18501865,"line_start":447,"line_end":447,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18501870,"byte_end":18501873,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ Default is no limit (`std::u32::MAX`). Passing `None` will do nothing.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18501878,"byte_end":18501952,"line_start":449,"line_end":449,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18501957,"byte_end":18501960,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://http2.github.io/http2-spec/#SETTINGS_MAX_CONCURRENT_STREAMS","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18501965,"byte_end":18502044,"line_start":451,"line_end":451,"column_start":5,"column_end":84}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18502049,"byte_end":18502074,"line_start":452,"line_end":452,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5746},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18502732,"byte_end":18502757,"line_start":472,"line_end":472,"column_start":12,"column_end":37},"name":"http2_keep_alive_interval","qualname":"<Http<E>>::http2_keep_alive_interval","value":"fn http2_keep_alive_interval<impl Into<Option<Duration>>>(&mut Self,\nimpl Into<Option<Duration>>) -> &mut Self where\nimpl Into<Option<Duration>>: Into<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Sets an interval for HTTP2 Ping frames should be sent to keep a\n connection alive.","sig":null,"attributes":[{"value":"/ Sets an interval for HTTP2 Ping frames should be sent to keep a","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18502308,"byte_end":18502375,"line_start":459,"line_end":459,"column_start":5,"column_end":72}},{"value":"/ connection alive.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18502380,"byte_end":18502401,"line_start":460,"line_end":460,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18502406,"byte_end":18502409,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ Pass `None` to disable HTTP2 keep-alive.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18502414,"byte_end":18502458,"line_start":462,"line_end":462,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18502463,"byte_end":18502466,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ Default is currently disabled.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18502471,"byte_end":18502505,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18502510,"byte_end":18502513,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ # Cargo Feature","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18502518,"byte_end":18502537,"line_start":466,"line_end":466,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18502542,"byte_end":18502545,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ Requires the `runtime` cargo feature to be enabled.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18502550,"byte_end":18502605,"line_start":468,"line_end":468,"column_start":5,"column_end":60}},{"value":"cfg(feature = \"runtime\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18502610,"byte_end":18502637,"line_start":469,"line_end":469,"column_start":5,"column_end":32}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18502642,"byte_end":18502667,"line_start":470,"line_end":470,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5748},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18503438,"byte_end":18503462,"line_start":493,"line_end":493,"column_start":12,"column_end":36},"name":"http2_keep_alive_timeout","qualname":"<Http<E>>::http2_keep_alive_timeout","value":"fn http2_keep_alive_timeout(&mut Self, Duration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a timeout for receiving an acknowledgement of the keep-alive ping.","sig":null,"attributes":[{"value":"/ Sets a timeout for receiving an acknowledgement of the keep-alive ping.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18502933,"byte_end":18503008,"line_start":480,"line_end":480,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18503013,"byte_end":18503016,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ If the ping is not acknowledged within the timeout, the connection will","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18503021,"byte_end":18503096,"line_start":482,"line_end":482,"column_start":5,"column_end":80}},{"value":"/ be closed. Does nothing if `http2_keep_alive_interval` is disabled.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18503101,"byte_end":18503172,"line_start":483,"line_end":483,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18503177,"byte_end":18503180,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ Default is 20 seconds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18503185,"byte_end":18503211,"line_start":485,"line_end":485,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18503216,"byte_end":18503219,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ # Cargo Feature","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18503224,"byte_end":18503243,"line_start":487,"line_end":487,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18503248,"byte_end":18503251,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ Requires the `runtime` cargo feature to be enabled.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18503256,"byte_end":18503311,"line_start":489,"line_end":489,"column_start":5,"column_end":60}},{"value":"cfg(feature = \"runtime\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18503316,"byte_end":18503343,"line_start":490,"line_end":490,"column_start":5,"column_end":32}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18503348,"byte_end":18503373,"line_start":491,"line_end":491,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5749},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18503889,"byte_end":18503912,"line_start":507,"line_end":507,"column_start":12,"column_end":35},"name":"http2_max_send_buf_size","qualname":"<Http<E>>::http2_max_send_buf_size","value":"fn http2_max_send_buf_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum write buffer size for each HTTP/2 stream.","sig":null,"attributes":[{"value":"/ Set the maximum write buffer size for each HTTP/2 stream.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18503586,"byte_end":18503647,"line_start":498,"line_end":498,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18503652,"byte_end":18503655,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ Default is currently ~400KB, but may change.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18503660,"byte_end":18503708,"line_start":500,"line_end":500,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18503713,"byte_end":18503716,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18503721,"byte_end":18503733,"line_start":502,"line_end":502,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18503738,"byte_end":18503741,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ The value must be no larger than `u32::MAX`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18503746,"byte_end":18503794,"line_start":504,"line_end":504,"column_start":5,"column_end":53}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18503799,"byte_end":18503824,"line_start":505,"line_end":505,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5750},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18504262,"byte_end":18504291,"line_start":517,"line_end":517,"column_start":12,"column_end":41},"name":"http2_enable_connect_protocol","qualname":"<Http<E>>::http2_enable_connect_protocol","value":"fn http2_enable_connect_protocol(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the [extended CONNECT protocol].","sig":null,"attributes":[{"value":"/ Enables the [extended CONNECT protocol].","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18504075,"byte_end":18504119,"line_start":513,"line_end":513,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18504124,"byte_end":18504127,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ [extended CONNECT protocol]: https://datatracker.ietf.org/doc/html/rfc8441#section-4","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18504132,"byte_end":18504220,"line_start":515,"line_end":515,"column_start":5,"column_end":93}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18504225,"byte_end":18504250,"line_start":516,"line_end":516,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5751},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18504601,"byte_end":18504627,"line_start":527,"line_end":527,"column_start":12,"column_end":38},"name":"http2_max_header_list_size","qualname":"<Http<E>>::http2_max_header_list_size","value":"fn http2_max_header_list_size(&mut Self, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max size of received header frames.","sig":null,"attributes":[{"value":"/ Sets the max size of received header frames.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18504398,"byte_end":18504446,"line_start":522,"line_end":522,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18504451,"byte_end":18504454,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ Default is currently ~16MB, but may change.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18504459,"byte_end":18504506,"line_start":524,"line_end":524,"column_start":5,"column_end":52}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18504511,"byte_end":18504536,"line_start":525,"line_end":525,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5752},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18505062,"byte_end":18505074,"line_start":541,"line_end":541,"column_start":12,"column_end":24},"name":"max_buf_size","qualname":"<Http<E>>::max_buf_size","value":"fn max_buf_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum buffer size for the connection.","sig":null,"attributes":[{"value":"/ Set the maximum buffer size for the connection.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18504740,"byte_end":18504791,"line_start":532,"line_end":532,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18504796,"byte_end":18504799,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ Default is ~400kb.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18504804,"byte_end":18504826,"line_start":534,"line_end":534,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18504831,"byte_end":18504834,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18504839,"byte_end":18504851,"line_start":536,"line_end":536,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18504856,"byte_end":18504859,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ The minimum value allowed is 8192. This method panics if the passed `max` is less than the minimum.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18504864,"byte_end":18504967,"line_start":538,"line_end":538,"column_start":5,"column_end":108}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18504972,"byte_end":18504997,"line_start":539,"line_end":539,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5753},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18505496,"byte_end":18505510,"line_start":555,"line_end":555,"column_start":12,"column_end":26},"name":"pipeline_flush","qualname":"<Http<E>>::pipeline_flush","value":"fn pipeline_flush(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Aggregates flushes to better support pipelined responses.","sig":null,"attributes":[{"value":"/ Aggregates flushes to better support pipelined responses.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18505344,"byte_end":18505405,"line_start":550,"line_end":550,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18505410,"byte_end":18505413,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ Experimental, may have bugs.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18505418,"byte_end":18505450,"line_start":552,"line_end":552,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18505455,"byte_end":18505458,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18505463,"byte_end":18505484,"line_start":554,"line_end":554,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":5754},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18505748,"byte_end":18505761,"line_start":563,"line_end":563,"column_start":12,"column_end":25},"name":"with_executor","qualname":"<Http<E>>::with_executor","value":"fn with_executor<E2>(Self, E2) -> Http<E2>","parent":null,"children":[],"decl_id":null,"docs":" Set the executor used to spawn background tasks.","sig":null,"attributes":[{"value":"/ Set the executor used to spawn background tasks.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18505615,"byte_end":18505667,"line_start":560,"line_end":560,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18505672,"byte_end":18505675,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ Default uses implicit default (like `tokio::spawn`).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18505680,"byte_end":18505736,"line_start":562,"line_end":562,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":5756},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18507479,"byte_end":18507495,"line_start":609,"line_end":609,"column_start":12,"column_end":28},"name":"serve_connection","qualname":"<Http<E>>::serve_connection","value":"fn serve_connection<S, I, Bd>(&Self, I, S) -> Connection<I, S, E> where\nS: HttpService<Body, ResBody = Bd>,\nS::Error: Into<Box<dyn StdError + Send + Sync>>, Bd: HttpBody + 'static,\nBd::Error: Into<Box<dyn StdError + Send + Sync>>, I: AsyncRead + AsyncWrite +\nUnpin, E: ConnStreamExec<S::Future, Bd>","parent":null,"children":[],"decl_id":null,"docs":" Bind a connection together with a [`Service`](crate::service::Service).","sig":null,"attributes":[{"value":"/ Bind a connection together with a [`Service`](crate::service::Service).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18506444,"byte_end":18506519,"line_start":581,"line_end":581,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18506524,"byte_end":18506527,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ This returns a Future that must be polled in order for HTTP to be","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18506532,"byte_end":18506601,"line_start":583,"line_end":583,"column_start":5,"column_end":74}},{"value":"/ driven on the connection.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18506606,"byte_end":18506635,"line_start":584,"line_end":584,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18506640,"byte_end":18506643,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18506648,"byte_end":18506661,"line_start":586,"line_end":586,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18506666,"byte_end":18506669,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18506674,"byte_end":18506681,"line_start":588,"line_end":588,"column_start":5,"column_end":12}},{"value":"/ # use hyper::{Body, Request, Response};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18506686,"byte_end":18506729,"line_start":589,"line_end":589,"column_start":5,"column_end":48}},{"value":"/ # use hyper::service::Service;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18506734,"byte_end":18506768,"line_start":590,"line_end":590,"column_start":5,"column_end":39}},{"value":"/ # use hyper::server::conn::Http;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18506773,"byte_end":18506809,"line_start":591,"line_end":591,"column_start":5,"column_end":41}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18506814,"byte_end":18506859,"line_start":592,"line_end":592,"column_start":5,"column_end":50}},{"value":"/ # async fn run<I, S>(some_io: I, some_service: S)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18506864,"byte_end":18506917,"line_start":593,"line_end":593,"column_start":5,"column_end":58}},{"value":"/ # where","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18506922,"byte_end":18506933,"line_start":594,"line_end":594,"column_start":5,"column_end":16}},{"value":"/ #     I: AsyncRead + AsyncWrite + Unpin + Send + 'static,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18506938,"byte_end":18506999,"line_start":595,"line_end":595,"column_start":5,"column_end":66}},{"value":"/ #     S: Service<hyper::Request<Body>, Response=hyper::Response<Body>> + Send + 'static,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18507004,"byte_end":18507096,"line_start":596,"line_end":596,"column_start":5,"column_end":97}},{"value":"/ #     S::Error: Into<Box<dyn std::error::Error + Send + Sync>>,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18507101,"byte_end":18507168,"line_start":597,"line_end":597,"column_start":5,"column_end":72}},{"value":"/ #     S::Future: Send,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18507173,"byte_end":18507199,"line_start":598,"line_end":598,"column_start":5,"column_end":31}},{"value":"/ # {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18507204,"byte_end":18507211,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/ let http = Http::new();","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18507216,"byte_end":18507243,"line_start":600,"line_end":600,"column_start":5,"column_end":32}},{"value":"/ let conn = http.serve_connection(some_io, some_service);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18507248,"byte_end":18507308,"line_start":601,"line_end":601,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18507313,"byte_end":18507316,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ if let Err(e) = conn.await {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18507321,"byte_end":18507353,"line_start":603,"line_end":603,"column_start":5,"column_end":37}},{"value":"/     eprintln!(\"server connection error: {}\", e);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18507358,"byte_end":18507410,"line_start":604,"line_end":604,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18507415,"byte_end":18507420,"line_start":605,"line_end":605,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18507425,"byte_end":18507432,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18507437,"byte_end":18507455,"line_start":607,"line_end":607,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18507460,"byte_end":18507467,"line_start":608,"line_end":608,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5766},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18511165,"byte_end":18511182,"line_start":708,"line_end":708,"column_start":12,"column_end":29},"name":"graceful_shutdown","qualname":"<Connection<I, S, E>>::graceful_shutdown","value":"fn graceful_shutdown(Pin<&mut Self>)","parent":null,"children":[],"decl_id":null,"docs":" Start a graceful shutdown process for this connection.","sig":null,"attributes":[{"value":"/ Start a graceful shutdown process for this connection.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18510799,"byte_end":18510857,"line_start":698,"line_end":698,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18510862,"byte_end":18510865,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ This `Connection` should continue to be polled until shutdown","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18510870,"byte_end":18510935,"line_start":700,"line_end":700,"column_start":5,"column_end":70}},{"value":"/ can finish.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18510940,"byte_end":18510955,"line_start":701,"line_end":701,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18510960,"byte_end":18510963,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18510968,"byte_end":18510978,"line_start":703,"line_end":703,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18510983,"byte_end":18510986,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ This should only be called while the `Connection` future is still","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18510991,"byte_end":18511060,"line_start":705,"line_end":705,"column_start":5,"column_end":74}},{"value":"/ pending. If called after `Connection::poll` has resolved, this does","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18511065,"byte_end":18511136,"line_start":706,"line_end":706,"column_start":5,"column_end":76}},{"value":"/ nothing.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18511141,"byte_end":18511153,"line_start":707,"line_end":707,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":5767},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18512263,"byte_end":18512273,"line_start":736,"line_end":736,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Connection<I, S, E>>::into_parts","value":"fn into_parts(Self) -> Parts<I, S>","parent":null,"children":[],"decl_id":null,"docs":" Return the inner IO object, and additional information.","sig":null,"attributes":[{"value":"/ Return the inner IO object, and additional information.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18511804,"byte_end":18511863,"line_start":727,"line_end":727,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18511868,"byte_end":18511871,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ If the IO object has been \"rewound\" the io will not contain those bytes rewound.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18511876,"byte_end":18511960,"line_start":729,"line_end":729,"column_start":5,"column_end":89}},{"value":"/ This should only be called after `poll_without_shutdown` signals","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18511965,"byte_end":18512033,"line_start":730,"line_end":730,"column_start":5,"column_end":73}},{"value":"/ that the connection is \"done\". Otherwise, it may not have finished","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18512038,"byte_end":18512108,"line_start":731,"line_end":731,"column_start":5,"column_end":75}},{"value":"/ flushing all necessary HTTP bytes.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18512113,"byte_end":18512151,"line_start":732,"line_end":732,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18512156,"byte_end":18512159,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18512164,"byte_end":18512176,"line_start":734,"line_end":734,"column_start":5,"column_end":17}},{"value":"/ This method will panic if this connection is using an h2 protocol.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18512181,"byte_end":18512251,"line_start":735,"line_end":735,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":5769},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18512579,"byte_end":18512593,"line_start":744,"line_end":744,"column_start":12,"column_end":26},"name":"try_into_parts","qualname":"<Connection<I, S, E>>::try_into_parts","value":"fn try_into_parts(Self) -> Option<Parts<I, S>>","parent":null,"children":[],"decl_id":null,"docs":" Return the inner IO object, and additional information, if available.","sig":null,"attributes":[{"value":"/ Return the inner IO object, and additional information, if available.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18512401,"byte_end":18512474,"line_start":741,"line_end":741,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18512479,"byte_end":18512482,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ This method will return a `None` if this connection is using an h2 protocol.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18512487,"byte_end":18512567,"line_start":743,"line_end":743,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":5770},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18513572,"byte_end":18513593,"line_start":770,"line_end":770,"column_start":12,"column_end":33},"name":"poll_without_shutdown","qualname":"<Connection<I, S, E>>::poll_without_shutdown","value":"fn poll_without_shutdown(&mut Self, &mut task::Context)\n-> Poll<crate::Result<()>> where S: Unpin, S::Future: Unpin, B: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Poll the connection for completion, but without calling `shutdown`\n on the underlying IO.","sig":null,"attributes":[{"value":"/ Poll the connection for completion, but without calling `shutdown`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18513174,"byte_end":18513244,"line_start":763,"line_end":763,"column_start":5,"column_end":75}},{"value":"/ on the underlying IO.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18513249,"byte_end":18513274,"line_start":764,"line_end":764,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18513279,"byte_end":18513282,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow running a connection while doing an HTTP","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18513287,"byte_end":18513355,"line_start":766,"line_end":766,"column_start":5,"column_end":73}},{"value":"/ upgrade. Once the upgrade is completed, the connection would be \"done\",","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18513360,"byte_end":18513435,"line_start":767,"line_end":767,"column_start":5,"column_end":80}},{"value":"/ but it is not desired to actually shutdown the IO object. Instead you","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18513440,"byte_end":18513513,"line_start":768,"line_end":768,"column_start":5,"column_end":78}},{"value":"/ would take it back using `into_parts`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18513518,"byte_end":18513560,"line_start":769,"line_end":769,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":5772},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18515189,"byte_end":18515205,"line_start":811,"line_end":811,"column_start":12,"column_end":28},"name":"without_shutdown","qualname":"<Connection<I, S, E>>::without_shutdown","value":"fn without_shutdown(Self) -> /*impl Trait*/ where S: Unpin, S::Future: Unpin,\nB: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Prevent shutdown of the underlying IO object at the end of service the request,\n instead run `into_parts`. This is a convenience wrapper over `poll_without_shutdown`.","sig":null,"attributes":[{"value":"/ Prevent shutdown of the underlying IO object at the end of service the request,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18514895,"byte_end":18514978,"line_start":805,"line_end":805,"column_start":5,"column_end":88}},{"value":"/ instead run `into_parts`. This is a convenience wrapper over `poll_without_shutdown`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18514983,"byte_end":18515072,"line_start":806,"line_end":806,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18515077,"byte_end":18515080,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ # Error","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18515085,"byte_end":18515096,"line_start":808,"line_end":808,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18515101,"byte_end":18515104,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ This errors if the underlying connection protocol is not HTTP/1.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18515109,"byte_end":18515177,"line_start":810,"line_end":810,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":5776},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18516700,"byte_end":18516713,"line_start":850,"line_end":850,"column_start":12,"column_end":25},"name":"with_upgrades","qualname":"<Connection<I, S, E>>::with_upgrades","value":"fn with_upgrades(Self) -> UpgradeableConnection<I, S, E> where I: Send","parent":null,"children":[],"decl_id":null,"docs":" Enable this connection to support higher-level HTTP upgrades.","sig":null,"attributes":[{"value":"/ Enable this connection to support higher-level HTTP upgrades.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18516554,"byte_end":18516619,"line_start":847,"line_end":847,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18516624,"byte_end":18516627,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ See [the `upgrade` module](crate::upgrade) for more.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18516632,"byte_end":18516688,"line_start":849,"line_end":849,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":5783},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18517251,"byte_end":18517255,"line_start":870,"line_end":870,"column_start":8,"column_end":12},"name":"poll","qualname":"<Connection<I, S, E> as futures_util::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut task::Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13330},"children":[],"decl_id":{"krate":2,"index":13332},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5787},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18518768,"byte_end":18518771,"line_start":910,"line_end":910,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Connection<I, S> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9902},"children":[],"decl_id":{"krate":2,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5799},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18520778,"byte_end":18520799,"line_start":974,"line_end":974,"column_start":16,"column_end":37},"name":"UpgradeableConnection","qualname":"::server::conn::upgrades::UpgradeableConnection","value":"UpgradeableConnection {  }","parent":null,"children":[{"krate":0,"index":5803}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18520670,"byte_end":18520718,"line_start":972,"line_end":972,"column_start":5,"column_end":53}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18520723,"byte_end":18520762,"line_start":973,"line_end":973,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":5809},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18521441,"byte_end":18521458,"line_start":994,"line_end":994,"column_start":16,"column_end":33},"name":"graceful_shutdown","qualname":"<UpgradeableConnection<I, S, E>>::graceful_shutdown","value":"fn graceful_shutdown(Pin<&mut Self>)","parent":null,"children":[],"decl_id":null,"docs":" Start a graceful shutdown process for this connection.","sig":null,"attributes":[{"value":"/ Start a graceful shutdown process for this connection.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18521257,"byte_end":18521315,"line_start":990,"line_end":990,"column_start":9,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18521324,"byte_end":18521327,"line_start":991,"line_end":991,"column_start":9,"column_end":12}},{"value":"/ This `Connection` should continue to be polled until shutdown","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18521336,"byte_end":18521401,"line_start":992,"line_end":992,"column_start":9,"column_end":74}},{"value":"/ can finish.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18521410,"byte_end":18521425,"line_start":993,"line_end":993,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5816},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18521983,"byte_end":18521987,"line_start":1010,"line_end":1010,"column_start":12,"column_end":16},"name":"poll","qualname":"<UpgradeableConnection<I, S, E> as futures_util::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut task::Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13330},"children":[],"decl_id":{"krate":2,"index":13332},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5869},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18524038,"byte_end":18524050,"line_start":18,"line_end":18,"column_start":12,"column_end":24},"name":"AddrIncoming","qualname":"::server::tcp::AddrIncoming","value":"AddrIncoming {  }","parent":null,"children":[{"krate":0,"index":5870},{"krate":0,"index":5871},{"krate":0,"index":5872},{"krate":0,"index":5873},{"krate":0,"index":5874},{"krate":0,"index":5875}],"decl_id":null,"docs":" A stream of connections from binding to an address.\n","sig":null,"attributes":[{"value":"/ A stream of connections from binding to an address.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18523922,"byte_end":18523977,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18523978,"byte_end":18524026,"line_start":17,"line_end":17,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5879},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18524942,"byte_end":18524946,"line_start":44,"line_end":44,"column_start":12,"column_end":16},"name":"bind","qualname":"<AddrIncoming>::bind","value":"fn bind(&SocketAddr) -> crate::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `AddrIncoming` binding to provided socket address.\n","sig":null,"attributes":[{"value":"/ Creates a new `AddrIncoming` binding to provided socket address.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18524862,"byte_end":18524930,"line_start":43,"line_end":43,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":5880},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18525122,"byte_end":18525135,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"from_listener","qualname":"<AddrIncoming>::from_listener","value":"fn from_listener(TcpListener) -> crate::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `AddrIncoming` from an existing `tokio::net::TcpListener`.\n","sig":null,"attributes":[{"value":"/ Creates a new `AddrIncoming` from an existing `tokio::net::TcpListener`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18525034,"byte_end":18525110,"line_start":48,"line_end":48,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":5881},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18525545,"byte_end":18525555,"line_start":62,"line_end":62,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<AddrIncoming>::local_addr","value":"fn local_addr(&Self) -> SocketAddr","parent":null,"children":[],"decl_id":null,"docs":" Get the local address bound to this listener.\n","sig":null,"attributes":[{"value":"/ Get the local address bound to this listener.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18525484,"byte_end":18525533,"line_start":61,"line_end":61,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5882},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18525876,"byte_end":18525889,"line_start":71,"line_end":71,"column_start":12,"column_end":25},"name":"set_keepalive","qualname":"<AddrIncoming>::set_keepalive","value":"fn set_keepalive(&mut Self, Option<Duration>) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether TCP keepalive messages are enabled on accepted connections.","sig":null,"attributes":[{"value":"/ Set whether TCP keepalive messages are enabled on accepted connections.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18525608,"byte_end":18525683,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18525688,"byte_end":18525691,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ If `None` is specified, keepalive is disabled, otherwise the duration","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18525696,"byte_end":18525769,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"/ specified will be the time to remain idle before sending TCP keepalive","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18525774,"byte_end":18525848,"line_start":69,"line_end":69,"column_start":5,"column_end":79}},{"value":"/ probes.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18525853,"byte_end":18525864,"line_start":70,"line_end":70,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5883},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18526096,"byte_end":18526107,"line_start":77,"line_end":77,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<AddrIncoming>::set_nodelay","value":"fn set_nodelay(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the value of `TCP_NODELAY` option for accepted connections.\n","sig":null,"attributes":[{"value":"/ Set the value of `TCP_NODELAY` option for accepted connections.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18526017,"byte_end":18526084,"line_start":76,"line_end":76,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":5884},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18527025,"byte_end":18527044,"line_start":97,"line_end":97,"column_start":12,"column_end":31},"name":"set_sleep_on_errors","qualname":"<AddrIncoming>::set_sleep_on_errors","value":"fn set_sleep_on_errors(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Set whether to sleep on accept errors.","sig":null,"attributes":[{"value":"/ Set whether to sleep on accept errors.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18526209,"byte_end":18526251,"line_start":82,"line_end":82,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18526256,"byte_end":18526259,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ A possible scenario is that the process has hit the max open files","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18526264,"byte_end":18526334,"line_start":84,"line_end":84,"column_start":5,"column_end":75}},{"value":"/ allowed, and so trying to accept a new connection will fail with","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18526339,"byte_end":18526407,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/ `EMFILE`. In some cases, it's preferable to just wait for some time, if","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18526412,"byte_end":18526487,"line_start":86,"line_end":86,"column_start":5,"column_end":80}},{"value":"/ the application will likely close some files (or connections), and try","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18526492,"byte_end":18526566,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ to accept the connection again. If this option is `true`, the error","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18526571,"byte_end":18526642,"line_start":88,"line_end":88,"column_start":5,"column_end":76}},{"value":"/ will be logged at the `error` level, since it is still a big deal,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18526647,"byte_end":18526717,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ and then the listener will sleep for 1 second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18526722,"byte_end":18526772,"line_start":90,"line_end":90,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18526777,"byte_end":18526780,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ In other cases, hitting the max open files should be treat similarly","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18526785,"byte_end":18526857,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/ to being out-of-memory, and simply error (and shutdown). Setting","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18526862,"byte_end":18526930,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/ this option to `false` will allow that.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18526935,"byte_end":18526978,"line_start":94,"line_end":94,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18526983,"byte_end":18526986,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Default is `true`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18526991,"byte_end":18527013,"line_start":96,"line_end":96,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":5889},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18529596,"byte_end":18529607,"line_start":161,"line_end":161,"column_start":8,"column_end":19},"name":"poll_accept","qualname":"<AddrIncoming as server::accept::Accept>::poll_accept","value":"fn poll_accept(Pin<&mut Self>, &mut task::Context)\n-> Poll<Option<Result<Self::Conn, Self::Error>>>","parent":{"krate":0,"index":5650},"children":[],"decl_id":{"krate":0,"index":5653},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5892},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18530505,"byte_end":18530508,"line_start":187,"line_end":187,"column_start":8,"column_end":11},"name":"fmt","qualname":"<AddrIncoming as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9902},"children":[],"decl_id":{"krate":2,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6074},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18531252,"byte_end":18531262,"line_start":210,"line_end":210,"column_start":20,"column_end":30},"name":"AddrStream","qualname":"::server::tcp::addr_stream::AddrStream","value":"AddrStream {  }","parent":null,"children":[{"krate":0,"index":6075},{"krate":0,"index":6076},{"krate":0,"index":6077}],"decl_id":null,"docs":" A transport returned yieled by `AddrIncoming`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5932},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18531835,"byte_end":18531846,"line_start":233,"line_end":233,"column_start":16,"column_end":27},"name":"remote_addr","qualname":"<AddrStream>::remote_addr","value":"fn remote_addr(&Self) -> SocketAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote (peer) address of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the remote (peer) address of this connection.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18531744,"byte_end":18531801,"line_start":231,"line_end":231,"column_start":9,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18531810,"byte_end":18531819,"line_start":232,"line_end":232,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":5933},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18532001,"byte_end":18532011,"line_start":239,"line_end":239,"column_start":16,"column_end":26},"name":"local_addr","qualname":"<AddrStream>::local_addr","value":"fn local_addr(&Self) -> SocketAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the local address of this connection.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18531918,"byte_end":18531967,"line_start":237,"line_end":237,"column_start":9,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18531976,"byte_end":18531985,"line_start":238,"line_end":238,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":5934},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18532180,"byte_end":18532190,"line_start":245,"line_end":245,"column_start":16,"column_end":26},"name":"into_inner","qualname":"<AddrStream>::into_inner","value":"fn into_inner(Self) -> TcpStream","parent":null,"children":[],"decl_id":null,"docs":" Consumes the AddrStream and returns the underlying IO object\n","sig":null,"attributes":[{"value":"/ Consumes the AddrStream and returns the underlying IO object","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18532082,"byte_end":18532146,"line_start":243,"line_end":243,"column_start":9,"column_end":73}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18532155,"byte_end":18532164,"line_start":244,"line_end":244,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":5935},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18532449,"byte_end":18532458,"line_start":252,"line_end":252,"column_start":16,"column_end":25},"name":"poll_peek","qualname":"<AddrStream>::poll_peek","value":"fn poll_peek(&mut Self, &mut task::Context, &mut tokio::io::ReadBuf)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data\n from the queue, registering the current task for wakeup if data is\n not yet available.\n","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18532254,"byte_end":18532323,"line_start":249,"line_end":249,"column_start":9,"column_end":78}},{"value":"/ from the queue, registering the current task for wakeup if data is","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18532332,"byte_end":18532402,"line_start":250,"line_end":250,"column_start":9,"column_end":79}},{"value":"/ not yet available.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18532411,"byte_end":18532433,"line_start":251,"line_end":251,"column_start":9,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":5937},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18532732,"byte_end":18532741,"line_start":263,"line_end":263,"column_start":12,"column_end":21},"name":"poll_read","qualname":"<AddrStream as tokio::io::AsyncRead>::poll_read","value":"fn poll_read(Pin<&mut Self>, &mut task::Context, &mut ReadBuf)\n-> Poll<io::Result<()>>","parent":{"krate":28,"index":231},"children":[],"decl_id":{"krate":28,"index":232},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18532711,"byte_end":18532720,"line_start":262,"line_end":262,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":5939},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18533023,"byte_end":18533033,"line_start":274,"line_end":274,"column_start":12,"column_end":22},"name":"poll_write","qualname":"<AddrStream as tokio::io::AsyncWrite>::poll_write","value":"fn poll_write(Pin<&mut Self>, &mut task::Context, &[u8])\n-> Poll<io::Result<usize>>","parent":{"krate":28,"index":310},"children":[],"decl_id":{"krate":28,"index":311},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18533002,"byte_end":18533011,"line_start":273,"line_end":273,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":5940},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18533265,"byte_end":18533284,"line_start":283,"line_end":283,"column_start":12,"column_end":31},"name":"poll_write_vectored","qualname":"<AddrStream as tokio::io::AsyncWrite>::poll_write_vectored","value":"fn poll_write_vectored(Pin<&mut Self>, &mut task::Context, &[io::IoSlice])\n-> Poll<io::Result<usize>>","parent":{"krate":28,"index":310},"children":[],"decl_id":{"krate":28,"index":314},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18533244,"byte_end":18533253,"line_start":282,"line_end":282,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":5941},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18533540,"byte_end":18533550,"line_start":292,"line_end":292,"column_start":12,"column_end":22},"name":"poll_flush","qualname":"<AddrStream as tokio::io::AsyncWrite>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut task::Context) -> Poll<io::Result<()>>","parent":{"krate":28,"index":310},"children":[],"decl_id":{"krate":28,"index":312},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18533519,"byte_end":18533528,"line_start":291,"line_end":291,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":5942},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18533735,"byte_end":18533748,"line_start":298,"line_end":298,"column_start":12,"column_end":25},"name":"poll_shutdown","qualname":"<AddrStream as tokio::io::AsyncWrite>::poll_shutdown","value":"fn poll_shutdown(Pin<&mut Self>, &mut task::Context) -> Poll<io::Result<()>>","parent":{"krate":28,"index":310},"children":[],"decl_id":{"krate":28,"index":313},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18533714,"byte_end":18533723,"line_start":297,"line_end":297,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":5943},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18533916,"byte_end":18533933,"line_start":303,"line_end":303,"column_start":12,"column_end":29},"name":"is_write_vectored","qualname":"<AddrStream as tokio::io::AsyncWrite>::is_write_vectored","value":"fn is_write_vectored(&Self) -> bool","parent":{"krate":28,"index":310},"children":[],"decl_id":{"krate":28,"index":317},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18533895,"byte_end":18533904,"line_start":302,"line_end":302,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":5945},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18534336,"byte_end":18534345,"line_start":314,"line_end":314,"column_start":12,"column_end":21},"name":"as_raw_fd","qualname":"<AddrStream as std::os::unix::io::AsRawFd>::as_raw_fd","value":"fn as_raw_fd(&Self) -> RawFd","parent":{"krate":1,"index":6485},"children":[],"decl_id":{"krate":1,"index":6486},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6863},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18535690,"byte_end":18535696,"line_start":34,"line_end":34,"column_start":16,"column_end":22},"name":"Server","qualname":"::server::server::Server","value":"Server {  }","parent":null,"children":[{"krate":0,"index":6867},{"krate":0,"index":6868},{"krate":0,"index":6869}],"decl_id":null,"docs":" A listening HTTP server that accepts connections in both HTTP1 and HTTP2 by default.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6484},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18535954,"byte_end":18535961,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"Builder","qualname":"::server::server::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":6487},{"krate":0,"index":6488}],"decl_id":null,"docs":" A builder for a [`Server`](Server).\n","sig":null,"attributes":[{"value":"/ A builder for a [`Server`](Server).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18535813,"byte_end":18535852,"line_start":42,"line_end":42,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":6207},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18536230,"byte_end":18536237,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"builder","qualname":"<Server<I, ()>>::builder","value":"fn builder(I) -> Builder<I>","parent":null,"children":[],"decl_id":null,"docs":" Starts a [`Builder`](Builder) with the provided incoming stream.\n","sig":null,"attributes":[{"value":"/ Starts a [`Builder`](Builder) with the provided incoming stream.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18536150,"byte_end":18536218,"line_start":54,"line_end":54,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":6209},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18536796,"byte_end":18536800,"line_start":75,"line_end":75,"column_start":12,"column_end":16},"name":"bind","qualname":"<Server<AddrIncoming, ()>>::bind","value":"fn bind(&SocketAddr) -> Builder<AddrIncoming>","parent":null,"children":[],"decl_id":null,"docs":" Binds to the provided address, and returns a [`Builder`](Builder).","sig":null,"attributes":[{"value":"/ Binds to the provided address, and returns a [`Builder`](Builder).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18536527,"byte_end":18536597,"line_start":69,"line_end":69,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18536602,"byte_end":18536605,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18536610,"byte_end":18536622,"line_start":71,"line_end":71,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18536627,"byte_end":18536630,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ This method will panic if binding to the address fails. For a method","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18536635,"byte_end":18536707,"line_start":73,"line_end":73,"column_start":5,"column_end":77}},{"value":"/ to bind to an address and return a `Result`, see `Server::try_bind`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18536712,"byte_end":18536784,"line_start":74,"line_end":74,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":6211},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18537118,"byte_end":18537126,"line_start":83,"line_end":83,"column_start":12,"column_end":20},"name":"try_bind","qualname":"<Server<AddrIncoming, ()>>::try_bind","value":"fn try_bind(&SocketAddr) -> crate::Result<Builder<AddrIncoming>>","parent":null,"children":[],"decl_id":null,"docs":" Tries to bind to the provided address, and returns a [`Builder`](Builder).\n","sig":null,"attributes":[{"value":"/ Tries to bind to the provided address, and returns a [`Builder`](Builder).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18537028,"byte_end":18537106,"line_start":82,"line_end":82,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":6212},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18537330,"byte_end":18537338,"line_start":88,"line_end":88,"column_start":12,"column_end":20},"name":"from_tcp","qualname":"<Server<AddrIncoming, ()>>::from_tcp","value":"fn from_tcp(StdTcpListener) -> Result<Builder<AddrIncoming>, crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance from a `std::net::TcpListener` instance.\n","sig":null,"attributes":[{"value":"/ Create a new instance from a `std::net::TcpListener` instance.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18537252,"byte_end":18537318,"line_start":87,"line_end":87,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":6216},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18537729,"byte_end":18537739,"line_start":100,"line_end":100,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<Server<AddrIncoming, S, E>>::local_addr","value":"fn local_addr(&Self) -> SocketAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this server is bound to.\n","sig":null,"attributes":[{"value":"/ Returns the local address that this server is bound to.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18537658,"byte_end":18537717,"line_start":99,"line_end":99,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":6224},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18539606,"byte_end":18539628,"line_start":153,"line_end":153,"column_start":12,"column_end":34},"name":"with_graceful_shutdown","qualname":"<Server<I, S, E>>::with_graceful_shutdown","value":"fn with_graceful_shutdown<F>(Self, F) -> Graceful<I, S, F, E> where\nF: Future<Output = ()>,\nE: NewSvcExec<IO, S::Future, S::Service, E, GracefulWatcher>","parent":null,"children":[],"decl_id":null,"docs":" Prepares a server to handle graceful shutdown when the provided future\n completes.","sig":null,"attributes":[{"value":"/ Prepares a server to handle graceful shutdown when the provided future","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18538323,"byte_end":18538397,"line_start":117,"line_end":117,"column_start":5,"column_end":79}},{"value":"/ completes.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18538402,"byte_end":18538416,"line_start":118,"line_end":118,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18538421,"byte_end":18538424,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18538429,"byte_end":18538442,"line_start":120,"line_end":120,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18538447,"byte_end":18538450,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18538455,"byte_end":18538462,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18538467,"byte_end":18538485,"line_start":123,"line_end":123,"column_start":5,"column_end":23}},{"value":"/ # #[cfg(feature = \"tcp\")]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18538490,"byte_end":18538519,"line_start":124,"line_end":124,"column_start":5,"column_end":34}},{"value":"/ # async fn run() {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18538524,"byte_end":18538546,"line_start":125,"line_end":125,"column_start":5,"column_end":27}},{"value":"/ # use hyper::{Body, Response, Server, Error};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18538551,"byte_end":18538600,"line_start":126,"line_end":126,"column_start":5,"column_end":54}},{"value":"/ # use hyper::service::{make_service_fn, service_fn};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18538605,"byte_end":18538661,"line_start":127,"line_end":127,"column_start":5,"column_end":61}},{"value":"/ # let make_service = make_service_fn(|_| async {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18538666,"byte_end":18538718,"line_start":128,"line_end":128,"column_start":5,"column_end":57}},{"value":"/ #     Ok::<_, Error>(service_fn(|_req| async {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18538723,"byte_end":18538773,"line_start":129,"line_end":129,"column_start":5,"column_end":55}},{"value":"/ #         Ok::<_, Error>(Response::new(Body::from(\"Hello World\")))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18538778,"byte_end":18538848,"line_start":130,"line_end":130,"column_start":5,"column_end":75}},{"value":"/ #     }))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18538853,"byte_end":18538866,"line_start":131,"line_end":131,"column_start":5,"column_end":18}},{"value":"/ # });","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18538871,"byte_end":18538880,"line_start":132,"line_end":132,"column_start":5,"column_end":14}},{"value":"/ // Make a server from the previous examples...","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18538885,"byte_end":18538935,"line_start":133,"line_end":133,"column_start":5,"column_end":55}},{"value":"/ let server = Server::bind(&([127, 0, 0, 1], 3000).into())","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18538940,"byte_end":18539001,"line_start":134,"line_end":134,"column_start":5,"column_end":66}},{"value":"/     .serve(make_service);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18539006,"byte_end":18539035,"line_start":135,"line_end":135,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18539040,"byte_end":18539043,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ // Prepare some signal for when the server should start shutting down...","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18539048,"byte_end":18539124,"line_start":137,"line_end":137,"column_start":5,"column_end":81}},{"value":"/ let (tx, rx) = tokio::sync::oneshot::channel::<()>();","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18539129,"byte_end":18539186,"line_start":138,"line_end":138,"column_start":5,"column_end":62}},{"value":"/ let graceful = server","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18539191,"byte_end":18539216,"line_start":139,"line_end":139,"column_start":5,"column_end":30}},{"value":"/     .with_graceful_shutdown(async {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18539221,"byte_end":18539260,"line_start":140,"line_end":140,"column_start":5,"column_end":44}},{"value":"/         rx.await.ok();","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18539265,"byte_end":18539291,"line_start":141,"line_end":141,"column_start":5,"column_end":31}},{"value":"/     });","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18539296,"byte_end":18539307,"line_start":142,"line_end":142,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18539312,"byte_end":18539315,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ // Await the `server` receiving the signal...","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18539320,"byte_end":18539369,"line_start":144,"line_end":144,"column_start":5,"column_end":54}},{"value":"/ if let Err(e) = graceful.await {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18539374,"byte_end":18539410,"line_start":145,"line_end":145,"column_start":5,"column_end":41}},{"value":"/     eprintln!(\"server error: {}\", e);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18539415,"byte_end":18539456,"line_start":146,"line_end":146,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18539461,"byte_end":18539466,"line_start":147,"line_end":147,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18539471,"byte_end":18539474,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ // And later, trigger the signal by calling `tx.send(())`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18539479,"byte_end":18539541,"line_start":149,"line_end":149,"column_start":5,"column_end":67}},{"value":"/ let _ = tx.send(());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18539546,"byte_end":18539570,"line_start":150,"line_end":150,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18539575,"byte_end":18539582,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18539587,"byte_end":18539594,"line_start":152,"line_end":152,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6237},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18541955,"byte_end":18541959,"line_start":222,"line_end":222,"column_start":8,"column_end":12},"name":"poll","qualname":"<Server<I, S, E> as futures_util::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut task::Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13330},"children":[],"decl_id":{"krate":2,"index":13332},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6241},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18542157,"byte_end":18542160,"line_start":228,"line_end":228,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Server<I, S> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9902},"children":[],"decl_id":{"krate":2,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6245},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18542642,"byte_end":18542645,"line_start":242,"line_end":242,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder<I, E>>::new","value":"fn new(I, Http_<E>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Start a new builder, wrapping an incoming stream and low-level options.","sig":null,"attributes":[{"value":"/ Start a new builder, wrapping an incoming stream and low-level options.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18542468,"byte_end":18542543,"line_start":239,"line_end":239,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18542548,"byte_end":18542551,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ For a more convenient constructor, see [`Server::bind`](Server::bind).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18542556,"byte_end":18542630,"line_start":241,"line_end":241,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":6246},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18542927,"byte_end":18542942,"line_start":251,"line_end":251,"column_start":12,"column_end":27},"name":"http1_keepalive","qualname":"<Builder<I, E>>::http1_keepalive","value":"fn http1_keepalive(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether to use keep-alive for HTTP/1 connections.","sig":null,"attributes":[{"value":"/ Sets whether to use keep-alive for HTTP/1 connections.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18542739,"byte_end":18542797,"line_start":246,"line_end":246,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18542802,"byte_end":18542805,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ Default is `true`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18542810,"byte_end":18542832,"line_start":248,"line_end":248,"column_start":5,"column_end":27}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18542837,"byte_end":18542862,"line_start":249,"line_end":249,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":6247},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18543490,"byte_end":18543506,"line_start":266,"line_end":266,"column_start":12,"column_end":28},"name":"http1_half_close","qualname":"<Builder<I, E>>::http1_half_close","value":"fn http1_half_close(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/1 connections should support half-closures.","sig":null,"attributes":[{"value":"/ Set whether HTTP/1 connections should support half-closures.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18543043,"byte_end":18543107,"line_start":256,"line_end":256,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18543112,"byte_end":18543115,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ Clients can chose to shutdown their write-side while waiting","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18543120,"byte_end":18543184,"line_start":258,"line_end":258,"column_start":5,"column_end":69}},{"value":"/ for the server to respond. Setting this to `true` will","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18543189,"byte_end":18543247,"line_start":259,"line_end":259,"column_start":5,"column_end":63}},{"value":"/ prevent closing the connection immediately if `read`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18543252,"byte_end":18543308,"line_start":260,"line_end":260,"column_start":5,"column_end":61}},{"value":"/ detects an EOF in the middle of a request.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18543313,"byte_end":18543359,"line_start":261,"line_end":261,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18543364,"byte_end":18543367,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ Default is `false`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18543372,"byte_end":18543395,"line_start":263,"line_end":263,"column_start":5,"column_end":28}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18543400,"byte_end":18543425,"line_start":264,"line_end":264,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":6248},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18543770,"byte_end":18543788,"line_start":276,"line_end":276,"column_start":12,"column_end":30},"name":"http1_max_buf_size","qualname":"<Builder<I, E>>::http1_max_buf_size","value":"fn http1_max_buf_size(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum buffer size.","sig":null,"attributes":[{"value":"/ Set the maximum buffer size.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18543607,"byte_end":18543639,"line_start":271,"line_end":271,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18543644,"byte_end":18543647,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ Default is ~ 400kb.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18543652,"byte_end":18543675,"line_start":273,"line_end":273,"column_start":5,"column_end":28}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18543680,"byte_end":18543705,"line_start":274,"line_end":274,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":6249},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18544139,"byte_end":18544159,"line_start":287,"line_end":287,"column_start":12,"column_end":32},"name":"http1_pipeline_flush","qualname":"<Builder<I, E>>::http1_pipeline_flush","value":"fn http1_pipeline_flush(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"http1\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18544102,"byte_end":18544127,"line_start":286,"line_end":286,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":6250},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18544886,"byte_end":18544898,"line_start":305,"line_end":305,"column_start":12,"column_end":24},"name":"http1_writev","qualname":"<Builder<I, E>>::http1_writev","value":"fn http1_writev(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/1 connections should try to use vectored writes,\n or always flatten into a single buffer.","sig":null,"attributes":[{"value":"/ Set whether HTTP/1 connections should try to use vectored writes,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18544258,"byte_end":18544327,"line_start":292,"line_end":292,"column_start":5,"column_end":74}},{"value":"/ or always flatten into a single buffer.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18544332,"byte_end":18544375,"line_start":293,"line_end":293,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18544380,"byte_end":18544383,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Note that setting this to false may mean more copies of body data,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18544388,"byte_end":18544458,"line_start":295,"line_end":295,"column_start":5,"column_end":75}},{"value":"/ but may also improve performance when an IO transport doesn't","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18544463,"byte_end":18544528,"line_start":296,"line_end":296,"column_start":5,"column_end":70}},{"value":"/ support vectored writes well, such as most TLS implementations.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18544533,"byte_end":18544600,"line_start":297,"line_end":297,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18544605,"byte_end":18544608,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ Setting this to true will force hyper to use queued strategy","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18544613,"byte_end":18544677,"line_start":299,"line_end":299,"column_start":5,"column_end":69}},{"value":"/ which may eliminate unnecessary cloning on some TLS backends","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18544682,"byte_end":18544746,"line_start":300,"line_end":300,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18544751,"byte_end":18544754,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ Default is `auto`. In this mode hyper will try to guess which","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18544759,"byte_end":18544824,"line_start":302,"line_end":302,"column_start":5,"column_end":70}},{"value":"/ mode to use","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18544829,"byte_end":18544844,"line_start":303,"line_end":303,"column_start":5,"column_end":20}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18544849,"byte_end":18544874,"line_start":304,"line_end":304,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":6251},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18545296,"byte_end":18545320,"line_start":318,"line_end":318,"column_start":12,"column_end":36},"name":"http1_title_case_headers","qualname":"<Builder<I, E>>::http1_title_case_headers","value":"fn http1_title_case_headers(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/1 connections will write header names as title case at\n the socket level.","sig":null,"attributes":[{"value":"/ Set whether HTTP/1 connections will write header names as title case at","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18545003,"byte_end":18545078,"line_start":310,"line_end":310,"column_start":5,"column_end":80}},{"value":"/ the socket level.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18545083,"byte_end":18545104,"line_start":311,"line_end":311,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18545109,"byte_end":18545112,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Note that this setting does not affect HTTP/2.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18545117,"byte_end":18545167,"line_start":313,"line_end":313,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18545172,"byte_end":18545175,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18545180,"byte_end":18545201,"line_start":315,"line_end":315,"column_start":5,"column_end":26}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18545206,"byte_end":18545231,"line_start":316,"line_end":316,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":6252},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18546117,"byte_end":18546143,"line_start":338,"line_end":338,"column_start":12,"column_end":38},"name":"http1_preserve_header_case","qualname":"<Builder<I, E>>::http1_preserve_header_case","value":"fn http1_preserve_header_case(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether to support preserving original header cases.","sig":null,"attributes":[{"value":"/ Set whether to support preserving original header cases.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18545429,"byte_end":18545489,"line_start":323,"line_end":323,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18545494,"byte_end":18545497,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ Currently, this will record the original cases received, and store them","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18545502,"byte_end":18545577,"line_start":325,"line_end":325,"column_start":5,"column_end":80}},{"value":"/ in a private extension on the `Request`. It will also look for and use","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18545582,"byte_end":18545656,"line_start":326,"line_end":326,"column_start":5,"column_end":79}},{"value":"/ such an extension in any provided `Response`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18545661,"byte_end":18545710,"line_start":327,"line_end":327,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18545715,"byte_end":18545718,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ Since the relevant extension is still private, there is no way to","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18545723,"byte_end":18545792,"line_start":329,"line_end":329,"column_start":5,"column_end":74}},{"value":"/ interact with the original cases. The only effect this can have now is","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18545797,"byte_end":18545871,"line_start":330,"line_end":330,"column_start":5,"column_end":79}},{"value":"/ to forward the cases in a proxy-like fashion.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18545876,"byte_end":18545925,"line_start":331,"line_end":331,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18545930,"byte_end":18545933,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ Note that this setting does not affect HTTP/2.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18545938,"byte_end":18545988,"line_start":333,"line_end":333,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18545993,"byte_end":18545996,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18546001,"byte_end":18546022,"line_start":335,"line_end":335,"column_start":5,"column_end":26}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18546027,"byte_end":18546052,"line_start":336,"line_end":336,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":6253},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18546587,"byte_end":18546612,"line_start":349,"line_end":349,"column_start":12,"column_end":37},"name":"http1_header_read_timeout","qualname":"<Builder<I, E>>::http1_header_read_timeout","value":"fn http1_header_read_timeout(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set a timeout for reading client request headers. If a client does not\n transmit the entire header within this time, the connection is closed.","sig":null,"attributes":[{"value":"/ Set a timeout for reading client request headers. If a client does not","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18546254,"byte_end":18546328,"line_start":343,"line_end":343,"column_start":5,"column_end":79}},{"value":"/ transmit the entire header within this time, the connection is closed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18546333,"byte_end":18546407,"line_start":344,"line_end":344,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18546412,"byte_end":18546415,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ Default is None.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18546420,"byte_end":18546440,"line_start":346,"line_end":346,"column_start":5,"column_end":25}},{"value":"cfg(all(feature = \"http1\", feature = \"runtime\"))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18546445,"byte_end":18546496,"line_start":347,"line_end":347,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":6254},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18546911,"byte_end":18546921,"line_start":359,"line_end":359,"column_start":12,"column_end":22},"name":"http1_only","qualname":"<Builder<I, E>>::http1_only","value":"fn http1_only(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether HTTP/1 is required.","sig":null,"attributes":[{"value":"/ Sets whether HTTP/1 is required.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18546744,"byte_end":18546780,"line_start":354,"line_end":354,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18546785,"byte_end":18546788,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ Default is `false`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18546793,"byte_end":18546816,"line_start":356,"line_end":356,"column_start":5,"column_end":28}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18546821,"byte_end":18546846,"line_start":357,"line_end":357,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":6255},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18547183,"byte_end":18547193,"line_start":369,"line_end":369,"column_start":12,"column_end":22},"name":"http2_only","qualname":"<Builder<I, E>>::http2_only","value":"fn http2_only(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether HTTP/2 is required.","sig":null,"attributes":[{"value":"/ Sets whether HTTP/2 is required.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18547016,"byte_end":18547052,"line_start":364,"line_end":364,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18547057,"byte_end":18547060,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ Default is `false`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18547065,"byte_end":18547088,"line_start":366,"line_end":366,"column_start":5,"column_end":28}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18547093,"byte_end":18547118,"line_start":367,"line_end":367,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":6256},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18547677,"byte_end":18547709,"line_start":384,"line_end":384,"column_start":12,"column_end":44},"name":"http2_initial_stream_window_size","qualname":"<Builder<I, E>>::http2_initial_stream_window_size","value":"fn http2_initial_stream_window_size<impl Into<Option<u32>>>(Self,\nimpl Into<Option<u32>>) -> Self where\nimpl Into<Option<u32>>: Into<Option<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2\n stream-level flow control.","sig":null,"attributes":[{"value":"/ Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18547288,"byte_end":18547356,"line_start":374,"line_end":374,"column_start":5,"column_end":73}},{"value":"/ stream-level flow control.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18547361,"byte_end":18547391,"line_start":375,"line_end":375,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18547396,"byte_end":18547399,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Passing `None` will do nothing.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18547404,"byte_end":18547439,"line_start":377,"line_end":377,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18547444,"byte_end":18547447,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ If not set, hyper will use a default.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18547452,"byte_end":18547493,"line_start":379,"line_end":379,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18547498,"byte_end":18547501,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://http2.github.io/http2-spec/#SETTINGS_INITIAL_WINDOW_SIZE","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18547506,"byte_end":18547582,"line_start":381,"line_end":381,"column_start":5,"column_end":81}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18547587,"byte_end":18547612,"line_start":382,"line_end":382,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":6258},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18548102,"byte_end":18548138,"line_start":396,"line_end":396,"column_start":12,"column_end":48},"name":"http2_initial_connection_window_size","qualname":"<Builder<I, E>>::http2_initial_connection_window_size","value":"fn http2_initial_connection_window_size<impl Into<Option<u32>>>(Self,\nimpl Into<Option<u32>>) -> Self where\nimpl Into<Option<u32>>: Into<Option<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Sets the max connection-level flow control for HTTP2","sig":null,"attributes":[{"value":"/ Sets the max connection-level flow control for HTTP2","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18547849,"byte_end":18547905,"line_start":389,"line_end":389,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18547910,"byte_end":18547913,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ Passing `None` will do nothing.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18547918,"byte_end":18547953,"line_start":391,"line_end":391,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18547958,"byte_end":18547961,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ If not set, hyper will use a default.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18547966,"byte_end":18548007,"line_start":393,"line_end":393,"column_start":5,"column_end":46}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18548012,"byte_end":18548037,"line_start":394,"line_end":394,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":6260},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18548596,"byte_end":18548617,"line_start":409,"line_end":409,"column_start":12,"column_end":33},"name":"http2_adaptive_window","qualname":"<Builder<I, E>>::http2_adaptive_window","value":"fn http2_adaptive_window(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether to use an adaptive flow control.","sig":null,"attributes":[{"value":"/ Sets whether to use an adaptive flow control.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18548295,"byte_end":18548344,"line_start":402,"line_end":402,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18548349,"byte_end":18548352,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ Enabling this will override the limits set in","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18548357,"byte_end":18548406,"line_start":404,"line_end":404,"column_start":5,"column_end":54}},{"value":"/ `http2_initial_stream_window_size` and","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18548411,"byte_end":18548453,"line_start":405,"line_end":405,"column_start":5,"column_end":47}},{"value":"/ `http2_initial_connection_window_size`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18548458,"byte_end":18548501,"line_start":406,"line_end":406,"column_start":5,"column_end":48}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18548506,"byte_end":18548531,"line_start":407,"line_end":407,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":6261},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18548977,"byte_end":18548997,"line_start":421,"line_end":421,"column_start":12,"column_end":32},"name":"http2_max_frame_size","qualname":"<Builder<I, E>>::http2_max_frame_size","value":"fn http2_max_frame_size<impl Into<Option<u32>>>(Self, impl Into<Option<u32>>)\n-> Self where impl Into<Option<u32>>: Into<Option<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum frame size to use for HTTP2.","sig":null,"attributes":[{"value":"/ Sets the maximum frame size to use for HTTP2.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18548731,"byte_end":18548780,"line_start":414,"line_end":414,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18548785,"byte_end":18548788,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ Passing `None` will do nothing.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18548793,"byte_end":18548828,"line_start":416,"line_end":416,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18548833,"byte_end":18548836,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ If not set, hyper will use a default.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18548841,"byte_end":18548882,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18548887,"byte_end":18548912,"line_start":419,"line_end":419,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":6263},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18549484,"byte_end":18549512,"line_start":434,"line_end":434,"column_start":12,"column_end":40},"name":"http2_max_concurrent_streams","qualname":"<Builder<I, E>>::http2_max_concurrent_streams","value":"fn http2_max_concurrent_streams<impl Into<Option<u32>>>(Self,\nimpl Into<Option<u32>>) -> Self where\nimpl Into<Option<u32>>: Into<Option<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`SETTINGS_MAX_CONCURRENT_STREAMS`][spec] option for HTTP2\n connections.","sig":null,"attributes":[{"value":"/ Sets the [`SETTINGS_MAX_CONCURRENT_STREAMS`][spec] option for HTTP2","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18549118,"byte_end":18549189,"line_start":426,"line_end":426,"column_start":5,"column_end":76}},{"value":"/ connections.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18549194,"byte_end":18549210,"line_start":427,"line_end":427,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18549215,"byte_end":18549218,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ Default is no limit (`std::u32::MAX`). Passing `None` will do nothing.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18549223,"byte_end":18549297,"line_start":429,"line_end":429,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18549302,"byte_end":18549305,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://http2.github.io/http2-spec/#SETTINGS_MAX_CONCURRENT_STREAMS","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18549310,"byte_end":18549389,"line_start":431,"line_end":431,"column_start":5,"column_end":84}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18549394,"byte_end":18549419,"line_start":432,"line_end":432,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":6265},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18550068,"byte_end":18550093,"line_start":451,"line_end":451,"column_start":12,"column_end":37},"name":"http2_keep_alive_interval","qualname":"<Builder<I, E>>::http2_keep_alive_interval","value":"fn http2_keep_alive_interval<impl Into<Option<Duration>>>(Self,\nimpl Into<Option<Duration>>) -> Self where\nimpl Into<Option<Duration>>: Into<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Sets an interval for HTTP2 Ping frames should be sent to keep a\n connection alive.","sig":null,"attributes":[{"value":"/ Sets an interval for HTTP2 Ping frames should be sent to keep a","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18549650,"byte_end":18549717,"line_start":439,"line_end":439,"column_start":5,"column_end":72}},{"value":"/ connection alive.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18549722,"byte_end":18549743,"line_start":440,"line_end":440,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18549748,"byte_end":18549751,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ Pass `None` to disable HTTP2 keep-alive.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18549756,"byte_end":18549800,"line_start":442,"line_end":442,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18549805,"byte_end":18549808,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ Default is currently disabled.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18549813,"byte_end":18549847,"line_start":444,"line_end":444,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18549852,"byte_end":18549855,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ # Cargo Feature","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18549860,"byte_end":18549879,"line_start":446,"line_end":446,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18549884,"byte_end":18549887,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ Requires the `runtime` cargo feature to be enabled.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18549892,"byte_end":18549947,"line_start":448,"line_end":448,"column_start":5,"column_end":60}},{"value":"cfg(all(feature = \"runtime\", feature = \"http2\"))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18549952,"byte_end":18550003,"line_start":449,"line_end":449,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":6267},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18550735,"byte_end":18550759,"line_start":468,"line_end":468,"column_start":12,"column_end":36},"name":"http2_keep_alive_timeout","qualname":"<Builder<I, E>>::http2_keep_alive_timeout","value":"fn http2_keep_alive_timeout(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a timeout for receiving an acknowledgement of the keep-alive ping.","sig":null,"attributes":[{"value":"/ Sets a timeout for receiving an acknowledgement of the keep-alive ping.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18550236,"byte_end":18550311,"line_start":456,"line_end":456,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18550316,"byte_end":18550319,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ If the ping is not acknowledged within the timeout, the connection will","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18550324,"byte_end":18550399,"line_start":458,"line_end":458,"column_start":5,"column_end":80}},{"value":"/ be closed. Does nothing if `http2_keep_alive_interval` is disabled.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18550404,"byte_end":18550475,"line_start":459,"line_end":459,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18550480,"byte_end":18550483,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ Default is 20 seconds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18550488,"byte_end":18550514,"line_start":461,"line_end":461,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18550519,"byte_end":18550522,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ # Cargo Feature","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18550527,"byte_end":18550546,"line_start":463,"line_end":463,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18550551,"byte_end":18550554,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ Requires the `runtime` cargo feature to be enabled.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18550559,"byte_end":18550614,"line_start":465,"line_end":465,"column_start":5,"column_end":60}},{"value":"cfg(all(feature = \"runtime\", feature = \"http2\"))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18550619,"byte_end":18550670,"line_start":466,"line_end":466,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":6268},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18551183,"byte_end":18551206,"line_start":482,"line_end":482,"column_start":12,"column_end":35},"name":"http2_max_send_buf_size","qualname":"<Builder<I, E>>::http2_max_send_buf_size","value":"fn http2_max_send_buf_size(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum write buffer size for each HTTP/2 stream.","sig":null,"attributes":[{"value":"/ Set the maximum write buffer size for each HTTP/2 stream.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18550880,"byte_end":18550941,"line_start":473,"line_end":473,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18550946,"byte_end":18550949,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ Default is currently ~400KB, but may change.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18550954,"byte_end":18551002,"line_start":475,"line_end":475,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18551007,"byte_end":18551010,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18551015,"byte_end":18551027,"line_start":477,"line_end":477,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18551032,"byte_end":18551035,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ The value must be no larger than `u32::MAX`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18551040,"byte_end":18551088,"line_start":479,"line_end":479,"column_start":5,"column_end":53}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18551093,"byte_end":18551118,"line_start":480,"line_end":480,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":6269},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18551502,"byte_end":18551531,"line_start":491,"line_end":491,"column_start":12,"column_end":41},"name":"http2_enable_connect_protocol","qualname":"<Builder<I, E>>::http2_enable_connect_protocol","value":"fn http2_enable_connect_protocol(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the [extended CONNECT protocol].","sig":null,"attributes":[{"value":"/ Enables the [extended CONNECT protocol].","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18551315,"byte_end":18551359,"line_start":487,"line_end":487,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18551364,"byte_end":18551367,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ [extended CONNECT protocol]: https://datatracker.ietf.org/doc/html/rfc8441#section-4","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18551372,"byte_end":18551460,"line_start":489,"line_end":489,"column_start":5,"column_end":93}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18551465,"byte_end":18551490,"line_start":490,"line_end":490,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":6270},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18551740,"byte_end":18551748,"line_start":499,"line_end":499,"column_start":12,"column_end":20},"name":"executor","qualname":"<Builder<I, E>>::executor","value":"fn executor<E2>(Self, E2) -> Builder<I, E2>","parent":null,"children":[],"decl_id":null,"docs":" Sets the `Executor` to deal with connection tasks.","sig":null,"attributes":[{"value":"/ Sets the `Executor` to deal with connection tasks.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18551631,"byte_end":18551685,"line_start":496,"line_end":496,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18551690,"byte_end":18551693,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ Default is `tokio::spawn`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18551698,"byte_end":18551728,"line_start":498,"line_end":498,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":6272},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18552873,"byte_end":18552878,"line_start":536,"line_end":536,"column_start":12,"column_end":17},"name":"serve","qualname":"<Builder<I, E>>::serve","value":"fn serve<S, B>(Self, S) -> Server<I, S, E> where I: Accept,\nI::Error: Into<Box<dyn StdError + Send + Sync>>, I::Conn: AsyncRead +\nAsyncWrite + Unpin + Send + 'static, S: MakeServiceRef<I::Conn, Body, ResBody\n= B>, S::Error: Into<Box<dyn StdError + Send + Sync>>, B: HttpBody + 'static,\nB::Error: Into<Box<dyn StdError + Send + Sync>>,\nE: NewSvcExec<I::Conn, S::Future, S::Service, E, NoopWatcher>,\nE: ConnStreamExec<<S::Service as HttpService<Body>>::Future, B>","parent":null,"children":[],"decl_id":null,"docs":" Consume this `Builder`, creating a [`Server`](Server).","sig":null,"attributes":[{"value":"/ Consume this `Builder`, creating a [`Server`](Server).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18551930,"byte_end":18551988,"line_start":506,"line_end":506,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18551993,"byte_end":18551996,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18552001,"byte_end":18552014,"line_start":508,"line_end":508,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18552019,"byte_end":18552022,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18552027,"byte_end":18552034,"line_start":510,"line_end":510,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(feature = \"tcp\")]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18552039,"byte_end":18552068,"line_start":511,"line_end":511,"column_start":5,"column_end":34}},{"value":"/ # async fn run() {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18552073,"byte_end":18552095,"line_start":512,"line_end":512,"column_start":5,"column_end":27}},{"value":"/ use hyper::{Body, Error, Response, Server};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18552100,"byte_end":18552147,"line_start":513,"line_end":513,"column_start":5,"column_end":52}},{"value":"/ use hyper::service::{make_service_fn, service_fn};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18552152,"byte_end":18552206,"line_start":514,"line_end":514,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18552211,"byte_end":18552214,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ // Construct our SocketAddr to listen on...","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18552219,"byte_end":18552266,"line_start":516,"line_end":516,"column_start":5,"column_end":52}},{"value":"/ let addr = ([127, 0, 0, 1], 3000).into();","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18552271,"byte_end":18552316,"line_start":517,"line_end":517,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18552321,"byte_end":18552324,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ // And a MakeService to handle each connection...","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18552329,"byte_end":18552382,"line_start":519,"line_end":519,"column_start":5,"column_end":58}},{"value":"/ let make_svc = make_service_fn(|_| async {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18552387,"byte_end":18552433,"line_start":520,"line_end":520,"column_start":5,"column_end":51}},{"value":"/     Ok::<_, Error>(service_fn(|_req| async {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18552438,"byte_end":18552486,"line_start":521,"line_end":521,"column_start":5,"column_end":53}},{"value":"/         Ok::<_, Error>(Response::new(Body::from(\"Hello World\")))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18552491,"byte_end":18552559,"line_start":522,"line_end":522,"column_start":5,"column_end":73}},{"value":"/     }))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18552564,"byte_end":18552575,"line_start":523,"line_end":523,"column_start":5,"column_end":16}},{"value":"/ });","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18552580,"byte_end":18552587,"line_start":524,"line_end":524,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18552592,"byte_end":18552595,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ // Then bind and serve...","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18552600,"byte_end":18552629,"line_start":526,"line_end":526,"column_start":5,"column_end":34}},{"value":"/ let server = Server::bind(&addr)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18552634,"byte_end":18552670,"line_start":527,"line_end":527,"column_start":5,"column_end":41}},{"value":"/     .serve(make_svc);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18552675,"byte_end":18552700,"line_start":528,"line_end":528,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18552705,"byte_end":18552708,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ // Run forever-ish...","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18552713,"byte_end":18552738,"line_start":530,"line_end":530,"column_start":5,"column_end":30}},{"value":"/ if let Err(err) = server.await {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18552743,"byte_end":18552779,"line_start":531,"line_end":531,"column_start":5,"column_end":41}},{"value":"/     eprintln!(\"server error: {}\", err);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18552784,"byte_end":18552827,"line_start":532,"line_end":532,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18552832,"byte_end":18552837,"line_start":533,"line_end":533,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18552842,"byte_end":18552849,"line_start":534,"line_end":534,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18552854,"byte_end":18552861,"line_start":535,"line_end":535,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6277},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18554009,"byte_end":18554022,"line_start":567,"line_end":567,"column_start":12,"column_end":25},"name":"tcp_keepalive","qualname":"<Builder<AddrIncoming, E>>::tcp_keepalive","value":"fn tcp_keepalive(Self, Option<Duration>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether TCP keepalive messages are enabled on accepted connections.","sig":null,"attributes":[{"value":"/ Set whether TCP keepalive messages are enabled on accepted connections.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18553741,"byte_end":18553816,"line_start":562,"line_end":562,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18553821,"byte_end":18553824,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ If `None` is specified, keepalive is disabled, otherwise the duration","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18553829,"byte_end":18553902,"line_start":564,"line_end":564,"column_start":5,"column_end":78}},{"value":"/ specified will be the time to remain idle before sending TCP keepalive","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18553907,"byte_end":18553981,"line_start":565,"line_end":565,"column_start":5,"column_end":79}},{"value":"/ probes.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18553986,"byte_end":18553997,"line_start":566,"line_end":566,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":6278},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18554223,"byte_end":18554234,"line_start":573,"line_end":573,"column_start":12,"column_end":23},"name":"tcp_nodelay","qualname":"<Builder<AddrIncoming, E>>::tcp_nodelay","value":"fn tcp_nodelay(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the value of `TCP_NODELAY` option for accepted connections.\n","sig":null,"attributes":[{"value":"/ Set the value of `TCP_NODELAY` option for accepted connections.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18554144,"byte_end":18554211,"line_start":572,"line_end":572,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":6279},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18555186,"byte_end":18555212,"line_start":593,"line_end":593,"column_start":12,"column_end":38},"name":"tcp_sleep_on_accept_errors","qualname":"<Builder<AddrIncoming, E>>::tcp_sleep_on_accept_errors","value":"fn tcp_sleep_on_accept_errors(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether to sleep on accept errors.","sig":null,"attributes":[{"value":"/ Set whether to sleep on accept errors.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18554338,"byte_end":18554380,"line_start":578,"line_end":578,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18554385,"byte_end":18554388,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ A possible scenario is that the process has hit the max open files","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18554393,"byte_end":18554463,"line_start":580,"line_end":580,"column_start":5,"column_end":75}},{"value":"/ allowed, and so trying to accept a new connection will fail with","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18554468,"byte_end":18554536,"line_start":581,"line_end":581,"column_start":5,"column_end":73}},{"value":"/ EMFILE. In some cases, it's preferable to just wait for some time, if","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18554541,"byte_end":18554614,"line_start":582,"line_end":582,"column_start":5,"column_end":78}},{"value":"/ the application will likely close some files (or connections), and try","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18554619,"byte_end":18554693,"line_start":583,"line_end":583,"column_start":5,"column_end":79}},{"value":"/ to accept the connection again. If this option is true, the error will","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18554698,"byte_end":18554772,"line_start":584,"line_end":584,"column_start":5,"column_end":79}},{"value":"/ be logged at the error level, since it is still a big deal, and then","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18554777,"byte_end":18554849,"line_start":585,"line_end":585,"column_start":5,"column_end":77}},{"value":"/ the listener will sleep for 1 second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18554854,"byte_end":18554895,"line_start":586,"line_end":586,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18554900,"byte_end":18554903,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ In other cases, hitting the max open files should be treat similarly","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18554908,"byte_end":18554980,"line_start":588,"line_end":588,"column_start":5,"column_end":77}},{"value":"/ to being out-of-memory, and simply error (and shutdown). Setting this","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18554985,"byte_end":18555058,"line_start":589,"line_end":589,"column_start":5,"column_end":78}},{"value":"/ option to false will allow that.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18555063,"byte_end":18555099,"line_start":590,"line_end":590,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18555104,"byte_end":18555107,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ For more details see [`AddrIncoming::set_sleep_on_errors`]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18555112,"byte_end":18555174,"line_start":592,"line_end":592,"column_start":5,"column_end":67}}]},{"kind":"Trait","id":{"krate":0,"index":6280},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18555740,"byte_end":18555747,"line_start":607,"line_end":607,"column_start":11,"column_end":18},"name":"Watcher","qualname":"::server::server::Watcher","value":"Watcher<I, S, E>: Clone","parent":null,"children":[{"krate":0,"index":6284},{"krate":0,"index":6285}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6284},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18555794,"byte_end":18555800,"line_start":608,"line_end":608,"column_start":10,"column_end":16},"name":"Future","qualname":"::server::server::Watcher::Future","value":"type Future: Future<Output = crate::Result<()>>;","parent":{"krate":0,"index":6280},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6285},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18555846,"byte_end":18555851,"line_start":610,"line_end":610,"column_start":8,"column_end":13},"name":"watch","qualname":"::server::server::Watcher::watch","value":"fn watch(&Self, UpgradeableConnection<I, S, E>) -> Self::Future","parent":{"krate":0,"index":6280},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6493},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18555991,"byte_end":18556002,"line_start":615,"line_end":615,"column_start":12,"column_end":23},"name":"NoopWatcher","qualname":"::server::server::NoopWatcher","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18555917,"byte_end":18555956,"line_start":613,"line_end":613,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":6291},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18556347,"byte_end":18556352,"line_start":627,"line_end":627,"column_start":8,"column_end":13},"name":"watch","qualname":"<NoopWatcher as server::server::Watcher>::watch","value":"fn watch(&Self, UpgradeableConnection<I, S, E>) -> Self::Future","parent":{"krate":0,"index":6280},"children":[],"decl_id":{"krate":0,"index":6285},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6782},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18557453,"byte_end":18557463,"line_start":657,"line_end":657,"column_start":20,"column_end":30},"name":"NewSvcTask","qualname":"::server::server::new_svc::NewSvcTask","value":"NewSvcTask {  }","parent":null,"children":[{"krate":0,"index":6788}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14632413,"byte_end":14632422,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6361},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18558809,"byte_end":18558813,"line_start":702,"line_end":702,"column_start":12,"column_end":16},"name":"poll","qualname":"<NewSvcTask<I, N, S, E, W> as futures_util::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut task::Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13330},"children":[],"decl_id":{"krate":2,"index":13332},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6630},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18560870,"byte_end":18560880,"line_start":751,"line_end":751,"column_start":16,"column_end":26},"name":"Connecting","qualname":"::server::server::Connecting","value":"Connecting {  }","parent":null,"children":[{"krate":0,"index":6634},{"krate":0,"index":6635},{"krate":0,"index":6636}],"decl_id":null,"docs":" A future building a new `Service` to a `Connection`.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14632413,"byte_end":14632422,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6371},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18561349,"byte_end":18561353,"line_start":770,"line_end":770,"column_start":8,"column_end":12},"name":"poll","qualname":"<Connecting<I, F, E> as futures_util::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut task::Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13330},"children":[],"decl_id":{"krate":2,"index":13332},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6573},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/shutdown.rs","byte_start":18562242,"byte_end":18562250,"line_start":18,"line_end":18,"column_start":16,"column_end":24},"name":"Graceful","qualname":"::server::shutdown::Graceful","value":"Graceful {  }","parent":null,"children":[{"krate":0,"index":6578}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14632413,"byte_end":14632422,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6473},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/shutdown.rs","byte_start":18563535,"byte_end":18563539,"line_start":66,"line_end":66,"column_start":8,"column_end":12},"name":"poll","qualname":"<Graceful<I, S, F, E> as futures_util::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut task::Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13330},"children":[],"decl_id":{"krate":2,"index":13332},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6498},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/shutdown.rs","byte_start":18564864,"byte_end":18564879,"line_start":100,"line_end":100,"column_start":12,"column_end":27},"name":"GracefulWatcher","qualname":"::server::shutdown::GracefulWatcher","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/shutdown.rs","byte_start":18564796,"byte_end":18564835,"line_start":98,"line_end":98,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":6479},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/shutdown.rs","byte_start":18565299,"byte_end":18565304,"line_start":113,"line_end":113,"column_start":8,"column_end":13},"name":"watch","qualname":"<GracefulWatcher as server::server::Watcher>::watch","value":"fn watch(&Self, UpgradeableConnection<I, S, E>) -> Self::Future","parent":{"krate":0,"index":6280},"children":[],"decl_id":{"krate":0,"index":6285},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/buf.rs","byte_start":5377,"byte_end":5384,"line_start":10,"line_end":10,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/buf.rs","byte_start":5786,"byte_end":5793,"line_start":30,"line_end":30,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/date.rs","byte_start":10294,"byte_end":10304,"line_start":44,"line_end":44,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/date.rs","byte_start":11093,"byte_end":11103,"line_start":78,"line_end":78,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/drain.rs","byte_start":12890,"byte_end":12896,"line_start":40,"line_end":40,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/drain.rs","byte_start":13068,"byte_end":13076,"line_start":47,"line_end":47,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/drain.rs","byte_start":13254,"byte_end":13259,"line_start":55,"line_end":55,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/drain.rs","byte_start":13861,"byte_end":13869,"line_start":76,"line_end":76,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/exec.rs","byte_start":19359,"byte_end":19363,"line_start":40,"line_end":40,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/exec.rs","byte_start":19988,"byte_end":19992,"line_start":64,"line_end":64,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/exec.rs","byte_start":20170,"byte_end":20174,"line_start":71,"line_end":71,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/exec.rs","byte_start":20476,"byte_end":20480,"line_start":82,"line_end":82,"column_start":51,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/exec.rs","byte_start":20807,"byte_end":20808,"line_start":96,"line_end":96,"column_start":40,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/exec.rs","byte_start":21134,"byte_end":21135,"line_start":108,"line_end":108,"column_start":51,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/io/rewind.rs","byte_start":22611,"byte_end":22617,"line_start":16,"line_end":16,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/io/rewind.rs","byte_start":23395,"byte_end":23401,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/io/rewind.rs","byte_start":24300,"byte_end":24306,"line_start":75,"line_end":75,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/lazy.rs","byte_start":27421,"byte_end":27425,"line_start":38,"line_end":38,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/lazy.rs","byte_start":27672,"byte_end":27676,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":345},{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/never.rs","byte_start":28630,"byte_end":28635,"line_start":11,"line_end":11,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/never.rs","byte_start":28748,"byte_end":28753,"line_start":17,"line_end":17,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/sync_wrapper.rs","byte_start":30695,"byte_end":30706,"line_start":46,"line_end":46,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/sync_wrapper.rs","byte_start":33005,"byte_end":33016,"line_start":110,"line_end":110,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/watch.rs","byte_start":34350,"byte_end":34356,"line_start":50,"line_end":50,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/watch.rs","byte_start":34550,"byte_end":34556,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/watch.rs","byte_start":34625,"byte_end":34633,"line_start":64,"line_end":64,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":42174,"byte_end":42178,"line_start":118,"line_end":118,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":595},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":49930,"byte_end":49934,"line_start":351,"line_end":351,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":50060,"byte_end":50064,"line_start":359,"line_end":359,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":52950,"byte_end":52954,"line_start":440,"line_end":440,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":53617,"byte_end":53621,"line_start":465,"line_end":465,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":613},{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":54029,"byte_end":54033,"line_start":478,"line_end":478,"column_start":94,"column_end":98},"value":"","parent":null,"children":[{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":54270,"byte_end":54274,"line_start":487,"line_end":487,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":54489,"byte_end":54493,"line_start":498,"line_end":498,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":54621,"byte_end":54625,"line_start":505,"line_end":505,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":54768,"byte_end":54772,"line_start":512,"line_end":512,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":54988,"byte_end":54992,"line_start":522,"line_end":522,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":55127,"byte_end":55131,"line_start":529,"line_end":529,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":55283,"byte_end":55287,"line_start":536,"line_end":536,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":55485,"byte_end":55491,"line_start":546,"line_end":546,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":632},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":639},{"krate":0,"index":643},{"krate":0,"index":647},{"krate":0,"index":649},{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":58019,"byte_end":58025,"line_start":619,"line_end":619,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/length.rs","byte_start":62822,"byte_end":62835,"line_start":7,"line_end":7,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/length.rs","byte_start":63186,"byte_end":63199,"line_start":20,"line_end":20,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":671},{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/length.rs","byte_start":65240,"byte_end":65253,"line_start":83,"line_end":83,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/length.rs","byte_start":65605,"byte_end":65618,"line_start":93,"line_end":93,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":73314,"byte_end":73319,"line_start":149,"line_end":149,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":742},{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":752},{"krate":0,"index":754},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":759},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":773},{"krate":0,"index":775},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":86140,"byte_end":86145,"line_start":492,"line_end":492,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":86437,"byte_end":86442,"line_start":503,"line_end":503,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":86717,"byte_end":86722,"line_start":513,"line_end":513,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":86954,"byte_end":86959,"line_start":523,"line_end":523,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":87074,"byte_end":87079,"line_start":530,"line_end":530,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":87524,"byte_end":87529,"line_start":545,"line_end":545,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":88025,"byte_end":88030,"line_start":559,"line_end":559,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":88166,"byte_end":88171,"line_start":565,"line_end":565,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":88301,"byte_end":88306,"line_start":571,"line_end":571,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":88428,"byte_end":88433,"line_start":577,"line_end":577,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":805}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":88619,"byte_end":88624,"line_start":586,"line_end":586,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":88680,"byte_end":88688,"line_start":590,"line_end":590,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":88824,"byte_end":88832,"line_start":596,"line_end":596,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":97987,"byte_end":97999,"line_start":38,"line_end":38,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":98777,"byte_end":98789,"line_start":62,"line_end":62,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":843},{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":99118,"byte_end":99130,"line_start":74,"line_end":74,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":846},{"krate":0,"index":847}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":99450,"byte_end":99462,"line_start":86,"line_end":86,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":849},{"krate":0,"index":850}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":99790,"byte_end":99802,"line_start":98,"line_end":98,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":852},{"krate":0,"index":853}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":100103,"byte_end":100115,"line_start":110,"line_end":110,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":100192,"byte_end":100204,"line_start":116,"line_end":116,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":100598,"byte_end":100617,"line_start":132,"line_end":132,"column_start":28,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":859}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":100799,"byte_end":100818,"line_start":138,"line_end":138,"column_start":28,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext.rs","byte_start":90588,"byte_end":90596,"line_start":30,"line_end":30,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext.rs","byte_start":91158,"byte_end":91166,"line_start":53,"line_end":53,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext.rs","byte_start":91339,"byte_end":91347,"line_start":62,"line_end":62,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":877}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext.rs","byte_start":91465,"byte_end":91473,"line_start":69,"line_end":69,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":879}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext.rs","byte_start":92319,"byte_end":92332,"line_start":100,"line_end":100,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":881},{"krate":0,"index":885},{"krate":0,"index":887},{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/http.rs","byte_start":106707,"byte_end":106708,"line_start":29,"line_end":29,"column_start":37,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":937}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/http.rs","byte_start":107245,"byte_end":107246,"line_start":49,"line_end":49,"column_start":40,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":108090,"byte_end":108091,"line_start":21,"line_end":21,"column_start":53,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":108164,"byte_end":108165,"line_start":23,"line_end":23,"column_start":44,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":109803,"byte_end":109804,"line_start":66,"line_end":66,"column_start":69,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":110571,"byte_end":110572,"line_start":93,"line_end":93,"column_start":67,"column_end":68},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":112048,"byte_end":112061,"line_start":152,"line_end":152,"column_start":62,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1048}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":112518,"byte_end":112531,"line_start":171,"line_end":171,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1051}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":112872,"byte_end":112880,"line_start":186,"line_end":186,"column_start":23,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/oneshot.rs","byte_start":113883,"byte_end":113890,"line_start":44,"line_end":44,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1084},{"krate":0,"index":1085}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/util.rs","byte_start":115911,"byte_end":115920,"line_start":45,"line_end":45,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1135}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/util.rs","byte_start":116467,"byte_end":116476,"line_start":66,"line_end":66,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/util.rs","byte_start":116626,"byte_end":116635,"line_start":72,"line_end":72,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1143}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/util.rs","byte_start":116815,"byte_end":116824,"line_start":84,"line_end":84,"column_start":21,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":120929,"byte_end":120937,"line_start":121,"line_end":121,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1230},{"krate":0,"index":1232}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":121865,"byte_end":121873,"line_start":151,"line_end":151,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1235}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":122106,"byte_end":122114,"line_start":161,"line_end":161,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1239},{"krate":0,"index":1240},{"krate":0,"index":1241}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":122969,"byte_end":122977,"line_start":191,"line_end":191,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1243}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":123132,"byte_end":123141,"line_start":199,"line_end":199,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1245},{"krate":0,"index":1246}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":123341,"byte_end":123350,"line_start":210,"line_end":210,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1248},{"krate":0,"index":1249}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":123915,"byte_end":123924,"line_start":225,"line_end":225,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1252}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":124128,"byte_end":124135,"line_start":234,"line_end":234,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1254},{"krate":0,"index":1255}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":124864,"byte_end":124879,"line_start":258,"line_end":258,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1257}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":125030,"byte_end":125045,"line_start":264,"line_end":264,"column_start":19,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":125275,"byte_end":125276,"line_start":274,"line_end":274,"column_start":58,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":125947,"byte_end":125954,"line_start":302,"line_end":302,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1276}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":126415,"byte_end":126423,"line_start":318,"line_end":318,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1282}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/conn.rs","byte_start":18006782,"byte_end":18006786,"line_start":38,"line_end":38,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2330},{"krate":0,"index":2331},{"krate":0,"index":2332},{"krate":0,"index":2333},{"krate":0,"index":2334},{"krate":0,"index":2335},{"krate":0,"index":2336},{"krate":0,"index":2337},{"krate":0,"index":2338},{"krate":0,"index":2339},{"krate":0,"index":2340},{"krate":0,"index":2341},{"krate":0,"index":2342},{"krate":0,"index":2343},{"krate":0,"index":2344},{"krate":0,"index":2345},{"krate":0,"index":2346},{"krate":0,"index":2347},{"krate":0,"index":2348},{"krate":0,"index":2349},{"krate":0,"index":2350},{"krate":0,"index":2351},{"krate":0,"index":2353},{"krate":0,"index":2354},{"krate":0,"index":2355},{"krate":0,"index":2356},{"krate":0,"index":2357},{"krate":0,"index":2358},{"krate":0,"index":2359},{"krate":0,"index":2361},{"krate":0,"index":2362},{"krate":0,"index":2363},{"krate":0,"index":2364},{"krate":0,"index":2365},{"krate":0,"index":2366},{"krate":0,"index":2367},{"krate":0,"index":2368},{"krate":0,"index":2369},{"krate":0,"index":2370},{"krate":0,"index":2371},{"krate":0,"index":2372},{"krate":0,"index":2373},{"krate":0,"index":2374},{"krate":0,"index":2375},{"krate":0,"index":2376},{"krate":0,"index":2377},{"krate":0,"index":2378},{"krate":0,"index":2379},{"krate":0,"index":2380},{"krate":0,"index":2381},{"krate":0,"index":2382}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/conn.rs","byte_start":18033266,"byte_end":18033270,"line_start":793,"line_end":793,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2387}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/conn.rs","byte_start":18033542,"byte_end":18033546,"line_start":803,"line_end":803,"column_start":32,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/conn.rs","byte_start":18035502,"byte_end":18035507,"line_start":867,"line_end":867,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2421}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/conn.rs","byte_start":18036145,"byte_end":18036152,"line_start":890,"line_end":890,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2423}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/conn.rs","byte_start":18036542,"byte_end":18036544,"line_start":901,"line_end":901,"column_start":39,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2425}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/conn.rs","byte_start":18036816,"byte_end":18036818,"line_start":917,"line_end":917,"column_start":18,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2427}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/conn.rs","byte_start":18036877,"byte_end":18036879,"line_start":923,"line_end":923,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":2429},{"krate":0,"index":2430},{"krate":0,"index":2431},{"krate":0,"index":2432}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/conn.rs","byte_start":18037120,"byte_end":18037125,"line_start":941,"line_end":941,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2434},{"krate":0,"index":2435},{"krate":0,"index":2436},{"krate":0,"index":2437},{"krate":0,"index":2438},{"krate":0,"index":2440},{"krate":0,"index":2441},{"krate":0,"index":2442},{"krate":0,"index":2444},{"krate":0,"index":2445},{"krate":0,"index":2446},{"krate":0,"index":2447}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/decode.rs","byte_start":18055762,"byte_end":18055769,"line_start":66,"line_end":66,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2495},{"krate":0,"index":2496},{"krate":0,"index":2497},{"krate":0,"index":2498},{"krate":0,"index":2499},{"krate":0,"index":2500}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/decode.rs","byte_start":18058972,"byte_end":18058979,"line_start":164,"line_end":164,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2504}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/decode.rs","byte_start":18059449,"byte_end":18059461,"line_start":182,"line_end":182,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2507},{"krate":0,"index":2510},{"krate":0,"index":2513},{"krate":0,"index":2515},{"krate":0,"index":2517},{"krate":0,"index":2519},{"krate":0,"index":2521},{"krate":0,"index":2523},{"krate":0,"index":2525},{"krate":0,"index":2527},{"krate":0,"index":2529},{"krate":0,"index":2531}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/decode.rs","byte_start":18067625,"byte_end":18067639,"line_start":417,"line_end":417,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2534}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/decode.rs","byte_start":18067795,"byte_end":18067809,"line_start":423,"line_end":423,"column_start":19,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/dispatch.rs","byte_start":18080372,"byte_end":18080382,"line_start":60,"line_end":60,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2640},{"krate":0,"index":2641},{"krate":0,"index":2642},{"krate":0,"index":2643},{"krate":0,"index":2645},{"krate":0,"index":2647},{"krate":0,"index":2648},{"krate":0,"index":2650},{"krate":0,"index":2651},{"krate":0,"index":2652},{"krate":0,"index":2655},{"krate":0,"index":2657},{"krate":0,"index":2658}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/dispatch.rs","byte_start":18093813,"byte_end":18093823,"line_start":407,"line_end":407,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2664},{"krate":0,"index":2665}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/dispatch.rs","byte_start":18094623,"byte_end":18094631,"line_start":434,"line_end":434,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2675},{"krate":0,"index":2676}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/dispatch.rs","byte_start":18094875,"byte_end":18094883,"line_start":444,"line_end":444,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2680}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/dispatch.rs","byte_start":18095044,"byte_end":18095050,"line_start":455,"line_end":455,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3340},{"krate":0,"index":3341}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/dispatch.rs","byte_start":18095432,"byte_end":18095438,"line_start":472,"line_end":472,"column_start":42,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/dispatch.rs","byte_start":18095478,"byte_end":18095484,"line_start":474,"line_end":474,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3348},{"krate":0,"index":3349},{"krate":0,"index":3350},{"krate":0,"index":3351},{"krate":0,"index":3352},{"krate":0,"index":3353},{"krate":0,"index":3354},{"krate":0,"index":3356}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/dispatch.rs","byte_start":18097805,"byte_end":18097811,"line_start":542,"line_end":542,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3359}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/dispatch.rs","byte_start":18098038,"byte_end":18098044,"line_start":552,"line_end":552,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3362},{"krate":0,"index":3363},{"krate":0,"index":3364},{"krate":0,"index":3365},{"krate":0,"index":3366},{"krate":0,"index":3367},{"krate":0,"index":3368},{"krate":0,"index":3369}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/encode.rs","byte_start":18106892,"byte_end":18106899,"line_start":51,"line_end":51,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2706},{"krate":0,"index":2707},{"krate":0,"index":2708},{"krate":0,"index":2709},{"krate":0,"index":2710},{"krate":0,"index":2711},{"krate":0,"index":2712},{"krate":0,"index":2713},{"krate":0,"index":2714},{"krate":0,"index":2716},{"krate":0,"index":2718},{"krate":0,"index":2723}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/encode.rs","byte_start":18112009,"byte_end":18112019,"line_start":218,"line_end":218,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2727},{"krate":0,"index":2728},{"krate":0,"index":2729},{"krate":0,"index":2730}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/encode.rs","byte_start":18113698,"byte_end":18113707,"line_start":279,"line_end":279,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2735}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/encode.rs","byte_start":18114044,"byte_end":18114053,"line_start":292,"line_end":292,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2741},{"krate":0,"index":2742},{"krate":0,"index":2743}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/encode.rs","byte_start":18114443,"byte_end":18114452,"line_start":310,"line_end":310,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2745}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/encode.rs","byte_start":18114703,"byte_end":18114712,"line_start":319,"line_end":319,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2747}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/encode.rs","byte_start":18115071,"byte_end":18115081,"line_start":330,"line_end":330,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2753}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/encode.rs","byte_start":18115227,"byte_end":18115237,"line_start":338,"line_end":338,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2756}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/encode.rs","byte_start":18115421,"byte_end":18115431,"line_start":346,"line_end":346,"column_start":62,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":2759}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/encode.rs","byte_start":18115606,"byte_end":18115612,"line_start":354,"line_end":354,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2761}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/encode.rs","byte_start":18115777,"byte_end":18115783,"line_start":360,"line_end":360,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/io.rs","byte_start":18119424,"byte_end":18119432,"line_start":48,"line_end":48,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2861}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/io.rs","byte_start":18119695,"byte_end":18119703,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2865},{"krate":0,"index":2866},{"krate":0,"index":2867},{"krate":0,"index":2868},{"krate":0,"index":2869},{"krate":0,"index":2870},{"krate":0,"index":2871},{"krate":0,"index":2872},{"krate":0,"index":2873},{"krate":0,"index":2874},{"krate":0,"index":2875},{"krate":0,"index":2876},{"krate":0,"index":2878},{"krate":0,"index":2879},{"krate":0,"index":2880},{"krate":0,"index":2882},{"krate":0,"index":2883},{"krate":0,"index":2884},{"krate":0,"index":2885},{"krate":0,"index":2886},{"krate":0,"index":2889}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/io.rs","byte_start":18131250,"byte_end":18131258,"line_start":365,"line_end":365,"column_start":29,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/io.rs","byte_start":18131492,"byte_end":18131500,"line_start":372,"line_end":372,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2898}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/io.rs","byte_start":18132203,"byte_end":18132215,"line_start":399,"line_end":399,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2900},{"krate":0,"index":2901},{"krate":0,"index":2902},{"krate":0,"index":2903}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/io.rs","byte_start":18134460,"byte_end":18134472,"line_start":470,"line_end":470,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2907}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/io.rs","byte_start":18134676,"byte_end":18134682,"line_start":482,"line_end":482,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2910}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/io.rs","byte_start":18134796,"byte_end":18134802,"line_start":489,"line_end":489,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2912},{"krate":0,"index":2913}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/io.rs","byte_start":18135466,"byte_end":18135472,"line_start":514,"line_end":514,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2916}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/io.rs","byte_start":18135725,"byte_end":18135731,"line_start":523,"line_end":523,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2919},{"krate":0,"index":2920},{"krate":0,"index":2921}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/io.rs","byte_start":18136400,"byte_end":18136408,"line_start":551,"line_end":551,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2930}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/io.rs","byte_start":18136693,"byte_end":18136701,"line_start":562,"line_end":562,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2933},{"krate":0,"index":2934},{"krate":0,"index":2936},{"krate":0,"index":2937}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/io.rs","byte_start":18138585,"byte_end":18138593,"line_start":622,"line_end":622,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2940}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/io.rs","byte_start":18138847,"byte_end":18138855,"line_start":631,"line_end":631,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2943},{"krate":0,"index":2944},{"krate":0,"index":2945},{"krate":0,"index":2946}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/role.rs","byte_start":18154001,"byte_end":18154007,"line_start":121,"line_end":121,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3073},{"krate":0,"index":3074},{"krate":0,"index":3075},{"krate":0,"index":3076},{"krate":0,"index":3079},{"krate":0,"index":3081},{"krate":0,"index":3085},{"krate":0,"index":3086}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/role.rs","byte_start":18167607,"byte_end":18167613,"line_start":471,"line_end":471,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3088},{"krate":0,"index":3089},{"krate":0,"index":3090},{"krate":0,"index":3091},{"krate":0,"index":3092},{"krate":0,"index":3099},{"krate":0,"index":3111}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/role.rs","byte_start":18169040,"byte_end":18169055,"line_start":514,"line_end":514,"column_start":35,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3096},{"krate":0,"index":3097},{"krate":0,"index":3098}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/role.rs","byte_start":18170398,"byte_end":18170412,"line_start":560,"line_end":560,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3106},{"krate":0,"index":3107},{"krate":0,"index":3108}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/role.rs","byte_start":18185467,"byte_end":18185473,"line_start":927,"line_end":927,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3120},{"krate":0,"index":3121},{"krate":0,"index":3122},{"krate":0,"index":3123},{"krate":0,"index":3126},{"krate":0,"index":3127},{"krate":0,"index":3128}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/role.rs","byte_start":18194754,"byte_end":18194760,"line_start":1169,"line_end":1169,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3130},{"krate":0,"index":3131}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/role.rs","byte_start":18207235,"byte_end":18207244,"line_start":1491,"line_end":1491,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3144},{"krate":0,"index":3145}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/mod.rs","byte_start":18005197,"byte_end":18005202,"line_start":109,"line_end":109,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3180},{"krate":0,"index":3181},{"krate":0,"index":3182},{"krate":0,"index":3183},{"krate":0,"index":3184}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/ping.rs","byte_start":17991523,"byte_end":17991529,"line_start":198,"line_end":198,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2037}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/ping.rs","byte_start":17991870,"byte_end":17991878,"line_start":214,"line_end":214,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2039},{"krate":0,"index":2040},{"krate":0,"index":2041},{"krate":0,"index":2042}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/ping.rs","byte_start":17993896,"byte_end":17993902,"line_start":294,"line_end":294,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2044},{"krate":0,"index":2045}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/ping.rs","byte_start":17996552,"byte_end":17996558,"line_start":372,"line_end":372,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2047},{"krate":0,"index":2048},{"krate":0,"index":2049},{"krate":0,"index":2050}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/ping.rs","byte_start":17997450,"byte_end":17997453,"line_start":407,"line_end":407,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":2053},{"krate":0,"index":2054}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/ping.rs","byte_start":17999376,"byte_end":17999385,"line_start":473,"line_end":473,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":2060}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/ping.rs","byte_start":18001737,"byte_end":18001754,"line_start":537,"line_end":537,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2062}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/ping.rs","byte_start":18001934,"byte_end":18001951,"line_start":544,"line_end":544,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2064}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/ping.rs","byte_start":18002125,"byte_end":18002142,"line_start":551,"line_end":551,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2066}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/client.rs","byte_start":18252827,"byte_end":18252833,"line_start":58,"line_end":58,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3651}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/client.rs","byte_start":18257436,"byte_end":18257446,"line_start":208,"line_end":208,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3677}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/client.rs","byte_start":18257643,"byte_end":18257653,"line_start":217,"line_end":217,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3680},{"krate":0,"index":3681}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/server.rs","byte_start":18267616,"byte_end":18267622,"line_start":57,"line_end":57,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3840}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/server.rs","byte_start":18268876,"byte_end":18268882,"line_start":109,"line_end":109,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3863},{"krate":0,"index":3864}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/server.rs","byte_start":18271281,"byte_end":18271287,"line_start":181,"line_end":181,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3870},{"krate":0,"index":3871}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/server.rs","byte_start":18272954,"byte_end":18272961,"line_start":227,"line_end":227,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3875},{"krate":0,"index":3880}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/server.rs","byte_start":18279821,"byte_end":18279829,"line_start":408,"line_end":408,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3888}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/server.rs","byte_start":18280538,"byte_end":18280546,"line_start":437,"line_end":437,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3894}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/server.rs","byte_start":18284872,"byte_end":18284880,"line_start":531,"line_end":531,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3900},{"krate":0,"index":3901}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/mod.rs","byte_start":17974339,"byte_end":17974355,"line_start":99,"line_end":99,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2072}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/mod.rs","byte_start":17974605,"byte_end":17974621,"line_start":112,"line_end":112,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2075},{"krate":0,"index":2076}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/mod.rs","byte_start":17979229,"byte_end":17979239,"line_start":224,"line_end":224,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2083},{"krate":0,"index":2085}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/mod.rs","byte_start":17979858,"byte_end":17979865,"line_start":249,"line_end":249,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2098},{"krate":0,"index":2099},{"krate":0,"index":2100},{"krate":0,"index":2101}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/mod.rs","byte_start":17980951,"byte_end":17980961,"line_start":296,"line_end":296,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2111}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/mod.rs","byte_start":17982413,"byte_end":17982423,"line_start":336,"line_end":336,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2114},{"krate":0,"index":2116},{"krate":0,"index":2117}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/mod.rs","byte_start":17984725,"byte_end":17984743,"line_start":414,"line_end":414,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2125},{"krate":0,"index":2126},{"krate":0,"index":2127},{"krate":0,"index":2128},{"krate":0,"index":2129},{"krate":0,"index":2130}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/mod.rs","byte_start":17985971,"byte_end":17985979,"line_start":457,"line_end":457,"column_start":25,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/mod.rs","byte_start":17986003,"byte_end":17986011,"line_start":459,"line_end":459,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2140},{"krate":0,"index":2141},{"krate":0,"index":2142}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/mod.rs","byte_start":17971063,"byte_end":17971074,"line_start":62,"line_end":62,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2152}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18300632,"byte_end":18300636,"line_start":60,"line_end":60,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":4130},{"krate":0,"index":4131}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18300844,"byte_end":18300848,"line_start":71,"line_end":71,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4133}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18300984,"byte_end":18300988,"line_start":77,"line_end":77,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4135}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18301121,"byte_end":18301125,"line_start":83,"line_end":83,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4137},{"krate":0,"index":4138}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18301442,"byte_end":18301458,"line_start":96,"line_end":96,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4140}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18301595,"byte_end":18301611,"line_start":102,"line_end":102,"column_start":16,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18301621,"byte_end":18301632,"line_start":104,"line_end":104,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4143}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18301767,"byte_end":18301778,"line_start":111,"line_end":111,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4145},{"krate":0,"index":4146},{"krate":0,"index":4147},{"krate":0,"index":4148},{"krate":0,"index":4149}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18302357,"byte_end":18302368,"line_start":132,"line_end":132,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4153}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18302488,"byte_end":18302497,"line_start":138,"line_end":138,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4155},{"krate":0,"index":4156}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18303125,"byte_end":18303134,"line_start":156,"line_end":156,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4159}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18303250,"byte_end":18303259,"line_start":162,"line_end":162,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4161}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18303342,"byte_end":18303350,"line_start":168,"line_end":168,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4163},{"krate":0,"index":4164}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18303484,"byte_end":18303492,"line_start":176,"line_end":176,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4166}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18303670,"byte_end":18303681,"line_start":186,"line_end":186,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4170},{"krate":0,"index":4171},{"krate":0,"index":4172},{"krate":0,"index":4174},{"krate":0,"index":4176},{"krate":0,"index":4177}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18305656,"byte_end":18305667,"line_start":248,"line_end":248,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4179},{"krate":0,"index":4180}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18308300,"byte_end":18308301,"line_start":335,"line_end":335,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4210},{"krate":0,"index":4211},{"krate":0,"index":4212},{"krate":0,"index":4213},{"krate":0,"index":4214}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18313663,"byte_end":18313676,"line_start":88,"line_end":88,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4319}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18314214,"byte_end":18314227,"line_start":107,"line_end":107,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4322},{"krate":0,"index":4323},{"krate":0,"index":4324},{"krate":0,"index":4325},{"krate":0,"index":4326},{"krate":0,"index":4327},{"krate":0,"index":4328},{"krate":0,"index":4329},{"krate":0,"index":4330},{"krate":0,"index":4331},{"krate":0,"index":4332},{"krate":0,"index":4333}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18318971,"byte_end":18318984,"line_start":248,"line_end":248,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4339}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18319151,"byte_end":18319164,"line_start":254,"line_end":254,"column_start":41,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4342},{"krate":0,"index":4343},{"krate":0,"index":4344},{"krate":0,"index":4345},{"krate":0,"index":4346}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18320892,"byte_end":18320905,"line_start":322,"line_end":322,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4352}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18322061,"byte_end":18322070,"line_start":361,"line_end":361,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4357}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18322374,"byte_end":18322382,"line_start":372,"line_end":372,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4359},{"krate":0,"index":4360}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18323321,"byte_end":18323335,"line_start":402,"line_end":402,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4365},{"krate":0,"index":4366}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18323671,"byte_end":18323683,"line_start":416,"line_end":416,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4371},{"krate":0,"index":4374},{"krate":0,"index":4376}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18324327,"byte_end":18324339,"line_start":444,"line_end":444,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4382}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18324669,"byte_end":18324681,"line_start":457,"line_end":457,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4384}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18324919,"byte_end":18324931,"line_start":469,"line_end":469,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4386}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18325194,"byte_end":18325207,"line_start":481,"line_end":481,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4395}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18326603,"byte_end":18326622,"line_start":522,"line_end":522,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4403}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18326875,"byte_end":18326894,"line_start":533,"line_end":533,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4406}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18331922,"byte_end":18331935,"line_start":675,"line_end":675,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4440}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18290784,"byte_end":18290793,"line_start":126,"line_end":126,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3970},{"krate":0,"index":3971},{"krate":0,"index":3972},{"krate":0,"index":3973},{"krate":0,"index":3975},{"krate":0,"index":3976},{"krate":0,"index":3977},{"krate":0,"index":3978}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18293096,"byte_end":18293101,"line_start":206,"line_end":206,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3980}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18293206,"byte_end":18293211,"line_start":212,"line_end":212,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3982}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18293308,"byte_end":18293313,"line_start":218,"line_end":218,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3984}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18293844,"byte_end":18293857,"line_start":235,"line_end":235,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3990},{"krate":0,"index":3991}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18294153,"byte_end":18294163,"line_start":250,"line_end":250,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3999}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18294286,"byte_end":18294296,"line_start":256,"line_end":256,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4002},{"krate":0,"index":4003}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18295996,"byte_end":18295997,"line_start":307,"line_end":307,"column_start":28,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4039},{"krate":0,"index":4040}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18296451,"byte_end":18296452,"line_start":321,"line_end":321,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4044},{"krate":0,"index":4045},{"krate":0,"index":4046},{"krate":0,"index":4047}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18296975,"byte_end":18296976,"line_start":337,"line_end":337,"column_start":27,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18345402,"byte_end":18345408,"line_start":54,"line_end":54,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4690}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18345942,"byte_end":18345948,"line_start":70,"line_end":70,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4692}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18346058,"byte_end":18346064,"line_start":76,"line_end":76,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4694}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18346677,"byte_end":18346683,"line_start":102,"line_end":102,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4698},{"krate":0,"index":4699},{"krate":0,"index":4700},{"krate":0,"index":4703},{"krate":0,"index":4712},{"krate":0,"index":4718}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18363469,"byte_end":18363475,"line_start":524,"line_end":524,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4728},{"krate":0,"index":4729},{"krate":0,"index":4730},{"krate":0,"index":4731},{"krate":0,"index":4732}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18364543,"byte_end":18364549,"line_start":564,"line_end":564,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4744}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18364836,"byte_end":18364842,"line_start":575,"line_end":575,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4748}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18365006,"byte_end":18365020,"line_start":583,"line_end":583,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4750},{"krate":0,"index":4752}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18365490,"byte_end":18365504,"line_start":601,"line_end":601,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4754}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18365629,"byte_end":18365643,"line_start":607,"line_end":607,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4756},{"krate":0,"index":4757}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18366188,"byte_end":18366198,"line_start":630,"line_end":630,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4772},{"krate":0,"index":4773},{"krate":0,"index":4774},{"krate":0,"index":4775},{"krate":0,"index":4776}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18367201,"byte_end":18367211,"line_start":668,"line_end":668,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4779}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18367846,"byte_end":18367856,"line_start":687,"line_end":687,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4783},{"krate":0,"index":4784},{"krate":0,"index":4785}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18369175,"byte_end":18369186,"line_start":738,"line_end":738,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4797}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18373986,"byte_end":18373993,"line_start":901,"line_end":901,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4818}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18374440,"byte_end":18374447,"line_start":918,"line_end":918,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4820},{"krate":0,"index":4821},{"krate":0,"index":4823},{"krate":0,"index":4825},{"krate":0,"index":4826},{"krate":0,"index":4827},{"krate":0,"index":4828},{"krate":0,"index":4829},{"krate":0,"index":4830},{"krate":0,"index":4831},{"krate":0,"index":4832},{"krate":0,"index":4833},{"krate":0,"index":4834},{"krate":0,"index":4835},{"krate":0,"index":4836},{"krate":0,"index":4838},{"krate":0,"index":4840},{"krate":0,"index":4841},{"krate":0,"index":4843},{"krate":0,"index":4845},{"krate":0,"index":4846},{"krate":0,"index":4847},{"krate":0,"index":4848},{"krate":0,"index":4849},{"krate":0,"index":4850},{"krate":0,"index":4851},{"krate":0,"index":4853},{"krate":0,"index":4855}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18390091,"byte_end":18390098,"line_start":1349,"line_end":1349,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4859}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18400477,"byte_end":18400488,"line_start":224,"line_end":224,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4984},{"krate":0,"index":4985},{"krate":0,"index":4989},{"krate":0,"index":4990},{"krate":0,"index":4991}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18401420,"byte_end":18401431,"line_start":257,"line_end":257,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4994},{"krate":0,"index":4995}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18404362,"byte_end":18404373,"line_start":342,"line_end":342,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5000},{"krate":0,"index":5001},{"krate":0,"index":5002},{"krate":0,"index":5003},{"krate":0,"index":5004}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18404762,"byte_end":18404773,"line_start":359,"line_end":359,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5007}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18404964,"byte_end":18404980,"line_start":368,"line_end":368,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5010},{"krate":0,"index":5011}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18405192,"byte_end":18405208,"line_start":379,"line_end":379,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5014}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18406260,"byte_end":18406276,"line_start":411,"line_end":411,"column_start":24,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5019}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18406450,"byte_end":18406466,"line_start":418,"line_end":418,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5022}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18406630,"byte_end":18406640,"line_start":428,"line_end":428,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5026},{"krate":0,"index":5027},{"krate":0,"index":5029},{"krate":0,"index":5032}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18410160,"byte_end":18410170,"line_start":511,"line_end":511,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5036},{"krate":0,"index":5037}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18411144,"byte_end":18411154,"line_start":539,"line_end":539,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5041}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18411403,"byte_end":18411410,"line_start":551,"line_end":551,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5043},{"krate":0,"index":5044},{"krate":0,"index":5046},{"krate":0,"index":5047},{"krate":0,"index":5048},{"krate":0,"index":5049},{"krate":0,"index":5050},{"krate":0,"index":5051},{"krate":0,"index":5052},{"krate":0,"index":5053},{"krate":0,"index":5054},{"krate":0,"index":5055},{"krate":0,"index":5057},{"krate":0,"index":5059},{"krate":0,"index":5063},{"krate":0,"index":5065},{"krate":0,"index":5067},{"krate":0,"index":5068},{"krate":0,"index":5069},{"krate":0,"index":5070},{"krate":0,"index":5071}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18428350,"byte_end":18428364,"line_start":1013,"line_end":1013,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5077},{"krate":0,"index":5078}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18429135,"byte_end":18429149,"line_start":1033,"line_end":1033,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5081}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18429323,"byte_end":18429334,"line_start":1041,"line_end":1041,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5085},{"krate":0,"index":5086}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18430232,"byte_end":18430243,"line_start":1071,"line_end":1071,"column_start":34,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18430304,"byte_end":18430314,"line_start":1074,"line_end":1074,"column_start":39,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18430497,"byte_end":18430507,"line_start":1083,"line_end":1083,"column_start":57,"column_end":67},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18430675,"byte_end":18430682,"line_start":1092,"line_end":1092,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18430722,"byte_end":18430736,"line_start":1095,"line_end":1095,"column_start":21,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/dispatch.rs","byte_start":18432621,"byte_end":18432627,"line_start":55,"line_end":55,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5145},{"krate":0,"index":5147},{"krate":0,"index":5148},{"krate":0,"index":5149},{"krate":0,"index":5150},{"krate":0,"index":5153},{"krate":0,"index":5156}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/dispatch.rs","byte_start":18434440,"byte_end":18434455,"line_start":115,"line_end":115,"column_start":12,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5160},{"krate":0,"index":5161},{"krate":0,"index":5162}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/dispatch.rs","byte_start":18435003,"byte_end":18435018,"line_start":134,"line_end":134,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5168}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/dispatch.rs","byte_start":18435305,"byte_end":18435313,"line_start":148,"line_end":148,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5177},{"krate":0,"index":5179},{"krate":0,"index":5180}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/dispatch.rs","byte_start":18436153,"byte_end":18436161,"line_start":179,"line_end":179,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5184}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/dispatch.rs","byte_start":18436406,"byte_end":18436414,"line_start":189,"line_end":189,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5193}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/dispatch.rs","byte_start":18436826,"byte_end":18436834,"line_start":205,"line_end":205,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5206},{"krate":0,"index":5207},{"krate":0,"index":5208},{"krate":0,"index":5210}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18446612,"byte_end":18446618,"line_start":98,"line_end":98,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5328}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18446719,"byte_end":18446723,"line_start":104,"line_end":104,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5331},{"krate":0,"index":5332}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18447909,"byte_end":18447913,"line_start":142,"line_end":142,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5335},{"krate":0,"index":5336},{"krate":0,"index":5337},{"krate":0,"index":5338}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18452805,"byte_end":18452815,"line_start":281,"line_end":281,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5347}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18454358,"byte_end":18454367,"line_start":323,"line_end":323,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5350},{"krate":0,"index":5351},{"krate":0,"index":5352}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18458137,"byte_end":18458146,"line_start":429,"line_end":429,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5355}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18458797,"byte_end":18458806,"line_start":447,"line_end":447,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5359}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18459784,"byte_end":18459788,"line_start":478,"line_end":478,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5364}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18460194,"byte_end":18460200,"line_start":495,"line_end":495,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5373},{"krate":0,"index":5374},{"krate":0,"index":5375},{"krate":0,"index":5376}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18460579,"byte_end":18460585,"line_start":513,"line_end":513,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5379},{"krate":0,"index":5380}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18460702,"byte_end":18460708,"line_start":520,"line_end":520,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5383}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18460812,"byte_end":18460818,"line_start":526,"line_end":526,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5386}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18461606,"byte_end":18461612,"line_start":548,"line_end":548,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5389}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18462113,"byte_end":18462134,"line_start":570,"line_end":570,"column_start":19,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18462161,"byte_end":18462182,"line_start":572,"line_end":572,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5401}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18462332,"byte_end":18462340,"line_start":578,"line_end":578,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5404},{"krate":0,"index":5405}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18465218,"byte_end":18465226,"line_start":657,"line_end":657,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5411},{"krate":0,"index":5412}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18465902,"byte_end":18465910,"line_start":677,"line_end":677,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5415}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18466442,"byte_end":18466452,"line_start":695,"line_end":695,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5423}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18466729,"byte_end":18466739,"line_start":706,"line_end":706,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5426}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18467048,"byte_end":18467058,"line_start":719,"line_end":719,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5431},{"krate":0,"index":5432}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18467991,"byte_end":18467999,"line_start":748,"line_end":748,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":5435},{"krate":0,"index":5436}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18468913,"byte_end":18468920,"line_start":777,"line_end":777,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5439},{"krate":0,"index":5440},{"krate":0,"index":5441}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/service.rs","byte_start":18477145,"byte_end":18477152,"line_start":30,"line_end":30,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5487}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/service.rs","byte_start":18477445,"byte_end":18477452,"line_start":42,"line_end":42,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5492},{"krate":0,"index":5493},{"krate":0,"index":5494},{"krate":0,"index":5495},{"krate":0,"index":5497}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18485808,"byte_end":18485814,"line_start":59,"line_end":59,"column_start":23,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18485852,"byte_end":18485858,"line_start":61,"line_end":61,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5669},{"krate":0,"index":5670},{"krate":0,"index":5671}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18486687,"byte_end":18486697,"line_start":96,"line_end":96,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5681},{"krate":0,"index":5682},{"krate":0,"index":5683}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18493154,"byte_end":18493162,"line_start":192,"line_end":192,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5719}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18493392,"byte_end":18493400,"line_start":202,"line_end":202,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18494396,"byte_end":18494400,"line_start":231,"line_end":231,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":5723}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18495154,"byte_end":18495158,"line_start":254,"line_end":254,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5726},{"krate":0,"index":5727},{"krate":0,"index":5728},{"krate":0,"index":5729},{"krate":0,"index":5730},{"krate":0,"index":5731},{"krate":0,"index":5732},{"krate":0,"index":5733},{"krate":0,"index":5734},{"krate":0,"index":5736},{"krate":0,"index":5738},{"krate":0,"index":5742},{"krate":0,"index":5744},{"krate":0,"index":5746},{"krate":0,"index":5748},{"krate":0,"index":5749},{"krate":0,"index":5750},{"krate":0,"index":5751},{"krate":0,"index":5752},{"krate":0,"index":5753},{"krate":0,"index":5754},{"krate":0,"index":5756}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18510519,"byte_end":18510529,"line_start":689,"line_end":689,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5766},{"krate":0,"index":5767},{"krate":0,"index":5769},{"krate":0,"index":5770},{"krate":0,"index":5772},{"krate":0,"index":5775},{"krate":0,"index":5776}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18516920,"byte_end":18516930,"line_start":859,"line_end":859,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5782},{"krate":0,"index":5783}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18518710,"byte_end":18518720,"line_start":906,"line_end":906,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5787}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18518982,"byte_end":18518996,"line_start":918,"line_end":918,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5789}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18519511,"byte_end":18519522,"line_start":938,"line_end":938,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5795},{"krate":0,"index":5796}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18520930,"byte_end":18520951,"line_start":981,"line_end":981,"column_start":22,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5809}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18521594,"byte_end":18521615,"line_start":999,"line_end":999,"column_start":33,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5815},{"krate":0,"index":5816}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18524243,"byte_end":18524255,"line_start":27,"line_end":27,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5877},{"krate":0,"index":5878},{"krate":0,"index":5879},{"krate":0,"index":5880},{"krate":0,"index":5881},{"krate":0,"index":5882},{"krate":0,"index":5883},{"krate":0,"index":5884},{"krate":0,"index":5885}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18529517,"byte_end":18529529,"line_start":157,"line_end":157,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5887},{"krate":0,"index":5888},{"krate":0,"index":5889}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18530483,"byte_end":18530495,"line_start":186,"line_end":186,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5892}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18531434,"byte_end":18531444,"line_start":218,"line_end":218,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5931},{"krate":0,"index":5932},{"krate":0,"index":5933},{"krate":0,"index":5934},{"krate":0,"index":5935}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18532690,"byte_end":18532700,"line_start":261,"line_end":261,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5937}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18532981,"byte_end":18532991,"line_start":272,"line_end":272,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5939},{"krate":0,"index":5940},{"krate":0,"index":5941},{"krate":0,"index":5942},{"krate":0,"index":5943}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18534312,"byte_end":18534322,"line_start":313,"line_end":313,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5945}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18536130,"byte_end":18536136,"line_start":53,"line_end":53,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6207}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18536496,"byte_end":18536502,"line_start":68,"line_end":68,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6209},{"krate":0,"index":6211},{"krate":0,"index":6212}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18537625,"byte_end":18537631,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":6216}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18537905,"byte_end":18537911,"line_start":106,"line_end":106,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6224},{"krate":0,"index":6226},{"krate":0,"index":6227}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18541434,"byte_end":18541440,"line_start":208,"line_end":208,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6236},{"krate":0,"index":6237}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18542135,"byte_end":18542141,"line_start":227,"line_end":227,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":6241}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18542448,"byte_end":18542455,"line_start":238,"line_end":238,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6245},{"krate":0,"index":6246},{"krate":0,"index":6247},{"krate":0,"index":6248},{"krate":0,"index":6249},{"krate":0,"index":6250},{"krate":0,"index":6251},{"krate":0,"index":6252},{"krate":0,"index":6253},{"krate":0,"index":6254},{"krate":0,"index":6255},{"krate":0,"index":6256},{"krate":0,"index":6258},{"krate":0,"index":6260},{"krate":0,"index":6261},{"krate":0,"index":6263},{"krate":0,"index":6265},{"krate":0,"index":6267},{"krate":0,"index":6268},{"krate":0,"index":6269},{"krate":0,"index":6270},{"krate":0,"index":6272}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18553710,"byte_end":18553717,"line_start":561,"line_end":561,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6277},{"krate":0,"index":6278},{"krate":0,"index":6279}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18556040,"byte_end":18556051,"line_start":617,"line_end":617,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6290},{"krate":0,"index":6291}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18558044,"byte_end":18558054,"line_start":678,"line_end":678,"column_start":62,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":6351}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18558374,"byte_end":18558384,"line_start":689,"line_end":689,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":6360},{"krate":0,"index":6361}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18561028,"byte_end":18561038,"line_start":759,"line_end":759,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6370},{"krate":0,"index":6371}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/shutdown.rs","byte_start":18562643,"byte_end":18562651,"line_start":38,"line_end":38,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6463}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/shutdown.rs","byte_start":18562977,"byte_end":18562985,"line_start":51,"line_end":51,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6472},{"krate":0,"index":6473}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/shutdown.rs","byte_start":18564924,"byte_end":18564939,"line_start":102,"line_end":102,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6478},{"krate":0,"index":6479}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":2642,"byte_end":2646,"line_start":77,"line_end":77,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":437}},{"kind":"Mod","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":2667,"byte_end":2670,"line_start":79,"line_end":79,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":811}},{"kind":"Mod","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":2703,"byte_end":2705,"line_start":82,"line_end":82,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":890}},{"kind":"Mod","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":2715,"byte_end":2722,"line_start":83,"line_end":83,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":894}},{"kind":"Mod","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":2732,"byte_end":2739,"line_start":84,"line_end":84,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1169}},{"kind":"Mod","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":2883,"byte_end":2889,"line_start":97,"line_end":97,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":3953}},{"kind":"Mod","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18287189,"byte_end":18287196,"line_start":54,"line_end":54,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":3957}},{"kind":"Mod","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18290047,"byte_end":18290050,"line_start":91,"line_end":91,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":4064}},{"kind":"Mod","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18287405,"byte_end":18287409,"line_start":64,"line_end":64,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":4860}},{"kind":"Mod","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/mod.rs","byte_start":18287466,"byte_end":18287473,"line_start":67,"line_end":67,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":5442}},{"kind":"Mod","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/lib.rs","byte_start":3060,"byte_end":3066,"line_start":106,"line_end":106,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":5631}},{"kind":"Mod","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18483929,"byte_end":18483935,"line_start":151,"line_end":151,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":5632}},{"kind":"Mod","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/mod.rs","byte_start":18483945,"byte_end":18483949,"line_start":152,"line_end":152,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":5684}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/buf.rs","byte_start":5377,"byte_end":5384,"line_start":10,"line_end":10,"column_start":14,"column_end":21},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":66},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/buf.rs","byte_start":5786,"byte_end":5793,"line_start":30,"line_end":30,"column_start":22,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":66},"to":{"krate":22,"index":42}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/date.rs","byte_start":10294,"byte_end":10304,"line_start":44,"line_end":44,"column_start":6,"column_end":16},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":117},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/date.rs","byte_start":11093,"byte_end":11103,"line_start":78,"line_end":78,"column_start":21,"column_end":31},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":117},"to":{"krate":2,"index":9852}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/drain.rs","byte_start":12890,"byte_end":12896,"line_start":40,"line_end":40,"column_start":6,"column_end":12},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":155},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/drain.rs","byte_start":13068,"byte_end":13076,"line_start":47,"line_end":47,"column_start":17,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":157},"to":{"krate":2,"index":13330}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/drain.rs","byte_start":13254,"byte_end":13259,"line_start":55,"line_end":55,"column_start":6,"column_end":11},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/drain.rs","byte_start":13861,"byte_end":13869,"line_start":76,"line_end":76,"column_start":24,"column_end":32},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1297},"to":{"krate":2,"index":13330}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/exec.rs","byte_start":18756,"byte_end":18761,"line_start":19,"line_end":19,"column_start":43,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":2772},"to":{"krate":0,"index":218}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/exec.rs","byte_start":18973,"byte_end":18978,"line_start":24,"line_end":24,"column_start":75,"column_end":80},"kind":"SuperTrait","from":{"krate":2,"index":2772},"to":{"krate":0,"index":222}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/exec.rs","byte_start":19359,"byte_end":19363,"line_start":40,"line_end":40,"column_start":6,"column_end":10},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/exec.rs","byte_start":19988,"byte_end":19992,"line_start":64,"line_end":64,"column_start":21,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1350},"to":{"krate":2,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/exec.rs","byte_start":20170,"byte_end":20174,"line_start":71,"line_end":71,"column_start":37,"column_end":41},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1350},"to":{"krate":0,"index":218}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/exec.rs","byte_start":20476,"byte_end":20480,"line_start":82,"line_end":82,"column_start":51,"column_end":55},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1350},"to":{"krate":0,"index":222}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/exec.rs","byte_start":20807,"byte_end":20808,"line_start":96,"line_end":96,"column_start":40,"column_end":41},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":247},"to":{"krate":0,"index":218}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/exec.rs","byte_start":21134,"byte_end":21135,"line_start":108,"line_end":108,"column_start":51,"column_end":52},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":255},"to":{"krate":0,"index":222}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/io/rewind.rs","byte_start":22611,"byte_end":22617,"line_start":16,"line_end":16,"column_start":9,"column_end":15},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/io/rewind.rs","byte_start":23395,"byte_end":23401,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1358},"to":{"krate":28,"index":231}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/io/rewind.rs","byte_start":24300,"byte_end":24306,"line_start":75,"line_end":75,"column_start":24,"column_end":30},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1358},"to":{"krate":28,"index":310}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/lazy.rs","byte_start":26789,"byte_end":26795,"line_start":5,"line_end":5,"column_start":27,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":13330},"to":{"krate":0,"index":333}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/lazy.rs","byte_start":27421,"byte_end":27425,"line_start":38,"line_end":38,"column_start":24,"column_end":28},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1365},"to":{"krate":0,"index":333}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/lazy.rs","byte_start":27672,"byte_end":27676,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1365},"to":{"krate":2,"index":13330}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/never.rs","byte_start":28630,"byte_end":28635,"line_start":11,"line_end":11,"column_start":23,"column_end":28},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1459},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/never.rs","byte_start":28748,"byte_end":28753,"line_start":17,"line_end":17,"column_start":16,"column_end":21},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1459},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/sync_wrapper.rs","byte_start":30695,"byte_end":30706,"line_start":46,"line_end":46,"column_start":9,"column_end":20},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/sync_wrapper.rs","byte_start":33005,"byte_end":33016,"line_start":110,"line_end":110,"column_start":31,"column_end":42},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":359},"to":{"krate":2,"index":3162}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/watch.rs","byte_start":34350,"byte_end":34356,"line_start":50,"line_end":50,"column_start":6,"column_end":12},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":403},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/watch.rs","byte_start":34550,"byte_end":34556,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":403},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/common/watch.rs","byte_start":34625,"byte_end":34633,"line_start":64,"line_end":64,"column_start":6,"column_end":14},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":405},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":42174,"byte_end":42178,"line_start":118,"line_end":118,"column_start":6,"column_end":10},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":547},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":49930,"byte_end":49934,"line_start":351,"line_end":351,"column_start":18,"column_end":22},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":50060,"byte_end":50064,"line_start":359,"line_end":359,"column_start":19,"column_end":23},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":547},"to":{"krate":48,"index":470}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":52950,"byte_end":52954,"line_start":440,"line_end":440,"column_start":21,"column_end":25},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":53617,"byte_end":53621,"line_start":465,"line_end":465,"column_start":17,"column_end":21},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":547},"to":{"krate":40,"index":96}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":54029,"byte_end":54033,"line_start":478,"line_end":478,"column_start":94,"column_end":98},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":54270,"byte_end":54274,"line_start":487,"line_end":487,"column_start":22,"column_end":26},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":54489,"byte_end":54493,"line_start":498,"line_end":498,"column_start":24,"column_end":28},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":54621,"byte_end":54625,"line_start":505,"line_end":505,"column_start":30,"column_end":34},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":54768,"byte_end":54772,"line_start":512,"line_end":512,"column_start":35,"column_end":39},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":54988,"byte_end":54992,"line_start":522,"line_end":522,"column_start":23,"column_end":27},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":55127,"byte_end":55131,"line_start":529,"line_end":529,"column_start":29,"column_end":33},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":55283,"byte_end":55287,"line_start":536,"line_end":536,"column_start":34,"column_end":38},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":55485,"byte_end":55491,"line_start":546,"line_end":546,"column_start":6,"column_end":12},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":576},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/body.rs","byte_start":58019,"byte_end":58025,"line_start":619,"line_end":619,"column_start":21,"column_end":27},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":576},"to":{"krate":2,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/length.rs","byte_start":62822,"byte_end":62835,"line_start":7,"line_end":7,"column_start":28,"column_end":41},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1488},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/length.rs","byte_start":63186,"byte_end":63199,"line_start":20,"line_end":20,"column_start":6,"column_end":19},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/length.rs","byte_start":65240,"byte_end":65253,"line_start":83,"line_end":83,"column_start":21,"column_end":34},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1488},"to":{"krate":2,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/body/length.rs","byte_start":65605,"byte_end":65618,"line_start":93,"line_end":93,"column_start":23,"column_end":36},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1488},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":73314,"byte_end":73319,"line_start":149,"line_end":149,"column_start":6,"column_end":11},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":719},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":86140,"byte_end":86145,"line_start":492,"line_end":492,"column_start":21,"column_end":26},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":719},"to":{"krate":2,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":86437,"byte_end":86442,"line_start":503,"line_end":503,"column_start":23,"column_end":28},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":719},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":86717,"byte_end":86722,"line_start":513,"line_end":513,"column_start":19,"column_end":24},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":719},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":86954,"byte_end":86959,"line_start":523,"line_end":523,"column_start":22,"column_end":27},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":719},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":87074,"byte_end":87079,"line_start":530,"line_end":530,"column_start":6,"column_end":11},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1552},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":87524,"byte_end":87529,"line_start":545,"line_end":545,"column_start":32,"column_end":37},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1552},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":88025,"byte_end":88030,"line_start":559,"line_end":559,"column_start":44,"column_end":49},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1552},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":88166,"byte_end":88171,"line_start":565,"line_end":565,"column_start":48,"column_end":53},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1552},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":88301,"byte_end":88306,"line_start":571,"line_end":571,"column_start":38,"column_end":43},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1552},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":88428,"byte_end":88433,"line_start":577,"line_end":577,"column_start":43,"column_end":48},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1552},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":88555,"byte_end":88559,"line_start":584,"line_end":584,"column_start":23,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":3150},"to":{"krate":0,"index":806}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":88562,"byte_end":88566,"line_start":584,"line_end":584,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":3162},"to":{"krate":0,"index":806}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":88619,"byte_end":88624,"line_start":586,"line_end":586,"column_start":25,"column_end":30},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":719},"to":{"krate":0,"index":806}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":88680,"byte_end":88688,"line_start":590,"line_end":590,"column_start":23,"column_end":31},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1612},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/error.rs","byte_start":88824,"byte_end":88832,"line_start":596,"line_end":596,"column_start":19,"column_end":27},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1612},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":97987,"byte_end":97999,"line_start":38,"line_end":38,"column_start":6,"column_end":18},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1616},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":98777,"byte_end":98789,"line_start":62,"line_end":62,"column_start":25,"column_end":37},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1616},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":99118,"byte_end":99130,"line_start":74,"line_end":74,"column_start":27,"column_end":39},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1616},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":99450,"byte_end":99462,"line_start":86,"line_end":86,"column_start":26,"column_end":38},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1616},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":99790,"byte_end":99802,"line_start":98,"line_end":98,"column_start":25,"column_end":37},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1616},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":100103,"byte_end":100115,"line_start":110,"line_end":110,"column_start":22,"column_end":34},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1616},"to":{"krate":2,"index":3053}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":100192,"byte_end":100204,"line_start":116,"line_end":116,"column_start":22,"column_end":34},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1616},"to":{"krate":2,"index":3047}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":100598,"byte_end":100617,"line_start":132,"line_end":132,"column_start":28,"column_end":47},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1637},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext/h1_reason_phrase.rs","byte_start":100799,"byte_end":100818,"line_start":138,"line_end":138,"column_start":28,"column_end":47},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1637},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext.rs","byte_start":90588,"byte_end":90596,"line_start":30,"line_end":30,"column_start":6,"column_end":14},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext.rs","byte_start":91158,"byte_end":91166,"line_start":53,"line_end":53,"column_start":28,"column_end":36},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1641},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext.rs","byte_start":91339,"byte_end":91347,"line_start":62,"line_end":62,"column_start":22,"column_end":30},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1641},"to":{"krate":2,"index":3047}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext.rs","byte_start":91465,"byte_end":91473,"line_start":69,"line_end":69,"column_start":21,"column_end":29},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1641},"to":{"krate":2,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/ext.rs","byte_start":92319,"byte_end":92332,"line_start":100,"line_end":100,"column_start":6,"column_end":19},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1652},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/http.rs","byte_start":105919,"byte_end":105925,"line_start":8,"line_end":8,"column_start":41,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":943},"to":{"krate":0,"index":922}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/http.rs","byte_start":106707,"byte_end":106708,"line_start":29,"line_end":29,"column_start":37,"column_end":38},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":930},"to":{"krate":0,"index":922}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/http.rs","byte_start":107245,"byte_end":107246,"line_start":49,"line_end":49,"column_start":40,"column_end":41},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":939},"to":{"krate":0,"index":943}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":107722,"byte_end":107728,"line_start":12,"line_end":12,"column_start":49,"column_end":55},"kind":"SuperTrait","from":{"krate":0,"index":1053},"to":{"krate":0,"index":979}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":108090,"byte_end":108091,"line_start":21,"line_end":21,"column_start":53,"column_end":54},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":987},"to":{"krate":0,"index":1053}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":108164,"byte_end":108165,"line_start":23,"line_end":23,"column_start":44,"column_end":45},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":990},"to":{"krate":0,"index":979}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":108745,"byte_end":108751,"line_start":43,"line_end":43,"column_start":58,"column_end":64},"kind":"SuperTrait","from":{"krate":0,"index":1053},"to":{"krate":0,"index":997}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":109803,"byte_end":109804,"line_start":66,"line_end":66,"column_start":69,"column_end":70},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1009},"to":{"krate":0,"index":997}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":110571,"byte_end":110572,"line_start":93,"line_end":93,"column_start":67,"column_end":68},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1027},"to":{"krate":0,"index":1053}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":112048,"byte_end":112061,"line_start":152,"line_end":152,"column_start":62,"column_end":75},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1659},"to":{"krate":52,"index":13}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":112518,"byte_end":112531,"line_start":171,"line_end":171,"column_start":24,"column_end":37},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1659},"to":{"krate":2,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/make.rs","byte_start":112872,"byte_end":112880,"line_start":186,"line_end":186,"column_start":23,"column_end":31},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1056},"to":{"krate":0,"index":1055}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/oneshot.rs","byte_start":113883,"byte_end":113890,"line_start":44,"line_end":44,"column_start":25,"column_end":32},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1667},"to":{"krate":2,"index":13330}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/util.rs","byte_start":115911,"byte_end":115920,"line_start":45,"line_end":45,"column_start":9,"column_end":18},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1120},"to":{"krate":52,"index":13}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/util.rs","byte_start":116467,"byte_end":116476,"line_start":66,"line_end":66,"column_start":27,"column_end":36},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1120},"to":{"krate":2,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/util.rs","byte_start":116626,"byte_end":116635,"line_start":72,"line_end":72,"column_start":22,"column_end":31},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1120},"to":{"krate":2,"index":2772}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/service/util.rs","byte_start":116815,"byte_end":116824,"line_start":84,"line_end":84,"column_start":21,"column_end":30},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1120},"to":{"krate":2,"index":3160}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":120929,"byte_end":120937,"line_start":121,"line_end":121,"column_start":6,"column_end":14},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":121865,"byte_end":121873,"line_start":151,"line_end":151,"column_start":20,"column_end":28},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1220},"to":{"krate":28,"index":231}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":122106,"byte_end":122114,"line_start":161,"line_end":161,"column_start":21,"column_end":29},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1220},"to":{"krate":28,"index":310}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":122969,"byte_end":122977,"line_start":191,"line_end":191,"column_start":21,"column_end":29},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1220},"to":{"krate":2,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":123132,"byte_end":123141,"line_start":199,"line_end":199,"column_start":6,"column_end":15},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":123341,"byte_end":123350,"line_start":210,"line_end":210,"column_start":17,"column_end":26},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1222},"to":{"krate":2,"index":13330}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":123915,"byte_end":123924,"line_start":225,"line_end":225,"column_start":21,"column_end":30},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1222},"to":{"krate":2,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":124128,"byte_end":124135,"line_start":234,"line_end":234,"column_start":6,"column_end":13},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":124864,"byte_end":124879,"line_start":258,"line_end":258,"column_start":23,"column_end":38},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1804},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":125030,"byte_end":125045,"line_start":264,"line_end":264,"column_start":19,"column_end":34},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1804},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":125095,"byte_end":125104,"line_start":268,"line_end":268,"column_start":22,"column_end":31},"kind":"SuperTrait","from":{"krate":28,"index":231},"to":{"krate":0,"index":1259}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":125107,"byte_end":125117,"line_start":268,"line_end":268,"column_start":34,"column_end":44},"kind":"SuperTrait","from":{"krate":28,"index":310},"to":{"krate":0,"index":1259}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":125120,"byte_end":125125,"line_start":268,"line_end":268,"column_start":47,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":3191},"to":{"krate":0,"index":1259}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":125275,"byte_end":125276,"line_start":274,"line_end":274,"column_start":58,"column_end":59},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1262},"to":{"krate":0,"index":1259}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":125947,"byte_end":125954,"line_start":302,"line_end":302,"column_start":34,"column_end":41},"kind":{"Impl":{"id":98}},"from":{"krate":20,"index":1361},"to":{"krate":0,"index":1272}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/upgrade.rs","byte_start":126415,"byte_end":126423,"line_start":318,"line_end":318,"column_start":34,"column_end":42},"kind":{"Impl":{"id":99}},"from":{"krate":20,"index":1494},"to":{"krate":0,"index":1272}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/conn.rs","byte_start":18006782,"byte_end":18006786,"line_start":38,"line_end":38,"column_start":15,"column_end":19},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/conn.rs","byte_start":18033266,"byte_end":18033270,"line_start":793,"line_end":793,"column_start":35,"column_end":39},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2319},"to":{"krate":2,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/conn.rs","byte_start":18033542,"byte_end":18033546,"line_start":803,"line_end":803,"column_start":32,"column_end":36},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2319},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/conn.rs","byte_start":18035502,"byte_end":18035507,"line_start":867,"line_end":867,"column_start":21,"column_end":26},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2392},"to":{"krate":2,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/conn.rs","byte_start":18036145,"byte_end":18036152,"line_start":890,"line_end":890,"column_start":21,"column_end":28},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2410},"to":{"krate":2,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/conn.rs","byte_start":18036542,"byte_end":18036544,"line_start":901,"line_end":901,"column_start":39,"column_end":41},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":3209},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/conn.rs","byte_start":18036816,"byte_end":18036818,"line_start":917,"line_end":917,"column_start":18,"column_end":20},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":3209},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/conn.rs","byte_start":18036877,"byte_end":18036879,"line_start":923,"line_end":923,"column_start":6,"column_end":8},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":3209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/conn.rs","byte_start":18037120,"byte_end":18037125,"line_start":941,"line_end":941,"column_start":6,"column_end":11},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/decode.rs","byte_start":18055762,"byte_end":18055769,"line_start":66,"line_end":66,"column_start":6,"column_end":13},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":3221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/decode.rs","byte_start":18058972,"byte_end":18058979,"line_start":164,"line_end":164,"column_start":21,"column_end":28},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":3221},"to":{"krate":2,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/decode.rs","byte_start":18059449,"byte_end":18059461,"line_start":182,"line_end":182,"column_start":6,"column_end":18},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":3249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/decode.rs","byte_start":18067625,"byte_end":18067639,"line_start":417,"line_end":417,"column_start":23,"column_end":37},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":3282},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/decode.rs","byte_start":18067795,"byte_end":18067809,"line_start":423,"line_end":423,"column_start":19,"column_end":33},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":3282},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/dispatch.rs","byte_start":18080372,"byte_end":18080382,"line_start":60,"line_end":60,"column_start":19,"column_end":29},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2616},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/dispatch.rs","byte_start":18093813,"byte_end":18093823,"line_start":407,"line_end":407,"column_start":30,"column_end":40},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2616},"to":{"krate":2,"index":13330}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/dispatch.rs","byte_start":18094623,"byte_end":18094631,"line_start":434,"line_end":434,"column_start":13,"column_end":21},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2666},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/dispatch.rs","byte_start":18094875,"byte_end":18094883,"line_start":444,"line_end":444,"column_start":22,"column_end":30},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2666},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/dispatch.rs","byte_start":18095044,"byte_end":18095050,"line_start":455,"line_end":455,"column_start":16,"column_end":22},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":3289},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/dispatch.rs","byte_start":18095432,"byte_end":18095438,"line_start":472,"line_end":472,"column_start":42,"column_end":48},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":3289},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/dispatch.rs","byte_start":18095478,"byte_end":18095484,"line_start":474,"line_end":474,"column_start":30,"column_end":36},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":3289},"to":{"krate":0,"index":2626}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/dispatch.rs","byte_start":18097805,"byte_end":18097811,"line_start":542,"line_end":542,"column_start":13,"column_end":19},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":3296},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/dispatch.rs","byte_start":18098038,"byte_end":18098044,"line_start":552,"line_end":552,"column_start":26,"column_end":32},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":3296},"to":{"krate":0,"index":2626}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/encode.rs","byte_start":18106892,"byte_end":18106899,"line_start":51,"line_end":51,"column_start":6,"column_end":13},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":3370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/encode.rs","byte_start":18112009,"byte_end":18112019,"line_start":218,"line_end":218,"column_start":17,"column_end":27},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":3381},"to":{"krate":22,"index":42}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/encode.rs","byte_start":18113698,"byte_end":18113707,"line_start":279,"line_end":279,"column_start":6,"column_end":15},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":3425},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/encode.rs","byte_start":18114044,"byte_end":18114053,"line_start":292,"line_end":292,"column_start":14,"column_end":23},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":3425},"to":{"krate":22,"index":42}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/encode.rs","byte_start":18114443,"byte_end":18114452,"line_start":310,"line_end":310,"column_start":21,"column_end":30},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":3425},"to":{"krate":2,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/encode.rs","byte_start":18114703,"byte_end":18114712,"line_start":319,"line_end":319,"column_start":21,"column_end":30},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":3425},"to":{"krate":2,"index":9852}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/encode.rs","byte_start":18115071,"byte_end":18115081,"line_start":330,"line_end":330,"column_start":26,"column_end":36},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":3381},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/encode.rs","byte_start":18115227,"byte_end":18115237,"line_start":338,"line_end":338,"column_start":32,"column_end":42},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":3381},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/encode.rs","byte_start":18115421,"byte_end":18115431,"line_start":346,"line_end":346,"column_start":62,"column_end":72},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":3381},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/encode.rs","byte_start":18115606,"byte_end":18115612,"line_start":354,"line_end":354,"column_start":23,"column_end":29},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":3387},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/encode.rs","byte_start":18115777,"byte_end":18115783,"line_start":360,"line_end":360,"column_start":28,"column_end":34},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":3387},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/io.rs","byte_start":18119424,"byte_end":18119432,"line_start":48,"line_end":48,"column_start":27,"column_end":35},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2849},"to":{"krate":2,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/io.rs","byte_start":18119695,"byte_end":18119703,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":2849},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/io.rs","byte_start":18131250,"byte_end":18131258,"line_start":365,"line_end":365,"column_start":29,"column_end":37},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2849},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/io.rs","byte_start":18131492,"byte_end":18131500,"line_start":372,"line_end":372,"column_start":24,"column_end":32},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2849},"to":{"krate":0,"index":2893}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/io.rs","byte_start":18132203,"byte_end":18132215,"line_start":399,"line_end":399,"column_start":6,"column_end":18},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":3450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/io.rs","byte_start":18134460,"byte_end":18134472,"line_start":470,"line_end":470,"column_start":18,"column_end":30},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":3450},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/io.rs","byte_start":18134676,"byte_end":18134682,"line_start":482,"line_end":482,"column_start":22,"column_end":28},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":3463},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/io.rs","byte_start":18134796,"byte_end":18134802,"line_start":489,"line_end":489,"column_start":6,"column_end":12},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":3463},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/io.rs","byte_start":18135466,"byte_end":18135472,"line_start":514,"line_end":514,"column_start":37,"column_end":43},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":3463},"to":{"krate":2,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/io.rs","byte_start":18135725,"byte_end":18135731,"line_start":523,"line_end":523,"column_start":30,"column_end":36},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":3463},"to":{"krate":22,"index":42}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/io.rs","byte_start":18136400,"byte_end":18136408,"line_start":551,"line_end":551,"column_start":14,"column_end":22},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":2922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/io.rs","byte_start":18136693,"byte_end":18136701,"line_start":562,"line_end":562,"column_start":9,"column_end":17},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":2922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/io.rs","byte_start":18138585,"byte_end":18138593,"line_start":622,"line_end":622,"column_start":29,"column_end":37},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":2922},"to":{"krate":2,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/io.rs","byte_start":18138847,"byte_end":18138855,"line_start":631,"line_end":631,"column_start":22,"column_end":30},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":2922},"to":{"krate":22,"index":42}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/role.rs","byte_start":18154001,"byte_end":18154007,"line_start":121,"line_end":121,"column_start":27,"column_end":33},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":3071},"to":{"krate":0,"index":3147}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/role.rs","byte_start":18167607,"byte_end":18167613,"line_start":471,"line_end":471,"column_start":6,"column_end":12},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":3071},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/role.rs","byte_start":18169040,"byte_end":18169055,"line_start":514,"line_end":514,"column_start":35,"column_end":50},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":3093},"to":{"krate":0,"index":3115}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/role.rs","byte_start":18170398,"byte_end":18170412,"line_start":560,"line_end":560,"column_start":35,"column_end":49},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":3100},"to":{"krate":0,"index":3115}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/role.rs","byte_start":18185467,"byte_end":18185473,"line_start":927,"line_end":927,"column_start":27,"column_end":33},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":3070},"to":{"krate":0,"index":3147}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/role.rs","byte_start":18194754,"byte_end":18194760,"line_start":1169,"line_end":1169,"column_start":6,"column_end":12},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":3070},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/role.rs","byte_start":18207235,"byte_end":18207244,"line_start":1491,"line_end":1491,"column_start":25,"column_end":34},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":3138},"to":{"krate":2,"index":9852}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h1/mod.rs","byte_start":18005197,"byte_end":18005202,"line_start":109,"line_end":109,"column_start":6,"column_end":11},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":3495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/ping.rs","byte_start":17991523,"byte_end":17991529,"line_start":198,"line_end":198,"column_start":6,"column_end":12},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":3503},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/ping.rs","byte_start":17991870,"byte_end":17991878,"line_start":214,"line_end":214,"column_start":6,"column_end":14},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":3510},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/ping.rs","byte_start":17993896,"byte_end":17993902,"line_start":294,"line_end":294,"column_start":6,"column_end":12},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":2000},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/ping.rs","byte_start":17996552,"byte_end":17996558,"line_start":372,"line_end":372,"column_start":6,"column_end":12},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2004},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/ping.rs","byte_start":17997450,"byte_end":17997453,"line_start":407,"line_end":407,"column_start":6,"column_end":9},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2011},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/ping.rs","byte_start":17999376,"byte_end":17999385,"line_start":473,"line_end":473,"column_start":6,"column_end":15},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":2017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/ping.rs","byte_start":18001737,"byte_end":18001754,"line_start":537,"line_end":537,"column_start":6,"column_end":23},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":3514},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/ping.rs","byte_start":18001934,"byte_end":18001951,"line_start":544,"line_end":544,"column_start":23,"column_end":40},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":3514},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/ping.rs","byte_start":18002125,"byte_end":18002142,"line_start":551,"line_end":551,"column_start":28,"column_end":45},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3514},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/client.rs","byte_start":18252827,"byte_end":18252833,"line_start":58,"line_end":58,"column_start":18,"column_end":24},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":3692},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/client.rs","byte_start":18257436,"byte_end":18257446,"line_start":208,"line_end":208,"column_start":9,"column_end":19},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3667},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/client.rs","byte_start":18257643,"byte_end":18257653,"line_start":217,"line_end":217,"column_start":20,"column_end":30},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":3667},"to":{"krate":2,"index":13330}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/server.rs","byte_start":18267616,"byte_end":18267622,"line_start":57,"line_end":57,"column_start":18,"column_end":24},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3906},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/server.rs","byte_start":18268876,"byte_end":18268882,"line_start":109,"line_end":109,"column_start":18,"column_end":24},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":8457},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/server.rs","byte_start":18271281,"byte_end":18271287,"line_start":181,"line_end":181,"column_start":29,"column_end":35},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":8457},"to":{"krate":2,"index":13330}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/server.rs","byte_start":18272954,"byte_end":18272961,"line_start":227,"line_end":227,"column_start":12,"column_end":19},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3852},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/server.rs","byte_start":18279821,"byte_end":18279829,"line_start":408,"line_end":408,"column_start":12,"column_end":20},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":8268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/server.rs","byte_start":18280538,"byte_end":18280546,"line_start":437,"line_end":437,"column_start":15,"column_end":23},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":8268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/server.rs","byte_start":18284872,"byte_end":18284880,"line_start":531,"line_end":531,"column_start":26,"column_end":34},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":8268},"to":{"krate":2,"index":13330}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/mod.rs","byte_start":17974339,"byte_end":17974355,"line_start":99,"line_end":99,"column_start":9,"column_end":25},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":8011},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/mod.rs","byte_start":17974605,"byte_end":17974621,"line_start":112,"line_end":112,"column_start":20,"column_end":36},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":8011},"to":{"krate":2,"index":13330}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/mod.rs","byte_start":17979229,"byte_end":17979239,"line_start":224,"line_end":224,"column_start":32,"column_end":42},"kind":{"Impl":{"id":177}},"from":{"krate":53,"index":8975},"to":{"krate":0,"index":2077}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/mod.rs","byte_start":17979858,"byte_end":17979865,"line_start":249,"line_end":249,"column_start":22,"column_end":29},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":2086},"to":{"krate":22,"index":42}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/mod.rs","byte_start":17980951,"byte_end":17980961,"line_start":296,"line_end":296,"column_start":23,"column_end":33},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":2103},"to":{"krate":28,"index":231}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/mod.rs","byte_start":17982413,"byte_end":17982423,"line_start":336,"line_end":336,"column_start":24,"column_end":34},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":2103},"to":{"krate":28,"index":310}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/mod.rs","byte_start":17984725,"byte_end":17984743,"line_start":414,"line_end":414,"column_start":9,"column_end":27},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":2119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/mod.rs","byte_start":17985971,"byte_end":17985979,"line_start":457,"line_end":457,"column_start":25,"column_end":33},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":2131},"to":{"krate":2,"index":3150}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/h2/mod.rs","byte_start":17986003,"byte_end":17986011,"line_start":459,"line_end":459,"column_start":17,"column_end":25},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":2131},"to":{"krate":22,"index":42}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/proto/mod.rs","byte_start":17971063,"byte_end":17971074,"line_start":62,"line_end":62,"column_start":6,"column_end":17},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":3921},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18300632,"byte_end":18300636,"line_start":60,"line_end":60,"column_start":6,"column_end":10},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":4443},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18300844,"byte_end":18300848,"line_start":71,"line_end":71,"column_start":21,"column_end":25},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":4443},"to":{"krate":2,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18300984,"byte_end":18300988,"line_start":77,"line_end":77,"column_start":23,"column_end":27},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":4443},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18301121,"byte_end":18301125,"line_start":83,"line_end":83,"column_start":18,"column_end":22},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":4443},"to":{"krate":2,"index":12556}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18301442,"byte_end":18301458,"line_start":96,"line_end":96,"column_start":23,"column_end":39},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":4461},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18301595,"byte_end":18301611,"line_start":102,"line_end":102,"column_start":16,"column_end":32},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":4461},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18301621,"byte_end":18301632,"line_start":104,"line_end":104,"column_start":6,"column_end":17},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":4457},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18301767,"byte_end":18301778,"line_start":111,"line_end":111,"column_start":24,"column_end":35},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":4457},"to":{"krate":52,"index":13}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18302357,"byte_end":18302368,"line_start":132,"line_end":132,"column_start":21,"column_end":32},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":4457},"to":{"krate":2,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18302488,"byte_end":18302497,"line_start":138,"line_end":138,"column_start":17,"column_end":26},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":4127},"to":{"krate":2,"index":13330}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18303125,"byte_end":18303134,"line_start":156,"line_end":156,"column_start":21,"column_end":30},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":4127},"to":{"krate":2,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18303250,"byte_end":18303259,"line_start":162,"line_end":162,"column_start":15,"column_end":24},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":4127},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18303342,"byte_end":18303350,"line_start":168,"line_end":168,"column_start":19,"column_end":27},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":4125},"to":{"krate":2,"index":8186}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18303484,"byte_end":18303492,"line_start":176,"line_end":176,"column_start":21,"column_end":29},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":4125},"to":{"krate":2,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18303670,"byte_end":18303681,"line_start":186,"line_end":186,"column_start":6,"column_end":17},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":4167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18305656,"byte_end":18305667,"line_start":248,"line_end":248,"column_start":19,"column_end":30},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":4167},"to":{"krate":2,"index":8186}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/dns.rs","byte_start":18308300,"byte_end":18308301,"line_start":335,"line_end":335,"column_start":25,"column_end":26},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":4209},"to":{"krate":0,"index":4202}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18313663,"byte_end":18313676,"line_start":88,"line_end":88,"column_start":6,"column_end":19},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":4466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18314214,"byte_end":18314227,"line_start":107,"line_end":107,"column_start":9,"column_end":22},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":4466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18318971,"byte_end":18318984,"line_start":248,"line_end":248,"column_start":36,"column_end":49},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":4466},"to":{"krate":2,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18319151,"byte_end":18319164,"line_start":254,"line_end":254,"column_start":41,"column_end":54},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":4466},"to":{"krate":52,"index":13}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18320892,"byte_end":18320905,"line_start":322,"line_end":322,"column_start":9,"column_end":22},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":4466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18322061,"byte_end":18322070,"line_start":361,"line_end":361,"column_start":21,"column_end":30},"kind":{"Impl":{"id":207}},"from":{"krate":28,"index":6298},"to":{"krate":0,"index":3964}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18322374,"byte_end":18322382,"line_start":372,"line_end":372,"column_start":6,"column_end":14},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":4473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18323321,"byte_end":18323335,"line_start":402,"line_end":402,"column_start":29,"column_end":43},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":7846},"to":{"krate":2,"index":13330}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18323671,"byte_end":18323683,"line_start":416,"line_end":416,"column_start":6,"column_end":18},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":4367},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18324327,"byte_end":18324339,"line_start":444,"line_end":444,"column_start":21,"column_end":33},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":4367},"to":{"krate":2,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18324669,"byte_end":18324681,"line_start":457,"line_end":457,"column_start":23,"column_end":35},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":4367},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18324919,"byte_end":18324931,"line_start":469,"line_end":469,"column_start":19,"column_end":31},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":4367},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18325194,"byte_end":18325207,"line_start":481,"line_end":481,"column_start":10,"column_end":23},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":4388},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18326603,"byte_end":18326622,"line_start":522,"line_end":522,"column_start":6,"column_end":25},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":4399},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18326875,"byte_end":18326894,"line_start":533,"line_end":533,"column_start":6,"column_end":25},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":4399},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/http.rs","byte_start":18331922,"byte_end":18331935,"line_start":675,"line_end":675,"column_start":6,"column_end":19},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":4388},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18290784,"byte_end":18290793,"line_start":126,"line_end":126,"column_start":6,"column_end":15},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":4496},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18293096,"byte_end":18293101,"line_start":206,"line_end":206,"column_start":6,"column_end":11},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":3966},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18293206,"byte_end":18293211,"line_start":212,"line_end":212,"column_start":16,"column_end":21},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":3966},"to":{"krate":2,"index":2772}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18293308,"byte_end":18293313,"line_start":218,"line_end":218,"column_start":21,"column_end":26},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":3966},"to":{"krate":2,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18293447,"byte_end":18293451,"line_start":224,"line_end":224,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":3150},"to":{"krate":0,"index":3985}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18293454,"byte_end":18293458,"line_start":224,"line_end":224,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":3162},"to":{"krate":0,"index":3985}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18293844,"byte_end":18293857,"line_start":235,"line_end":235,"column_start":24,"column_end":37},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":4515},"to":{"krate":0,"index":3985}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18294153,"byte_end":18294163,"line_start":250,"line_end":250,"column_start":26,"column_end":36},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":3992},"to":{"krate":2,"index":2772}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18294286,"byte_end":18294296,"line_start":256,"line_end":256,"column_start":24,"column_end":34},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":3992},"to":{"krate":0,"index":3985}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18295409,"byte_end":18295415,"line_start":292,"line_end":292,"column_start":24,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":4051},"to":{"krate":0,"index":4028}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18295418,"byte_end":18295423,"line_start":292,"line_end":292,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":3155},"to":{"krate":0,"index":4028}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18295996,"byte_end":18295997,"line_start":307,"line_end":307,"column_start":28,"column_end":29},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":4037},"to":{"krate":0,"index":4028}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18296451,"byte_end":18296452,"line_start":321,"line_end":321,"column_start":31,"column_end":32},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":4042},"to":{"krate":0,"index":4031}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/connect/mod.rs","byte_start":18296975,"byte_end":18296976,"line_start":337,"line_end":337,"column_start":27,"column_end":28},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":4049},"to":{"krate":0,"index":4051}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18345402,"byte_end":18345408,"line_start":54,"line_end":54,"column_start":6,"column_end":12},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":4680},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18345942,"byte_end":18345948,"line_start":70,"line_end":70,"column_start":18,"column_end":24},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":4680},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18346058,"byte_end":18346064,"line_start":76,"line_end":76,"column_start":6,"column_end":12},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":4680},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18346677,"byte_end":18346683,"line_start":102,"line_end":102,"column_start":12,"column_end":18},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":4680},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18363469,"byte_end":18363475,"line_start":524,"line_end":524,"column_start":51,"column_end":57},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":4680},"to":{"krate":52,"index":13}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18364543,"byte_end":18364549,"line_start":564,"line_end":564,"column_start":29,"column_end":35},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":4680},"to":{"krate":2,"index":2772}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18364836,"byte_end":18364842,"line_start":575,"line_end":575,"column_start":27,"column_end":33},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":4680},"to":{"krate":2,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18365006,"byte_end":18365020,"line_start":583,"line_end":583,"column_start":6,"column_end":20},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":4687},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18365490,"byte_end":18365504,"line_start":601,"line_end":601,"column_start":21,"column_end":35},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":4687},"to":{"krate":2,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18365629,"byte_end":18365643,"line_start":607,"line_end":607,"column_start":17,"column_end":31},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":4687},"to":{"krate":2,"index":13330}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18366188,"byte_end":18366198,"line_start":630,"line_end":630,"column_start":9,"column_end":19},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":4758},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18367201,"byte_end":18367211,"line_start":668,"line_end":668,"column_start":29,"column_end":39},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":4758},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18367846,"byte_end":18367856,"line_start":687,"line_end":687,"column_start":22,"column_end":32},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":4758},"to":{"krate":0,"index":5300}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18369175,"byte_end":18369186,"line_start":738,"line_end":738,"column_start":9,"column_end":20},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":4786},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18373986,"byte_end":18373993,"line_start":901,"line_end":901,"column_start":18,"column_end":25},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":5528},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18374440,"byte_end":18374447,"line_start":918,"line_end":918,"column_start":6,"column_end":13},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":5528},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/client.rs","byte_start":18390091,"byte_end":18390098,"line_start":1349,"line_end":1349,"column_start":21,"column_end":28},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":5528},"to":{"krate":2,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18400477,"byte_end":18400488,"line_start":224,"line_end":224,"column_start":9,"column_end":20},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":4963},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18401420,"byte_end":18401431,"line_start":257,"line_end":257,"column_start":9,"column_end":20},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":4963},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18404362,"byte_end":18404373,"line_start":342,"line_end":342,"column_start":33,"column_end":44},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":4963},"to":{"krate":52,"index":13}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18404762,"byte_end":18404773,"line_start":359,"line_end":359,"column_start":24,"column_end":35},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":4963},"to":{"krate":2,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18404964,"byte_end":18404980,"line_start":368,"line_end":368,"column_start":9,"column_end":25},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":4979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18405192,"byte_end":18405208,"line_start":379,"line_end":379,"column_start":9,"column_end":25},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":4979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18406260,"byte_end":18406276,"line_start":411,"line_end":411,"column_start":24,"column_end":40},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":4979},"to":{"krate":2,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18406450,"byte_end":18406466,"line_start":418,"line_end":418,"column_start":19,"column_end":35},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":4979},"to":{"krate":2,"index":2772}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18406630,"byte_end":18406640,"line_start":428,"line_end":428,"column_start":12,"column_end":22},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":4966},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18410160,"byte_end":18410170,"line_start":511,"line_end":511,"column_start":23,"column_end":33},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":4966},"to":{"krate":2,"index":13330}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18411144,"byte_end":18411154,"line_start":539,"line_end":539,"column_start":27,"column_end":37},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":4966},"to":{"krate":2,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18411403,"byte_end":18411410,"line_start":551,"line_end":551,"column_start":6,"column_end":13},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":5534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18428350,"byte_end":18428364,"line_start":1013,"line_end":1013,"column_start":17,"column_end":31},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":4970},"to":{"krate":2,"index":13330}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18429135,"byte_end":18429149,"line_start":1033,"line_end":1033,"column_start":21,"column_end":35},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":4970},"to":{"krate":2,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18429323,"byte_end":18429334,"line_start":1041,"line_end":1041,"column_start":23,"column_end":34},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":7520},"to":{"krate":2,"index":13330}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18430138,"byte_end":18430142,"line_start":1067,"line_end":1067,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":3150},"to":{"krate":0,"index":5087}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18430168,"byte_end":18430172,"line_start":1068,"line_end":1068,"column_start":23,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":3150},"to":{"krate":0,"index":5088}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18430175,"byte_end":18430179,"line_start":1068,"line_end":1068,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":3162},"to":{"krate":0,"index":5088}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18430232,"byte_end":18430243,"line_start":1071,"line_end":1071,"column_start":34,"column_end":45},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":4963},"to":{"krate":0,"index":5088}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18430304,"byte_end":18430314,"line_start":1074,"line_end":1074,"column_start":39,"column_end":49},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":4966},"to":{"krate":0,"index":5087}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18430497,"byte_end":18430507,"line_start":1083,"line_end":1083,"column_start":57,"column_end":67},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":4966},"to":{"krate":0,"index":5088}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18430675,"byte_end":18430682,"line_start":1092,"line_end":1092,"column_start":25,"column_end":32},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":5534},"to":{"krate":0,"index":5088}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/conn.rs","byte_start":18430722,"byte_end":18430736,"line_start":1095,"line_end":1095,"column_start":21,"column_end":35},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":4970},"to":{"krate":0,"index":5087}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/dispatch.rs","byte_start":18432621,"byte_end":18432627,"line_start":55,"line_end":55,"column_start":12,"column_end":18},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":5131},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/dispatch.rs","byte_start":18434440,"byte_end":18434455,"line_start":115,"line_end":115,"column_start":12,"column_end":27},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":5137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/dispatch.rs","byte_start":18435003,"byte_end":18435018,"line_start":134,"line_end":134,"column_start":22,"column_end":37},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":5137},"to":{"krate":2,"index":2772}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/dispatch.rs","byte_start":18435305,"byte_end":18435313,"line_start":148,"line_end":148,"column_start":12,"column_end":20},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":5169},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/dispatch.rs","byte_start":18436153,"byte_end":18436161,"line_start":179,"line_end":179,"column_start":21,"column_end":29},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":5169},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/dispatch.rs","byte_start":18436406,"byte_end":18436414,"line_start":189,"line_end":189,"column_start":21,"column_end":29},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":5185},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/dispatch.rs","byte_start":18436826,"byte_end":18436834,"line_start":205,"line_end":205,"column_start":12,"column_end":20},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":5194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18443880,"byte_end":18443885,"line_start":30,"line_end":30,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":3191},"to":{"krate":0,"index":5300}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18443888,"byte_end":18443892,"line_start":30,"line_end":30,"column_start":36,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":3150},"to":{"krate":0,"index":5300}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18443895,"byte_end":18443900,"line_start":30,"line_end":30,"column_start":43,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":3155},"to":{"krate":0,"index":5300}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18446612,"byte_end":18446618,"line_start":98,"line_end":98,"column_start":6,"column_end":12},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":5566},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18446719,"byte_end":18446723,"line_start":104,"line_end":104,"column_start":9,"column_end":13},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":5297},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18447909,"byte_end":18447913,"line_start":142,"line_end":142,"column_start":19,"column_end":23},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":5297},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18452805,"byte_end":18452815,"line_start":281,"line_end":281,"column_start":28,"column_end":38},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":5339},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18454358,"byte_end":18454367,"line_start":323,"line_end":323,"column_start":19,"column_end":28},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":5314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18458137,"byte_end":18458146,"line_start":429,"line_end":429,"column_start":9,"column_end":18},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":5314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18458797,"byte_end":18458806,"line_start":447,"line_end":447,"column_start":19,"column_end":28},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":5314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18459784,"byte_end":18459788,"line_start":478,"line_end":478,"column_start":19,"column_end":23},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":5297},"to":{"krate":2,"index":2772}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18460194,"byte_end":18460200,"line_start":495,"line_end":495,"column_start":19,"column_end":25},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":5365},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18460579,"byte_end":18460585,"line_start":513,"line_end":513,"column_start":29,"column_end":35},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":5365},"to":{"krate":2,"index":3369}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18460702,"byte_end":18460708,"line_start":520,"line_end":520,"column_start":32,"column_end":38},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":5365},"to":{"krate":2,"index":3382}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18460812,"byte_end":18460818,"line_start":526,"line_end":526,"column_start":28,"column_end":34},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":5365},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18461606,"byte_end":18461612,"line_start":548,"line_end":548,"column_start":34,"column_end":40},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":5365},"to":{"krate":2,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18462113,"byte_end":18462134,"line_start":570,"line_end":570,"column_start":19,"column_end":40},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":5574},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18462161,"byte_end":18462182,"line_start":572,"line_end":572,"column_start":23,"column_end":44},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":5574},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18462332,"byte_end":18462340,"line_start":578,"line_end":578,"column_start":19,"column_end":27},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":5394},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18465218,"byte_end":18465226,"line_start":657,"line_end":657,"column_start":30,"column_end":38},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":5394},"to":{"krate":2,"index":13330}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18465902,"byte_end":18465910,"line_start":677,"line_end":677,"column_start":18,"column_end":26},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":5394},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18466442,"byte_end":18466452,"line_start":695,"line_end":695,"column_start":19,"column_end":29},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":5417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18466729,"byte_end":18466739,"line_start":706,"line_end":706,"column_start":28,"column_end":38},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":5417},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18467048,"byte_end":18467058,"line_start":719,"line_end":719,"column_start":6,"column_end":16},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":5427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18467991,"byte_end":18467999,"line_start":748,"line_end":748,"column_start":40,"column_end":48},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":5578},"to":{"krate":2,"index":13330}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/pool.rs","byte_start":18468913,"byte_end":18468920,"line_start":777,"line_end":777,"column_start":9,"column_end":16},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":5323},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/service.rs","byte_start":18477145,"byte_end":18477152,"line_start":30,"line_end":30,"column_start":15,"column_end":22},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":5619},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/client/service.rs","byte_start":18477445,"byte_end":18477452,"line_start":42,"line_end":42,"column_start":30,"column_end":37},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":5619},"to":{"krate":52,"index":13}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18485808,"byte_end":18485814,"line_start":59,"line_end":59,"column_start":23,"column_end":29},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":5659},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18485852,"byte_end":18485858,"line_start":61,"line_end":61,"column_start":31,"column_end":37},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":5659},"to":{"krate":0,"index":5650}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/accept.rs","byte_start":18486687,"byte_end":18486697,"line_start":96,"line_end":96,"column_start":31,"column_end":41},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":7103},"to":{"krate":0,"index":5650}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18493154,"byte_end":18493162,"line_start":192,"line_end":192,"column_start":9,"column_end":17},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":6049},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18493392,"byte_end":18493400,"line_start":202,"line_end":202,"column_start":19,"column_end":27},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":6049},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18494396,"byte_end":18494400,"line_start":231,"line_end":231,"column_start":6,"column_end":10},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":6016},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18495154,"byte_end":18495158,"line_start":254,"line_end":254,"column_start":9,"column_end":13},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":6016},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18510519,"byte_end":18510529,"line_start":689,"line_end":689,"column_start":18,"column_end":28},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":7050},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18516920,"byte_end":18516930,"line_start":859,"line_end":859,"column_start":29,"column_end":39},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":7050},"to":{"krate":2,"index":13330}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18518710,"byte_end":18518720,"line_start":906,"line_end":906,"column_start":27,"column_end":37},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":7050},"to":{"krate":2,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18518982,"byte_end":18518996,"line_start":918,"line_end":918,"column_start":18,"column_end":32},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":6035},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18519511,"byte_end":18519522,"line_start":938,"line_end":938,"column_start":29,"column_end":40},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":7000},"to":{"krate":2,"index":13330}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18520930,"byte_end":18520951,"line_start":981,"line_end":981,"column_start":22,"column_end":43},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":5799},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/conn.rs","byte_start":18521594,"byte_end":18521615,"line_start":999,"line_end":999,"column_start":33,"column_end":54},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":5799},"to":{"krate":2,"index":13330}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18524243,"byte_end":18524255,"line_start":27,"line_end":27,"column_start":6,"column_end":18},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":5869},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18529517,"byte_end":18529529,"line_start":157,"line_end":157,"column_start":17,"column_end":29},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":5869},"to":{"krate":0,"index":5650}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18530483,"byte_end":18530495,"line_start":186,"line_end":186,"column_start":21,"column_end":33},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":5869},"to":{"krate":2,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18531434,"byte_end":18531444,"line_start":218,"line_end":218,"column_start":10,"column_end":20},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":6074},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18532690,"byte_end":18532700,"line_start":261,"line_end":261,"column_start":24,"column_end":34},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":6074},"to":{"krate":28,"index":231}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18532981,"byte_end":18532991,"line_start":272,"line_end":272,"column_start":25,"column_end":35},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":6074},"to":{"krate":28,"index":310}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/tcp.rs","byte_start":18534312,"byte_end":18534322,"line_start":313,"line_end":313,"column_start":22,"column_end":32},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":6074},"to":{"krate":1,"index":6485}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18536130,"byte_end":18536136,"line_start":53,"line_end":53,"column_start":9,"column_end":15},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":6863},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18536496,"byte_end":18536502,"line_start":68,"line_end":68,"column_start":6,"column_end":12},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":6863},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18537625,"byte_end":18537631,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":6863},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18537905,"byte_end":18537911,"line_start":106,"line_end":106,"column_start":26,"column_end":32},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":6863},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18541434,"byte_end":18541440,"line_start":208,"line_end":208,"column_start":37,"column_end":43},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":6863},"to":{"krate":2,"index":13330}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18542135,"byte_end":18542141,"line_start":227,"line_end":227,"column_start":51,"column_end":57},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":6863},"to":{"krate":2,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18542448,"byte_end":18542455,"line_start":238,"line_end":238,"column_start":12,"column_end":19},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":6484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18553710,"byte_end":18553717,"line_start":561,"line_end":561,"column_start":9,"column_end":16},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":6484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18555777,"byte_end":18555782,"line_start":607,"line_end":607,"column_start":48,"column_end":53},"kind":"SuperTrait","from":{"krate":2,"index":2772},"to":{"krate":0,"index":6280}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18556040,"byte_end":18556051,"line_start":617,"line_end":617,"column_start":36,"column_end":47},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":6493},"to":{"krate":0,"index":6280}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18558044,"byte_end":18558054,"line_start":678,"line_end":678,"column_start":62,"column_end":72},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":6782},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18558374,"byte_end":18558384,"line_start":689,"line_end":689,"column_start":43,"column_end":53},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":6782},"to":{"krate":2,"index":13330}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/server.rs","byte_start":18561028,"byte_end":18561038,"line_start":759,"line_end":759,"column_start":36,"column_end":46},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":6630},"to":{"krate":2,"index":13330}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/shutdown.rs","byte_start":18562643,"byte_end":18562651,"line_start":38,"line_end":38,"column_start":18,"column_end":26},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":6573},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/shutdown.rs","byte_start":18562977,"byte_end":18562985,"line_start":51,"line_end":51,"column_start":40,"column_end":48},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":6573},"to":{"krate":2,"index":13330}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.20/src/server/shutdown.rs","byte_start":18564924,"byte_end":18564939,"line_start":102,"line_end":102,"column_start":36,"column_end":51},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":6498},"to":{"krate":0,"index":6280}}]}