{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12","program":"/Users/zevkent/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","time","--edition=2021","/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","--cfg","feature=\"formatting\"","--cfg","feature=\"itoa\"","--cfg","feature=\"macros\"","--cfg","feature=\"parsing\"","--cfg","feature=\"std\"","--cfg","feature=\"time-macros\"","-C","metadata=6234f506af0f3adc","-C","extra-filename=-6234f506af0f3adc","--out-dir","/Users/zevkent/Rust-Chainlink-EA-API/target/rls/debug/deps","-L","dependency=/Users/zevkent/Rust-Chainlink-EA-API/target/rls/debug/deps","--extern","itoa=/Users/zevkent/Rust-Chainlink-EA-API/target/rls/debug/deps/libitoa-4f834622d3b043ae.rmeta","--extern","libc=/Users/zevkent/Rust-Chainlink-EA-API/target/rls/debug/deps/liblibc-6a29003711e39f17.rmeta","--extern","num_threads=/Users/zevkent/Rust-Chainlink-EA-API/target/rls/debug/deps/libnum_threads-2adc1e5798a5cfd2.rmeta","--extern","time_macros=/Users/zevkent/Rust-Chainlink-EA-API/target/rls/debug/deps/libtime_macros-d9ce3509afcb91a5.dylib","--cap-lints","allow","--error-format=json","--sysroot","/Users/zevkent/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/zevkent/Rust-Chainlink-EA-API/target/rls/debug/deps/libtime-6234f506af0f3adc.rmeta"},"prelude":{"crate_id":{"name":"time","disambiguator":[11264757137867437676,0]},"crate_root":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src","external_crates":[{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[10021291131669744914,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","num":2,"id":{"name":"core","disambiguator":[10014640881818692046,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15800718316297612287,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6961639640463363723,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15443605689848621,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[16699447446517724675,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7072391781806093942,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4396878825326251599,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[8751207805142453879,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1923978614408483767,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[14411112285710781992,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[2356975140922920692,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[17423446140748502282,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[9260941638389817344,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[7858856860374224051,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[4855109919914642709,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[15652019722635755907,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[5018606611167862631,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[532173890138877460,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/macros.rs","num":20,"id":{"name":"time_macros","disambiguator":[14841834712787775164,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/formatting/mod.rs","num":21,"id":{"name":"itoa","disambiguator":[13638174999268116165,0]}}],"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":0,"byte_end":10746,"line_start":1,"line_end":326,"column_start":1,"column_end":53}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":2843},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":84507,"byte_end":84521,"line_start":22,"line_end":22,"column_start":26,"column_end":40},"alias_span":null,"name":"ComponentRange","value":"","parent":{"krate":0,"index":326}},{"kind":"Use","ref_id":{"krate":0,"index":2864},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":84549,"byte_end":84564,"line_start":23,"line_end":23,"column_start":27,"column_end":42},"alias_span":null,"name":"ConversionRange","value":"","parent":{"krate":0,"index":326}},{"kind":"Use","ref_id":{"krate":0,"index":2865},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":84549,"byte_end":84564,"line_start":23,"line_end":23,"column_start":27,"column_end":42},"alias_span":null,"name":"ConversionRange","value":"","parent":{"krate":0,"index":326}},{"kind":"Use","ref_id":{"krate":0,"index":2877},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":84593,"byte_end":84609,"line_start":24,"line_end":24,"column_start":28,"column_end":44},"alias_span":null,"name":"DifferentVariant","value":"","parent":{"krate":0,"index":326}},{"kind":"Use","ref_id":{"krate":0,"index":2878},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":84593,"byte_end":84609,"line_start":24,"line_end":24,"column_start":28,"column_end":44},"alias_span":null,"name":"DifferentVariant","value":"","parent":{"krate":0,"index":326}},{"kind":"Use","ref_id":{"krate":0,"index":2890},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":84658,"byte_end":84664,"line_start":26,"line_end":26,"column_start":17,"column_end":23},"alias_span":null,"name":"Format","value":"","parent":{"krate":0,"index":326}},{"kind":"Use","ref_id":{"krate":0,"index":2901},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":84867,"byte_end":84891,"line_start":30,"line_end":30,"column_start":37,"column_end":61},"alias_span":null,"name":"InvalidFormatDescription","value":"","parent":{"krate":0,"index":326}},{"kind":"Use","ref_id":{"krate":0,"index":2923},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":84918,"byte_end":84932,"line_start":31,"line_end":31,"column_start":26,"column_end":40},"alias_span":null,"name":"InvalidVariant","value":"","parent":{"krate":0,"index":326}},{"kind":"Use","ref_id":{"krate":0,"index":2924},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":84918,"byte_end":84932,"line_start":31,"line_end":31,"column_start":26,"column_end":40},"alias_span":null,"name":"InvalidVariant","value":"","parent":{"krate":0,"index":326}},{"kind":"Use","ref_id":{"krate":0,"index":2936},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":84977,"byte_end":84982,"line_start":33,"line_end":33,"column_start":16,"column_end":21},"alias_span":null,"name":"Parse","value":"","parent":{"krate":0,"index":326}},{"kind":"Use","ref_id":{"krate":0,"index":2957},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":85044,"byte_end":85064,"line_start":35,"line_end":35,"column_start":33,"column_end":53},"alias_span":null,"name":"ParseFromDescription","value":"","parent":{"krate":0,"index":326}},{"kind":"Use","ref_id":{"krate":0,"index":2975},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":85119,"byte_end":85132,"line_start":37,"line_end":37,"column_start":26,"column_end":39},"alias_span":null,"name":"TryFromParsed","value":"","parent":{"krate":0,"index":326}},{"kind":"Use","ref_id":{"krate":0,"index":3022},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":115795,"byte_end":115804,"line_start":18,"line_end":18,"column_start":26,"column_end":35},"alias_span":null,"name":"Component","value":"","parent":{"krate":0,"index":596}},{"kind":"Use","ref_id":{"krate":0,"index":692},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":115853,"byte_end":115858,"line_start":20,"line_end":20,"column_start":22,"column_end":27},"alias_span":null,"name":"parse","value":"","parent":{"krate":0,"index":596}},{"kind":"Use","ref_id":{"krate":0,"index":737},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":149187,"byte_end":149208,"line_start":7,"line_end":7,"column_start":26,"column_end":47},"alias_span":null,"name":"DoNotRelyOnWhatThisIs","value":"","parent":{"krate":0,"index":713}},{"kind":"Use","ref_id":{"krate":0,"index":738},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":149210,"byte_end":149223,"line_start":7,"line_end":7,"column_start":49,"column_end":62},"alias_span":null,"name":"EncodedConfig","value":"","parent":{"krate":0,"index":713}},{"kind":"Use","ref_id":{"krate":0,"index":3504},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":116564,"byte_end":116571,"line_start":45,"line_end":45,"column_start":22,"column_end":29},"alias_span":null,"name":"Iso8601","value":"","parent":{"krate":0,"index":712}},{"kind":"Use","ref_id":{"krate":0,"index":3505},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":116564,"byte_end":116571,"line_start":45,"line_end":45,"column_start":22,"column_end":29},"alias_span":null,"name":"Iso8601","value":"","parent":{"krate":0,"index":712}},{"kind":"Use","ref_id":{"krate":0,"index":3618},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":116594,"byte_end":116601,"line_start":46,"line_end":46,"column_start":22,"column_end":29},"alias_span":null,"name":"Rfc2822","value":"","parent":{"krate":0,"index":712}},{"kind":"Use","ref_id":{"krate":0,"index":3619},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":116594,"byte_end":116601,"line_start":46,"line_end":46,"column_start":22,"column_end":29},"alias_span":null,"name":"Rfc2822","value":"","parent":{"krate":0,"index":712}},{"kind":"Use","ref_id":{"krate":0,"index":3631},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":116624,"byte_end":116631,"line_start":47,"line_end":47,"column_start":22,"column_end":29},"alias_span":null,"name":"Rfc3339","value":"","parent":{"krate":0,"index":712}},{"kind":"Use","ref_id":{"krate":0,"index":3632},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":116624,"byte_end":116631,"line_start":47,"line_end":47,"column_start":22,"column_end":29},"alias_span":null,"name":"Rfc3339","value":"","parent":{"krate":0,"index":712}},{"kind":"Use","ref_id":{"krate":0,"index":870},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/formatting/mod.rs","byte_start":168530,"byte_end":168541,"line_start":9,"line_end":9,"column_start":28,"column_end":39},"alias_span":null,"name":"Formattable","value":"","parent":{"krate":0,"index":814}},{"kind":"Use","ref_id":{"krate":20,"index":846},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/macros.rs","byte_start":209761,"byte_end":209765,"line_start":22,"line_end":22,"column_start":22,"column_end":26},"alias_span":null,"name":"date","value":"","parent":{"krate":0,"index":1204}},{"kind":"Use","ref_id":{"krate":20,"index":850},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/macros.rs","byte_start":210913,"byte_end":210921,"line_start":51,"line_end":51,"column_start":22,"column_end":30},"alias_span":null,"name":"datetime","value":"","parent":{"krate":0,"index":1204}},{"kind":"Use","ref_id":{"krate":20,"index":619},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/macros.rs","byte_start":211924,"byte_end":211942,"line_start":74,"line_end":74,"column_start":22,"column_end":40},"alias_span":null,"name":"format_description","value":"","parent":{"krate":0,"index":1204}},{"kind":"Use","ref_id":{"krate":20,"index":854},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/macros.rs","byte_start":213082,"byte_end":213088,"line_start":97,"line_end":97,"column_start":22,"column_end":28},"alias_span":null,"name":"offset","value":"","parent":{"krate":0,"index":1204}},{"kind":"Use","ref_id":{"krate":20,"index":858},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/macros.rs","byte_start":214428,"byte_end":214432,"line_start":132,"line_end":132,"column_start":22,"column_end":26},"alias_span":null,"name":"time","value":"","parent":{"krate":0,"index":1204}},{"kind":"Use","ref_id":{"krate":0,"index":1855},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/mod.rs","byte_start":264223,"byte_end":264231,"line_start":10,"line_end":10,"column_start":25,"column_end":33},"alias_span":null,"name":"Parsable","value":"","parent":{"krate":0,"index":1433}},{"kind":"Use","ref_id":{"krate":0,"index":3811},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/mod.rs","byte_start":264255,"byte_end":264261,"line_start":11,"line_end":11,"column_start":23,"column_end":29},"alias_span":null,"name":"Parsed","value":"","parent":{"krate":0,"index":1433}},{"kind":"Use","ref_id":{"krate":0,"index":2664},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":10252,"byte_end":10256,"line_start":313,"line_end":313,"column_start":22,"column_end":26},"alias_span":null,"name":"Date","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2712},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":10283,"byte_end":10291,"line_start":314,"line_end":314,"column_start":26,"column_end":34},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2993},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":10315,"byte_end":10320,"line_start":315,"line_end":315,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3675},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":10370,"byte_end":10377,"line_start":317,"line_end":317,"column_start":25,"column_end":32},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3676},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":10370,"byte_end":10377,"line_start":317,"line_end":317,"column_start":25,"column_end":32},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3709},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":10401,"byte_end":10406,"line_start":318,"line_end":318,"column_start":23,"column_end":28},"alias_span":null,"name":"Month","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3760},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":10441,"byte_end":10455,"line_start":319,"line_end":319,"column_start":34,"column_end":48},"alias_span":null,"name":"OffsetDateTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3915},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":10493,"byte_end":10510,"line_start":320,"line_end":320,"column_start":37,"column_end":54},"alias_span":null,"name":"PrimitiveDateTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3964},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":10533,"byte_end":10537,"line_start":321,"line_end":321,"column_start":22,"column_end":26},"alias_span":null,"name":"Time","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3995},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":10566,"byte_end":10575,"line_start":322,"line_end":322,"column_start":28,"column_end":37},"alias_span":null,"name":"UtcOffset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4018},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":10601,"byte_end":10608,"line_start":323,"line_end":323,"column_start":25,"column_end":32},"alias_span":null,"name":"Weekday","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":0,"byte_end":10746,"line_start":1,"line_end":326,"column_start":1,"column_end":53},"name":"","qualname":"::","value":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":144},{"krate":0,"index":326},{"krate":0,"index":530},{"krate":0,"index":596},{"krate":0,"index":814},{"krate":0,"index":1122},{"krate":0,"index":1204},{"krate":0,"index":1220},{"krate":0,"index":1248},{"krate":0,"index":1433},{"krate":0,"index":2328},{"krate":0,"index":2451},{"krate":0,"index":2452},{"krate":0,"index":2542},{"krate":0,"index":2589},{"krate":0,"index":2605},{"krate":0,"index":2632},{"krate":0,"index":2635},{"krate":0,"index":2638},{"krate":0,"index":2641},{"krate":0,"index":2642},{"krate":0,"index":2644},{"krate":0,"index":2647},{"krate":0,"index":2650},{"krate":0,"index":2653},{"krate":0,"index":2656},{"krate":0,"index":2659},{"krate":0,"index":2662}],"decl_id":null,"docs":" # Feature flags","sig":null,"attributes":[{"value":"/ # Feature flags","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":0,"byte_end":19,"line_start":1,"line_end":1,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":20,"byte_end":23,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate exposes a number of features. These can be enabled or disabled as shown","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":24,"byte_end":110,"line_start":3,"line_end":3,"column_start":1,"column_end":87}},{"value":"/ [in Cargo's documentation](https://doc.rust-lang.org/cargo/reference/features.html). Features","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":111,"byte_end":208,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"/ are _disabled_ by default unless otherwise noted.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":209,"byte_end":262,"line_start":5,"line_end":5,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":263,"byte_end":266,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Reliance on a given feature is always indicated alongside the item definition.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":267,"byte_end":349,"line_start":7,"line_end":7,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":350,"byte_end":353,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ - `std` (_enabled by default, implicitly enables `alloc`_)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":354,"byte_end":416,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":417,"byte_end":420,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/   This enables a number of features that depend on the standard library.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":421,"byte_end":497,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":498,"byte_end":501,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ - `alloc` (_enabled by default via `std`_)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":502,"byte_end":548,"line_start":13,"line_end":13,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":549,"byte_end":552,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/   Enables a number of features that require the ability to dynamically allocate memory.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":553,"byte_end":644,"line_start":15,"line_end":15,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":645,"byte_end":648,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ - `macros`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":649,"byte_end":663,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":664,"byte_end":667,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/   Enables macros that provide compile-time verification of values and intuitive syntax.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":668,"byte_end":759,"line_start":19,"line_end":19,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":760,"byte_end":763,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ - `formatting` (_implicitly enables `std`_)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":764,"byte_end":811,"line_start":21,"line_end":21,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":812,"byte_end":815,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/   Enables formatting of most structs.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":816,"byte_end":857,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":858,"byte_end":861,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ - `parsing`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":862,"byte_end":877,"line_start":25,"line_end":25,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":878,"byte_end":881,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/   Enables parsing of most structs.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":882,"byte_end":920,"line_start":27,"line_end":27,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":921,"byte_end":924,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ - `local-offset` (_implicitly enables `std`_)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":925,"byte_end":974,"line_start":29,"line_end":29,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":975,"byte_end":978,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/   This feature enables a number of methods that allow obtaining the system's UTC offset.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":979,"byte_end":1071,"line_start":31,"line_end":31,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":1072,"byte_end":1075,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ - `large-dates`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":1076,"byte_end":1095,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":1096,"byte_end":1099,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/   By default, only years within the ±9999 range (inclusive) are supported. If you need support","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":1100,"byte_end":1199,"line_start":35,"line_end":35,"column_start":1,"column_end":99}},{"value":"/   for years outside this range, consider enabling this feature; the supported range will be","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":1200,"byte_end":1295,"line_start":36,"line_end":36,"column_start":1,"column_end":96}},{"value":"/   increased to ±999,999.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":1296,"byte_end":1325,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":1326,"byte_end":1329,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/   Note that enabling this feature has some costs, as it means forgoing some optimizations.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":1330,"byte_end":1424,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/   Ambiguities may be introduced when parsing that would not otherwise exist.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":1425,"byte_end":1505,"line_start":40,"line_end":40,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":1506,"byte_end":1509,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ - `serde`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":1510,"byte_end":1523,"line_start":42,"line_end":42,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":1524,"byte_end":1527,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/   Enables [serde](https://docs.rs/serde) support for all types except [`Instant`].","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":1528,"byte_end":1614,"line_start":44,"line_end":44,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":1615,"byte_end":1618,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ - `serde-human-readable` (_implicitly enables `serde`, `formatting`, and `parsing`_)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":1619,"byte_end":1707,"line_start":46,"line_end":46,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":1708,"byte_end":1711,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/   Allows serde representations to use a human-readable format. This is determined by the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":1712,"byte_end":1804,"line_start":48,"line_end":48,"column_start":1,"column_end":93}},{"value":"/   serializer, not the user. If this feature is not enabled or if the serializer requests a","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":1805,"byte_end":1899,"line_start":49,"line_end":49,"column_start":1,"column_end":95}},{"value":"/   non-human-readable format, a format optimized for binary representation will be used.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":1900,"byte_end":1991,"line_start":50,"line_end":50,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":1992,"byte_end":1995,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/   Libraries should never enable this feature, as the decision of what format to use should be up","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":1996,"byte_end":2096,"line_start":52,"line_end":52,"column_start":1,"column_end":101}},{"value":"/   to the user.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":2097,"byte_end":2115,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":2116,"byte_end":2119,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ - `serde-well-known` (_implicitly enables `serde/alloc`, `formatting`, and `parsing`_)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":2120,"byte_end":2210,"line_start":55,"line_end":55,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":2211,"byte_end":2214,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/   Enables support for serializing and deserializing well-known formats using serde's","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":2215,"byte_end":2303,"line_start":57,"line_end":57,"column_start":1,"column_end":89}},{"value":"/   [`#[with]` attribute](https://serde.rs/field-attrs.html#with).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":2304,"byte_end":2372,"line_start":58,"line_end":58,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":2373,"byte_end":2376,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ - `rand`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":2377,"byte_end":2389,"line_start":60,"line_end":60,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":2390,"byte_end":2393,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/   Enables [rand](https://docs.rs/rand) support for all types.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":2394,"byte_end":2459,"line_start":62,"line_end":62,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":2460,"byte_end":2463,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ - `quickcheck` (_implicitly enables `alloc`_)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":2464,"byte_end":2513,"line_start":64,"line_end":64,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":2514,"byte_end":2517,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/   Enables [quickcheck](https://docs.rs/quickcheck) support for all types except [`Instant`].","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":2518,"byte_end":2614,"line_start":66,"line_end":66,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":2615,"byte_end":2618,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ One pseudo-feature flag that is only available to end users is the `unsound_local_offset` cfg.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":2619,"byte_end":2717,"line_start":68,"line_end":68,"column_start":1,"column_end":99}},{"value":"/ As the name indicates, using the feature is unsound, and [may cause unexpected segmentation","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":2718,"byte_end":2813,"line_start":69,"line_end":69,"column_start":1,"column_end":96}},{"value":"/ faults](https://github.com/time-rs/time/issues/293). Unlike other flags, this is deliberately","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":2814,"byte_end":2911,"line_start":70,"line_end":70,"column_start":1,"column_end":98}},{"value":"/ only available to end users; this is to ensure that a user doesn't have unsound behavior without","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":2912,"byte_end":3012,"line_start":71,"line_end":71,"column_start":1,"column_end":101}},{"value":"/ knowing it. To enable this behavior, you must use `RUSTFLAGS=\"--cfg unsound_local_offset\" cargo","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":3013,"byte_end":3112,"line_start":72,"line_end":72,"column_start":1,"column_end":100}},{"value":"/ build` or similar. Note: This flag is _not tested anywhere_, including in the regular test of","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":3113,"byte_end":3210,"line_start":73,"line_end":73,"column_start":1,"column_end":98}},{"value":"/ the powerset of all feature flags. Use at your own risk. Without this flag, any method that","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":3211,"byte_end":3306,"line_start":74,"line_end":74,"column_start":1,"column_end":96}},{"value":"/ requires the local offset will return the `Err` variant when otherwise unsound.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":3307,"byte_end":3390,"line_start":75,"line_end":75,"column_start":1,"column_end":84}},{"value":"deny(anonymous_parameters, clippy :: all, const_err,\nillegal_floating_point_literal_pattern, late_bound_lifetime_arguments,\npath_statements, patterns_in_fns_without_body, rust_2018_idioms,\ntrivial_casts, trivial_numeric_casts, unreachable_pub, unsafe_code,\nunsafe_op_in_unsafe_fn, unused_extern_crates)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":3687,"byte_end":4049,"line_start":84,"line_end":99,"column_start":1,"column_end":3}},{"value":"warn(clippy :: dbg_macro, clippy :: decimal_literal_representation, clippy\n:: get_unwrap, clippy :: missing_docs_in_private_items, clippy :: nursery,\nclippy :: print_stdout, clippy :: todo, clippy :: unimplemented, clippy ::\nunnested_or_patterns, clippy :: unwrap_in_result, clippy :: unwrap_used,\nclippy :: use_debug, deprecated_in_future, missing_copy_implementations,\nmissing_debug_implementations, unused_qualifications,\nvariant_size_differences)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":4050,"byte_end":4550,"line_start":100,"line_end":118,"column_start":1,"column_end":3}},{"value":"allow(clippy :: redundant_pub_crate)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":4551,"byte_end":4589,"line_start":119,"line_end":119,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":2664},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":11838,"byte_end":11842,"line_start":35,"line_end":35,"column_start":12,"column_end":16},"name":"Date","qualname":"::date::Date","value":"Date {  }","parent":null,"children":[{"krate":0,"index":2665}],"decl_id":null,"docs":" Date in the proleptic Gregorian calendar.","sig":null,"attributes":[{"value":"/ Date in the proleptic Gregorian calendar.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":11469,"byte_end":11514,"line_start":29,"line_end":29,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":11515,"byte_end":11518,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ By default, years between ±9999 inclusive are representable. This can be expanded to ±999,999","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":11519,"byte_end":11618,"line_start":31,"line_end":31,"column_start":1,"column_end":98}},{"value":"/ inclusive by enabling the `large-dates` crate feature. Doing so has performance implications","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":11619,"byte_end":11715,"line_start":32,"line_end":32,"column_start":1,"column_end":97}},{"value":"/ and introduces some ambiguities when parsing.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":11716,"byte_end":11765,"line_start":33,"line_end":33,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":12196,"byte_end":12199,"line_start":45,"line_end":45,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Date as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> Result<(), fmt::Error>","parent":{"krate":2,"index":9902},"children":[],"decl_id":{"krate":2,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":74},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":12556,"byte_end":12559,"line_start":57,"line_end":57,"column_start":15,"column_end":18},"name":"MIN","qualname":"::date::Date::MIN","value":"Self","parent":{"krate":0,"index":73},"children":[],"decl_id":null,"docs":" The minimum valid `Date`.","sig":null,"attributes":[{"value":"/ The minimum valid `Date`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":12429,"byte_end":12458,"line_start":54,"line_end":54,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":12463,"byte_end":12466,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ The value of this may vary depending on the feature flags enabled.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":12471,"byte_end":12541,"line_start":56,"line_end":56,"column_start":5,"column_end":75}}]},{"kind":"Const","id":{"krate":0,"index":75},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":12750,"byte_end":12753,"line_start":62,"line_end":62,"column_start":15,"column_end":18},"name":"MAX","qualname":"::date::Date::MAX","value":"Self","parent":{"krate":0,"index":73},"children":[],"decl_id":null,"docs":" The maximum valid `Date`.","sig":null,"attributes":[{"value":"/ The maximum valid `Date`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":12623,"byte_end":12652,"line_start":59,"line_end":59,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":12657,"byte_end":12660,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ The value of this may vary depending on the feature flags enabled.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":12665,"byte_end":12735,"line_start":61,"line_end":61,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":13023,"byte_end":13052,"line_start":68,"line_end":68,"column_start":18,"column_end":47},"name":"__from_ordinal_date_unchecked","qualname":"<Date>::__from_ordinal_date_unchecked","value":"const fn __from_ordinal_date_unchecked(i32, u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a `Date` from the year and ordinal values, the validity of which must be\n guaranteed by the caller.\n","sig":null,"attributes":[{"value":"/ Construct a `Date` from the year and ordinal values, the validity of which must be","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":12866,"byte_end":12952,"line_start":65,"line_end":65,"column_start":5,"column_end":91}},{"value":"/ guaranteed by the caller.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":12957,"byte_end":12986,"line_start":66,"line_end":66,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":13828,"byte_end":13846,"line_start":91,"line_end":91,"column_start":18,"column_end":36},"name":"from_calendar_date","qualname":"<Date>::from_calendar_date","value":"const fn from_calendar_date(i32, Month, u8)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Date` from the year, month, and day.","sig":null,"attributes":[{"value":"/ Attempt to create a `Date` from the year, month, and day.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":13347,"byte_end":13408,"line_start":79,"line_end":79,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":13413,"byte_end":13416,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":13421,"byte_end":13432,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, Month};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":13437,"byte_end":13467,"line_start":82,"line_end":82,"column_start":5,"column_end":35}},{"value":"/ assert!(Date::from_calendar_date(2019, Month::January, 1).is_ok());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":13472,"byte_end":13543,"line_start":83,"line_end":83,"column_start":5,"column_end":76}},{"value":"/ assert!(Date::from_calendar_date(2019, Month::December, 31).is_ok());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":13548,"byte_end":13621,"line_start":84,"line_end":84,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":13626,"byte_end":13633,"line_start":85,"line_end":85,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":13638,"byte_end":13641,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":13646,"byte_end":13657,"line_start":87,"line_end":87,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, Month};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":13662,"byte_end":13692,"line_start":88,"line_end":88,"column_start":5,"column_end":35}},{"value":"/ assert!(Date::from_calendar_date(2019, Month::February, 29).is_err()); // 2019 isn't a leap year.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":13697,"byte_end":13798,"line_start":89,"line_end":89,"column_start":5,"column_end":106}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":13803,"byte_end":13810,"line_start":90,"line_end":90,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":15037,"byte_end":15054,"line_start":124,"line_end":124,"column_start":18,"column_end":35},"name":"from_ordinal_date","qualname":"<Date>::from_ordinal_date","value":"const fn from_ordinal_date(i32, u16) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Date` from the year and ordinal day number.","sig":null,"attributes":[{"value":"/ Attempt to create a `Date` from the year and ordinal day number.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":14618,"byte_end":14686,"line_start":112,"line_end":112,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":14691,"byte_end":14694,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":14699,"byte_end":14710,"line_start":114,"line_end":114,"column_start":5,"column_end":16}},{"value":"/ # use time::Date;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":14715,"byte_end":14736,"line_start":115,"line_end":115,"column_start":5,"column_end":26}},{"value":"/ assert!(Date::from_ordinal_date(2019, 1).is_ok());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":14741,"byte_end":14795,"line_start":116,"line_end":116,"column_start":5,"column_end":59}},{"value":"/ assert!(Date::from_ordinal_date(2019, 365).is_ok());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":14800,"byte_end":14856,"line_start":117,"line_end":117,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":14861,"byte_end":14868,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":14873,"byte_end":14876,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":14881,"byte_end":14892,"line_start":120,"line_end":120,"column_start":5,"column_end":16}},{"value":"/ # use time::Date;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":14897,"byte_end":14918,"line_start":121,"line_end":121,"column_start":5,"column_end":26}},{"value":"/ assert!(Date::from_ordinal_date(2019, 366).is_err()); // 2019 isn't a leap year.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":14923,"byte_end":15007,"line_start":122,"line_end":122,"column_start":5,"column_end":89}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":15012,"byte_end":15019,"line_start":123,"line_end":123,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":15884,"byte_end":15902,"line_start":143,"line_end":143,"column_start":18,"column_end":36},"name":"from_iso_week_date","qualname":"<Date>::from_iso_week_date","value":"const fn from_iso_week_date(i32, u8, Weekday)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Date` from the ISO year, week, and weekday.","sig":null,"attributes":[{"value":"/ Attempt to create a `Date` from the ISO year, week, and weekday.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":15339,"byte_end":15407,"line_start":130,"line_end":130,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":15412,"byte_end":15415,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":15420,"byte_end":15431,"line_start":132,"line_end":132,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, Weekday::*};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":15436,"byte_end":15471,"line_start":133,"line_end":133,"column_start":5,"column_end":40}},{"value":"/ assert!(Date::from_iso_week_date(2019, 1, Monday).is_ok());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":15476,"byte_end":15539,"line_start":134,"line_end":134,"column_start":5,"column_end":68}},{"value":"/ assert!(Date::from_iso_week_date(2019, 1, Tuesday).is_ok());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":15544,"byte_end":15608,"line_start":135,"line_end":135,"column_start":5,"column_end":69}},{"value":"/ assert!(Date::from_iso_week_date(2020, 53, Friday).is_ok());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":15613,"byte_end":15677,"line_start":136,"line_end":136,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":15682,"byte_end":15689,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":15694,"byte_end":15697,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":15702,"byte_end":15713,"line_start":139,"line_end":139,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, Weekday::*};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":15718,"byte_end":15753,"line_start":140,"line_end":140,"column_start":5,"column_end":40}},{"value":"/ assert!(Date::from_iso_week_date(2019, 53, Monday).is_err()); // 2019 doesn't have 53 weeks.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":15758,"byte_end":15854,"line_start":141,"line_end":141,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":15859,"byte_end":15866,"line_start":142,"line_end":142,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":17777,"byte_end":17792,"line_start":190,"line_end":190,"column_start":18,"column_end":33},"name":"from_julian_day","qualname":"<Date>::from_julian_day","value":"const fn from_julian_day(i32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Date` from the Julian day.","sig":null,"attributes":[{"value":"/ Create a `Date` from the Julian day.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":17077,"byte_end":17117,"line_start":177,"line_end":177,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":17122,"byte_end":17125,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ The algorithm to perform this conversion is derived from one provided by Peter Baum; it is","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":17130,"byte_end":17224,"line_start":179,"line_end":179,"column_start":5,"column_end":99}},{"value":"/ freely available [here](https://www.researchgate.net/publication/316558298_Date_Algorithms).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":17229,"byte_end":17325,"line_start":180,"line_end":180,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":17330,"byte_end":17333,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":17338,"byte_end":17349,"line_start":182,"line_end":182,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, macros::date};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":17354,"byte_end":17391,"line_start":183,"line_end":183,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Date::from_julian_day(0), Ok(date!(-4713 - 11 - 24)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":17396,"byte_end":17465,"line_start":184,"line_end":184,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(Date::from_julian_day(2_451_545), Ok(date!(2000 - 01 - 01)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":17470,"byte_end":17546,"line_start":185,"line_end":185,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(Date::from_julian_day(2_458_485), Ok(date!(2019 - 01 - 01)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":17551,"byte_end":17627,"line_start":186,"line_end":186,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(Date::from_julian_day(2_458_849), Ok(date!(2019 - 12 - 31)));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":17632,"byte_end":17708,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":17713,"byte_end":17720,"line_start":188,"line_end":188,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":19913,"byte_end":19917,"line_start":246,"line_end":246,"column_start":18,"column_end":22},"name":"year","qualname":"<Date>::year","value":"const fn year(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the year of the date.","sig":null,"attributes":[{"value":"/ Get the year of the date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":19628,"byte_end":19657,"line_start":238,"line_end":238,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":19662,"byte_end":19665,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":19670,"byte_end":19681,"line_start":240,"line_end":240,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":19686,"byte_end":19715,"line_start":241,"line_end":241,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).year(), 2019);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":19720,"byte_end":19771,"line_start":242,"line_end":242,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).year(), 2019);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":19776,"byte_end":19827,"line_start":243,"line_end":243,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(date!(2020 - 01 - 01).year(), 2020);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":19832,"byte_end":19883,"line_start":244,"line_end":244,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":19888,"byte_end":19895,"line_start":245,"line_end":245,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":20218,"byte_end":20223,"line_start":257,"line_end":257,"column_start":18,"column_end":23},"name":"month","qualname":"<Date>::month","value":"const fn month(Self) -> Month","parent":null,"children":[],"decl_id":null,"docs":" Get the month.","sig":null,"attributes":[{"value":"/ Get the month.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":19968,"byte_end":19986,"line_start":250,"line_end":250,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":19991,"byte_end":19994,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":19999,"byte_end":20010,"line_start":252,"line_end":252,"column_start":5,"column_end":16}},{"value":"/ # use time::{macros::date, Month};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":20015,"byte_end":20053,"line_start":253,"line_end":253,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).month(), Month::January);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":20058,"byte_end":20120,"line_start":254,"line_end":254,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).month(), Month::December);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":20125,"byte_end":20188,"line_start":255,"line_end":255,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":20193,"byte_end":20200,"line_start":256,"line_end":256,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":20574,"byte_end":20577,"line_start":270,"line_end":270,"column_start":18,"column_end":21},"name":"day","qualname":"<Date>::day","value":"const fn day(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the month.","sig":null,"attributes":[{"value":"/ Get the day of the month.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":20279,"byte_end":20308,"line_start":261,"line_end":261,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":20313,"byte_end":20316,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=31`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":20321,"byte_end":20381,"line_start":263,"line_end":263,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":20386,"byte_end":20389,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":20394,"byte_end":20405,"line_start":265,"line_end":265,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":20410,"byte_end":20439,"line_start":266,"line_end":266,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).day(), 1);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":20444,"byte_end":20491,"line_start":267,"line_end":267,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).day(), 31);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":20496,"byte_end":20544,"line_start":268,"line_end":268,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":20549,"byte_end":20556,"line_start":269,"line_end":269,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":22822,"byte_end":22829,"line_start":324,"line_end":324,"column_start":18,"column_end":25},"name":"ordinal","qualname":"<Date>::ordinal","value":"const fn ordinal(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the year.","sig":null,"attributes":[{"value":"/ Get the day of the year.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":22489,"byte_end":22517,"line_start":315,"line_end":315,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":22522,"byte_end":22525,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=366` (`1..=365` for common years).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":22530,"byte_end":22620,"line_start":317,"line_end":317,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":22625,"byte_end":22628,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":22633,"byte_end":22644,"line_start":319,"line_end":319,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":22649,"byte_end":22678,"line_start":320,"line_end":320,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).ordinal(), 1);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":22683,"byte_end":22734,"line_start":321,"line_end":321,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).ordinal(), 365);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":22739,"byte_end":22792,"line_start":322,"line_end":322,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":22797,"byte_end":22804,"line_start":323,"line_end":323,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":23782,"byte_end":23790,"line_start":351,"line_end":351,"column_start":18,"column_end":26},"name":"iso_week","qualname":"<Date>::iso_week","value":"const fn iso_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO week number.","sig":null,"attributes":[{"value":"/ Get the ISO week number.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":23305,"byte_end":23333,"line_start":339,"line_end":339,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":23338,"byte_end":23341,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=53`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":23346,"byte_end":23406,"line_start":341,"line_end":341,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":23411,"byte_end":23414,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":23419,"byte_end":23430,"line_start":343,"line_end":343,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":23435,"byte_end":23464,"line_start":344,"line_end":344,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).iso_week(), 1);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":23469,"byte_end":23521,"line_start":345,"line_end":345,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(date!(2019 - 10 - 04).iso_week(), 40);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":23526,"byte_end":23579,"line_start":346,"line_end":346,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(date!(2020 - 01 - 01).iso_week(), 1);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":23584,"byte_end":23636,"line_start":347,"line_end":347,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(date!(2020 - 12 - 31).iso_week(), 53);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":23641,"byte_end":23694,"line_start":348,"line_end":348,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(date!(2021 - 01 - 01).iso_week(), 53);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":23699,"byte_end":23752,"line_start":349,"line_end":349,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":23757,"byte_end":23764,"line_start":350,"line_end":350,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":24337,"byte_end":24354,"line_start":366,"line_end":366,"column_start":18,"column_end":35},"name":"sunday_based_week","qualname":"<Date>::sunday_based_week","value":"const fn sunday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Sunday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Sunday.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":23847,"byte_end":23911,"line_start":355,"line_end":355,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":23916,"byte_end":23919,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":23924,"byte_end":23984,"line_start":357,"line_end":357,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":23989,"byte_end":23992,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":23997,"byte_end":24008,"line_start":359,"line_end":359,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":24013,"byte_end":24042,"line_start":360,"line_end":360,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).sunday_based_week(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":24047,"byte_end":24108,"line_start":361,"line_end":361,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(date!(2020 - 01 - 01).sunday_based_week(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":24113,"byte_end":24174,"line_start":362,"line_end":362,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(date!(2020 - 12 - 31).sunday_based_week(), 52);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":24179,"byte_end":24241,"line_start":363,"line_end":363,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(date!(2021 - 01 - 01).sunday_based_week(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":24246,"byte_end":24307,"line_start":364,"line_end":364,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":24312,"byte_end":24319,"line_start":365,"line_end":365,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":24967,"byte_end":24984,"line_start":381,"line_end":381,"column_start":18,"column_end":35},"name":"monday_based_week","qualname":"<Date>::monday_based_week","value":"const fn monday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Monday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Monday.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":24477,"byte_end":24541,"line_start":370,"line_end":370,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":24546,"byte_end":24549,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":24554,"byte_end":24614,"line_start":372,"line_end":372,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":24619,"byte_end":24622,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":24627,"byte_end":24638,"line_start":374,"line_end":374,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":24643,"byte_end":24672,"line_start":375,"line_end":375,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).monday_based_week(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":24677,"byte_end":24738,"line_start":376,"line_end":376,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(date!(2020 - 01 - 01).monday_based_week(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":24743,"byte_end":24804,"line_start":377,"line_end":377,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(date!(2020 - 12 - 31).monday_based_week(), 52);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":24809,"byte_end":24871,"line_start":378,"line_end":378,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(date!(2021 - 01 - 01).monday_based_week(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":24876,"byte_end":24937,"line_start":379,"line_end":379,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":24942,"byte_end":24949,"line_start":380,"line_end":380,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":25360,"byte_end":25376,"line_start":394,"line_end":394,"column_start":18,"column_end":34},"name":"to_calendar_date","qualname":"<Date>::to_calendar_date","value":"const fn to_calendar_date(Self) -> (i32, Month, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the year, month, and day.","sig":null,"attributes":[{"value":"/ Get the year, month, and day.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":25107,"byte_end":25140,"line_start":385,"line_end":385,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":25145,"byte_end":25148,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":25153,"byte_end":25164,"line_start":387,"line_end":387,"column_start":5,"column_end":16}},{"value":"/ # use time::{macros::date, Month};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":25169,"byte_end":25207,"line_start":388,"line_end":388,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":25212,"byte_end":25227,"line_start":389,"line_end":389,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 01 - 01).to_calendar_date(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":25232,"byte_end":25281,"line_start":390,"line_end":390,"column_start":5,"column_end":54}},{"value":"/     (2019, Month::January, 1)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":25286,"byte_end":25319,"line_start":391,"line_end":391,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":25324,"byte_end":25330,"line_start":392,"line_end":392,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":25335,"byte_end":25342,"line_start":393,"line_end":393,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":25695,"byte_end":25710,"line_start":405,"line_end":405,"column_start":18,"column_end":33},"name":"to_ordinal_date","qualname":"<Date>::to_ordinal_date","value":"const fn to_ordinal_date(Self) -> (i32, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the year and ordinal day number.","sig":null,"attributes":[{"value":"/ Get the year and ordinal day number.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":25495,"byte_end":25535,"line_start":399,"line_end":399,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":25540,"byte_end":25543,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":25548,"byte_end":25559,"line_start":401,"line_end":401,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":25564,"byte_end":25593,"line_start":402,"line_end":402,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).to_ordinal_date(), (2019, 1));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":25598,"byte_end":25665,"line_start":403,"line_end":403,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":25670,"byte_end":25677,"line_start":404,"line_end":404,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":26418,"byte_end":26434,"line_start":425,"line_end":425,"column_start":18,"column_end":34},"name":"to_iso_week_date","qualname":"<Date>::to_iso_week_date","value":"const fn to_iso_week_date(Self) -> (i32, u8, Weekday)","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO 8601 year, week number, and weekday.","sig":null,"attributes":[{"value":"/ Get the ISO 8601 year, week number, and weekday.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":25782,"byte_end":25834,"line_start":409,"line_end":409,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":25839,"byte_end":25842,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":25847,"byte_end":25858,"line_start":411,"line_end":411,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::date};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":25863,"byte_end":25906,"line_start":412,"line_end":412,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).to_iso_week_date(), (2019, 1, Tuesday));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":25911,"byte_end":25988,"line_start":413,"line_end":413,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(date!(2019 - 10 - 04).to_iso_week_date(), (2019, 40, Friday));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":25993,"byte_end":26070,"line_start":414,"line_end":414,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":26075,"byte_end":26090,"line_start":415,"line_end":415,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 01 - 01).to_iso_week_date(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":26095,"byte_end":26144,"line_start":416,"line_end":416,"column_start":5,"column_end":54}},{"value":"/     (2020, 1, Wednesday)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":26149,"byte_end":26177,"line_start":417,"line_end":417,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":26182,"byte_end":26188,"line_start":418,"line_end":418,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":26193,"byte_end":26208,"line_start":419,"line_end":419,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).to_iso_week_date(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":26213,"byte_end":26262,"line_start":420,"line_end":420,"column_start":5,"column_end":54}},{"value":"/     (2020, 53, Thursday)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":26267,"byte_end":26295,"line_start":421,"line_end":421,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":26300,"byte_end":26306,"line_start":422,"line_end":422,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(date!(2021 - 01 - 01).to_iso_week_date(), (2020, 53, Friday));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":26311,"byte_end":26388,"line_start":423,"line_end":423,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":26393,"byte_end":26400,"line_start":424,"line_end":424,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":27706,"byte_end":27713,"line_start":453,"line_end":453,"column_start":18,"column_end":25},"name":"weekday","qualname":"<Date>::weekday","value":"const fn weekday(Self) -> Weekday","parent":null,"children":[],"decl_id":null,"docs":" Get the weekday.","sig":null,"attributes":[{"value":"/ Get the weekday.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":26843,"byte_end":26863,"line_start":436,"line_end":436,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":26868,"byte_end":26871,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":26876,"byte_end":26887,"line_start":438,"line_end":438,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::date};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":26892,"byte_end":26935,"line_start":439,"line_end":439,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).weekday(), Tuesday);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":26940,"byte_end":26997,"line_start":440,"line_end":440,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(date!(2019 - 02 - 01).weekday(), Friday);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":27002,"byte_end":27058,"line_start":441,"line_end":441,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 03 - 01).weekday(), Friday);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":27063,"byte_end":27119,"line_start":442,"line_end":442,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 04 - 01).weekday(), Monday);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":27124,"byte_end":27180,"line_start":443,"line_end":443,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 05 - 01).weekday(), Wednesday);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":27185,"byte_end":27244,"line_start":444,"line_end":444,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(date!(2019 - 06 - 01).weekday(), Saturday);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":27249,"byte_end":27307,"line_start":445,"line_end":445,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(date!(2019 - 07 - 01).weekday(), Monday);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":27312,"byte_end":27368,"line_start":446,"line_end":446,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 08 - 01).weekday(), Thursday);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":27373,"byte_end":27431,"line_start":447,"line_end":447,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(date!(2019 - 09 - 01).weekday(), Sunday);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":27436,"byte_end":27492,"line_start":448,"line_end":448,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 10 - 01).weekday(), Tuesday);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":27497,"byte_end":27554,"line_start":449,"line_end":449,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(date!(2019 - 11 - 01).weekday(), Friday);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":27559,"byte_end":27615,"line_start":450,"line_end":450,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 12 - 01).weekday(), Sunday);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":27620,"byte_end":27676,"line_start":451,"line_end":451,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":27681,"byte_end":27688,"line_start":452,"line_end":452,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":28671,"byte_end":28679,"line_start":486,"line_end":486,"column_start":18,"column_end":26},"name":"next_day","qualname":"<Date>::next_day","value":"const fn next_day(Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Get the next calendar date.","sig":null,"attributes":[{"value":"/ Get the next calendar date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":28145,"byte_end":28176,"line_start":468,"line_end":468,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":28181,"byte_end":28184,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":28189,"byte_end":28200,"line_start":470,"line_end":470,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, macros::date};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":28205,"byte_end":28242,"line_start":471,"line_end":471,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":28247,"byte_end":28262,"line_start":472,"line_end":472,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 01 - 01).next_day(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":28267,"byte_end":28308,"line_start":473,"line_end":473,"column_start":5,"column_end":46}},{"value":"/     Some(date!(2019 - 01 - 02))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":28313,"byte_end":28348,"line_start":474,"line_end":474,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":28353,"byte_end":28359,"line_start":475,"line_end":475,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":28364,"byte_end":28379,"line_start":476,"line_end":476,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 01 - 31).next_day(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":28384,"byte_end":28425,"line_start":477,"line_end":477,"column_start":5,"column_end":46}},{"value":"/     Some(date!(2019 - 02 - 01))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":28430,"byte_end":28465,"line_start":478,"line_end":478,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":28470,"byte_end":28476,"line_start":479,"line_end":479,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":28481,"byte_end":28496,"line_start":480,"line_end":480,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 12 - 31).next_day(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":28501,"byte_end":28542,"line_start":481,"line_end":481,"column_start":5,"column_end":46}},{"value":"/     Some(date!(2020 - 01 - 01))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":28547,"byte_end":28582,"line_start":482,"line_end":482,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":28587,"byte_end":28593,"line_start":483,"line_end":483,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(Date::MAX.next_day(), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":28598,"byte_end":28641,"line_start":484,"line_end":484,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":28646,"byte_end":28653,"line_start":485,"line_end":485,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":29639,"byte_end":29651,"line_start":518,"line_end":518,"column_start":18,"column_end":30},"name":"previous_day","qualname":"<Date>::previous_day","value":"const fn previous_day(Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Get the previous calendar date.","sig":null,"attributes":[{"value":"/ Get the previous calendar date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":29093,"byte_end":29128,"line_start":500,"line_end":500,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":29133,"byte_end":29136,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":29141,"byte_end":29152,"line_start":502,"line_end":502,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, macros::date};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":29157,"byte_end":29194,"line_start":503,"line_end":503,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":29199,"byte_end":29214,"line_start":504,"line_end":504,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 01 - 02).previous_day(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":29219,"byte_end":29264,"line_start":505,"line_end":505,"column_start":5,"column_end":50}},{"value":"/     Some(date!(2019 - 01 - 01))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":29269,"byte_end":29304,"line_start":506,"line_end":506,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":29309,"byte_end":29315,"line_start":507,"line_end":507,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":29320,"byte_end":29335,"line_start":508,"line_end":508,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 02 - 01).previous_day(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":29340,"byte_end":29385,"line_start":509,"line_end":509,"column_start":5,"column_end":50}},{"value":"/     Some(date!(2019 - 01 - 31))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":29390,"byte_end":29425,"line_start":510,"line_end":510,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":29430,"byte_end":29436,"line_start":511,"line_end":511,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":29441,"byte_end":29456,"line_start":512,"line_end":512,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 01 - 01).previous_day(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":29461,"byte_end":29506,"line_start":513,"line_end":513,"column_start":5,"column_end":50}},{"value":"/     Some(date!(2019 - 12 - 31))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":29511,"byte_end":29546,"line_start":514,"line_end":514,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":29551,"byte_end":29557,"line_start":515,"line_end":515,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(Date::MIN.previous_day(), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":29562,"byte_end":29609,"line_start":516,"line_end":516,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":29614,"byte_end":29621,"line_start":517,"line_end":517,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":30646,"byte_end":30659,"line_start":545,"line_end":545,"column_start":18,"column_end":31},"name":"to_julian_day","qualname":"<Date>::to_julian_day","value":"const fn to_julian_day(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the Julian day for the date.","sig":null,"attributes":[{"value":"/ Get the Julian day for the date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":30041,"byte_end":30077,"line_start":533,"line_end":533,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":30082,"byte_end":30085,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ The algorithm to perform this conversion is derived from one provided by Peter Baum; it is","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":30090,"byte_end":30184,"line_start":535,"line_end":535,"column_start":5,"column_end":99}},{"value":"/ freely available [here](https://www.researchgate.net/publication/316558298_Date_Algorithms).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":30189,"byte_end":30285,"line_start":536,"line_end":536,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":30290,"byte_end":30293,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":30298,"byte_end":30309,"line_start":538,"line_end":538,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":30314,"byte_end":30343,"line_start":539,"line_end":539,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(-4713 - 11 - 24).to_julian_day(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":30348,"byte_end":30406,"line_start":540,"line_end":540,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(date!(2000 - 01 - 01).to_julian_day(), 2_451_545);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":30411,"byte_end":30476,"line_start":541,"line_end":541,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).to_julian_day(), 2_458_485);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":30481,"byte_end":30546,"line_start":542,"line_end":542,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).to_julian_day(), 2_458_849);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":30551,"byte_end":30616,"line_start":543,"line_end":543,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":30621,"byte_end":30628,"line_start":544,"line_end":544,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":32002,"byte_end":32013,"line_start":585,"line_end":585,"column_start":18,"column_end":29},"name":"checked_add","qualname":"<Date>::checked_add","value":"const fn checked_add(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, returning `None` if an overflow occurred.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":30962,"byte_end":31035,"line_start":556,"line_end":556,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":31040,"byte_end":31043,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":31048,"byte_end":31059,"line_start":558,"line_end":558,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, ext::NumericalDuration, macros::date};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":31064,"byte_end":31125,"line_start":559,"line_end":559,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::MAX.checked_add(1.days()), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":31130,"byte_end":31184,"line_start":560,"line_end":560,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(Date::MIN.checked_add((-2).days()), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":31189,"byte_end":31246,"line_start":561,"line_end":561,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":31251,"byte_end":31266,"line_start":562,"line_end":562,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_add(2.days()),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":31271,"byte_end":31323,"line_start":563,"line_end":563,"column_start":5,"column_end":57}},{"value":"/     Some(date!(2021 - 01 - 02))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":31328,"byte_end":31363,"line_start":564,"line_end":564,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":31368,"byte_end":31374,"line_start":565,"line_end":565,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":31379,"byte_end":31386,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":31391,"byte_end":31394,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":31399,"byte_end":31409,"line_start":568,"line_end":568,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":31414,"byte_end":31417,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This function only takes whole days into account.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":31422,"byte_end":31475,"line_start":570,"line_end":570,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":31480,"byte_end":31483,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":31488,"byte_end":31499,"line_start":572,"line_end":572,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, ext::NumericalDuration, macros::date};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":31504,"byte_end":31565,"line_start":573,"line_end":573,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::MAX.checked_add(23.hours()), Some(Date::MAX));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":31570,"byte_end":31637,"line_start":574,"line_end":574,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(Date::MIN.checked_add((-23).hours()), Some(Date::MIN));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":31642,"byte_end":31712,"line_start":575,"line_end":575,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":31717,"byte_end":31732,"line_start":576,"line_end":576,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_add(23.hours()),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":31737,"byte_end":31791,"line_start":577,"line_end":577,"column_start":5,"column_end":59}},{"value":"/     Some(date!(2020 - 12 - 31))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":31796,"byte_end":31831,"line_start":578,"line_end":578,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":31836,"byte_end":31842,"line_start":579,"line_end":579,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":31847,"byte_end":31862,"line_start":580,"line_end":580,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_add(47.hours()),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":31867,"byte_end":31921,"line_start":581,"line_end":581,"column_start":5,"column_end":59}},{"value":"/     Some(date!(2021 - 01 - 01))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":31926,"byte_end":31961,"line_start":582,"line_end":582,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":31966,"byte_end":31972,"line_start":583,"line_end":583,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":31977,"byte_end":31984,"line_start":584,"line_end":584,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":33480,"byte_end":33491,"line_start":628,"line_end":628,"column_start":18,"column_end":29},"name":"checked_sub","qualname":"<Date>::checked_sub","value":"const fn checked_sub(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, returning `None` if an overflow occurred.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":32448,"byte_end":32521,"line_start":599,"line_end":599,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":32526,"byte_end":32529,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":32534,"byte_end":32541,"line_start":601,"line_end":601,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration, macros::date};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":32546,"byte_end":32607,"line_start":602,"line_end":602,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::MAX.checked_sub((-2).days()), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":32612,"byte_end":32669,"line_start":603,"line_end":603,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(Date::MIN.checked_sub(1.days()), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":32674,"byte_end":32728,"line_start":604,"line_end":604,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":32733,"byte_end":32748,"line_start":605,"line_end":605,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_sub(2.days()),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":32753,"byte_end":32805,"line_start":606,"line_end":606,"column_start":5,"column_end":57}},{"value":"/     Some(date!(2020 - 12 - 29))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":32810,"byte_end":32845,"line_start":607,"line_end":607,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":32850,"byte_end":32856,"line_start":608,"line_end":608,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":32861,"byte_end":32868,"line_start":609,"line_end":609,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":32873,"byte_end":32876,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":32881,"byte_end":32891,"line_start":611,"line_end":611,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":32896,"byte_end":32899,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ This function only takes whole days into account.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":32904,"byte_end":32957,"line_start":613,"line_end":613,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":32962,"byte_end":32965,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":32970,"byte_end":32977,"line_start":615,"line_end":615,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration, macros::date};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":32982,"byte_end":33043,"line_start":616,"line_end":616,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::MAX.checked_sub((-23).hours()), Some(Date::MAX));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":33048,"byte_end":33118,"line_start":617,"line_end":617,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(Date::MIN.checked_sub(23.hours()), Some(Date::MIN));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":33123,"byte_end":33190,"line_start":618,"line_end":618,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":33195,"byte_end":33210,"line_start":619,"line_end":619,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_sub(23.hours()),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":33215,"byte_end":33269,"line_start":620,"line_end":620,"column_start":5,"column_end":59}},{"value":"/     Some(date!(2020 - 12 - 31))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":33274,"byte_end":33309,"line_start":621,"line_end":621,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":33314,"byte_end":33320,"line_start":622,"line_end":622,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":33325,"byte_end":33340,"line_start":623,"line_end":623,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_sub(47.hours()),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":33345,"byte_end":33399,"line_start":624,"line_end":624,"column_start":5,"column_end":59}},{"value":"/     Some(date!(2020 - 12 - 30))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":33404,"byte_end":33439,"line_start":625,"line_end":625,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":33444,"byte_end":33450,"line_start":626,"line_end":626,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":33455,"byte_end":33462,"line_start":627,"line_end":627,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":34882,"byte_end":34896,"line_start":671,"line_end":671,"column_start":18,"column_end":32},"name":"saturating_add","qualname":"<Date>::saturating_add","value":"const fn saturating_add(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, saturating value on overflow.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":34000,"byte_end":34061,"line_start":644,"line_end":644,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":34066,"byte_end":34069,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":34074,"byte_end":34085,"line_start":646,"line_end":646,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, ext::NumericalDuration, macros::date};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":34090,"byte_end":34151,"line_start":647,"line_end":647,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::MAX.saturating_add(1.days()), Date::MAX);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":34156,"byte_end":34218,"line_start":648,"line_end":648,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(Date::MIN.saturating_add((-2).days()), Date::MIN);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":34223,"byte_end":34288,"line_start":649,"line_end":649,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":34293,"byte_end":34308,"line_start":650,"line_end":650,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_add(2.days()),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":34313,"byte_end":34368,"line_start":651,"line_end":651,"column_start":5,"column_end":60}},{"value":"/     date!(2021 - 01 - 02)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":34373,"byte_end":34402,"line_start":652,"line_end":652,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":34407,"byte_end":34413,"line_start":653,"line_end":653,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":34418,"byte_end":34425,"line_start":654,"line_end":654,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":34430,"byte_end":34433,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":34438,"byte_end":34448,"line_start":656,"line_end":656,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":34453,"byte_end":34456,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ This function only takes whole days into account.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":34461,"byte_end":34514,"line_start":658,"line_end":658,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":34519,"byte_end":34522,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":34527,"byte_end":34538,"line_start":660,"line_end":660,"column_start":5,"column_end":16}},{"value":"/ # use time::{ext::NumericalDuration, macros::date};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":34543,"byte_end":34598,"line_start":661,"line_end":661,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":34603,"byte_end":34618,"line_start":662,"line_end":662,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_add(23.hours()),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":34623,"byte_end":34680,"line_start":663,"line_end":663,"column_start":5,"column_end":62}},{"value":"/     date!(2020 - 12 - 31)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":34685,"byte_end":34714,"line_start":664,"line_end":664,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":34719,"byte_end":34725,"line_start":665,"line_end":665,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":34730,"byte_end":34745,"line_start":666,"line_end":666,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_add(47.hours()),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":34750,"byte_end":34807,"line_start":667,"line_end":667,"column_start":5,"column_end":62}},{"value":"/     date!(2021 - 01 - 01)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":34812,"byte_end":34841,"line_start":668,"line_end":668,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":34846,"byte_end":34852,"line_start":669,"line_end":669,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":34857,"byte_end":34864,"line_start":670,"line_end":670,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":36065,"byte_end":36079,"line_start":709,"line_end":709,"column_start":18,"column_end":32},"name":"saturating_sub","qualname":"<Date>::saturating_sub","value":"const fn saturating_sub(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, saturating value on overflow.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":35191,"byte_end":35252,"line_start":682,"line_end":682,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":35257,"byte_end":35260,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":35265,"byte_end":35272,"line_start":684,"line_end":684,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration, macros::date};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":35277,"byte_end":35338,"line_start":685,"line_end":685,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::MAX.saturating_sub((-2).days()), Date::MAX);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":35343,"byte_end":35408,"line_start":686,"line_end":686,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(Date::MIN.saturating_sub(1.days()), Date::MIN);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":35413,"byte_end":35475,"line_start":687,"line_end":687,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":35480,"byte_end":35495,"line_start":688,"line_end":688,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_sub(2.days()),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":35500,"byte_end":35555,"line_start":689,"line_end":689,"column_start":5,"column_end":60}},{"value":"/     date!(2020 - 12 - 29)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":35560,"byte_end":35589,"line_start":690,"line_end":690,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":35594,"byte_end":35600,"line_start":691,"line_end":691,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":35605,"byte_end":35612,"line_start":692,"line_end":692,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":35617,"byte_end":35620,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":35625,"byte_end":35635,"line_start":694,"line_end":694,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":35640,"byte_end":35643,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ This function only takes whole days into account.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":35648,"byte_end":35701,"line_start":696,"line_end":696,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":35706,"byte_end":35709,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":35714,"byte_end":35721,"line_start":698,"line_end":698,"column_start":5,"column_end":12}},{"value":"/ # use time::{ext::NumericalDuration, macros::date};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":35726,"byte_end":35781,"line_start":699,"line_end":699,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":35786,"byte_end":35801,"line_start":700,"line_end":700,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_sub(23.hours()),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":35806,"byte_end":35863,"line_start":701,"line_end":701,"column_start":5,"column_end":62}},{"value":"/     date!(2020 - 12 - 31)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":35868,"byte_end":35897,"line_start":702,"line_end":702,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":35902,"byte_end":35908,"line_start":703,"line_end":703,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":35913,"byte_end":35928,"line_start":704,"line_end":704,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_sub(47.hours()),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":35933,"byte_end":35990,"line_start":705,"line_end":705,"column_start":5,"column_end":62}},{"value":"/     date!(2020 - 12 - 30)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":35995,"byte_end":36024,"line_start":706,"line_end":706,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":36029,"byte_end":36035,"line_start":707,"line_end":707,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":36040,"byte_end":36047,"line_start":708,"line_end":708,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":37004,"byte_end":37016,"line_start":734,"line_end":734,"column_start":18,"column_end":30},"name":"replace_year","qualname":"<Date>::replace_year","value":"const fn replace_year(Self, i32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the year. The month and day will be unchanged.","sig":null,"attributes":[{"value":"/ Replace the year. The month and day will be unchanged.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":36438,"byte_end":36496,"line_start":722,"line_end":722,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":36501,"byte_end":36504,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":36509,"byte_end":36520,"line_start":724,"line_end":724,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":36525,"byte_end":36554,"line_start":725,"line_end":725,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":36559,"byte_end":36574,"line_start":726,"line_end":726,"column_start":5,"column_end":20}},{"value":"/     date!(2022 - 02 - 18).replace_year(2019),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":36579,"byte_end":36628,"line_start":727,"line_end":727,"column_start":5,"column_end":54}},{"value":"/     Ok(date!(2019 - 02 - 18))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":36633,"byte_end":36666,"line_start":728,"line_end":728,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":36671,"byte_end":36677,"line_start":729,"line_end":729,"column_start":5,"column_end":11}},{"value":"/ assert!(date!(2022 - 02 - 18).replace_year(-1_000_000_000).is_err()); // -1_000_000_000 isn't a valid year","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":36682,"byte_end":36792,"line_start":730,"line_end":730,"column_start":5,"column_end":115}},{"value":"/ assert!(date!(2022 - 02 - 18).replace_year(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid year","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":36797,"byte_end":36905,"line_start":731,"line_end":731,"column_start":5,"column_end":113}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":36910,"byte_end":36917,"line_start":732,"line_end":732,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Date`.\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":36922,"byte_end":36986,"line_start":733,"line_end":733,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":38797,"byte_end":38810,"line_start":779,"line_end":779,"column_start":18,"column_end":31},"name":"replace_month","qualname":"<Date>::replace_month","value":"const fn replace_month(Self, Month) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the month of the year.","sig":null,"attributes":[{"value":"/ Replace the month of the year.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":38273,"byte_end":38307,"line_start":763,"line_end":763,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":38312,"byte_end":38315,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":38320,"byte_end":38331,"line_start":765,"line_end":765,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":38336,"byte_end":38365,"line_start":766,"line_end":766,"column_start":5,"column_end":34}},{"value":"/ # use time::Month;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":38370,"byte_end":38392,"line_start":767,"line_end":767,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":38397,"byte_end":38412,"line_start":768,"line_end":768,"column_start":5,"column_end":20}},{"value":"/     date!(2022 - 02 - 18).replace_month(Month::January),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":38417,"byte_end":38477,"line_start":769,"line_end":769,"column_start":5,"column_end":65}},{"value":"/     Ok(date!(2022 - 01 - 18))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":38482,"byte_end":38515,"line_start":770,"line_end":770,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":38520,"byte_end":38526,"line_start":771,"line_end":771,"column_start":5,"column_end":11}},{"value":"/ assert!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":38531,"byte_end":38543,"line_start":772,"line_end":772,"column_start":5,"column_end":17}},{"value":"/     date!(2022 - 01 - 30)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":38548,"byte_end":38577,"line_start":773,"line_end":773,"column_start":5,"column_end":34}},{"value":"/         .replace_month(Month::February)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":38582,"byte_end":38625,"line_start":774,"line_end":774,"column_start":5,"column_end":48}},{"value":"/         .is_err()","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":38630,"byte_end":38651,"line_start":775,"line_end":775,"column_start":5,"column_end":26}},{"value":"/ ); // 30 isn't a valid day in February","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":38656,"byte_end":38698,"line_start":776,"line_end":776,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":38703,"byte_end":38710,"line_start":777,"line_end":777,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Date`.\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":38715,"byte_end":38779,"line_start":778,"line_end":778,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":39485,"byte_end":39496,"line_start":796,"line_end":796,"column_start":18,"column_end":29},"name":"replace_day","qualname":"<Date>::replace_day","value":"const fn replace_day(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the day of the month.","sig":null,"attributes":[{"value":"/ Replace the day of the month.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":38988,"byte_end":39021,"line_start":784,"line_end":784,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":39026,"byte_end":39029,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":39034,"byte_end":39045,"line_start":786,"line_end":786,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":39050,"byte_end":39079,"line_start":787,"line_end":787,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":39084,"byte_end":39099,"line_start":788,"line_end":788,"column_start":5,"column_end":20}},{"value":"/     date!(2022 - 02 - 18).replace_day(1),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":39104,"byte_end":39149,"line_start":789,"line_end":789,"column_start":5,"column_end":50}},{"value":"/     Ok(date!(2022 - 02 - 01))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":39154,"byte_end":39187,"line_start":790,"line_end":790,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":39192,"byte_end":39198,"line_start":791,"line_end":791,"column_start":5,"column_end":11}},{"value":"/ assert!(date!(2022 - 02 - 18).replace_day(0).is_err()); // 0 isn't a valid day","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":39203,"byte_end":39285,"line_start":792,"line_end":792,"column_start":5,"column_end":87}},{"value":"/ assert!(date!(2022 - 02 - 18).replace_day(30).is_err()); // 30 isn't a valid day in February","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":39290,"byte_end":39386,"line_start":793,"line_end":793,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":39391,"byte_end":39398,"line_start":794,"line_end":794,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Date`.\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":39403,"byte_end":39467,"line_start":795,"line_end":795,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":40420,"byte_end":40428,"line_start":822,"line_end":822,"column_start":18,"column_end":26},"name":"midnight","qualname":"<Date>::midnight","value":"const fn midnight(Self) -> PrimitiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Create a [`PrimitiveDateTime`] using the existing date. The [`Time`] component will be set\n to midnight.","sig":null,"attributes":[{"value":"/ Create a [`PrimitiveDateTime`] using the existing date. The [`Time`] component will be set","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":40127,"byte_end":40221,"line_start":815,"line_end":815,"column_start":5,"column_end":99}},{"value":"/ to midnight.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":40226,"byte_end":40242,"line_start":816,"line_end":816,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":40247,"byte_end":40250,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":40255,"byte_end":40266,"line_start":818,"line_end":818,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{date, datetime};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":40271,"byte_end":40312,"line_start":819,"line_end":819,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(date!(1970-01-01).midnight(), datetime!(1970-01-01 0:00));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":40317,"byte_end":40390,"line_start":820,"line_end":820,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":40395,"byte_end":40402,"line_start":821,"line_end":821,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":40838,"byte_end":40847,"line_start":835,"line_end":835,"column_start":18,"column_end":27},"name":"with_time","qualname":"<Date>::with_time","value":"const fn with_time(Self, Time) -> PrimitiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Create a [`PrimitiveDateTime`] using the existing date and the provided [`Time`].","sig":null,"attributes":[{"value":"/ Create a [`PrimitiveDateTime`] using the existing date and the provided [`Time`].","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":40522,"byte_end":40607,"line_start":826,"line_end":826,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":40612,"byte_end":40615,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":40620,"byte_end":40631,"line_start":828,"line_end":828,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{date, datetime, time};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":40636,"byte_end":40683,"line_start":829,"line_end":829,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":40688,"byte_end":40703,"line_start":830,"line_end":830,"column_start":5,"column_end":20}},{"value":"/     date!(1970-01-01).with_time(time!(0:00)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":40708,"byte_end":40757,"line_start":831,"line_end":831,"column_start":5,"column_end":54}},{"value":"/     datetime!(1970-01-01 0:00),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":40762,"byte_end":40797,"line_start":832,"line_end":832,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":40802,"byte_end":40808,"line_start":833,"line_end":833,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":40813,"byte_end":40820,"line_start":834,"line_end":834,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":41257,"byte_end":41265,"line_start":846,"line_end":846,"column_start":18,"column_end":26},"name":"with_hms","qualname":"<Date>::with_hms","value":"const fn with_hms(Self, u8, u8, u8)\n-> Result<PrimitiveDateTime, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","sig":null,"attributes":[{"value":"/ Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":40943,"byte_end":41035,"line_start":839,"line_end":839,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":41040,"byte_end":41043,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":41048,"byte_end":41059,"line_start":841,"line_end":841,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":41064,"byte_end":41093,"line_start":842,"line_end":842,"column_start":5,"column_end":34}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms(0, 0, 0).is_ok());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":41098,"byte_end":41159,"line_start":843,"line_end":843,"column_start":5,"column_end":66}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms(24, 0, 0).is_err());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":41164,"byte_end":41227,"line_start":844,"line_end":844,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":41232,"byte_end":41239,"line_start":845,"line_end":845,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":41868,"byte_end":41882,"line_start":865,"line_end":865,"column_start":18,"column_end":32},"name":"with_hms_milli","qualname":"<Date>::with_hms_milli","value":"const fn with_hms_milli(Self, u8, u8, u8, u16)\n-> Result<PrimitiveDateTime, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","sig":null,"attributes":[{"value":"/ Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":41536,"byte_end":41628,"line_start":858,"line_end":858,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":41633,"byte_end":41636,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":41641,"byte_end":41652,"line_start":860,"line_end":860,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":41657,"byte_end":41686,"line_start":861,"line_end":861,"column_start":5,"column_end":34}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_milli(0, 0, 0, 0).is_ok());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":41691,"byte_end":41761,"line_start":862,"line_end":862,"column_start":5,"column_end":75}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_milli(24, 0, 0, 0).is_err());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":41766,"byte_end":41838,"line_start":863,"line_end":863,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":41843,"byte_end":41850,"line_start":864,"line_end":864,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":42530,"byte_end":42544,"line_start":885,"line_end":885,"column_start":18,"column_end":32},"name":"with_hms_micro","qualname":"<Date>::with_hms_micro","value":"const fn with_hms_micro(Self, u8, u8, u8, u32)\n-> Result<PrimitiveDateTime, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","sig":null,"attributes":[{"value":"/ Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":42198,"byte_end":42290,"line_start":878,"line_end":878,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":42295,"byte_end":42298,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":42303,"byte_end":42314,"line_start":880,"line_end":880,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":42319,"byte_end":42348,"line_start":881,"line_end":881,"column_start":5,"column_end":34}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_micro(0, 0, 0, 0).is_ok());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":42353,"byte_end":42423,"line_start":882,"line_end":882,"column_start":5,"column_end":75}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_micro(24, 0, 0, 0).is_err());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":42428,"byte_end":42500,"line_start":883,"line_end":883,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":42505,"byte_end":42512,"line_start":884,"line_end":884,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":43190,"byte_end":43203,"line_start":905,"line_end":905,"column_start":18,"column_end":31},"name":"with_hms_nano","qualname":"<Date>::with_hms_nano","value":"const fn with_hms_nano(Self, u8, u8, u8, u32)\n-> Result<PrimitiveDateTime, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","sig":null,"attributes":[{"value":"/ Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":42860,"byte_end":42952,"line_start":898,"line_end":898,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":42957,"byte_end":42960,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":42965,"byte_end":42976,"line_start":900,"line_end":900,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":42981,"byte_end":43010,"line_start":901,"line_end":901,"column_start":5,"column_end":34}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_nano(0, 0, 0, 0).is_ok());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":43015,"byte_end":43084,"line_start":902,"line_end":902,"column_start":5,"column_end":74}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_nano(24, 0, 0, 0).is_err());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":43089,"byte_end":43160,"line_start":903,"line_end":903,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":43165,"byte_end":43172,"line_start":904,"line_end":904,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":43719,"byte_end":43730,"line_start":924,"line_end":924,"column_start":12,"column_end":23},"name":"format_into","qualname":"<Date>::format_into","value":"fn format_into<impl io::Write,\nimpl Formattable + ?Sized>(Self, &mut impl io::Write,\n&impl Formattable + ?Sized) -> Result<usize, error::Format> where\nimpl io::Write: io::Write, impl Formattable + ?Sized: Formattable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Format the `Date` using the provided [format description](crate::format_description).\n","sig":null,"attributes":[{"value":"/ Format the `Date` using the provided [format description](crate::format_description).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":43618,"byte_end":43707,"line_start":923,"line_end":923,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":44314,"byte_end":44320,"line_start":940,"line_end":940,"column_start":12,"column_end":18},"name":"format","qualname":"<Date>::format","value":"fn format<impl Formattable + ?Sized>(Self, &impl Formattable + ?Sized)\n-> Result<String, error::Format> where\nimpl Formattable + ?Sized: Formattable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Format the `Date` using the provided [format description](crate::format_description).","sig":null,"attributes":[{"value":"/ Format the `Date` using the provided [format description](crate::format_description).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":43939,"byte_end":44028,"line_start":932,"line_end":932,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":44033,"byte_end":44036,"line_start":933,"line_end":933,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":44041,"byte_end":44052,"line_start":934,"line_end":934,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::date};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":44057,"byte_end":44108,"line_start":935,"line_end":935,"column_start":5,"column_end":56}},{"value":"/ let format = format_description::parse(\"[year]-[month]-[day]\")?;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":44113,"byte_end":44181,"line_start":936,"line_end":936,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(date!(2020 - 01 - 02).format(&format)?, \"2020-01-02\");","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":44186,"byte_end":44255,"line_start":937,"line_end":937,"column_start":5,"column_end":74}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":44260,"byte_end":44290,"line_start":938,"line_end":938,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":44295,"byte_end":44302,"line_start":939,"line_end":939,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":44906,"byte_end":44911,"line_start":956,"line_end":956,"column_start":12,"column_end":17},"name":"parse","qualname":"<Date>::parse","value":"fn parse<impl Parsable + ?Sized>(&str, &impl Parsable + ?Sized)\n-> Result<Self, error::Parse> where impl Parsable + ?Sized: Parsable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Parse a `Date` from the input using the provided [format\n description](crate::format_description).","sig":null,"attributes":[{"value":"/ Parse a `Date` from the input using the provided [format","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":44499,"byte_end":44559,"line_start":947,"line_end":947,"column_start":5,"column_end":65}},{"value":"/ description](crate::format_description).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":44564,"byte_end":44608,"line_start":948,"line_end":948,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":44613,"byte_end":44616,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":44621,"byte_end":44632,"line_start":950,"line_end":950,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::date, Date};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":44637,"byte_end":44694,"line_start":951,"line_end":951,"column_start":5,"column_end":62}},{"value":"/ let format = format_description::parse(\"[year]-[month]-[day]\")?;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":44699,"byte_end":44767,"line_start":952,"line_end":952,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(Date::parse(\"2020-01-02\", &format)?, date!(2020 - 01 - 02));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":44772,"byte_end":44847,"line_start":953,"line_end":953,"column_start":5,"column_end":80}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":44852,"byte_end":44882,"line_start":954,"line_end":954,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":44887,"byte_end":44894,"line_start":955,"line_end":955,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":45114,"byte_end":45117,"line_start":965,"line_end":965,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Date as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":45823,"byte_end":45826,"line_start":992,"line_end":992,"column_start":8,"column_end":11},"name":"add","qualname":"<Date as std::ops::Add>::add","value":"fn add(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":46036,"byte_end":46039,"line_start":1001,"line_end":1001,"column_start":8,"column_end":11},"name":"add","qualname":"<Date as std::ops::Add>::add","value":"fn add(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":46353,"byte_end":46356,"line_start":1012,"line_end":1012,"column_start":8,"column_end":11},"name":"sub","qualname":"<Date as std::ops::Sub>::sub","value":"fn sub(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":46573,"byte_end":46576,"line_start":1021,"line_end":1021,"column_start":8,"column_end":11},"name":"sub","qualname":"<Date as std::ops::Sub>::sub","value":"fn sub(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":46891,"byte_end":46894,"line_start":1032,"line_end":1032,"column_start":8,"column_end":11},"name":"sub","qualname":"<Date as std::ops::Sub>::sub","value":"fn sub(Self, Self) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2712},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":48063,"byte_end":48071,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"Duration","qualname":"::duration::Duration","value":"Duration {  }","parent":null,"children":[{"krate":0,"index":2713},{"krate":0,"index":2714},{"krate":0,"index":2715}],"decl_id":null,"docs":" A span of time with nanosecond precision.","sig":null,"attributes":[{"value":"/ A span of time with nanosecond precision.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":47725,"byte_end":47770,"line_start":28,"line_end":28,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":47771,"byte_end":47774,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Each `Duration` is composed of a whole number of seconds and a fractional part represented in","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":47775,"byte_end":47872,"line_start":30,"line_end":30,"column_start":1,"column_end":98}},{"value":"/ nanoseconds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":47873,"byte_end":47889,"line_start":31,"line_end":31,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":47890,"byte_end":47893,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This implementation allows for negative durations, unlike [`core::time::Duration`].","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":47894,"byte_end":47981,"line_start":33,"line_end":33,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":48393,"byte_end":48396,"line_start":45,"line_end":45,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Duration as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9902},"children":[],"decl_id":{"krate":2,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":190},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":48846,"byte_end":48850,"line_start":61,"line_end":61,"column_start":15,"column_end":19},"name":"ZERO","qualname":"::duration::Duration::ZERO","value":"Self","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" Equivalent to `0.seconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `0.seconds()`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":48658,"byte_end":48690,"line_start":55,"line_end":55,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":48695,"byte_end":48698,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":48703,"byte_end":48714,"line_start":57,"line_end":57,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":48719,"byte_end":48770,"line_start":58,"line_end":58,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::ZERO, 0.seconds());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":48775,"byte_end":48819,"line_start":59,"line_end":59,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":48824,"byte_end":48831,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":191},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":49084,"byte_end":49094,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"name":"NANOSECOND","qualname":"::duration::Duration::NANOSECOND","value":"Self","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" Equivalent to `1.nanoseconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.nanoseconds()`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":48882,"byte_end":48918,"line_start":63,"line_end":63,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":48923,"byte_end":48926,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":48931,"byte_end":48942,"line_start":65,"line_end":65,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":48947,"byte_end":48998,"line_start":66,"line_end":66,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::NANOSECOND, 1.nanoseconds());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":49003,"byte_end":49057,"line_start":67,"line_end":67,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":49062,"byte_end":49069,"line_start":68,"line_end":68,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":192},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":49335,"byte_end":49346,"line_start":77,"line_end":77,"column_start":15,"column_end":26},"name":"MICROSECOND","qualname":"::duration::Duration::MICROSECOND","value":"Self","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" Equivalent to `1.microseconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.microseconds()`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":49130,"byte_end":49167,"line_start":71,"line_end":71,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":49172,"byte_end":49175,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":49180,"byte_end":49191,"line_start":73,"line_end":73,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":49196,"byte_end":49247,"line_start":74,"line_end":74,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::MICROSECOND, 1.microseconds());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":49252,"byte_end":49308,"line_start":75,"line_end":75,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":49313,"byte_end":49320,"line_start":76,"line_end":76,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":193},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":49588,"byte_end":49599,"line_start":85,"line_end":85,"column_start":15,"column_end":26},"name":"MILLISECOND","qualname":"::duration::Duration::MILLISECOND","value":"Self","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" Equivalent to `1.milliseconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.milliseconds()`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":49383,"byte_end":49420,"line_start":79,"line_end":79,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":49425,"byte_end":49428,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":49433,"byte_end":49444,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":49449,"byte_end":49500,"line_start":82,"line_end":82,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::MILLISECOND, 1.milliseconds());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":49505,"byte_end":49561,"line_start":83,"line_end":83,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":49566,"byte_end":49573,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":194},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":49826,"byte_end":49832,"line_start":93,"line_end":93,"column_start":15,"column_end":21},"name":"SECOND","qualname":"::duration::Duration::SECOND","value":"Self","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" Equivalent to `1.seconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.seconds()`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":49636,"byte_end":49668,"line_start":87,"line_end":87,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":49673,"byte_end":49676,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":49681,"byte_end":49692,"line_start":89,"line_end":89,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":49697,"byte_end":49748,"line_start":90,"line_end":90,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::SECOND, 1.seconds());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":49753,"byte_end":49799,"line_start":91,"line_end":91,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":49804,"byte_end":49811,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":195},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":50054,"byte_end":50060,"line_start":101,"line_end":101,"column_start":15,"column_end":21},"name":"MINUTE","qualname":"::duration::Duration::MINUTE","value":"Self","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" Equivalent to `1.minutes()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.minutes()`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":49864,"byte_end":49896,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":49901,"byte_end":49904,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":49909,"byte_end":49920,"line_start":97,"line_end":97,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":49925,"byte_end":49976,"line_start":98,"line_end":98,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::MINUTE, 1.minutes());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":49981,"byte_end":50027,"line_start":99,"line_end":99,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":50032,"byte_end":50039,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":196},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":50276,"byte_end":50280,"line_start":109,"line_end":109,"column_start":15,"column_end":19},"name":"HOUR","qualname":"::duration::Duration::HOUR","value":"Self","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" Equivalent to `1.hours()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.hours()`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":50092,"byte_end":50122,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":50127,"byte_end":50130,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":50135,"byte_end":50146,"line_start":105,"line_end":105,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":50151,"byte_end":50202,"line_start":106,"line_end":106,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::HOUR, 1.hours());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":50207,"byte_end":50249,"line_start":107,"line_end":107,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":50254,"byte_end":50261,"line_start":108,"line_end":108,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":197},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":50491,"byte_end":50494,"line_start":117,"line_end":117,"column_start":15,"column_end":18},"name":"DAY","qualname":"::duration::Duration::DAY","value":"Self","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" Equivalent to `1.days()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.days()`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":50310,"byte_end":50339,"line_start":111,"line_end":111,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":50344,"byte_end":50347,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":50352,"byte_end":50363,"line_start":113,"line_end":113,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":50368,"byte_end":50419,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::DAY, 1.days());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":50424,"byte_end":50464,"line_start":115,"line_end":115,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":50469,"byte_end":50476,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":198},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":50707,"byte_end":50711,"line_start":125,"line_end":125,"column_start":15,"column_end":19},"name":"WEEK","qualname":"::duration::Duration::WEEK","value":"Self","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" Equivalent to `1.weeks()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.weeks()`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":50523,"byte_end":50553,"line_start":119,"line_end":119,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":50558,"byte_end":50561,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":50566,"byte_end":50577,"line_start":121,"line_end":121,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":50582,"byte_end":50633,"line_start":122,"line_end":122,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::WEEK, 1.weeks());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":50638,"byte_end":50680,"line_start":123,"line_end":123,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":50685,"byte_end":50692,"line_start":124,"line_end":124,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":199},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":50851,"byte_end":50854,"line_start":128,"line_end":128,"column_start":15,"column_end":18},"name":"MIN","qualname":"::duration::Duration::MIN","value":"Self","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" The minimum possible duration. Adding any negative duration to this will cause an overflow.\n","sig":null,"attributes":[{"value":"/ The minimum possible duration. Adding any negative duration to this will cause an overflow.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":50741,"byte_end":50836,"line_start":127,"line_end":127,"column_start":5,"column_end":100}}]},{"kind":"Const","id":{"krate":0,"index":200},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":51023,"byte_end":51026,"line_start":131,"line_end":131,"column_start":15,"column_end":18},"name":"MAX","qualname":"::duration::Duration::MAX","value":"Self","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" The maximum possible duration. Adding any positive duration to this will cause an overflow.\n","sig":null,"attributes":[{"value":"/ The maximum possible duration. Adding any positive duration to this will cause an overflow.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":50913,"byte_end":51008,"line_start":130,"line_end":130,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":51359,"byte_end":51366,"line_start":142,"line_end":142,"column_start":18,"column_end":25},"name":"is_zero","qualname":"<Duration>::is_zero","value":"const fn is_zero(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a duration is exactly zero.","sig":null,"attributes":[{"value":"/ Check if a duration is exactly zero.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":51136,"byte_end":51176,"line_start":135,"line_end":135,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":51181,"byte_end":51184,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":51189,"byte_end":51200,"line_start":137,"line_end":137,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":51205,"byte_end":51244,"line_start":138,"line_end":138,"column_start":5,"column_end":44}},{"value":"/ assert!(0.seconds().is_zero());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":51249,"byte_end":51284,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/ assert!(!1.nanoseconds().is_zero());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":51289,"byte_end":51329,"line_start":140,"line_end":140,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":51334,"byte_end":51341,"line_start":141,"line_end":141,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":51716,"byte_end":51727,"line_start":154,"line_end":154,"column_start":18,"column_end":29},"name":"is_negative","qualname":"<Duration>::is_negative","value":"const fn is_negative(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a duration is negative.","sig":null,"attributes":[{"value":"/ Check if a duration is negative.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":51445,"byte_end":51481,"line_start":146,"line_end":146,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":51486,"byte_end":51489,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":51494,"byte_end":51505,"line_start":148,"line_end":148,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":51510,"byte_end":51549,"line_start":149,"line_end":149,"column_start":5,"column_end":44}},{"value":"/ assert!((-1).seconds().is_negative());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":51554,"byte_end":51596,"line_start":150,"line_end":150,"column_start":5,"column_end":47}},{"value":"/ assert!(!0.seconds().is_negative());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":51601,"byte_end":51641,"line_start":151,"line_end":151,"column_start":5,"column_end":45}},{"value":"/ assert!(!1.seconds().is_negative());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":51646,"byte_end":51686,"line_start":152,"line_end":152,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":51691,"byte_end":51698,"line_start":153,"line_end":153,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":52075,"byte_end":52086,"line_start":166,"line_end":166,"column_start":18,"column_end":29},"name":"is_positive","qualname":"<Duration>::is_positive","value":"const fn is_positive(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a duration is positive.","sig":null,"attributes":[{"value":"/ Check if a duration is positive.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":51804,"byte_end":51840,"line_start":158,"line_end":158,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":51845,"byte_end":51848,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":51853,"byte_end":51864,"line_start":160,"line_end":160,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":51869,"byte_end":51908,"line_start":161,"line_end":161,"column_start":5,"column_end":44}},{"value":"/ assert!(1.seconds().is_positive());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":51913,"byte_end":51952,"line_start":162,"line_end":162,"column_start":5,"column_end":44}},{"value":"/ assert!(!0.seconds().is_positive());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":51957,"byte_end":51997,"line_start":163,"line_end":163,"column_start":5,"column_end":45}},{"value":"/ assert!(!(-1).seconds().is_positive());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":52002,"byte_end":52045,"line_start":164,"line_end":164,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":52050,"byte_end":52057,"line_start":165,"line_end":165,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":52598,"byte_end":52601,"line_start":182,"line_end":182,"column_start":18,"column_end":21},"name":"abs","qualname":"<Duration>::abs","value":"const fn abs(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the absolute value of the duration.","sig":null,"attributes":[{"value":"/ Get the absolute value of the duration.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":52209,"byte_end":52252,"line_start":172,"line_end":172,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":52257,"byte_end":52260,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ This method saturates the returned value if it would otherwise overflow.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":52265,"byte_end":52341,"line_start":174,"line_end":174,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":52346,"byte_end":52349,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":52354,"byte_end":52365,"line_start":176,"line_end":176,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":52370,"byte_end":52409,"line_start":177,"line_end":177,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.seconds().abs(), 1.seconds());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":52414,"byte_end":52461,"line_start":178,"line_end":178,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(0.seconds().abs(), 0.seconds());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":52466,"byte_end":52513,"line_start":179,"line_end":179,"column_start":5,"column_end":52}},{"value":"/ assert_eq!((-1).seconds().abs(), 1.seconds());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":52518,"byte_end":52568,"line_start":180,"line_end":180,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":52573,"byte_end":52580,"line_start":181,"line_end":181,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":53299,"byte_end":53311,"line_start":196,"line_end":196,"column_start":12,"column_end":24},"name":"unsigned_abs","qualname":"<Duration>::unsigned_abs","value":"fn unsigned_abs(Self) -> StdDuration","parent":null,"children":[],"decl_id":null,"docs":" Convert the existing `Duration` to a `std::time::Duration` and its sign. This returns a\n [`std::time::Duration`] and does not saturate the returned value (unlike [`Duration::abs`]).","sig":null,"attributes":[{"value":"/ Convert the existing `Duration` to a `std::time::Duration` and its sign. This returns a","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":52712,"byte_end":52803,"line_start":186,"line_end":186,"column_start":5,"column_end":96}},{"value":"/ [`std::time::Duration`] and does not saturate the returned value (unlike [`Duration::abs`]).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":52808,"byte_end":52904,"line_start":187,"line_end":187,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":52909,"byte_end":52912,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":52917,"byte_end":52928,"line_start":189,"line_end":189,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::{NumericalDuration, NumericalStdDuration};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":52933,"byte_end":52996,"line_start":190,"line_end":190,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(1.seconds().unsigned_abs(), 1.std_seconds());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":53001,"byte_end":53061,"line_start":191,"line_end":191,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(0.seconds().unsigned_abs(), 0.std_seconds());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":53066,"byte_end":53126,"line_start":192,"line_end":192,"column_start":5,"column_end":65}},{"value":"/ assert_eq!((-1).seconds().unsigned_abs(), 1.std_seconds());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":53131,"byte_end":53194,"line_start":193,"line_end":193,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":53199,"byte_end":53206,"line_start":194,"line_end":194,"column_start":5,"column_end":12}},{"value":"allow(clippy :: missing_const_for_fn)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":53211,"byte_end":53249,"line_start":195,"line_end":195,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":54570,"byte_end":54573,"line_start":230,"line_end":230,"column_start":18,"column_end":21},"name":"new","qualname":"<Duration>::new","value":"const fn new(i64, i32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the provided seconds and nanoseconds. If nanoseconds is at\n least ±10<sup>9</sup>, it will wrap to the number of seconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the provided seconds and nanoseconds. If nanoseconds is at","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":54120,"byte_end":54211,"line_start":221,"line_end":221,"column_start":5,"column_end":96}},{"value":"/ least ±10<sup>9</sup>, it will wrap to the number of seconds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":54216,"byte_end":54282,"line_start":222,"line_end":222,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":54287,"byte_end":54290,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":54295,"byte_end":54306,"line_start":224,"line_end":224,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":54311,"byte_end":54362,"line_start":225,"line_end":225,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::new(1, 0), 1.seconds());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":54367,"byte_end":54416,"line_start":226,"line_end":226,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(Duration::new(-1, 0), (-1).seconds());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":54421,"byte_end":54474,"line_start":227,"line_end":227,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(Duration::new(1, 2_000_000_000), 3.seconds());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":54479,"byte_end":54540,"line_start":228,"line_end":228,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":54545,"byte_end":54552,"line_start":229,"line_end":229,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":55309,"byte_end":55314,"line_start":252,"line_end":252,"column_start":18,"column_end":23},"name":"weeks","qualname":"<Duration>::weeks","value":"const fn weeks(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of weeks. Equivalent to\n `Duration::seconds(weeks * 604_800)`.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of weeks. Equivalent to","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":55021,"byte_end":55094,"line_start":245,"line_end":245,"column_start":5,"column_end":78}},{"value":"/ `Duration::seconds(weeks * 604_800)`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":55099,"byte_end":55140,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":55145,"byte_end":55148,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":55153,"byte_end":55164,"line_start":248,"line_end":248,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":55169,"byte_end":55220,"line_start":249,"line_end":249,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::weeks(1), 604_800.seconds());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":55225,"byte_end":55279,"line_start":250,"line_end":250,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":55284,"byte_end":55291,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":55670,"byte_end":55674,"line_start":263,"line_end":263,"column_start":18,"column_end":22},"name":"days","qualname":"<Duration>::days","value":"const fn days(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of days. Equivalent to\n `Duration::seconds(days * 86_400)`.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of days. Equivalent to","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":55387,"byte_end":55459,"line_start":256,"line_end":256,"column_start":5,"column_end":77}},{"value":"/ `Duration::seconds(days * 86_400)`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":55464,"byte_end":55503,"line_start":257,"line_end":257,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":55508,"byte_end":55511,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":55516,"byte_end":55527,"line_start":259,"line_end":259,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":55532,"byte_end":55583,"line_start":260,"line_end":260,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::days(1), 86_400.seconds());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":55588,"byte_end":55640,"line_start":261,"line_end":261,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":55645,"byte_end":55652,"line_start":262,"line_end":262,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":56028,"byte_end":56033,"line_start":274,"line_end":274,"column_start":18,"column_end":23},"name":"hours","qualname":"<Duration>::hours","value":"const fn hours(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of hours. Equivalent to\n `Duration::seconds(hours * 3_600)`.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of hours. Equivalent to","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":55744,"byte_end":55817,"line_start":267,"line_end":267,"column_start":5,"column_end":78}},{"value":"/ `Duration::seconds(hours * 3_600)`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":55822,"byte_end":55861,"line_start":268,"line_end":268,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":55866,"byte_end":55869,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":55874,"byte_end":55885,"line_start":270,"line_end":270,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":55890,"byte_end":55941,"line_start":271,"line_end":271,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::hours(1), 3_600.seconds());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":55946,"byte_end":55998,"line_start":272,"line_end":272,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":56003,"byte_end":56010,"line_start":273,"line_end":273,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":56388,"byte_end":56395,"line_start":285,"line_end":285,"column_start":18,"column_end":25},"name":"minutes","qualname":"<Duration>::minutes","value":"const fn minutes(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of minutes. Equivalent to\n `Duration::seconds(minutes * 60)`.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of minutes. Equivalent to","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":56104,"byte_end":56179,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ `Duration::seconds(minutes * 60)`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":56184,"byte_end":56222,"line_start":279,"line_end":279,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":56227,"byte_end":56230,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":56235,"byte_end":56246,"line_start":281,"line_end":281,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":56251,"byte_end":56302,"line_start":282,"line_end":282,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::minutes(1), 60.seconds());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":56307,"byte_end":56358,"line_start":283,"line_end":283,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":56363,"byte_end":56370,"line_start":284,"line_end":284,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":56702,"byte_end":56709,"line_start":295,"line_end":295,"column_start":18,"column_end":25},"name":"seconds","qualname":"<Duration>::seconds","value":"const fn seconds(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of seconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of seconds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":56467,"byte_end":56528,"line_start":289,"line_end":289,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":56533,"byte_end":56536,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":56541,"byte_end":56552,"line_start":291,"line_end":291,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":56557,"byte_end":56608,"line_start":292,"line_end":292,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::seconds(1), 1_000.milliseconds());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":56613,"byte_end":56672,"line_start":293,"line_end":293,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":56677,"byte_end":56684,"line_start":294,"line_end":294,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":57104,"byte_end":57115,"line_start":306,"line_end":306,"column_start":12,"column_end":23},"name":"seconds_f64","qualname":"<Duration>::seconds_f64","value":"fn seconds_f64(f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Duration` from the specified number of seconds represented as `f64`.","sig":null,"attributes":[{"value":"/ Creates a new `Duration` from the specified number of seconds represented as `f64`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":56785,"byte_end":56872,"line_start":299,"line_end":299,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":56877,"byte_end":56880,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":56885,"byte_end":56896,"line_start":301,"line_end":301,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":56901,"byte_end":56952,"line_start":302,"line_end":302,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::seconds_f64(0.5), 0.5.seconds());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":56957,"byte_end":57015,"line_start":303,"line_end":303,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(Duration::seconds_f64(-0.5), -0.5.seconds());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":57020,"byte_end":57080,"line_start":304,"line_end":304,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":57085,"byte_end":57092,"line_start":305,"line_end":305,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":57554,"byte_end":57565,"line_start":317,"line_end":317,"column_start":12,"column_end":23},"name":"seconds_f32","qualname":"<Duration>::seconds_f32","value":"fn seconds_f32(f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Duration` from the specified number of seconds represented as `f32`.","sig":null,"attributes":[{"value":"/ Creates a new `Duration` from the specified number of seconds represented as `f32`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":57233,"byte_end":57320,"line_start":310,"line_end":310,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":57325,"byte_end":57328,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":57333,"byte_end":57344,"line_start":312,"line_end":312,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":57349,"byte_end":57400,"line_start":313,"line_end":313,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::seconds_f32(0.5), 0.5.seconds());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":57405,"byte_end":57463,"line_start":314,"line_end":314,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(Duration::seconds_f32(-0.5), (-0.5).seconds());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":57468,"byte_end":57530,"line_start":315,"line_end":315,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":57535,"byte_end":57542,"line_start":316,"line_end":316,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":58001,"byte_end":58013,"line_start":328,"line_end":328,"column_start":18,"column_end":30},"name":"milliseconds","qualname":"<Duration>::milliseconds","value":"const fn milliseconds(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of milliseconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of milliseconds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":57683,"byte_end":57749,"line_start":321,"line_end":321,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":57754,"byte_end":57757,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":57762,"byte_end":57773,"line_start":323,"line_end":323,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":57778,"byte_end":57829,"line_start":324,"line_end":324,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::milliseconds(1), 1_000.microseconds());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":57834,"byte_end":57898,"line_start":325,"line_end":325,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(Duration::milliseconds(-1), (-1_000).microseconds());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":57903,"byte_end":57971,"line_start":326,"line_end":326,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":57976,"byte_end":57983,"line_start":327,"line_end":327,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":58498,"byte_end":58510,"line_start":342,"line_end":342,"column_start":18,"column_end":30},"name":"microseconds","qualname":"<Duration>::microseconds","value":"const fn microseconds(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of microseconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of microseconds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":58182,"byte_end":58248,"line_start":335,"line_end":335,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":58253,"byte_end":58256,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":58261,"byte_end":58272,"line_start":337,"line_end":337,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":58277,"byte_end":58328,"line_start":338,"line_end":338,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::microseconds(1), 1_000.nanoseconds());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":58333,"byte_end":58396,"line_start":339,"line_end":339,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(Duration::microseconds(-1), (-1_000).nanoseconds());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":58401,"byte_end":58468,"line_start":340,"line_end":340,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":58473,"byte_end":58480,"line_start":341,"line_end":341,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":59006,"byte_end":59017,"line_start":356,"line_end":356,"column_start":18,"column_end":29},"name":"nanoseconds","qualname":"<Duration>::nanoseconds","value":"const fn nanoseconds(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of nanoseconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of nanoseconds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":58683,"byte_end":58748,"line_start":349,"line_end":349,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":58753,"byte_end":58756,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":58761,"byte_end":58772,"line_start":351,"line_end":351,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":58777,"byte_end":58828,"line_start":352,"line_end":352,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::nanoseconds(1), 1.microseconds() / 1_000);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":58833,"byte_end":58900,"line_start":353,"line_end":353,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(Duration::nanoseconds(-1), (-1).microseconds() / 1_000);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":58905,"byte_end":58976,"line_start":354,"line_end":354,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":58981,"byte_end":58988,"line_start":355,"line_end":355,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":60016,"byte_end":60027,"line_start":385,"line_end":385,"column_start":18,"column_end":29},"name":"whole_weeks","qualname":"<Duration>::whole_weeks","value":"const fn whole_weeks(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole weeks in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole weeks in the duration.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":59671,"byte_end":59721,"line_start":376,"line_end":376,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":59726,"byte_end":59729,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":59734,"byte_end":59745,"line_start":378,"line_end":378,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":59750,"byte_end":59789,"line_start":379,"line_end":379,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.weeks().whole_weeks(), 1);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":59794,"byte_end":59837,"line_start":380,"line_end":380,"column_start":5,"column_end":48}},{"value":"/ assert_eq!((-1).weeks().whole_weeks(), -1);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":59842,"byte_end":59889,"line_start":381,"line_end":381,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(6.days().whole_weeks(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":59894,"byte_end":59936,"line_start":382,"line_end":382,"column_start":5,"column_end":47}},{"value":"/ assert_eq!((-6).days().whole_weeks(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":59941,"byte_end":59986,"line_start":383,"line_end":383,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":59991,"byte_end":59998,"line_start":384,"line_end":384,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":60435,"byte_end":60445,"line_start":398,"line_end":398,"column_start":18,"column_end":28},"name":"whole_days","qualname":"<Duration>::whole_days","value":"const fn whole_days(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole days in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole days in the duration.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":60093,"byte_end":60142,"line_start":389,"line_end":389,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":60147,"byte_end":60150,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":60155,"byte_end":60166,"line_start":391,"line_end":391,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":60171,"byte_end":60210,"line_start":392,"line_end":392,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.days().whole_days(), 1);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":60215,"byte_end":60256,"line_start":393,"line_end":393,"column_start":5,"column_end":46}},{"value":"/ assert_eq!((-1).days().whole_days(), -1);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":60261,"byte_end":60306,"line_start":394,"line_end":394,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(23.hours().whole_days(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":60311,"byte_end":60354,"line_start":395,"line_end":395,"column_start":5,"column_end":48}},{"value":"/ assert_eq!((-23).hours().whole_days(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":60359,"byte_end":60405,"line_start":396,"line_end":396,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":60410,"byte_end":60417,"line_start":397,"line_end":397,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":60863,"byte_end":60874,"line_start":411,"line_end":411,"column_start":18,"column_end":29},"name":"whole_hours","qualname":"<Duration>::whole_hours","value":"const fn whole_hours(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole hours in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole hours in the duration.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":60510,"byte_end":60560,"line_start":402,"line_end":402,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":60565,"byte_end":60568,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":60573,"byte_end":60584,"line_start":404,"line_end":404,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":60589,"byte_end":60628,"line_start":405,"line_end":405,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.hours().whole_hours(), 1);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":60633,"byte_end":60676,"line_start":406,"line_end":406,"column_start":5,"column_end":48}},{"value":"/ assert_eq!((-1).hours().whole_hours(), -1);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":60681,"byte_end":60728,"line_start":407,"line_end":407,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(59.minutes().whole_hours(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":60733,"byte_end":60779,"line_start":408,"line_end":408,"column_start":5,"column_end":51}},{"value":"/ assert_eq!((-59).minutes().whole_hours(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":60784,"byte_end":60833,"line_start":409,"line_end":409,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":60838,"byte_end":60845,"line_start":410,"line_end":410,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":61305,"byte_end":61318,"line_start":424,"line_end":424,"column_start":18,"column_end":31},"name":"whole_minutes","qualname":"<Duration>::whole_minutes","value":"const fn whole_minutes(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole minutes in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole minutes in the duration.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":60938,"byte_end":60990,"line_start":415,"line_end":415,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":60995,"byte_end":60998,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":61003,"byte_end":61014,"line_start":417,"line_end":417,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":61019,"byte_end":61058,"line_start":418,"line_end":418,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.minutes().whole_minutes(), 1);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":61063,"byte_end":61110,"line_start":419,"line_end":419,"column_start":5,"column_end":52}},{"value":"/ assert_eq!((-1).minutes().whole_minutes(), -1);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":61115,"byte_end":61166,"line_start":420,"line_end":420,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(59.seconds().whole_minutes(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":61171,"byte_end":61219,"line_start":421,"line_end":421,"column_start":5,"column_end":53}},{"value":"/ assert_eq!((-59).seconds().whole_minutes(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":61224,"byte_end":61275,"line_start":422,"line_end":422,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":61280,"byte_end":61287,"line_start":423,"line_end":423,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":61747,"byte_end":61760,"line_start":437,"line_end":437,"column_start":18,"column_end":31},"name":"whole_seconds","qualname":"<Duration>::whole_seconds","value":"const fn whole_seconds(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole seconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole seconds in the duration.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":61379,"byte_end":61431,"line_start":428,"line_end":428,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":61436,"byte_end":61439,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":61444,"byte_end":61455,"line_start":430,"line_end":430,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":61460,"byte_end":61499,"line_start":431,"line_end":431,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.seconds().whole_seconds(), 1);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":61504,"byte_end":61551,"line_start":432,"line_end":432,"column_start":5,"column_end":52}},{"value":"/ assert_eq!((-1).seconds().whole_seconds(), -1);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":61556,"byte_end":61607,"line_start":433,"line_end":433,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(1.minutes().whole_seconds(), 60);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":61612,"byte_end":61660,"line_start":434,"line_end":434,"column_start":5,"column_end":53}},{"value":"/ assert_eq!((-1).minutes().whole_seconds(), -60);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":61665,"byte_end":61717,"line_start":435,"line_end":435,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":61722,"byte_end":61729,"line_start":436,"line_end":436,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":62075,"byte_end":62089,"line_start":448,"line_end":448,"column_start":12,"column_end":26},"name":"as_seconds_f64","qualname":"<Duration>::as_seconds_f64","value":"fn as_seconds_f64(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of fractional seconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of fractional seconds in the duration.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":61808,"byte_end":61865,"line_start":441,"line_end":441,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":61870,"byte_end":61873,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":61878,"byte_end":61889,"line_start":443,"line_end":443,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":61894,"byte_end":61933,"line_start":444,"line_end":444,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.5.seconds().as_seconds_f64(), 1.5);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":61938,"byte_end":61990,"line_start":445,"line_end":445,"column_start":5,"column_end":57}},{"value":"/ assert_eq!((-1.5).seconds().as_seconds_f64(), -1.5);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":61995,"byte_end":62051,"line_start":446,"line_end":446,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":62056,"byte_end":62063,"line_start":447,"line_end":447,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":62454,"byte_end":62468,"line_start":459,"line_end":459,"column_start":12,"column_end":26},"name":"as_seconds_f32","qualname":"<Duration>::as_seconds_f32","value":"fn as_seconds_f32(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Get the number of fractional seconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of fractional seconds in the duration.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":62187,"byte_end":62244,"line_start":452,"line_end":452,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":62249,"byte_end":62252,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":62257,"byte_end":62268,"line_start":454,"line_end":454,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":62273,"byte_end":62312,"line_start":455,"line_end":455,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.5.seconds().as_seconds_f32(), 1.5);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":62317,"byte_end":62369,"line_start":456,"line_end":456,"column_start":5,"column_end":57}},{"value":"/ assert_eq!((-1.5).seconds().as_seconds_f32(), -1.5);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":62374,"byte_end":62430,"line_start":457,"line_end":457,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":62435,"byte_end":62442,"line_start":458,"line_end":458,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":62975,"byte_end":62993,"line_start":472,"line_end":472,"column_start":18,"column_end":36},"name":"whole_milliseconds","qualname":"<Duration>::whole_milliseconds","value":"const fn whole_milliseconds(Self) -> i128","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole milliseconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole milliseconds in the duration.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":62566,"byte_end":62623,"line_start":463,"line_end":463,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":62628,"byte_end":62631,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":62636,"byte_end":62647,"line_start":465,"line_end":465,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":62652,"byte_end":62691,"line_start":466,"line_end":466,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.seconds().whole_milliseconds(), 1_000);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":62696,"byte_end":62752,"line_start":467,"line_end":467,"column_start":5,"column_end":61}},{"value":"/ assert_eq!((-1).seconds().whole_milliseconds(), -1_000);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":62757,"byte_end":62817,"line_start":468,"line_end":468,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(1.milliseconds().whole_milliseconds(), 1);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":62822,"byte_end":62879,"line_start":469,"line_end":469,"column_start":5,"column_end":62}},{"value":"/ assert_eq!((-1).milliseconds().whole_milliseconds(), -1);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":62884,"byte_end":62945,"line_start":470,"line_end":470,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":62950,"byte_end":62957,"line_start":471,"line_end":471,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":63516,"byte_end":63535,"line_start":486,"line_end":486,"column_start":18,"column_end":37},"name":"subsec_milliseconds","qualname":"<Duration>::subsec_milliseconds","value":"const fn subsec_milliseconds(Self) -> i16","parent":null,"children":[],"decl_id":null,"docs":" Get the number of milliseconds past the number of whole seconds.","sig":null,"attributes":[{"value":"/ Get the number of milliseconds past the number of whole seconds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":63097,"byte_end":63165,"line_start":476,"line_end":476,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":63170,"byte_end":63173,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ Always in the range `-1_000..1_000`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":63178,"byte_end":63218,"line_start":478,"line_end":478,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":63223,"byte_end":63226,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":63231,"byte_end":63242,"line_start":480,"line_end":480,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":63247,"byte_end":63286,"line_start":481,"line_end":481,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.4.seconds().subsec_milliseconds(), 400);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":63291,"byte_end":63348,"line_start":482,"line_end":482,"column_start":5,"column_end":62}},{"value":"/ assert_eq!((-1.4).seconds().subsec_milliseconds(), -400);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":63353,"byte_end":63414,"line_start":483,"line_end":483,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":63419,"byte_end":63426,"line_start":484,"line_end":484,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":64025,"byte_end":64043,"line_start":499,"line_end":499,"column_start":18,"column_end":36},"name":"whole_microseconds","qualname":"<Duration>::whole_microseconds","value":"const fn whole_microseconds(Self) -> i128","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole microseconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole microseconds in the duration.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":63606,"byte_end":63663,"line_start":490,"line_end":490,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":63668,"byte_end":63671,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":63676,"byte_end":63687,"line_start":492,"line_end":492,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":63692,"byte_end":63731,"line_start":493,"line_end":493,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.milliseconds().whole_microseconds(), 1_000);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":63736,"byte_end":63797,"line_start":494,"line_end":494,"column_start":5,"column_end":66}},{"value":"/ assert_eq!((-1).milliseconds().whole_microseconds(), -1_000);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":63802,"byte_end":63867,"line_start":495,"line_end":495,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(1.microseconds().whole_microseconds(), 1);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":63872,"byte_end":63929,"line_start":496,"line_end":496,"column_start":5,"column_end":62}},{"value":"/ assert_eq!((-1).microseconds().whole_microseconds(), -1);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":63934,"byte_end":63995,"line_start":497,"line_end":497,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":64000,"byte_end":64007,"line_start":498,"line_end":498,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":64508,"byte_end":64527,"line_start":512,"line_end":512,"column_start":18,"column_end":37},"name":"subsec_microseconds","qualname":"<Duration>::subsec_microseconds","value":"const fn subsec_microseconds(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the number of microseconds past the number of whole seconds.","sig":null,"attributes":[{"value":"/ Get the number of microseconds past the number of whole seconds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":64147,"byte_end":64215,"line_start":503,"line_end":503,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":64220,"byte_end":64223,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ Always in the range `-1_000_000..1_000_000`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":64228,"byte_end":64276,"line_start":505,"line_end":505,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":64281,"byte_end":64284,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":64289,"byte_end":64300,"line_start":507,"line_end":507,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":64305,"byte_end":64344,"line_start":508,"line_end":508,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.0004.seconds().subsec_microseconds(), 400);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":64349,"byte_end":64409,"line_start":509,"line_end":509,"column_start":5,"column_end":65}},{"value":"/ assert_eq!((-1.0004).seconds().subsec_microseconds(), -400);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":64414,"byte_end":64478,"line_start":510,"line_end":510,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":64483,"byte_end":64490,"line_start":511,"line_end":511,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":64993,"byte_end":65010,"line_start":525,"line_end":525,"column_start":18,"column_end":35},"name":"whole_nanoseconds","qualname":"<Duration>::whole_nanoseconds","value":"const fn whole_nanoseconds(Self) -> i128","parent":null,"children":[],"decl_id":null,"docs":" Get the number of nanoseconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of nanoseconds in the duration.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":64587,"byte_end":64637,"line_start":516,"line_end":516,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":64642,"byte_end":64645,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":64650,"byte_end":64661,"line_start":518,"line_end":518,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":64666,"byte_end":64705,"line_start":519,"line_end":519,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.microseconds().whole_nanoseconds(), 1_000);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":64710,"byte_end":64770,"line_start":520,"line_end":520,"column_start":5,"column_end":65}},{"value":"/ assert_eq!((-1).microseconds().whole_nanoseconds(), -1_000);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":64775,"byte_end":64839,"line_start":521,"line_end":521,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(1.nanoseconds().whole_nanoseconds(), 1);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":64844,"byte_end":64899,"line_start":522,"line_end":522,"column_start":5,"column_end":60}},{"value":"/ assert_eq!((-1).nanoseconds().whole_nanoseconds(), -1);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":64904,"byte_end":64963,"line_start":523,"line_end":523,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":64968,"byte_end":64975,"line_start":524,"line_end":524,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":65517,"byte_end":65535,"line_start":538,"line_end":538,"column_start":18,"column_end":36},"name":"subsec_nanoseconds","qualname":"<Duration>::subsec_nanoseconds","value":"const fn subsec_nanoseconds(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the number of nanoseconds past the number of whole seconds.","sig":null,"attributes":[{"value":"/ Get the number of nanoseconds past the number of whole seconds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":65110,"byte_end":65177,"line_start":529,"line_end":529,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":65182,"byte_end":65185,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `-1_000_000_000..1_000_000_000`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":65190,"byte_end":65273,"line_start":531,"line_end":531,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":65278,"byte_end":65281,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":65286,"byte_end":65297,"line_start":533,"line_end":533,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":65302,"byte_end":65341,"line_start":534,"line_end":534,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.000_000_400.seconds().subsec_nanoseconds(), 400);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":65346,"byte_end":65412,"line_start":535,"line_end":535,"column_start":5,"column_end":71}},{"value":"/ assert_eq!((-1.000_000_400).seconds().subsec_nanoseconds(), -400);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":65417,"byte_end":65487,"line_start":536,"line_end":536,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":65492,"byte_end":65499,"line_start":537,"line_end":537,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":66052,"byte_end":66063,"line_start":552,"line_end":552,"column_start":18,"column_end":29},"name":"checked_add","qualname":"<Duration>::checked_add","value":"const fn checked_add(Self, Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + rhs`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self + rhs`, returning `None` if an overflow occurred.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":65646,"byte_end":65714,"line_start":544,"line_end":544,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":65719,"byte_end":65722,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":65727,"byte_end":65738,"line_start":546,"line_end":546,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":65743,"byte_end":65794,"line_start":547,"line_end":547,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().checked_add(5.seconds()), Some(10.seconds()));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":65799,"byte_end":65872,"line_start":548,"line_end":548,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(Duration::MAX.checked_add(1.nanoseconds()), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":65877,"byte_end":65942,"line_start":549,"line_end":549,"column_start":5,"column_end":70}},{"value":"/ assert_eq!((-5).seconds().checked_add(5.seconds()), Some(0.seconds()));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":65947,"byte_end":66022,"line_start":550,"line_end":550,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":66027,"byte_end":66034,"line_start":551,"line_end":551,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":67102,"byte_end":67113,"line_start":575,"line_end":575,"column_start":18,"column_end":29},"name":"checked_sub","qualname":"<Duration>::checked_sub","value":"const fn checked_sub(Self, Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - rhs`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self - rhs`, returning `None` if an overflow occurred.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":66693,"byte_end":66761,"line_start":567,"line_end":567,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":66766,"byte_end":66769,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":66774,"byte_end":66785,"line_start":569,"line_end":569,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":66790,"byte_end":66841,"line_start":570,"line_end":570,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().checked_sub(5.seconds()), Some(Duration::ZERO));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":66846,"byte_end":66921,"line_start":571,"line_end":571,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(Duration::MIN.checked_sub(1.nanoseconds()), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":66926,"byte_end":66991,"line_start":572,"line_end":572,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(5.seconds().checked_sub(10.seconds()), Some((-5).seconds()));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":66996,"byte_end":67072,"line_start":573,"line_end":573,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":67077,"byte_end":67084,"line_start":574,"line_end":574,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":68240,"byte_end":68251,"line_start":600,"line_end":600,"column_start":18,"column_end":29},"name":"checked_mul","qualname":"<Duration>::checked_mul","value":"const fn checked_mul(Self, i32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self * rhs`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self * rhs`, returning `None` if an overflow occurred.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":67743,"byte_end":67811,"line_start":590,"line_end":590,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":67816,"byte_end":67819,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":67824,"byte_end":67835,"line_start":592,"line_end":592,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":67840,"byte_end":67891,"line_start":593,"line_end":593,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().checked_mul(2), Some(10.seconds()));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":67896,"byte_end":67959,"line_start":594,"line_end":594,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(5.seconds().checked_mul(-2), Some((-10).seconds()));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":67964,"byte_end":68031,"line_start":595,"line_end":595,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(5.seconds().checked_mul(0), Some(0.seconds()));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":68036,"byte_end":68098,"line_start":596,"line_end":596,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(Duration::MAX.checked_mul(2), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":68103,"byte_end":68154,"line_start":597,"line_end":597,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::MIN.checked_mul(2), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":68159,"byte_end":68210,"line_start":598,"line_end":598,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":68215,"byte_end":68222,"line_start":599,"line_end":599,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":69129,"byte_end":69140,"line_start":620,"line_end":620,"column_start":18,"column_end":29},"name":"checked_div","qualname":"<Duration>::checked_div","value":"const fn checked_div(Self, i32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self / rhs`, returning `None` if `rhs == 0` or if the result would overflow.","sig":null,"attributes":[{"value":"/ Computes `self / rhs`, returning `None` if `rhs == 0` or if the result would overflow.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":68747,"byte_end":68837,"line_start":612,"line_end":612,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":68842,"byte_end":68845,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":68850,"byte_end":68861,"line_start":614,"line_end":614,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":68866,"byte_end":68905,"line_start":615,"line_end":615,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(10.seconds().checked_div(2), Some(5.seconds()));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":68910,"byte_end":68973,"line_start":616,"line_end":616,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(10.seconds().checked_div(-2), Some((-5).seconds()));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":68978,"byte_end":69045,"line_start":617,"line_end":617,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(1.seconds().checked_div(0), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":69050,"byte_end":69099,"line_start":618,"line_end":618,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":69104,"byte_end":69111,"line_start":619,"line_end":619,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":70170,"byte_end":70184,"line_start":643,"line_end":643,"column_start":18,"column_end":32},"name":"saturating_add","qualname":"<Duration>::saturating_add","value":"const fn saturating_add(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + rhs`, saturating if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self + rhs`, saturating if an overflow occurred.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":69642,"byte_end":69704,"line_start":631,"line_end":631,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":69709,"byte_end":69712,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":69717,"byte_end":69728,"line_start":633,"line_end":633,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":69733,"byte_end":69784,"line_start":634,"line_end":634,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().saturating_add(5.seconds()), 10.seconds());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":69789,"byte_end":69859,"line_start":635,"line_end":635,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(Duration::MAX.saturating_add(1.nanoseconds()), Duration::MAX);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":69864,"byte_end":69941,"line_start":636,"line_end":636,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":69946,"byte_end":69961,"line_start":637,"line_end":637,"column_start":5,"column_end":20}},{"value":"/     Duration::MIN.saturating_add((-1).nanoseconds()),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":69966,"byte_end":70023,"line_start":638,"line_end":638,"column_start":5,"column_end":62}},{"value":"/     Duration::MIN","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":70028,"byte_end":70049,"line_start":639,"line_end":639,"column_start":5,"column_end":26}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":70054,"byte_end":70060,"line_start":640,"line_end":640,"column_start":5,"column_end":11}},{"value":"/ assert_eq!((-5).seconds().saturating_add(5.seconds()), Duration::ZERO);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":70065,"byte_end":70140,"line_start":641,"line_end":641,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":70145,"byte_end":70152,"line_start":642,"line_end":642,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":71652,"byte_end":71666,"line_start":682,"line_end":682,"column_start":18,"column_end":32},"name":"saturating_sub","qualname":"<Duration>::saturating_sub","value":"const fn saturating_sub(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - rhs`, saturating if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self - rhs`, saturating if an overflow occurred.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":71124,"byte_end":71186,"line_start":670,"line_end":670,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":71191,"byte_end":71194,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":71199,"byte_end":71210,"line_start":672,"line_end":672,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":71215,"byte_end":71266,"line_start":673,"line_end":673,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().saturating_sub(5.seconds()), Duration::ZERO);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":71271,"byte_end":71343,"line_start":674,"line_end":674,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(Duration::MIN.saturating_sub(1.nanoseconds()), Duration::MIN);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":71348,"byte_end":71425,"line_start":675,"line_end":675,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":71430,"byte_end":71445,"line_start":676,"line_end":676,"column_start":5,"column_end":20}},{"value":"/     Duration::MAX.saturating_sub((-1).nanoseconds()),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":71450,"byte_end":71507,"line_start":677,"line_end":677,"column_start":5,"column_end":62}},{"value":"/     Duration::MAX","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":71512,"byte_end":71533,"line_start":678,"line_end":678,"column_start":5,"column_end":26}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":71538,"byte_end":71544,"line_start":679,"line_end":679,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(5.seconds().saturating_sub(10.seconds()), (-5).seconds());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":71549,"byte_end":71622,"line_start":680,"line_end":680,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":71627,"byte_end":71634,"line_start":681,"line_end":681,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":73253,"byte_end":73267,"line_start":721,"line_end":721,"column_start":18,"column_end":32},"name":"saturating_mul","qualname":"<Duration>::saturating_mul","value":"const fn saturating_mul(Self, i32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self * rhs`, saturating if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self * rhs`, saturating if an overflow occurred.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":72606,"byte_end":72668,"line_start":709,"line_end":709,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":72673,"byte_end":72676,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":72681,"byte_end":72692,"line_start":711,"line_end":711,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":72697,"byte_end":72748,"line_start":712,"line_end":712,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().saturating_mul(2), 10.seconds());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":72753,"byte_end":72813,"line_start":713,"line_end":713,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(5.seconds().saturating_mul(-2), (-10).seconds());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":72818,"byte_end":72882,"line_start":714,"line_end":714,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(5.seconds().saturating_mul(0), Duration::ZERO);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":72887,"byte_end":72949,"line_start":715,"line_end":715,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(Duration::MAX.saturating_mul(2), Duration::MAX);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":72954,"byte_end":73017,"line_start":716,"line_end":716,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(Duration::MIN.saturating_mul(2), Duration::MIN);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":73022,"byte_end":73085,"line_start":717,"line_end":717,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(Duration::MAX.saturating_mul(-2), Duration::MIN);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":73090,"byte_end":73154,"line_start":718,"line_end":718,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(Duration::MIN.saturating_mul(-2), Duration::MAX);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":73159,"byte_end":73223,"line_start":719,"line_end":719,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":73228,"byte_end":73235,"line_start":720,"line_end":720,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":74333,"byte_end":74340,"line_start":748,"line_end":748,"column_start":12,"column_end":19},"name":"time_fn","qualname":"<Duration>::time_fn","value":"fn time_fn<T, impl FnOnce() -> T>(impl FnOnce() -> T) -> (Self, T) where\nimpl FnOnce() -> T: FnOnce() -> T","parent":null,"children":[],"decl_id":null,"docs":" Runs a closure, returning the duration of time it took to run. The return value of the\n closure is provided in the second part of the tuple.\n","sig":null,"attributes":[{"value":"/ Runs a closure, returning the duration of time it took to run. The return value of the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":74142,"byte_end":74232,"line_start":745,"line_end":745,"column_start":5,"column_end":95}},{"value":"/ closure is provided in the second part of the tuple.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":74237,"byte_end":74293,"line_start":746,"line_end":746,"column_start":5,"column_end":61}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":74298,"byte_end":74321,"line_start":747,"line_end":747,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":75104,"byte_end":75107,"line_start":773,"line_end":773,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Duration as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":77420,"byte_end":77428,"line_start":842,"line_end":842,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Duration as std::convert::TryFrom>::try_from","value":"fn try_from(StdDuration) -> Result<Self, error::ConversionRange>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":77799,"byte_end":77807,"line_start":856,"line_end":856,"column_start":8,"column_end":16},"name":"try_from","qualname":"<StdDuration as std::convert::TryFrom>::try_from","value":"fn try_from(Duration) -> Result<Self, error::ConversionRange>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":78230,"byte_end":78233,"line_start":873,"line_end":873,"column_start":8,"column_end":11},"name":"add","qualname":"<Duration as std::ops::Add>::add","value":"fn add(Self, Self) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":78431,"byte_end":78434,"line_start":882,"line_end":882,"column_start":8,"column_end":11},"name":"add","qualname":"<Duration as std::ops::Add>::add","value":"fn add(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":78697,"byte_end":78700,"line_start":891,"line_end":891,"column_start":8,"column_end":11},"name":"add","qualname":"<StdDuration as std::ops::Add>::add","value":"fn add(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":78866,"byte_end":78876,"line_start":899,"line_end":899,"column_start":8,"column_end":18},"name":"add_assign","qualname":"<StdDuration as std::ops::AddAssign>::add_assign","value":"fn add_assign(&mut Self, Duration)","parent":{"krate":2,"index":3249},"children":[],"decl_id":{"krate":2,"index":3251},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":79158,"byte_end":79161,"line_start":910,"line_end":910,"column_start":8,"column_end":11},"name":"neg","qualname":"<Duration as std::ops::Neg>::neg","value":"fn neg(Self) -> Self::Output","parent":{"krate":2,"index":3245},"children":[],"decl_id":{"krate":2,"index":3247},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":79313,"byte_end":79316,"line_start":918,"line_end":918,"column_start":8,"column_end":11},"name":"sub","qualname":"<Duration as std::ops::Sub>::sub","value":"fn sub(Self, Self) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":79519,"byte_end":79522,"line_start":927,"line_end":927,"column_start":8,"column_end":11},"name":"sub","qualname":"<Duration as std::ops::Sub>::sub","value":"fn sub(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":79767,"byte_end":79770,"line_start":936,"line_end":936,"column_start":8,"column_end":11},"name":"sub","qualname":"<StdDuration as std::ops::Sub>::sub","value":"fn sub(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":80053,"byte_end":80063,"line_start":946,"line_end":946,"column_start":8,"column_end":18},"name":"sub_assign","qualname":"<StdDuration as std::ops::SubAssign>::sub_assign","value":"fn sub_assign(&mut Self, Duration)","parent":{"krate":2,"index":3253},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":81342,"byte_end":81345,"line_start":991,"line_end":991,"column_start":8,"column_end":11},"name":"mul","qualname":"<Duration as std::ops::Mul>::mul","value":"fn mul(Self, f32) -> Self::Output","parent":{"krate":2,"index":3228},"children":[],"decl_id":{"krate":2,"index":3231},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":81509,"byte_end":81512,"line_start":999,"line_end":999,"column_start":8,"column_end":11},"name":"mul","qualname":"<f32 as std::ops::Mul>::mul","value":"fn mul(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3228},"children":[],"decl_id":{"krate":2,"index":3231},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":81641,"byte_end":81644,"line_start":1007,"line_end":1007,"column_start":8,"column_end":11},"name":"mul","qualname":"<Duration as std::ops::Mul>::mul","value":"fn mul(Self, f64) -> Self::Output","parent":{"krate":2,"index":3228},"children":[],"decl_id":{"krate":2,"index":3231},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":81808,"byte_end":81811,"line_start":1015,"line_end":1015,"column_start":8,"column_end":11},"name":"mul","qualname":"<f64 as std::ops::Mul>::mul","value":"fn mul(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3228},"children":[],"decl_id":{"krate":2,"index":3231},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":82007,"byte_end":82010,"line_start":1025,"line_end":1025,"column_start":8,"column_end":11},"name":"div","qualname":"<Duration as std::ops::Div>::div","value":"fn div(Self, f32) -> Self::Output","parent":{"krate":2,"index":3233},"children":[],"decl_id":{"krate":2,"index":3236},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":82170,"byte_end":82173,"line_start":1033,"line_end":1033,"column_start":8,"column_end":11},"name":"div","qualname":"<Duration as std::ops::Div>::div","value":"fn div(Self, f64) -> Self::Output","parent":{"krate":2,"index":3233},"children":[],"decl_id":{"krate":2,"index":3236},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":82394,"byte_end":82397,"line_start":1043,"line_end":1043,"column_start":8,"column_end":11},"name":"div","qualname":"<Duration as std::ops::Div>::div","value":"fn div(Self, Self) -> Self::Output","parent":{"krate":2,"index":3233},"children":[],"decl_id":{"krate":2,"index":3236},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":82563,"byte_end":82566,"line_start":1051,"line_end":1051,"column_start":8,"column_end":11},"name":"div","qualname":"<Duration as std::ops::Div>::div","value":"fn div(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3233},"children":[],"decl_id":{"krate":2,"index":3236},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":82736,"byte_end":82739,"line_start":1059,"line_end":1059,"column_start":8,"column_end":11},"name":"div","qualname":"<StdDuration as std::ops::Div>::div","value":"fn div(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3233},"children":[],"decl_id":{"krate":2,"index":3236},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":82888,"byte_end":82890,"line_start":1065,"line_end":1065,"column_start":8,"column_end":10},"name":"eq","qualname":"<Duration as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &StdDuration) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":83028,"byte_end":83030,"line_start":1071,"line_end":1071,"column_start":8,"column_end":10},"name":"eq","qualname":"<StdDuration as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Duration) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":83144,"byte_end":83155,"line_start":1077,"line_end":1077,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<Duration as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &StdDuration) -> Option<Ordering>","parent":{"krate":2,"index":2848},"children":[],"decl_id":{"krate":2,"index":2850},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":83533,"byte_end":83544,"line_start":1091,"line_end":1091,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<StdDuration as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &Duration) -> Option<Ordering>","parent":{"krate":2,"index":2848},"children":[],"decl_id":{"krate":2,"index":2850},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":83683,"byte_end":83686,"line_start":1097,"line_end":1097,"column_start":8,"column_end":11},"name":"sum","qualname":"<Duration as std::iter::Sum>::sum","value":"fn sum<I>(I) -> Self where I: Iterator<Item = Self>","parent":{"krate":2,"index":7950},"children":[],"decl_id":{"krate":2,"index":7952},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":83840,"byte_end":83843,"line_start":1103,"line_end":1103,"column_start":8,"column_end":11},"name":"sum","qualname":"<Duration as std::iter::Sum>::sum","value":"fn sum<I>(I) -> Self where I: Iterator<Item = &'a Self>","parent":{"krate":2,"index":7950},"children":[],"decl_id":{"krate":2,"index":7952},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":326},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","parent":null,"children":[{"krate":0,"index":327},{"krate":0,"index":345},{"krate":0,"index":360},{"krate":0,"index":372},{"krate":0,"index":396},{"krate":0,"index":415},{"krate":0,"index":427},{"krate":0,"index":460},{"krate":0,"index":475},{"krate":0,"index":496},{"krate":0,"index":499},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":508},{"krate":0,"index":511},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":517},{"krate":0,"index":520},{"krate":0,"index":523},{"krate":0,"index":2993},{"krate":0,"index":3020},{"krate":0,"index":526},{"krate":0,"index":528}],"decl_id":null,"docs":" Various error types returned by methods in the time crate.\n","sig":null,"attributes":[{"value":"/ Various error types returned by methods in the time crate.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":83955,"byte_end":84017,"line_start":1,"line_end":1,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":2843},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/component_range.rs","byte_start":88578,"byte_end":88592,"line_start":11,"line_end":11,"column_start":12,"column_end":26},"name":"ComponentRange","qualname":"::error::component_range::ComponentRange","value":"ComponentRange {  }","parent":null,"children":[{"krate":0,"index":2844},{"krate":0,"index":2845},{"krate":0,"index":2846},{"krate":0,"index":2847},{"krate":0,"index":2848}],"decl_id":null,"docs":" An error type indicating that a component provided to a method was out of range, causing a\n failure.\n","sig":null,"attributes":[{"value":"/ An error type indicating that a component provided to a method was out of range, causing a","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/component_range.rs","byte_start":88309,"byte_end":88403,"line_start":7,"line_end":7,"column_start":1,"column_end":95}},{"value":"/ failure.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/component_range.rs","byte_start":88404,"byte_end":88416,"line_start":8,"line_end":8,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/component_range.rs","byte_start":89114,"byte_end":89118,"line_start":27,"line_end":27,"column_start":18,"column_end":22},"name":"name","qualname":"<ComponentRange>::name","value":"const fn name(Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Obtain the name of the component whose value was out of range.\n","sig":null,"attributes":[{"value":"/ Obtain the name of the component whose value was out of range.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/component_range.rs","byte_start":89030,"byte_end":89096,"line_start":26,"line_end":26,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/component_range.rs","byte_start":89362,"byte_end":89376,"line_start":33,"line_end":33,"column_start":18,"column_end":32},"name":"is_conditional","qualname":"<ComponentRange>::is_conditional","value":"const fn is_conditional(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the value's permitted range is conditional, i.e. whether an input with this\n value could have succeeded if the values of other components were different.\n","sig":null,"attributes":[{"value":"/ Whether the value's permitted range is conditional, i.e. whether an input with this","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/component_range.rs","byte_start":89172,"byte_end":89259,"line_start":31,"line_end":31,"column_start":5,"column_end":92}},{"value":"/ value could have succeeded if the values of other components were different.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/component_range.rs","byte_start":89264,"byte_end":89344,"line_start":32,"line_end":32,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/component_range.rs","byte_start":89479,"byte_end":89482,"line_start":39,"line_end":39,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ComponentRange as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/component_range.rs","byte_start":89863,"byte_end":89867,"line_start":55,"line_end":55,"column_start":8,"column_end":12},"name":"from","qualname":"<crate::Error as std::convert::From>::from","value":"fn from(ComponentRange) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/component_range.rs","byte_start":90050,"byte_end":90058,"line_start":63,"line_end":63,"column_start":8,"column_end":16},"name":"try_from","qualname":"<ComponentRange as std::convert::TryFrom>::try_from","value":"fn try_from(crate::Error) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2864},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/conversion_range.rs","byte_start":91177,"byte_end":91192,"line_start":10,"line_end":10,"column_start":12,"column_end":27},"name":"ConversionRange","qualname":"::error::conversion_range::ConversionRange","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error type indicating that a conversion failed because the target type could not store the\n initial value.\n","sig":null,"attributes":[{"value":"/ An error type indicating that a conversion failed because the target type could not store the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/conversion_range.rs","byte_start":91004,"byte_end":91101,"line_start":7,"line_end":7,"column_start":1,"column_end":98}},{"value":"/ initial value.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/conversion_range.rs","byte_start":91102,"byte_end":91120,"line_start":8,"line_end":8,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/conversion_range.rs","byte_start":91242,"byte_end":91245,"line_start":13,"line_end":13,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ConversionRange as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/conversion_range.rs","byte_start":91503,"byte_end":91507,"line_start":22,"line_end":22,"column_start":8,"column_end":12},"name":"from","qualname":"<crate::Error as std::convert::From>::from","value":"fn from(ConversionRange) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/conversion_range.rs","byte_start":91683,"byte_end":91691,"line_start":30,"line_end":30,"column_start":8,"column_end":16},"name":"try_from","qualname":"<ConversionRange as std::convert::TryFrom>::try_from","value":"fn try_from(crate::Error) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2877},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/different_variant.rs","byte_start":92131,"byte_end":92147,"line_start":8,"line_end":8,"column_start":12,"column_end":28},"name":"DifferentVariant","qualname":"::error::different_variant::DifferentVariant","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error type indicating that a [`TryFrom`](core::convert::TryFrom) call failed because the\n original value was of a different variant.\n","sig":null,"attributes":[{"value":"/ An error type indicating that a [`TryFrom`](core::convert::TryFrom) call failed because the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/different_variant.rs","byte_start":91932,"byte_end":92027,"line_start":5,"line_end":5,"column_start":1,"column_end":96}},{"value":"/ original value was of a different variant.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/different_variant.rs","byte_start":92028,"byte_end":92074,"line_start":6,"line_end":6,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/different_variant.rs","byte_start":92198,"byte_end":92201,"line_start":11,"line_end":11,"column_start":8,"column_end":11},"name":"fmt","qualname":"<DifferentVariant as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/different_variant.rs","byte_start":92457,"byte_end":92461,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"from","qualname":"<crate::Error as std::convert::From>::from","value":"fn from(DifferentVariant) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/different_variant.rs","byte_start":92621,"byte_end":92629,"line_start":28,"line_end":28,"column_start":8,"column_end":16},"name":"try_from","qualname":"<DifferentVariant as std::convert::TryFrom>::try_from","value":"fn try_from(crate::Error) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2891},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/format.rs","byte_start":93201,"byte_end":93228,"line_start":16,"line_end":16,"column_start":5,"column_end":32},"name":"InsufficientTypeInformation","qualname":"::error::format::Format::InsufficientTypeInformation","value":"Format::InsufficientTypeInformation","parent":{"krate":0,"index":2890},"children":[],"decl_id":null,"docs":" The type being formatted does not contain sufficient information to format a component.\n","sig":null,"attributes":[{"value":"/ The type being formatted does not contain sufficient information to format a component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/format.rs","byte_start":93083,"byte_end":93174,"line_start":14,"line_end":14,"column_start":5,"column_end":96}},{"value":"non_exhaustive","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/format.rs","byte_start":93179,"byte_end":93196,"line_start":15,"line_end":15,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2893},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/format.rs","byte_start":93403,"byte_end":93419,"line_start":20,"line_end":20,"column_start":5,"column_end":21},"name":"InvalidComponent","qualname":"::error::format::Format::InvalidComponent","value":"Format::InvalidComponent(&'static str)","parent":{"krate":0,"index":2890},"children":[],"decl_id":null,"docs":" The component named has a value that cannot be formatted into the requested format.","sig":null,"attributes":[{"value":"/ The component named has a value that cannot be formatted into the requested format.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/format.rs","byte_start":93234,"byte_end":93321,"line_start":17,"line_end":17,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/format.rs","byte_start":93326,"byte_end":93329,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This variant is only returned when using well-known formats.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/format.rs","byte_start":93334,"byte_end":93398,"line_start":19,"line_end":19,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":2895},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/format.rs","byte_start":93420,"byte_end":93432,"line_start":20,"line_end":20,"column_start":22,"column_end":34},"name":"0","qualname":"::error::format::Format::InvalidComponent::0","value":"&'static str","parent":{"krate":0,"index":2893},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2896},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/format.rs","byte_start":93500,"byte_end":93505,"line_start":22,"line_end":22,"column_start":5,"column_end":10},"name":"StdIo","qualname":"::error::format::Format::StdIo","value":"Format::StdIo(io::Error)","parent":{"krate":0,"index":2890},"children":[],"decl_id":null,"docs":" A value of `std::io::Error` was returned internally.\n","sig":null,"attributes":[{"value":"/ A value of `std::io::Error` was returned internally.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/format.rs","byte_start":93439,"byte_end":93495,"line_start":21,"line_end":21,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":2898},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/format.rs","byte_start":93506,"byte_end":93515,"line_start":22,"line_end":22,"column_start":11,"column_end":20},"name":"0","qualname":"::error::format::Format::StdIo::0","value":"std::io::Error","parent":{"krate":0,"index":2896},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2890},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/format.rs","byte_start":93070,"byte_end":93076,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"name":"Format","qualname":"::error::format::Format","value":"enum Format {\n    InsufficientTypeInformation,\n    InvalidComponent(&'static str),\n    StdIo(io::Error),\n}","parent":null,"children":[{"krate":0,"index":2891},{"krate":0,"index":2893},{"krate":0,"index":2896}],"decl_id":null,"docs":" An error occurred when formatting.\n","sig":null,"attributes":[{"value":"/ An error occurred when formatting.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/format.rs","byte_start":92886,"byte_end":92924,"line_start":8,"line_end":8,"column_start":1,"column_end":39}},{"value":"non_exhaustive","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/format.rs","byte_start":92925,"byte_end":92942,"line_start":9,"line_end":9,"column_start":1,"column_end":18}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/format.rs","byte_start":92943,"byte_end":92981,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/format.rs","byte_start":93559,"byte_end":93562,"line_start":26,"line_end":26,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Format as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/format.rs","byte_start":94143,"byte_end":94147,"line_start":43,"line_end":43,"column_start":8,"column_end":12},"name":"from","qualname":"<Format as std::convert::From>::from","value":"fn from(io::Error) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/format.rs","byte_start":94295,"byte_end":94303,"line_start":51,"line_end":51,"column_start":8,"column_end":16},"name":"try_from","qualname":"<io::Error as std::convert::TryFrom>::try_from","value":"fn try_from(Format) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/format.rs","byte_start":94544,"byte_end":94550,"line_start":61,"line_end":61,"column_start":8,"column_end":14},"name":"source","qualname":"<Format as std::error::Error>::source","value":"fn source(&Self) -> Option<&dyn std::error::Error + 'static>","parent":{"krate":1,"index":2555},"children":[],"decl_id":{"krate":1,"index":2556},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/format.rs","byte_start":94883,"byte_end":94887,"line_start":71,"line_end":71,"column_start":8,"column_end":12},"name":"from","qualname":"<crate::Error as std::convert::From>::from","value":"fn from(Format) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/format.rs","byte_start":95108,"byte_end":95116,"line_start":80,"line_end":80,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Format as std::convert::TryFrom>::try_from","value":"fn try_from(crate::Error) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2902},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_format_description.rs","byte_start":96065,"byte_end":96087,"line_start":18,"line_end":18,"column_start":5,"column_end":27},"name":"UnclosedOpeningBracket","qualname":"::error::invalid_format_description::InvalidFormatDescription::UnclosedOpeningBracket","value":"InvalidFormatDescription::UnclosedOpeningBracket { index }","parent":{"krate":0,"index":2901},"children":[],"decl_id":null,"docs":" There was a bracket pair that was opened but not closed.\n","sig":null,"attributes":[{"value":"/ There was a bracket pair that was opened but not closed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_format_description.rs","byte_start":95978,"byte_end":96038,"line_start":16,"line_end":16,"column_start":5,"column_end":65}},{"value":"non_exhaustive","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_format_description.rs","byte_start":96043,"byte_end":96060,"line_start":17,"line_end":17,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":2903},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_format_description.rs","byte_start":96155,"byte_end":96160,"line_start":20,"line_end":20,"column_start":9,"column_end":14},"name":"index","qualname":"::error::invalid_format_description::InvalidFormatDescription::UnclosedOpeningBracket::index","value":"usize","parent":{"krate":0,"index":2902},"children":[],"decl_id":null,"docs":" The zero-based index of the opening bracket.\n","sig":null,"attributes":[{"value":"/ The zero-based index of the opening bracket.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_format_description.rs","byte_start":96098,"byte_end":96146,"line_start":19,"line_end":19,"column_start":9,"column_end":57}}]},{"kind":"StructVariant","id":{"krate":0,"index":2904},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_format_description.rs","byte_start":96241,"byte_end":96261,"line_start":24,"line_end":24,"column_start":5,"column_end":25},"name":"InvalidComponentName","qualname":"::error::invalid_format_description::InvalidFormatDescription::InvalidComponentName","value":"InvalidFormatDescription::InvalidComponentName { name, index }","parent":{"krate":0,"index":2901},"children":[],"decl_id":null,"docs":" A component name is not valid.\n","sig":null,"attributes":[{"value":"/ A component name is not valid.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_format_description.rs","byte_start":96180,"byte_end":96214,"line_start":22,"line_end":22,"column_start":5,"column_end":39}},{"value":"non_exhaustive","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_format_description.rs","byte_start":96219,"byte_end":96236,"line_start":23,"line_end":23,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":2905},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_format_description.rs","byte_start":96324,"byte_end":96328,"line_start":26,"line_end":26,"column_start":9,"column_end":13},"name":"name","qualname":"::error::invalid_format_description::InvalidFormatDescription::InvalidComponentName::name","value":"std::string::String","parent":{"krate":0,"index":2904},"children":[],"decl_id":null,"docs":" The name of the invalid component name.\n","sig":null,"attributes":[{"value":"/ The name of the invalid component name.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_format_description.rs","byte_start":96272,"byte_end":96315,"line_start":25,"line_end":25,"column_start":9,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2906},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_format_description.rs","byte_start":96409,"byte_end":96414,"line_start":28,"line_end":28,"column_start":9,"column_end":14},"name":"index","qualname":"::error::invalid_format_description::InvalidFormatDescription::InvalidComponentName::index","value":"usize","parent":{"krate":0,"index":2904},"children":[],"decl_id":null,"docs":" The zero-based index the component name starts at.\n","sig":null,"attributes":[{"value":"/ The zero-based index the component name starts at.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_format_description.rs","byte_start":96346,"byte_end":96400,"line_start":27,"line_end":27,"column_start":9,"column_end":63}}]},{"kind":"StructVariant","id":{"krate":0,"index":2907},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_format_description.rs","byte_start":96489,"byte_end":96504,"line_start":32,"line_end":32,"column_start":5,"column_end":20},"name":"InvalidModifier","qualname":"::error::invalid_format_description::InvalidFormatDescription::InvalidModifier","value":"InvalidFormatDescription::InvalidModifier { value, index }","parent":{"krate":0,"index":2901},"children":[],"decl_id":null,"docs":" A modifier is not valid.\n","sig":null,"attributes":[{"value":"/ A modifier is not valid.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_format_description.rs","byte_start":96434,"byte_end":96462,"line_start":30,"line_end":30,"column_start":5,"column_end":33}},{"value":"non_exhaustive","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_format_description.rs","byte_start":96467,"byte_end":96484,"line_start":31,"line_end":31,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":2908},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_format_description.rs","byte_start":96562,"byte_end":96567,"line_start":34,"line_end":34,"column_start":9,"column_end":14},"name":"value","qualname":"::error::invalid_format_description::InvalidFormatDescription::InvalidModifier::value","value":"std::string::String","parent":{"krate":0,"index":2907},"children":[],"decl_id":null,"docs":" The value of the invalid modifier.\n","sig":null,"attributes":[{"value":"/ The value of the invalid modifier.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_format_description.rs","byte_start":96515,"byte_end":96553,"line_start":33,"line_end":33,"column_start":9,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":2909},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_format_description.rs","byte_start":96642,"byte_end":96647,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"name":"index","qualname":"::error::invalid_format_description::InvalidFormatDescription::InvalidModifier::index","value":"usize","parent":{"krate":0,"index":2907},"children":[],"decl_id":null,"docs":" The zero-based index the modifier starts at.\n","sig":null,"attributes":[{"value":"/ The zero-based index the modifier starts at.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_format_description.rs","byte_start":96585,"byte_end":96633,"line_start":35,"line_end":35,"column_start":9,"column_end":57}}]},{"kind":"StructVariant","id":{"krate":0,"index":2910},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_format_description.rs","byte_start":96726,"byte_end":96746,"line_start":40,"line_end":40,"column_start":5,"column_end":25},"name":"MissingComponentName","qualname":"::error::invalid_format_description::InvalidFormatDescription::MissingComponentName","value":"InvalidFormatDescription::MissingComponentName { index }","parent":{"krate":0,"index":2901},"children":[],"decl_id":null,"docs":" A component name is missing.\n","sig":null,"attributes":[{"value":"/ A component name is missing.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_format_description.rs","byte_start":96667,"byte_end":96699,"line_start":38,"line_end":38,"column_start":5,"column_end":37}},{"value":"non_exhaustive","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_format_description.rs","byte_start":96704,"byte_end":96721,"line_start":39,"line_end":39,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":2911},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_format_description.rs","byte_start":96829,"byte_end":96834,"line_start":42,"line_end":42,"column_start":9,"column_end":14},"name":"index","qualname":"::error::invalid_format_description::InvalidFormatDescription::MissingComponentName::index","value":"usize","parent":{"krate":0,"index":2910},"children":[],"decl_id":null,"docs":" The zero-based index where the component name should start.\n","sig":null,"attributes":[{"value":"/ The zero-based index where the component name should start.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_format_description.rs","byte_start":96757,"byte_end":96820,"line_start":41,"line_end":41,"column_start":9,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":2901},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_format_description.rs","byte_start":95947,"byte_end":95971,"line_start":15,"line_end":15,"column_start":10,"column_end":34},"name":"InvalidFormatDescription","qualname":"::error::invalid_format_description::InvalidFormatDescription","value":"enum InvalidFormatDescription {\n    UnclosedOpeningBracket {\n            index: usize,\n        },\n    InvalidComponentName {\n            name: String,\n            index: usize,\n        },\n    InvalidModifier {\n            value: String,\n            index: usize,\n        },\n    MissingComponentName {\n            index: usize,\n        },\n}","parent":null,"children":[{"krate":0,"index":2902},{"krate":0,"index":2904},{"krate":0,"index":2907},{"krate":0,"index":2910}],"decl_id":null,"docs":" The format description provided was not valid.\n","sig":null,"attributes":[{"value":"/ The format description provided was not valid.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_format_description.rs","byte_start":95708,"byte_end":95758,"line_start":8,"line_end":8,"column_start":1,"column_end":51}},{"value":"non_exhaustive","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_format_description.rs","byte_start":95881,"byte_end":95898,"line_start":13,"line_end":13,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_format_description.rs","byte_start":97037,"byte_end":97041,"line_start":51,"line_end":51,"column_start":8,"column_end":12},"name":"from","qualname":"<crate::Error as std::convert::From>::from","value":"fn from(InvalidFormatDescription) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_format_description.rs","byte_start":97376,"byte_end":97384,"line_start":63,"line_end":63,"column_start":8,"column_end":16},"name":"try_from","qualname":"<InvalidFormatDescription as std::convert::TryFrom>::try_from","value":"fn try_from(crate::Error) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_format_description.rs","byte_start":97645,"byte_end":97648,"line_start":72,"line_end":72,"column_start":8,"column_end":11},"name":"fmt","qualname":"<InvalidFormatDescription as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2923},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_variant.rs","byte_start":98700,"byte_end":98714,"line_start":8,"line_end":8,"column_start":12,"column_end":26},"name":"InvalidVariant","qualname":"::error::invalid_variant::InvalidVariant","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error type indicating that a [`FromStr`](core::str::FromStr) call failed because the value\n was not a valid variant.\n","sig":null,"attributes":[{"value":"/ An error type indicating that a [`FromStr`](core::str::FromStr) call failed because the value","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_variant.rs","byte_start":98517,"byte_end":98614,"line_start":5,"line_end":5,"column_start":1,"column_end":98}},{"value":"/ was not a valid variant.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_variant.rs","byte_start":98615,"byte_end":98643,"line_start":6,"line_end":6,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_variant.rs","byte_start":98763,"byte_end":98766,"line_start":11,"line_end":11,"column_start":8,"column_end":11},"name":"fmt","qualname":"<InvalidVariant as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_variant.rs","byte_start":99001,"byte_end":99005,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"from","qualname":"<crate::Error as std::convert::From>::from","value":"fn from(InvalidVariant) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_variant.rs","byte_start":99185,"byte_end":99193,"line_start":28,"line_end":28,"column_start":8,"column_end":16},"name":"try_from","qualname":"<InvalidVariant as std::convert::TryFrom>::try_from","value":"fn try_from(crate::Error) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2937},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse.rs","byte_start":99808,"byte_end":99821,"line_start":14,"line_end":14,"column_start":5,"column_end":18},"name":"TryFromParsed","qualname":"::error::parse::Parse::TryFromParsed","value":"Parse::TryFromParsed(TryFromParsed)","parent":{"krate":0,"index":2936},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse.rs","byte_start":99756,"byte_end":99803,"line_start":13,"line_end":13,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2939},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse.rs","byte_start":99822,"byte_end":99835,"line_start":14,"line_end":14,"column_start":19,"column_end":32},"name":"0","qualname":"::error::parse::Parse::TryFromParsed::0","value":"error::try_from_parsed::TryFromParsed","parent":{"krate":0,"index":2937},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2940},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse.rs","byte_start":99894,"byte_end":99914,"line_start":16,"line_end":16,"column_start":5,"column_end":25},"name":"ParseFromDescription","qualname":"::error::parse::Parse::ParseFromDescription","value":"Parse::ParseFromDescription(ParseFromDescription)","parent":{"krate":0,"index":2936},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse.rs","byte_start":99842,"byte_end":99889,"line_start":15,"line_end":15,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2942},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse.rs","byte_start":99915,"byte_end":99935,"line_start":16,"line_end":16,"column_start":26,"column_end":46},"name":"0","qualname":"::error::parse::Parse::ParseFromDescription::0","value":"error::parse_from_description::ParseFromDescription","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2943},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse.rs","byte_start":100038,"byte_end":100066,"line_start":19,"line_end":19,"column_start":5,"column_end":33},"name":"UnexpectedTrailingCharacters","qualname":"::error::parse::Parse::UnexpectedTrailingCharacters","value":"Parse::UnexpectedTrailingCharacters","parent":{"krate":0,"index":2936},"children":[],"decl_id":null,"docs":" The input should have ended, but there were characters remaining.\n","sig":null,"attributes":[{"value":"/ The input should have ended, but there were characters remaining.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse.rs","byte_start":99942,"byte_end":100011,"line_start":17,"line_end":17,"column_start":5,"column_end":74}},{"value":"non_exhaustive","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse.rs","byte_start":100016,"byte_end":100033,"line_start":18,"line_end":18,"column_start":5,"column_end":22}}]},{"kind":"Enum","id":{"krate":0,"index":2936},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse.rs","byte_start":99744,"byte_end":99749,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Parse","qualname":"::error::parse::Parse","value":"enum Parse {\n    TryFromParsed(TryFromParsed),\n    ParseFromDescription(ParseFromDescription),\n    UnexpectedTrailingCharacters,\n}","parent":null,"children":[{"krate":0,"index":2937},{"krate":0,"index":2940},{"krate":0,"index":2943}],"decl_id":null,"docs":" An error that occurred at some stage of parsing.\n","sig":null,"attributes":[{"value":"/ An error that occurred at some stage of parsing.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse.rs","byte_start":99525,"byte_end":99577,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"allow(variant_size_differences)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse.rs","byte_start":99637,"byte_end":99671,"line_start":9,"line_end":9,"column_start":1,"column_end":35}},{"value":"non_exhaustive","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse.rs","byte_start":99672,"byte_end":99689,"line_start":10,"line_end":10,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse.rs","byte_start":100108,"byte_end":100111,"line_start":23,"line_end":23,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Parse as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse.rs","byte_start":100478,"byte_end":100484,"line_start":34,"line_end":34,"column_start":8,"column_end":14},"name":"source","qualname":"<Parse as std::error::Error>::source","value":"fn source(&Self) -> Option<&dyn std::error::Error + 'static>","parent":{"krate":1,"index":2555},"children":[],"decl_id":{"krate":1,"index":2556},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse.rs","byte_start":100848,"byte_end":100852,"line_start":45,"line_end":45,"column_start":8,"column_end":12},"name":"from","qualname":"<Parse as std::convert::From>::from","value":"fn from(TryFromParsed) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse.rs","byte_start":101074,"byte_end":101082,"line_start":54,"line_end":54,"column_start":8,"column_end":16},"name":"try_from","qualname":"<TryFromParsed as std::convert::TryFrom>::try_from","value":"fn try_from(Parse) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse.rs","byte_start":101372,"byte_end":101376,"line_start":64,"line_end":64,"column_start":8,"column_end":12},"name":"from","qualname":"<Parse as std::convert::From>::from","value":"fn from(ParseFromDescription) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse.rs","byte_start":101619,"byte_end":101627,"line_start":73,"line_end":73,"column_start":8,"column_end":16},"name":"try_from","qualname":"<ParseFromDescription as std::convert::TryFrom>::try_from","value":"fn try_from(Parse) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse.rs","byte_start":101916,"byte_end":101920,"line_start":83,"line_end":83,"column_start":8,"column_end":12},"name":"from","qualname":"<crate::Error as std::convert::From>::from","value":"fn from(Parse) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse.rs","byte_start":102365,"byte_end":102373,"line_start":96,"line_end":96,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Parse as std::convert::TryFrom>::try_from","value":"fn try_from(crate::Error) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2958},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse_from_description.rs","byte_start":103223,"byte_end":103237,"line_start":14,"line_end":14,"column_start":5,"column_end":19},"name":"InvalidLiteral","qualname":"::error::parse_from_description::ParseFromDescription::InvalidLiteral","value":"ParseFromDescription::InvalidLiteral","parent":{"krate":0,"index":2957},"children":[],"decl_id":null,"docs":" A string literal was not what was expected.\n","sig":null,"attributes":[{"value":"/ A string literal was not what was expected.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse_from_description.rs","byte_start":103149,"byte_end":103196,"line_start":12,"line_end":12,"column_start":5,"column_end":52}},{"value":"non_exhaustive","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse_from_description.rs","byte_start":103201,"byte_end":103218,"line_start":13,"line_end":13,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2960},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse_from_description.rs","byte_start":103286,"byte_end":103302,"line_start":16,"line_end":16,"column_start":5,"column_end":21},"name":"InvalidComponent","qualname":"::error::parse_from_description::ParseFromDescription::InvalidComponent","value":"ParseFromDescription::InvalidComponent(&'static str)","parent":{"krate":0,"index":2957},"children":[],"decl_id":null,"docs":" A dynamic component was not valid.\n","sig":null,"attributes":[{"value":"/ A dynamic component was not valid.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse_from_description.rs","byte_start":103243,"byte_end":103281,"line_start":15,"line_end":15,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":2962},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse_from_description.rs","byte_start":103303,"byte_end":103315,"line_start":16,"line_end":16,"column_start":22,"column_end":34},"name":"0","qualname":"::error::parse_from_description::ParseFromDescription::InvalidComponent::0","value":"&'static str","parent":{"krate":0,"index":2960},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2957},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse_from_description.rs","byte_start":103122,"byte_end":103142,"line_start":11,"line_end":11,"column_start":10,"column_end":30},"name":"ParseFromDescription","qualname":"::error::parse_from_description::ParseFromDescription","value":"enum ParseFromDescription { InvalidLiteral, InvalidComponent(&'static str), }","parent":null,"children":[{"krate":0,"index":2958},{"krate":0,"index":2960}],"decl_id":null,"docs":" An error that occurred while parsing the input into a [`Parsed`](crate::parsing::Parsed) struct.\n","sig":null,"attributes":[{"value":"/ An error that occurred while parsing the input into a [`Parsed`](crate::parsing::Parsed) struct.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse_from_description.rs","byte_start":102890,"byte_end":102990,"line_start":7,"line_end":7,"column_start":1,"column_end":101}},{"value":"non_exhaustive","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse_from_description.rs","byte_start":103050,"byte_end":103067,"line_start":9,"line_end":9,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse_from_description.rs","byte_start":103373,"byte_end":103376,"line_start":20,"line_end":20,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ParseFromDescription as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse_from_description.rs","byte_start":103882,"byte_end":103886,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"from","qualname":"<crate::Error as std::convert::From>::from","value":"fn from(ParseFromDescription) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse_from_description.rs","byte_start":104146,"byte_end":104154,"line_start":44,"line_end":44,"column_start":8,"column_end":16},"name":"try_from","qualname":"<ParseFromDescription as std::convert::TryFrom>::try_from","value":"fn try_from(crate::Error) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2976},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/try_from_parsed.rs","byte_start":104833,"byte_end":104856,"line_start":14,"line_end":14,"column_start":5,"column_end":28},"name":"InsufficientInformation","qualname":"::error::try_from_parsed::TryFromParsed::InsufficientInformation","value":"TryFromParsed::InsufficientInformation","parent":{"krate":0,"index":2975},"children":[],"decl_id":null,"docs":" The [`Parsed`](crate::parsing::Parsed) did not include enough information to construct the\n type.\n","sig":null,"attributes":[{"value":"/ The [`Parsed`](crate::parsing::Parsed) did not include enough information to construct the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/try_from_parsed.rs","byte_start":104720,"byte_end":104814,"line_start":12,"line_end":12,"column_start":5,"column_end":99}},{"value":"/ type.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/try_from_parsed.rs","byte_start":104819,"byte_end":104828,"line_start":13,"line_end":13,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2978},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/try_from_parsed.rs","byte_start":104926,"byte_end":104940,"line_start":16,"line_end":16,"column_start":5,"column_end":19},"name":"ComponentRange","qualname":"::error::try_from_parsed::TryFromParsed::ComponentRange","value":"TryFromParsed::ComponentRange(error::ComponentRange)","parent":{"krate":0,"index":2975},"children":[],"decl_id":null,"docs":" Some component contained an invalid value for the type.\n","sig":null,"attributes":[{"value":"/ Some component contained an invalid value for the type.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/try_from_parsed.rs","byte_start":104862,"byte_end":104921,"line_start":15,"line_end":15,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":2980},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/try_from_parsed.rs","byte_start":104941,"byte_end":104962,"line_start":16,"line_end":16,"column_start":20,"column_end":41},"name":"0","qualname":"::error::try_from_parsed::TryFromParsed::ComponentRange::0","value":"error::component_range::ComponentRange","parent":{"krate":0,"index":2978},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2975},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/try_from_parsed.rs","byte_start":104700,"byte_end":104713,"line_start":11,"line_end":11,"column_start":10,"column_end":23},"name":"TryFromParsed","qualname":"::error::try_from_parsed::TryFromParsed","value":"enum TryFromParsed {\n    InsufficientInformation,\n    ComponentRange(error::ComponentRange),\n}","parent":null,"children":[{"krate":0,"index":2976},{"krate":0,"index":2978}],"decl_id":null,"docs":" An error that occurred when converting a [`Parsed`](crate::parsing::Parsed) to another type.\n","sig":null,"attributes":[{"value":"/ An error that occurred when converting a [`Parsed`](crate::parsing::Parsed) to another type.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/try_from_parsed.rs","byte_start":104472,"byte_end":104568,"line_start":7,"line_end":7,"column_start":1,"column_end":97}},{"value":"non_exhaustive","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/try_from_parsed.rs","byte_start":104569,"byte_end":104586,"line_start":8,"line_end":8,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/try_from_parsed.rs","byte_start":105013,"byte_end":105016,"line_start":20,"line_end":20,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryFromParsed as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/try_from_parsed.rs","byte_start":105391,"byte_end":105395,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"from","qualname":"<TryFromParsed as std::convert::From>::from","value":"fn from(error::ComponentRange) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/try_from_parsed.rs","byte_start":105579,"byte_end":105587,"line_start":39,"line_end":39,"column_start":8,"column_end":16},"name":"try_from","qualname":"<error::ComponentRange as std::convert::TryFrom>::try_from","value":"fn try_from(TryFromParsed) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/try_from_parsed.rs","byte_start":105858,"byte_end":105864,"line_start":49,"line_end":49,"column_start":8,"column_end":14},"name":"source","qualname":"<TryFromParsed as std::error::Error>::source","value":"fn source(&Self) -> Option<&dyn std::error::Error + 'static>","parent":{"krate":1,"index":2555},"children":[],"decl_id":{"krate":1,"index":2556},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/try_from_parsed.rs","byte_start":106173,"byte_end":106177,"line_start":59,"line_end":59,"column_start":8,"column_end":12},"name":"from","qualname":"<crate::Error as std::convert::From>::from","value":"fn from(TryFromParsed) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/try_from_parsed.rs","byte_start":106416,"byte_end":106424,"line_start":68,"line_end":68,"column_start":8,"column_end":16},"name":"try_from","qualname":"<TryFromParsed as std::convert::TryFrom>::try_from","value":"fn try_from(crate::Error) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2994},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":85590,"byte_end":85605,"line_start":48,"line_end":48,"column_start":5,"column_end":20},"name":"ConversionRange","qualname":"::error::Error::ConversionRange","value":"Error::ConversionRange(ConversionRange)","parent":{"krate":0,"index":2993},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2996},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":85606,"byte_end":85621,"line_start":48,"line_end":48,"column_start":21,"column_end":36},"name":"0","qualname":"::error::Error::ConversionRange::0","value":"error::conversion_range::ConversionRange","parent":{"krate":0,"index":2994},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2997},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":85628,"byte_end":85642,"line_start":49,"line_end":49,"column_start":5,"column_end":19},"name":"ComponentRange","qualname":"::error::Error::ComponentRange","value":"Error::ComponentRange(ComponentRange)","parent":{"krate":0,"index":2993},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2999},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":85643,"byte_end":85657,"line_start":49,"line_end":49,"column_start":20,"column_end":34},"name":"0","qualname":"::error::Error::ComponentRange::0","value":"error::component_range::ComponentRange","parent":{"krate":0,"index":2997},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3000},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":85782,"byte_end":85788,"line_start":53,"line_end":53,"column_start":5,"column_end":11},"name":"Format","qualname":"::error::Error::Format","value":"Error::Format(Format)","parent":{"krate":0,"index":2993},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"formatting\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":85747,"byte_end":85777,"line_start":52,"line_end":52,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":3002},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":85789,"byte_end":85795,"line_start":53,"line_end":53,"column_start":12,"column_end":18},"name":"0","qualname":"::error::Error::Format::0","value":"error::format::Format","parent":{"krate":0,"index":3000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3003},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":85834,"byte_end":85854,"line_start":55,"line_end":55,"column_start":5,"column_end":25},"name":"ParseFromDescription","qualname":"::error::Error::ParseFromDescription","value":"Error::ParseFromDescription(ParseFromDescription)","parent":{"krate":0,"index":2993},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":85802,"byte_end":85829,"line_start":54,"line_end":54,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3005},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":85855,"byte_end":85875,"line_start":55,"line_end":55,"column_start":26,"column_end":46},"name":"0","qualname":"::error::Error::ParseFromDescription::0","value":"error::parse_from_description::ParseFromDescription","parent":{"krate":0,"index":3003},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3006},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":85936,"byte_end":85964,"line_start":58,"line_end":58,"column_start":5,"column_end":33},"name":"UnexpectedTrailingCharacters","qualname":"::error::Error::UnexpectedTrailingCharacters","value":"Error::UnexpectedTrailingCharacters","parent":{"krate":0,"index":2993},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":85882,"byte_end":85909,"line_start":56,"line_end":56,"column_start":5,"column_end":32}},{"value":"non_exhaustive","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":85914,"byte_end":85931,"line_start":57,"line_end":57,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3008},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":86002,"byte_end":86015,"line_start":60,"line_end":60,"column_start":5,"column_end":18},"name":"TryFromParsed","qualname":"::error::Error::TryFromParsed","value":"Error::TryFromParsed(TryFromParsed)","parent":{"krate":0,"index":2993},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":85970,"byte_end":85997,"line_start":59,"line_end":59,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3010},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":86016,"byte_end":86029,"line_start":60,"line_end":60,"column_start":19,"column_end":32},"name":"0","qualname":"::error::Error::TryFromParsed::0","value":"error::try_from_parsed::TryFromParsed","parent":{"krate":0,"index":3008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3011},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":86121,"byte_end":86145,"line_start":62,"line_end":62,"column_start":5,"column_end":29},"name":"InvalidFormatDescription","qualname":"::error::Error::InvalidFormatDescription","value":"Error::InvalidFormatDescription(InvalidFormatDescription)","parent":{"krate":0,"index":2993},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(all(any(feature = \"formatting\", feature = \"parsing\"), feature =\n\"alloc\"))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":86036,"byte_end":86116,"line_start":61,"line_end":61,"column_start":5,"column_end":85}}]},{"kind":"Field","id":{"krate":0,"index":3013},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":86146,"byte_end":86170,"line_start":62,"line_end":62,"column_start":30,"column_end":54},"name":"0","qualname":"::error::Error::InvalidFormatDescription::0","value":"error::invalid_format_description::InvalidFormatDescription","parent":{"krate":0,"index":3011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3014},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":86177,"byte_end":86193,"line_start":63,"line_end":63,"column_start":5,"column_end":21},"name":"DifferentVariant","qualname":"::error::Error::DifferentVariant","value":"Error::DifferentVariant(DifferentVariant)","parent":{"krate":0,"index":2993},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3016},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":86194,"byte_end":86210,"line_start":63,"line_end":63,"column_start":22,"column_end":38},"name":"0","qualname":"::error::Error::DifferentVariant::0","value":"error::different_variant::DifferentVariant","parent":{"krate":0,"index":3014},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3017},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":86217,"byte_end":86231,"line_start":64,"line_end":64,"column_start":5,"column_end":19},"name":"InvalidVariant","qualname":"::error::Error::InvalidVariant","value":"Error::InvalidVariant(InvalidVariant)","parent":{"krate":0,"index":2993},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3019},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":86232,"byte_end":86246,"line_start":64,"line_end":64,"column_start":20,"column_end":34},"name":"0","qualname":"::error::Error::InvalidVariant::0","value":"error::invalid_variant::InvalidVariant","parent":{"krate":0,"index":3017},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2993},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":85578,"byte_end":85583,"line_start":47,"line_end":47,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"enum Error {\n    ConversionRange(ConversionRange),\n    ComponentRange(ComponentRange),\n    Format(Format),\n    ParseFromDescription(ParseFromDescription),\n    UnexpectedTrailingCharacters,\n    TryFromParsed(TryFromParsed),\n    InvalidFormatDescription(InvalidFormatDescription),\n    DifferentVariant(DifferentVariant),\n    InvalidVariant(InvalidVariant),\n}","parent":null,"children":[{"krate":0,"index":2994},{"krate":0,"index":2997},{"krate":0,"index":3000},{"krate":0,"index":3003},{"krate":0,"index":3006},{"krate":0,"index":3008},{"krate":0,"index":3011},{"krate":0,"index":3014},{"krate":0,"index":3017}],"decl_id":null,"docs":" A unified error type for anything returned by a method in the time crate.","sig":null,"attributes":[{"value":"/ A unified error type for anything returned by a method in the time crate.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":85135,"byte_end":85212,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":85213,"byte_end":85216,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ This can be used when you either don't know or don't care about the exact error returned.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":85217,"byte_end":85310,"line_start":41,"line_end":41,"column_start":1,"column_end":94}},{"value":"/ `Result<_, time::Error>` (or its alias `time::Result<_>`) will work in these situations.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":85311,"byte_end":85403,"line_start":42,"line_end":42,"column_start":1,"column_end":93}},{"value":"allow(missing_copy_implementations, variant_size_differences)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":85404,"byte_end":85468,"line_start":43,"line_end":43,"column_start":1,"column_end":65}},{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":85469,"byte_end":85516,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"non_exhaustive","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":85534,"byte_end":85551,"line_start":45,"line_end":45,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":86289,"byte_end":86292,"line_start":68,"line_end":68,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Error as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":87305,"byte_end":87311,"line_start":92,"line_end":92,"column_start":8,"column_end":14},"name":"source","qualname":"<Error as std::error::Error>::source","value":"fn source(&Self) -> Option<&dyn std::error::Error + 'static>","parent":{"krate":1,"index":2555},"children":[],"decl_id":{"krate":1,"index":2556},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":530},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ext","qualname":"::ext","value":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","parent":null,"children":[{"krate":0,"index":531},{"krate":0,"index":534},{"krate":0,"index":537},{"krate":0,"index":542},{"krate":0,"index":551},{"krate":0,"index":560},{"krate":0,"index":569},{"krate":0,"index":578},{"krate":0,"index":587}],"decl_id":null,"docs":" Extension traits.\n","sig":null,"attributes":[{"value":"/ Extension traits.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":106618,"byte_end":106639,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":538},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":106852,"byte_end":106858,"line_start":10,"line_end":10,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::ext::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":" A trait that cannot be implemented by downstream users.\n","sig":null,"attributes":[{"value":"/ A trait that cannot be implemented by downstream users.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":106778,"byte_end":106837,"line_start":9,"line_end":9,"column_start":5,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":542},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":108657,"byte_end":108674,"line_start":60,"line_end":60,"column_start":11,"column_end":28},"name":"NumericalDuration","qualname":"::ext::NumericalDuration","value":"NumericalDuration: sealed::Sealed","parent":null,"children":[{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550}],"decl_id":null,"docs":" Create [`Duration`]s from numeric literals.","sig":null,"attributes":[{"value":"/ Create [`Duration`]s from numeric literals.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":106975,"byte_end":107022,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":107023,"byte_end":107026,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":107027,"byte_end":107041,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":107042,"byte_end":107045,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Basic construction of [`Duration`]s.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":107046,"byte_end":107086,"line_start":21,"line_end":21,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":107087,"byte_end":107090,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":107091,"byte_end":107102,"line_start":23,"line_end":23,"column_start":1,"column_end":12}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":107103,"byte_end":107154,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(5.nanoseconds(), Duration::nanoseconds(5));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":107155,"byte_end":107213,"line_start":25,"line_end":25,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(5.microseconds(), Duration::microseconds(5));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":107214,"byte_end":107274,"line_start":26,"line_end":26,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(5.milliseconds(), Duration::milliseconds(5));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":107275,"byte_end":107335,"line_start":27,"line_end":27,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(5.seconds(), Duration::seconds(5));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":107336,"byte_end":107386,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(5.minutes(), Duration::minutes(5));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":107387,"byte_end":107437,"line_start":29,"line_end":29,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(5.hours(), Duration::hours(5));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":107438,"byte_end":107484,"line_start":30,"line_end":30,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(5.days(), Duration::days(5));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":107485,"byte_end":107529,"line_start":31,"line_end":31,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(5.weeks(), Duration::weeks(5));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":107530,"byte_end":107576,"line_start":32,"line_end":32,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":107577,"byte_end":107584,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":107585,"byte_end":107588,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Signed integers work as well!","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":107589,"byte_end":107622,"line_start":35,"line_end":35,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":107623,"byte_end":107626,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":107627,"byte_end":107638,"line_start":37,"line_end":37,"column_start":1,"column_end":12}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":107639,"byte_end":107690,"line_start":38,"line_end":38,"column_start":1,"column_end":52}},{"value":"/ assert_eq!((-5).nanoseconds(), Duration::nanoseconds(-5));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":107691,"byte_end":107753,"line_start":39,"line_end":39,"column_start":1,"column_end":63}},{"value":"/ assert_eq!((-5).microseconds(), Duration::microseconds(-5));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":107754,"byte_end":107818,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/ assert_eq!((-5).milliseconds(), Duration::milliseconds(-5));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":107819,"byte_end":107883,"line_start":41,"line_end":41,"column_start":1,"column_end":65}},{"value":"/ assert_eq!((-5).seconds(), Duration::seconds(-5));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":107884,"byte_end":107938,"line_start":42,"line_end":42,"column_start":1,"column_end":55}},{"value":"/ assert_eq!((-5).minutes(), Duration::minutes(-5));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":107939,"byte_end":107993,"line_start":43,"line_end":43,"column_start":1,"column_end":55}},{"value":"/ assert_eq!((-5).hours(), Duration::hours(-5));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":107994,"byte_end":108044,"line_start":44,"line_end":44,"column_start":1,"column_end":51}},{"value":"/ assert_eq!((-5).days(), Duration::days(-5));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":108045,"byte_end":108093,"line_start":45,"line_end":45,"column_start":1,"column_end":49}},{"value":"/ assert_eq!((-5).weeks(), Duration::weeks(-5));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":108094,"byte_end":108144,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":108145,"byte_end":108152,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":108153,"byte_end":108156,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Just like any other [`Duration`], they can be added, subtracted, etc.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":108157,"byte_end":108230,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":108231,"byte_end":108234,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":108235,"byte_end":108246,"line_start":51,"line_end":51,"column_start":1,"column_end":12}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":108247,"byte_end":108286,"line_start":52,"line_end":52,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(2.seconds() + 500.milliseconds(), 2_500.milliseconds());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":108287,"byte_end":108358,"line_start":53,"line_end":53,"column_start":1,"column_end":72}},{"value":"/ assert_eq!(2.seconds() - 500.milliseconds(), 1_500.milliseconds());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":108359,"byte_end":108430,"line_start":54,"line_end":54,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":108431,"byte_end":108438,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":108439,"byte_end":108442,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ When called on floating point values, any remainder of the floating point value will be","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":108443,"byte_end":108534,"line_start":57,"line_end":57,"column_start":1,"column_end":92}},{"value":"/ truncated. Keep in mind that floating point numbers are inherently imprecise and have limited","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":108535,"byte_end":108632,"line_start":58,"line_end":58,"column_start":1,"column_end":98}},{"value":"/ capacity.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":108633,"byte_end":108646,"line_start":59,"line_end":59,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":108762,"byte_end":108773,"line_start":62,"line_end":62,"column_start":8,"column_end":19},"name":"nanoseconds","qualname":"::ext::NumericalDuration::nanoseconds","value":"fn nanoseconds(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of nanoseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of nanoseconds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":108697,"byte_end":108754,"line_start":61,"line_end":61,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":108863,"byte_end":108875,"line_start":64,"line_end":64,"column_start":8,"column_end":20},"name":"microseconds","qualname":"::ext::NumericalDuration::microseconds","value":"fn microseconds(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of microseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of microseconds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":108797,"byte_end":108855,"line_start":63,"line_end":63,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":108965,"byte_end":108977,"line_start":66,"line_end":66,"column_start":8,"column_end":20},"name":"milliseconds","qualname":"::ext::NumericalDuration::milliseconds","value":"fn milliseconds(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of milliseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of milliseconds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":108899,"byte_end":108957,"line_start":65,"line_end":65,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":109062,"byte_end":109069,"line_start":68,"line_end":68,"column_start":8,"column_end":15},"name":"seconds","qualname":"::ext::NumericalDuration::seconds","value":"fn seconds(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of seconds.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of seconds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":109001,"byte_end":109054,"line_start":67,"line_end":67,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":109154,"byte_end":109161,"line_start":70,"line_end":70,"column_start":8,"column_end":15},"name":"minutes","qualname":"::ext::NumericalDuration::minutes","value":"fn minutes(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of minutes.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of minutes.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":109093,"byte_end":109146,"line_start":69,"line_end":69,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":109244,"byte_end":109249,"line_start":72,"line_end":72,"column_start":8,"column_end":13},"name":"hours","qualname":"::ext::NumericalDuration::hours","value":"fn hours(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of hours.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of hours.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":109185,"byte_end":109236,"line_start":71,"line_end":71,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":109331,"byte_end":109335,"line_start":74,"line_end":74,"column_start":8,"column_end":12},"name":"days","qualname":"::ext::NumericalDuration::days","value":"fn days(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of days.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of days.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":109273,"byte_end":109323,"line_start":73,"line_end":73,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":109418,"byte_end":109423,"line_start":76,"line_end":76,"column_start":8,"column_end":13},"name":"weeks","qualname":"::ext::NumericalDuration::weeks","value":"fn weeks(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of weeks.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of weeks.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":109359,"byte_end":109410,"line_start":75,"line_end":75,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":109486,"byte_end":109497,"line_start":80,"line_end":80,"column_start":8,"column_end":19},"name":"nanoseconds","qualname":"<i64 as ext::NumericalDuration>::nanoseconds","value":"fn nanoseconds(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":{"krate":0,"index":543},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":109568,"byte_end":109580,"line_start":84,"line_end":84,"column_start":8,"column_end":20},"name":"microseconds","qualname":"<i64 as ext::NumericalDuration>::microseconds","value":"fn microseconds(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":{"krate":0,"index":544},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":109652,"byte_end":109664,"line_start":88,"line_end":88,"column_start":8,"column_end":20},"name":"milliseconds","qualname":"<i64 as ext::NumericalDuration>::milliseconds","value":"fn milliseconds(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":{"krate":0,"index":545},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":109736,"byte_end":109743,"line_start":92,"line_end":92,"column_start":8,"column_end":15},"name":"seconds","qualname":"<i64 as ext::NumericalDuration>::seconds","value":"fn seconds(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":{"krate":0,"index":546},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":109810,"byte_end":109817,"line_start":96,"line_end":96,"column_start":8,"column_end":15},"name":"minutes","qualname":"<i64 as ext::NumericalDuration>::minutes","value":"fn minutes(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":{"krate":0,"index":547},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":109884,"byte_end":109889,"line_start":100,"line_end":100,"column_start":8,"column_end":13},"name":"hours","qualname":"<i64 as ext::NumericalDuration>::hours","value":"fn hours(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":{"krate":0,"index":548},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":109954,"byte_end":109958,"line_start":104,"line_end":104,"column_start":8,"column_end":12},"name":"days","qualname":"<i64 as ext::NumericalDuration>::days","value":"fn days(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":{"krate":0,"index":549},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":110022,"byte_end":110027,"line_start":108,"line_end":108,"column_start":8,"column_end":13},"name":"weeks","qualname":"<i64 as ext::NumericalDuration>::weeks","value":"fn weeks(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":{"krate":0,"index":550},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":110127,"byte_end":110138,"line_start":114,"line_end":114,"column_start":8,"column_end":19},"name":"nanoseconds","qualname":"<f64 as ext::NumericalDuration>::nanoseconds","value":"fn nanoseconds(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":{"krate":0,"index":543},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":110214,"byte_end":110226,"line_start":118,"line_end":118,"column_start":8,"column_end":20},"name":"microseconds","qualname":"<f64 as ext::NumericalDuration>::microseconds","value":"fn microseconds(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":{"krate":0,"index":544},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":110313,"byte_end":110325,"line_start":122,"line_end":122,"column_start":8,"column_end":20},"name":"milliseconds","qualname":"<f64 as ext::NumericalDuration>::milliseconds","value":"fn milliseconds(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":{"krate":0,"index":545},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":110416,"byte_end":110423,"line_start":126,"line_end":126,"column_start":8,"column_end":15},"name":"seconds","qualname":"<f64 as ext::NumericalDuration>::seconds","value":"fn seconds(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":{"krate":0,"index":546},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":110518,"byte_end":110525,"line_start":130,"line_end":130,"column_start":8,"column_end":15},"name":"minutes","qualname":"<f64 as ext::NumericalDuration>::minutes","value":"fn minutes(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":{"krate":0,"index":547},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":110621,"byte_end":110626,"line_start":134,"line_end":134,"column_start":8,"column_end":13},"name":"hours","qualname":"<f64 as ext::NumericalDuration>::hours","value":"fn hours(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":{"krate":0,"index":548},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":110725,"byte_end":110729,"line_start":138,"line_end":138,"column_start":8,"column_end":12},"name":"days","qualname":"<f64 as ext::NumericalDuration>::days","value":"fn days(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":{"krate":0,"index":549},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":110829,"byte_end":110834,"line_start":142,"line_end":142,"column_start":8,"column_end":13},"name":"weeks","qualname":"<f64 as ext::NumericalDuration>::weeks","value":"fn weeks(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":{"krate":0,"index":550},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":569},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":112312,"byte_end":112332,"line_start":185,"line_end":185,"column_start":11,"column_end":31},"name":"NumericalStdDuration","qualname":"::ext::NumericalStdDuration","value":"NumericalStdDuration: sealed::Sealed","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577}],"decl_id":null,"docs":" Create [`std::time::Duration`]s from numeric literals.","sig":null,"attributes":[{"value":"/ Create [`std::time::Duration`]s from numeric literals.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":110993,"byte_end":111051,"line_start":149,"line_end":149,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":111052,"byte_end":111055,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":111056,"byte_end":111070,"line_start":151,"line_end":151,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":111071,"byte_end":111074,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Basic construction of [`std::time::Duration`]s.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":111075,"byte_end":111126,"line_start":153,"line_end":153,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":111127,"byte_end":111130,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":111131,"byte_end":111142,"line_start":155,"line_end":155,"column_start":1,"column_end":12}},{"value":"/ # use time::ext::NumericalStdDuration;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":111143,"byte_end":111185,"line_start":156,"line_end":156,"column_start":1,"column_end":43}},{"value":"/ # use core::time::Duration;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":111186,"byte_end":111217,"line_start":157,"line_end":157,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(5.std_nanoseconds(), Duration::from_nanos(5));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":111218,"byte_end":111279,"line_start":158,"line_end":158,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(5.std_microseconds(), Duration::from_micros(5));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":111280,"byte_end":111343,"line_start":159,"line_end":159,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(5.std_milliseconds(), Duration::from_millis(5));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":111344,"byte_end":111407,"line_start":160,"line_end":160,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(5.std_seconds(), Duration::from_secs(5));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":111408,"byte_end":111464,"line_start":161,"line_end":161,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(5.std_minutes(), Duration::from_secs(5 * 60));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":111465,"byte_end":111526,"line_start":162,"line_end":162,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(5.std_hours(), Duration::from_secs(5 * 3_600));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":111527,"byte_end":111589,"line_start":163,"line_end":163,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(5.std_days(), Duration::from_secs(5 * 86_400));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":111590,"byte_end":111652,"line_start":164,"line_end":164,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(5.std_weeks(), Duration::from_secs(5 * 604_800));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":111653,"byte_end":111717,"line_start":165,"line_end":165,"column_start":1,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":111718,"byte_end":111725,"line_start":166,"line_end":166,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":111726,"byte_end":111729,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ Just like any other [`std::time::Duration`], they can be added, subtracted, etc.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":111730,"byte_end":111814,"line_start":168,"line_end":168,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":111815,"byte_end":111818,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":111819,"byte_end":111830,"line_start":170,"line_end":170,"column_start":1,"column_end":12}},{"value":"/ # use time::ext::NumericalStdDuration;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":111831,"byte_end":111873,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":111874,"byte_end":111889,"line_start":172,"line_end":172,"column_start":1,"column_end":16}},{"value":"/     2.std_seconds() + 500.std_milliseconds(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":111890,"byte_end":111939,"line_start":173,"line_end":173,"column_start":1,"column_end":50}},{"value":"/     2_500.std_milliseconds()","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":111940,"byte_end":111972,"line_start":174,"line_end":174,"column_start":1,"column_end":33}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":111973,"byte_end":111979,"line_start":175,"line_end":175,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":111980,"byte_end":111995,"line_start":176,"line_end":176,"column_start":1,"column_end":16}},{"value":"/     2.std_seconds() - 500.std_milliseconds(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":111996,"byte_end":112045,"line_start":177,"line_end":177,"column_start":1,"column_end":50}},{"value":"/     1_500.std_milliseconds()","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":112046,"byte_end":112078,"line_start":178,"line_end":178,"column_start":1,"column_end":33}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":112079,"byte_end":112085,"line_start":179,"line_end":179,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":112086,"byte_end":112093,"line_start":180,"line_end":180,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":112094,"byte_end":112097,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ When called on floating point values, any remainder of the floating point value will be","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":112098,"byte_end":112189,"line_start":182,"line_end":182,"column_start":1,"column_end":92}},{"value":"/ truncated. Keep in mind that floating point numbers are inherently imprecise and have limited","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":112190,"byte_end":112287,"line_start":183,"line_end":183,"column_start":1,"column_end":98}},{"value":"/ capacity.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":112288,"byte_end":112301,"line_start":184,"line_end":184,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":112431,"byte_end":112446,"line_start":187,"line_end":187,"column_start":8,"column_end":23},"name":"std_nanoseconds","qualname":"::ext::NumericalStdDuration::std_nanoseconds","value":"fn std_nanoseconds(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of nanoseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of nanoseconds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":112355,"byte_end":112423,"line_start":186,"line_end":186,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":112550,"byte_end":112566,"line_start":189,"line_end":189,"column_start":8,"column_end":24},"name":"std_microseconds","qualname":"::ext::NumericalStdDuration::std_microseconds","value":"fn std_microseconds(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of microseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of microseconds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":112473,"byte_end":112542,"line_start":188,"line_end":188,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":112670,"byte_end":112686,"line_start":191,"line_end":191,"column_start":8,"column_end":24},"name":"std_milliseconds","qualname":"::ext::NumericalStdDuration::std_milliseconds","value":"fn std_milliseconds(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of milliseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of milliseconds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":112593,"byte_end":112662,"line_start":190,"line_end":190,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":112785,"byte_end":112796,"line_start":193,"line_end":193,"column_start":8,"column_end":19},"name":"std_seconds","qualname":"::ext::NumericalStdDuration::std_seconds","value":"fn std_seconds(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of seconds.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of seconds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":112713,"byte_end":112777,"line_start":192,"line_end":192,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":112895,"byte_end":112906,"line_start":195,"line_end":195,"column_start":8,"column_end":19},"name":"std_minutes","qualname":"::ext::NumericalStdDuration::std_minutes","value":"fn std_minutes(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of minutes.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of minutes.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":112823,"byte_end":112887,"line_start":194,"line_end":194,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":113003,"byte_end":113012,"line_start":197,"line_end":197,"column_start":8,"column_end":17},"name":"std_hours","qualname":"::ext::NumericalStdDuration::std_hours","value":"fn std_hours(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of hours.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of hours.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":112933,"byte_end":112995,"line_start":196,"line_end":196,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":113108,"byte_end":113116,"line_start":199,"line_end":199,"column_start":8,"column_end":16},"name":"std_days","qualname":"::ext::NumericalStdDuration::std_days","value":"fn std_days(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of days.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of days.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":113039,"byte_end":113100,"line_start":198,"line_end":198,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":113213,"byte_end":113222,"line_start":201,"line_end":201,"column_start":8,"column_end":17},"name":"std_weeks","qualname":"::ext::NumericalStdDuration::std_weeks","value":"fn std_weeks(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of weeks.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of weeks.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":113143,"byte_end":113205,"line_start":200,"line_end":200,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":113291,"byte_end":113306,"line_start":205,"line_end":205,"column_start":8,"column_end":23},"name":"std_nanoseconds","qualname":"<u64 as ext::NumericalStdDuration>::std_nanoseconds","value":"fn std_nanoseconds(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":{"krate":0,"index":570},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":113382,"byte_end":113398,"line_start":209,"line_end":209,"column_start":8,"column_end":24},"name":"std_microseconds","qualname":"<u64 as ext::NumericalStdDuration>::std_microseconds","value":"fn std_microseconds(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":{"krate":0,"index":571},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":113475,"byte_end":113491,"line_start":213,"line_end":213,"column_start":8,"column_end":24},"name":"std_milliseconds","qualname":"<u64 as ext::NumericalStdDuration>::std_milliseconds","value":"fn std_milliseconds(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":{"krate":0,"index":572},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":113568,"byte_end":113579,"line_start":217,"line_end":217,"column_start":8,"column_end":19},"name":"std_seconds","qualname":"<u64 as ext::NumericalStdDuration>::std_seconds","value":"fn std_seconds(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":{"krate":0,"index":573},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":113654,"byte_end":113665,"line_start":221,"line_end":221,"column_start":8,"column_end":19},"name":"std_minutes","qualname":"<u64 as ext::NumericalStdDuration>::std_minutes","value":"fn std_minutes(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":{"krate":0,"index":574},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":113745,"byte_end":113754,"line_start":225,"line_end":225,"column_start":8,"column_end":17},"name":"std_hours","qualname":"<u64 as ext::NumericalStdDuration>::std_hours","value":"fn std_hours(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":{"krate":0,"index":575},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":113837,"byte_end":113845,"line_start":229,"line_end":229,"column_start":8,"column_end":16},"name":"std_days","qualname":"<u64 as ext::NumericalStdDuration>::std_days","value":"fn std_days(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":{"krate":0,"index":576},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":113929,"byte_end":113938,"line_start":233,"line_end":233,"column_start":8,"column_end":17},"name":"std_weeks","qualname":"<u64 as ext::NumericalStdDuration>::std_weeks","value":"fn std_weeks(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":{"krate":0,"index":577},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":114061,"byte_end":114076,"line_start":239,"line_end":239,"column_start":8,"column_end":23},"name":"std_nanoseconds","qualname":"<f64 as ext::NumericalStdDuration>::std_nanoseconds","value":"fn std_nanoseconds(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":{"krate":0,"index":570},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":114186,"byte_end":114202,"line_start":244,"line_end":244,"column_start":8,"column_end":24},"name":"std_microseconds","qualname":"<f64 as ext::NumericalStdDuration>::std_microseconds","value":"fn std_microseconds(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":{"krate":0,"index":571},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":114323,"byte_end":114339,"line_start":249,"line_end":249,"column_start":8,"column_end":24},"name":"std_milliseconds","qualname":"<f64 as ext::NumericalStdDuration>::std_milliseconds","value":"fn std_milliseconds(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":{"krate":0,"index":572},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":114464,"byte_end":114475,"line_start":254,"line_end":254,"column_start":8,"column_end":19},"name":"std_seconds","qualname":"<f64 as ext::NumericalStdDuration>::std_seconds","value":"fn std_seconds(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":{"krate":0,"index":573},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":114604,"byte_end":114615,"line_start":259,"line_end":259,"column_start":8,"column_end":19},"name":"std_minutes","qualname":"<f64 as ext::NumericalStdDuration>::std_minutes","value":"fn std_minutes(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":{"krate":0,"index":574},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":114745,"byte_end":114754,"line_start":264,"line_end":264,"column_start":8,"column_end":17},"name":"std_hours","qualname":"<f64 as ext::NumericalStdDuration>::std_hours","value":"fn std_hours(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":{"krate":0,"index":575},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":114887,"byte_end":114895,"line_start":269,"line_end":269,"column_start":8,"column_end":16},"name":"std_days","qualname":"<f64 as ext::NumericalStdDuration>::std_days","value":"fn std_days(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":{"krate":0,"index":576},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":115029,"byte_end":115038,"line_start":274,"line_end":274,"column_start":8,"column_end":17},"name":"std_weeks","qualname":"<f64 as ext::NumericalStdDuration>::std_weeks","value":"fn std_weeks(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":{"krate":0,"index":577},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":596},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"format_description","qualname":"::format_description","value":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","parent":null,"children":[{"krate":0,"index":597},{"krate":0,"index":643},{"krate":0,"index":661},{"krate":0,"index":693},{"krate":0,"index":696},{"krate":0,"index":699},{"krate":0,"index":702},{"krate":0,"index":705},{"krate":0,"index":708},{"krate":0,"index":712},{"krate":0,"index":3644},{"krate":0,"index":3661},{"krate":0,"index":3664},{"krate":0,"index":3666},{"krate":0,"index":3670},{"krate":0,"index":3672},{"krate":0,"index":792},{"krate":0,"index":794},{"krate":0,"index":796},{"krate":0,"index":799},{"krate":0,"index":802},{"krate":0,"index":806},{"krate":0,"index":808},{"krate":0,"index":810},{"krate":0,"index":812}],"decl_id":null,"docs":" Description of how types should be formatted and parsed.","sig":null,"attributes":[{"value":"cfg(any(feature = \"formatting\", feature = \"parsing\"))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":9457,"byte_end":9513,"line_start":282,"line_end":282,"column_start":1,"column_end":57}},{"value":"/ Description of how types should be formatted and parsed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":115202,"byte_end":115262,"line_start":1,"line_end":1,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":115263,"byte_end":115266,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The formatted value will be output to the provided writer. Format descriptions can be","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":115267,"byte_end":115356,"line_start":3,"line_end":3,"column_start":1,"column_end":90}},{"value":"/ [well-known](crate::format_description::well_known) or obtained by using the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":115357,"byte_end":115437,"line_start":4,"line_end":4,"column_start":1,"column_end":81}},{"value":"/ [`format_description!`](crate::macros::format_description) macro, the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":115438,"byte_end":115511,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ [`format_description::parse`](crate::format_description::parse()) function.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":115512,"byte_end":115591,"line_start":6,"line_end":6,"column_start":1,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3023},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":120287,"byte_end":120290,"line_start":15,"line_end":15,"column_start":5,"column_end":8},"name":"Day","qualname":"::format_description::component::Component::Day","value":"Component::Day(modifier::Day)","parent":{"krate":0,"index":3022},"children":[],"decl_id":null,"docs":" Day of the month.\n","sig":null,"attributes":[{"value":"/ Day of the month.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":120261,"byte_end":120282,"line_start":14,"line_end":14,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":3025},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":120291,"byte_end":120304,"line_start":15,"line_end":15,"column_start":9,"column_end":22},"name":"0","qualname":"::format_description::component::Component::Day::0","value":"format_description::modifier::Day","parent":{"krate":0,"index":3023},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3026},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":120338,"byte_end":120343,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"Month","qualname":"::format_description::component::Component::Month","value":"Component::Month(modifier::Month)","parent":{"krate":0,"index":3022},"children":[],"decl_id":null,"docs":" Month of the year.\n","sig":null,"attributes":[{"value":"/ Month of the year.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":120311,"byte_end":120333,"line_start":16,"line_end":16,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":3028},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":120344,"byte_end":120359,"line_start":17,"line_end":17,"column_start":11,"column_end":26},"name":"0","qualname":"::format_description::component::Component::Month::0","value":"format_description::modifier::Month","parent":{"krate":0,"index":3026},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3029},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":120399,"byte_end":120406,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"Ordinal","qualname":"::format_description::component::Component::Ordinal","value":"Component::Ordinal(modifier::Ordinal)","parent":{"krate":0,"index":3022},"children":[],"decl_id":null,"docs":" Ordinal day of the year.\n","sig":null,"attributes":[{"value":"/ Ordinal day of the year.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":120366,"byte_end":120394,"line_start":18,"line_end":18,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":3031},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":120407,"byte_end":120424,"line_start":19,"line_end":19,"column_start":13,"column_end":30},"name":"0","qualname":"::format_description::component::Component::Ordinal::0","value":"format_description::modifier::Ordinal","parent":{"krate":0,"index":3029},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3032},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":120456,"byte_end":120463,"line_start":21,"line_end":21,"column_start":5,"column_end":12},"name":"Weekday","qualname":"::format_description::component::Component::Weekday","value":"Component::Weekday(modifier::Weekday)","parent":{"krate":0,"index":3022},"children":[],"decl_id":null,"docs":" Day of the week.\n","sig":null,"attributes":[{"value":"/ Day of the week.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":120431,"byte_end":120451,"line_start":20,"line_end":20,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":3034},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":120464,"byte_end":120481,"line_start":21,"line_end":21,"column_start":13,"column_end":30},"name":"0","qualname":"::format_description::component::Component::Weekday::0","value":"format_description::modifier::Weekday","parent":{"krate":0,"index":3032},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3035},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":120518,"byte_end":120528,"line_start":23,"line_end":23,"column_start":5,"column_end":15},"name":"WeekNumber","qualname":"::format_description::component::Component::WeekNumber","value":"Component::WeekNumber(modifier::WeekNumber)","parent":{"krate":0,"index":3022},"children":[],"decl_id":null,"docs":" Week within the year.\n","sig":null,"attributes":[{"value":"/ Week within the year.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":120488,"byte_end":120513,"line_start":22,"line_end":22,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":3037},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":120529,"byte_end":120549,"line_start":23,"line_end":23,"column_start":16,"column_end":36},"name":"0","qualname":"::format_description::component::Component::WeekNumber::0","value":"format_description::modifier::WeekNumber","parent":{"krate":0,"index":3035},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3038},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":120582,"byte_end":120586,"line_start":25,"line_end":25,"column_start":5,"column_end":9},"name":"Year","qualname":"::format_description::component::Component::Year","value":"Component::Year(modifier::Year)","parent":{"krate":0,"index":3022},"children":[],"decl_id":null,"docs":" Year of the date.\n","sig":null,"attributes":[{"value":"/ Year of the date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":120556,"byte_end":120577,"line_start":24,"line_end":24,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":3040},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":120587,"byte_end":120601,"line_start":25,"line_end":25,"column_start":10,"column_end":24},"name":"0","qualname":"::format_description::component::Component::Year::0","value":"format_description::modifier::Year","parent":{"krate":0,"index":3038},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3041},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":120633,"byte_end":120637,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"name":"Hour","qualname":"::format_description::component::Component::Hour","value":"Component::Hour(modifier::Hour)","parent":{"krate":0,"index":3022},"children":[],"decl_id":null,"docs":" Hour of the day.\n","sig":null,"attributes":[{"value":"/ Hour of the day.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":120608,"byte_end":120628,"line_start":26,"line_end":26,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":3043},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":120638,"byte_end":120652,"line_start":27,"line_end":27,"column_start":10,"column_end":24},"name":"0","qualname":"::format_description::component::Component::Hour::0","value":"format_description::modifier::Hour","parent":{"krate":0,"index":3041},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3044},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":120691,"byte_end":120697,"line_start":29,"line_end":29,"column_start":5,"column_end":11},"name":"Minute","qualname":"::format_description::component::Component::Minute","value":"Component::Minute(modifier::Minute)","parent":{"krate":0,"index":3022},"children":[],"decl_id":null,"docs":" Minute within the hour.\n","sig":null,"attributes":[{"value":"/ Minute within the hour.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":120659,"byte_end":120686,"line_start":28,"line_end":28,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3046},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":120698,"byte_end":120714,"line_start":29,"line_end":29,"column_start":12,"column_end":28},"name":"0","qualname":"::format_description::component::Component::Minute::0","value":"format_description::modifier::Minute","parent":{"krate":0,"index":3044},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3047},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":120753,"byte_end":120759,"line_start":31,"line_end":31,"column_start":5,"column_end":11},"name":"Period","qualname":"::format_description::component::Component::Period","value":"Component::Period(modifier::Period)","parent":{"krate":0,"index":3022},"children":[],"decl_id":null,"docs":" AM/PM part of the time.\n","sig":null,"attributes":[{"value":"/ AM/PM part of the time.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":120721,"byte_end":120748,"line_start":30,"line_end":30,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3049},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":120760,"byte_end":120776,"line_start":31,"line_end":31,"column_start":12,"column_end":28},"name":"0","qualname":"::format_description::component::Component::Period::0","value":"format_description::modifier::Period","parent":{"krate":0,"index":3047},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3050},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":120817,"byte_end":120823,"line_start":33,"line_end":33,"column_start":5,"column_end":11},"name":"Second","qualname":"::format_description::component::Component::Second","value":"Component::Second(modifier::Second)","parent":{"krate":0,"index":3022},"children":[],"decl_id":null,"docs":" Second within the minute.\n","sig":null,"attributes":[{"value":"/ Second within the minute.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":120783,"byte_end":120812,"line_start":32,"line_end":32,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":3052},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":120824,"byte_end":120840,"line_start":33,"line_end":33,"column_start":12,"column_end":28},"name":"0","qualname":"::format_description::component::Component::Second::0","value":"format_description::modifier::Second","parent":{"krate":0,"index":3050},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3053},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":120884,"byte_end":120893,"line_start":35,"line_end":35,"column_start":5,"column_end":14},"name":"Subsecond","qualname":"::format_description::component::Component::Subsecond","value":"Component::Subsecond(modifier::Subsecond)","parent":{"krate":0,"index":3022},"children":[],"decl_id":null,"docs":" Subsecond within the second.\n","sig":null,"attributes":[{"value":"/ Subsecond within the second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":120847,"byte_end":120879,"line_start":34,"line_end":34,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":3055},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":120894,"byte_end":120913,"line_start":35,"line_end":35,"column_start":15,"column_end":34},"name":"0","qualname":"::format_description::component::Component::Subsecond::0","value":"format_description::modifier::Subsecond","parent":{"krate":0,"index":3053},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3056},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":120952,"byte_end":120962,"line_start":37,"line_end":37,"column_start":5,"column_end":15},"name":"OffsetHour","qualname":"::format_description::component::Component::OffsetHour","value":"Component::OffsetHour(modifier::OffsetHour)","parent":{"krate":0,"index":3022},"children":[],"decl_id":null,"docs":" Hour of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Hour of the UTC offset.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":120920,"byte_end":120947,"line_start":36,"line_end":36,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3058},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":120963,"byte_end":120983,"line_start":37,"line_end":37,"column_start":16,"column_end":36},"name":"0","qualname":"::format_description::component::Component::OffsetHour::0","value":"format_description::modifier::OffsetHour","parent":{"krate":0,"index":3056},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3059},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":121040,"byte_end":121052,"line_start":39,"line_end":39,"column_start":5,"column_end":17},"name":"OffsetMinute","qualname":"::format_description::component::Component::OffsetMinute","value":"Component::OffsetMinute(modifier::OffsetMinute)","parent":{"krate":0,"index":3022},"children":[],"decl_id":null,"docs":" Minute within the hour of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Minute within the hour of the UTC offset.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":120990,"byte_end":121035,"line_start":38,"line_end":38,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":3061},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":121053,"byte_end":121075,"line_start":39,"line_end":39,"column_start":18,"column_end":40},"name":"0","qualname":"::format_description::component::Component::OffsetMinute::0","value":"format_description::modifier::OffsetMinute","parent":{"krate":0,"index":3059},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3062},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":121134,"byte_end":121146,"line_start":41,"line_end":41,"column_start":5,"column_end":17},"name":"OffsetSecond","qualname":"::format_description::component::Component::OffsetSecond","value":"Component::OffsetSecond(modifier::OffsetSecond)","parent":{"krate":0,"index":3022},"children":[],"decl_id":null,"docs":" Second within the minute of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Second within the minute of the UTC offset.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":121082,"byte_end":121129,"line_start":40,"line_end":40,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3064},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":121147,"byte_end":121169,"line_start":41,"line_end":41,"column_start":18,"column_end":40},"name":"0","qualname":"::format_description::component::Component::OffsetSecond::0","value":"format_description::modifier::OffsetSecond","parent":{"krate":0,"index":3062},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3022},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":120245,"byte_end":120254,"line_start":13,"line_end":13,"column_start":10,"column_end":19},"name":"Component","qualname":"::format_description::component::Component","value":"enum Component {\n    Day(modifier::Day),\n    Month(modifier::Month),\n    Ordinal(modifier::Ordinal),\n    Weekday(modifier::Weekday),\n    WeekNumber(modifier::WeekNumber),\n    Year(modifier::Year),\n    Hour(modifier::Hour),\n    Minute(modifier::Minute),\n    Period(modifier::Period),\n    Second(modifier::Second),\n    Subsecond(modifier::Subsecond),\n    OffsetHour(modifier::OffsetHour),\n    OffsetMinute(modifier::OffsetMinute),\n    OffsetSecond(modifier::OffsetSecond),\n}","parent":null,"children":[{"krate":0,"index":3023},{"krate":0,"index":3026},{"krate":0,"index":3029},{"krate":0,"index":3032},{"krate":0,"index":3035},{"krate":0,"index":3038},{"krate":0,"index":3041},{"krate":0,"index":3044},{"krate":0,"index":3047},{"krate":0,"index":3050},{"krate":0,"index":3053},{"krate":0,"index":3056},{"krate":0,"index":3059},{"krate":0,"index":3062}],"decl_id":null,"docs":" A component of a larger format description.\n","sig":null,"attributes":[{"value":"/ A component of a larger format description.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":120125,"byte_end":120172,"line_start":10,"line_end":10,"column_start":1,"column_end":48}},{"value":"non_exhaustive","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":120173,"byte_end":120190,"line_start":11,"line_end":11,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":643},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"modifier","qualname":"::format_description::modifier","value":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","parent":null,"children":[{"krate":0,"index":644},{"krate":0,"index":647},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":654},{"krate":0,"index":3077},{"krate":0,"index":3079},{"krate":0,"index":3081},{"krate":0,"index":3083},{"krate":0,"index":3084},{"krate":0,"index":3085},{"krate":0,"index":3088},{"krate":0,"index":3089},{"krate":0,"index":3091},{"krate":0,"index":3098},{"krate":0,"index":3100},{"krate":0,"index":3102},{"krate":0,"index":3103},{"krate":0,"index":3104},{"krate":0,"index":3106},{"krate":0,"index":3107},{"krate":0,"index":3109},{"krate":0,"index":3113},{"krate":0,"index":3115},{"krate":0,"index":3117},{"krate":0,"index":3118},{"krate":0,"index":3119},{"krate":0,"index":3122},{"krate":0,"index":3123},{"krate":0,"index":3125},{"krate":0,"index":3127},{"krate":0,"index":3129},{"krate":0,"index":3131},{"krate":0,"index":3132},{"krate":0,"index":3133},{"krate":0,"index":3136},{"krate":0,"index":3137},{"krate":0,"index":3139},{"krate":0,"index":3148},{"krate":0,"index":3150},{"krate":0,"index":3152},{"krate":0,"index":3153},{"krate":0,"index":3154},{"krate":0,"index":3156},{"krate":0,"index":3157},{"krate":0,"index":3159},{"krate":0,"index":3163},{"krate":0,"index":3165},{"krate":0,"index":3167},{"krate":0,"index":3168},{"krate":0,"index":3169},{"krate":0,"index":3172},{"krate":0,"index":3173},{"krate":0,"index":3175},{"krate":0,"index":3182},{"krate":0,"index":3184},{"krate":0,"index":3186},{"krate":0,"index":3187},{"krate":0,"index":3188},{"krate":0,"index":3190},{"krate":0,"index":3191},{"krate":0,"index":3193},{"krate":0,"index":3196},{"krate":0,"index":3198},{"krate":0,"index":3200},{"krate":0,"index":3201},{"krate":0,"index":3202},{"krate":0,"index":3205},{"krate":0,"index":3206},{"krate":0,"index":3208},{"krate":0,"index":3213},{"krate":0,"index":3215},{"krate":0,"index":3217},{"krate":0,"index":3218},{"krate":0,"index":3219},{"krate":0,"index":3221},{"krate":0,"index":3222},{"krate":0,"index":3224},{"krate":0,"index":3229},{"krate":0,"index":3231},{"krate":0,"index":3233},{"krate":0,"index":3234},{"krate":0,"index":3235},{"krate":0,"index":3238},{"krate":0,"index":3239},{"krate":0,"index":3241},{"krate":0,"index":3244},{"krate":0,"index":3246},{"krate":0,"index":3248},{"krate":0,"index":3249},{"krate":0,"index":3250},{"krate":0,"index":3253},{"krate":0,"index":3254},{"krate":0,"index":3256},{"krate":0,"index":3258},{"krate":0,"index":3260},{"krate":0,"index":3262},{"krate":0,"index":3263},{"krate":0,"index":3264},{"krate":0,"index":3267},{"krate":0,"index":3268},{"krate":0,"index":3270},{"krate":0,"index":3273},{"krate":0,"index":3275},{"krate":0,"index":3277},{"krate":0,"index":3278},{"krate":0,"index":3279},{"krate":0,"index":3282},{"krate":0,"index":3283},{"krate":0,"index":3285},{"krate":0,"index":3287},{"krate":0,"index":3289},{"krate":0,"index":3291},{"krate":0,"index":3292},{"krate":0,"index":3293},{"krate":0,"index":3296},{"krate":0,"index":3297},{"krate":0,"index":3299},{"krate":0,"index":3320},{"krate":0,"index":3322},{"krate":0,"index":3324},{"krate":0,"index":3325},{"krate":0,"index":3326},{"krate":0,"index":3328},{"krate":0,"index":3329},{"krate":0,"index":3331},{"krate":0,"index":3333},{"krate":0,"index":3335},{"krate":0,"index":3337},{"krate":0,"index":3338},{"krate":0,"index":3339},{"krate":0,"index":3342},{"krate":0,"index":3343},{"krate":0,"index":3345},{"krate":0,"index":3348},{"krate":0,"index":3350},{"krate":0,"index":3352},{"krate":0,"index":3353},{"krate":0,"index":3354},{"krate":0,"index":3357},{"krate":0,"index":3358},{"krate":0,"index":3360},{"krate":0,"index":3362},{"krate":0,"index":3364},{"krate":0,"index":3366},{"krate":0,"index":3367},{"krate":0,"index":3368},{"krate":0,"index":3371},{"krate":0,"index":3372},{"krate":0,"index":3374},{"krate":0,"index":3376},{"krate":0,"index":3378},{"krate":0,"index":3380},{"krate":0,"index":3381},{"krate":0,"index":3382},{"krate":0,"index":3385},{"krate":0,"index":3386},{"krate":0,"index":3388},{"krate":0,"index":3395},{"krate":0,"index":3397},{"krate":0,"index":3399},{"krate":0,"index":3400},{"krate":0,"index":3401},{"krate":0,"index":3403},{"krate":0,"index":3404},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":3406},{"krate":0,"index":3407},{"krate":0,"index":3409},{"krate":0,"index":3410},{"krate":0,"index":3412},{"krate":0,"index":3413},{"krate":0,"index":3415},{"krate":0,"index":3416},{"krate":0,"index":3418},{"krate":0,"index":3419},{"krate":0,"index":3421},{"krate":0,"index":3422},{"krate":0,"index":3424},{"krate":0,"index":3425},{"krate":0,"index":3427},{"krate":0,"index":3428},{"krate":0,"index":3430},{"krate":0,"index":3431},{"krate":0,"index":3433},{"krate":0,"index":3434},{"krate":0,"index":3436},{"krate":0,"index":3437},{"krate":0,"index":3439},{"krate":0,"index":3440},{"krate":0,"index":3442},{"krate":0,"index":3443},{"krate":0,"index":3445},{"krate":0,"index":3446},{"krate":0,"index":3448},{"krate":0,"index":3449},{"krate":0,"index":3451},{"krate":0,"index":3452},{"krate":0,"index":3454},{"krate":0,"index":3455},{"krate":0,"index":3457},{"krate":0,"index":3458},{"krate":0,"index":3460},{"krate":0,"index":3461},{"krate":0,"index":3463},{"krate":0,"index":3464},{"krate":0,"index":3480},{"krate":0,"index":3493},{"krate":0,"index":3495},{"krate":0,"index":659}],"decl_id":null,"docs":" Various modifiers for components.\n","sig":null,"attributes":[{"value":"/ Various modifiers for components.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":126323,"byte_end":126360,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3077},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":126680,"byte_end":126683,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"Day","qualname":"::format_description::modifier::Day","value":"Day { padding }","parent":null,"children":[{"krate":0,"index":3078}],"decl_id":null,"docs":" Day of the month.\n","sig":null,"attributes":[{"value":"/ Day of the month.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":126584,"byte_end":126605,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"non_exhaustive","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":126606,"byte_end":126623,"line_start":13,"line_end":13,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3078},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":126743,"byte_end":126750,"line_start":17,"line_end":17,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Day::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":3077},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":126690,"byte_end":126734,"line_start":16,"line_end":16,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3092},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":126951,"byte_end":126960,"line_start":25,"line_end":25,"column_start":5,"column_end":14},"name":"Numerical","qualname":"::format_description::modifier::MonthRepr::Numerical","value":"MonthRepr::Numerical","parent":{"krate":0,"index":3091},"children":[],"decl_id":null,"docs":" The number of the month (January is 1, December is 12).\n","sig":null,"attributes":[{"value":"/ The number of the month (January is 1, December is 12).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":126887,"byte_end":126946,"line_start":24,"line_end":24,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3094},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":127024,"byte_end":127028,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"name":"Long","qualname":"::format_description::modifier::MonthRepr::Long","value":"MonthRepr::Long","parent":{"krate":0,"index":3091},"children":[],"decl_id":null,"docs":" The long form of the month name (e.g. \"January\").\n","sig":null,"attributes":[{"value":"/ The long form of the month name (e.g. \"January\").","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":126966,"byte_end":127019,"line_start":26,"line_end":26,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3096},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":127089,"byte_end":127094,"line_start":29,"line_end":29,"column_start":5,"column_end":10},"name":"Short","qualname":"::format_description::modifier::MonthRepr::Short","value":"MonthRepr::Short","parent":{"krate":0,"index":3091},"children":[],"decl_id":null,"docs":" The short form of the month name (e.g. \"Jan\").\n","sig":null,"attributes":[{"value":"/ The short form of the month name (e.g. \"Jan\").","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":127034,"byte_end":127084,"line_start":28,"line_end":28,"column_start":5,"column_end":55}}]},{"kind":"Enum","id":{"krate":0,"index":3091},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":126871,"byte_end":126880,"line_start":23,"line_end":23,"column_start":10,"column_end":19},"name":"MonthRepr","qualname":"::format_description::modifier::MonthRepr","value":"enum MonthRepr { Numerical, Long, Short, }","parent":null,"children":[{"krate":0,"index":3092},{"krate":0,"index":3094},{"krate":0,"index":3096}],"decl_id":null,"docs":" The representation of a month.\n","sig":null,"attributes":[{"value":"/ The representation of a month.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":126764,"byte_end":126798,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"non_exhaustive","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":126799,"byte_end":126816,"line_start":21,"line_end":21,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3109},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":127196,"byte_end":127201,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"Month","qualname":"::format_description::modifier::Month","value":"Month { padding, repr, case_sensitive }","parent":null,"children":[{"krate":0,"index":3110},{"krate":0,"index":3111},{"krate":0,"index":3112}],"decl_id":null,"docs":" Month of the year.\n","sig":null,"attributes":[{"value":"/ Month of the year.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":127099,"byte_end":127121,"line_start":32,"line_end":32,"column_start":1,"column_end":23}},{"value":"non_exhaustive","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":127122,"byte_end":127139,"line_start":33,"line_end":33,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3110},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":127261,"byte_end":127268,"line_start":37,"line_end":37,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Month::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":3109},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":127208,"byte_end":127252,"line_start":36,"line_end":36,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":3111},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":127339,"byte_end":127343,"line_start":39,"line_end":39,"column_start":9,"column_end":13},"name":"repr","qualname":"::format_description::modifier::Month::repr","value":"format_description::modifier::MonthRepr","parent":{"krate":0,"index":3109},"children":[],"decl_id":null,"docs":" What form of representation should be used?\n","sig":null,"attributes":[{"value":"/ What form of representation should be used?","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":127283,"byte_end":127330,"line_start":38,"line_end":38,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3112},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":127414,"byte_end":127428,"line_start":41,"line_end":41,"column_start":9,"column_end":23},"name":"case_sensitive","qualname":"::format_description::modifier::Month::case_sensitive","value":"bool","parent":{"krate":0,"index":3109},"children":[],"decl_id":null,"docs":" Is the value case sensitive when parsing?\n","sig":null,"attributes":[{"value":"/ Is the value case sensitive when parsing?","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":127360,"byte_end":127405,"line_start":40,"line_end":40,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":3125},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":127542,"byte_end":127549,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"Ordinal","qualname":"::format_description::modifier::Ordinal","value":"Ordinal { padding }","parent":null,"children":[{"krate":0,"index":3126}],"decl_id":null,"docs":" Ordinal day of the year.\n","sig":null,"attributes":[{"value":"/ Ordinal day of the year.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":127439,"byte_end":127467,"line_start":44,"line_end":44,"column_start":1,"column_end":29}},{"value":"non_exhaustive","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":127468,"byte_end":127485,"line_start":45,"line_end":45,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3126},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":127609,"byte_end":127616,"line_start":49,"line_end":49,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Ordinal::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":3125},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":127556,"byte_end":127600,"line_start":48,"line_end":48,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3140},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":127825,"byte_end":127830,"line_start":57,"line_end":57,"column_start":5,"column_end":10},"name":"Short","qualname":"::format_description::modifier::WeekdayRepr::Short","value":"WeekdayRepr::Short","parent":{"krate":0,"index":3139},"children":[],"decl_id":null,"docs":" The short form of the weekday (e.g. \"Mon\").\n","sig":null,"attributes":[{"value":"/ The short form of the weekday (e.g. \"Mon\").","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":127773,"byte_end":127820,"line_start":56,"line_end":56,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3142},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":127890,"byte_end":127894,"line_start":59,"line_end":59,"column_start":5,"column_end":9},"name":"Long","qualname":"::format_description::modifier::WeekdayRepr::Long","value":"WeekdayRepr::Long","parent":{"krate":0,"index":3139},"children":[],"decl_id":null,"docs":" The long form of the weekday (e.g. \"Monday\").\n","sig":null,"attributes":[{"value":"/ The long form of the weekday (e.g. \"Monday\").","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":127836,"byte_end":127885,"line_start":58,"line_end":58,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3144},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":128060,"byte_end":128066,"line_start":63,"line_end":63,"column_start":5,"column_end":11},"name":"Sunday","qualname":"::format_description::modifier::WeekdayRepr::Sunday","value":"WeekdayRepr::Sunday","parent":{"krate":0,"index":3139},"children":[],"decl_id":null,"docs":" A numerical representation using Sunday as the first day of the week.","sig":null,"attributes":[{"value":"/ A numerical representation using Sunday as the first day of the week.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":127900,"byte_end":127973,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":127978,"byte_end":127981,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Sunday is either 0 or 1, depending on the other modifier's value.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":127986,"byte_end":128055,"line_start":62,"line_end":62,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3146},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":128232,"byte_end":128238,"line_start":67,"line_end":67,"column_start":5,"column_end":11},"name":"Monday","qualname":"::format_description::modifier::WeekdayRepr::Monday","value":"WeekdayRepr::Monday","parent":{"krate":0,"index":3139},"children":[],"decl_id":null,"docs":" A numerical representation using Monday as the first day of the week.","sig":null,"attributes":[{"value":"/ A numerical representation using Monday as the first day of the week.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":128072,"byte_end":128145,"line_start":64,"line_end":64,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":128150,"byte_end":128153,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Monday is either 0 or 1, depending on the other modifier's value.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":128158,"byte_end":128227,"line_start":66,"line_end":66,"column_start":5,"column_end":74}}]},{"kind":"Enum","id":{"krate":0,"index":3139},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":127755,"byte_end":127766,"line_start":55,"line_end":55,"column_start":10,"column_end":21},"name":"WeekdayRepr","qualname":"::format_description::modifier::WeekdayRepr","value":"enum WeekdayRepr { Short, Long, Sunday, Monday, }","parent":null,"children":[{"krate":0,"index":3140},{"krate":0,"index":3142},{"krate":0,"index":3144},{"krate":0,"index":3146}],"decl_id":null,"docs":" The representation used for the day of the week.\n","sig":null,"attributes":[{"value":"/ The representation used for the day of the week.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":127630,"byte_end":127682,"line_start":52,"line_end":52,"column_start":1,"column_end":53}},{"value":"non_exhaustive","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":127683,"byte_end":127700,"line_start":53,"line_end":53,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3159},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":128338,"byte_end":128345,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"Weekday","qualname":"::format_description::modifier::Weekday","value":"Weekday { repr, one_indexed, case_sensitive }","parent":null,"children":[{"krate":0,"index":3160},{"krate":0,"index":3161},{"krate":0,"index":3162}],"decl_id":null,"docs":" Day of the week.\n","sig":null,"attributes":[{"value":"/ Day of the week.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":128243,"byte_end":128263,"line_start":70,"line_end":70,"column_start":1,"column_end":21}},{"value":"non_exhaustive","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":128264,"byte_end":128281,"line_start":71,"line_end":71,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3160},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":128408,"byte_end":128412,"line_start":75,"line_end":75,"column_start":9,"column_end":13},"name":"repr","qualname":"::format_description::modifier::Weekday::repr","value":"format_description::modifier::WeekdayRepr","parent":{"krate":0,"index":3159},"children":[],"decl_id":null,"docs":" What form of representation should be used?\n","sig":null,"attributes":[{"value":"/ What form of representation should be used?","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":128352,"byte_end":128399,"line_start":74,"line_end":74,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3161},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":128516,"byte_end":128527,"line_start":77,"line_end":77,"column_start":9,"column_end":20},"name":"one_indexed","qualname":"::format_description::modifier::Weekday::one_indexed","value":"bool","parent":{"krate":0,"index":3159},"children":[],"decl_id":null,"docs":" When using a numerical representation, should it be zero or one-indexed?\n","sig":null,"attributes":[{"value":"/ When using a numerical representation, should it be zero or one-indexed?","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":128431,"byte_end":128507,"line_start":76,"line_end":76,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":3162},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":128593,"byte_end":128607,"line_start":79,"line_end":79,"column_start":9,"column_end":23},"name":"case_sensitive","qualname":"::format_description::modifier::Weekday::case_sensitive","value":"bool","parent":{"krate":0,"index":3159},"children":[],"decl_id":null,"docs":" Is the value case sensitive when parsing?\n","sig":null,"attributes":[{"value":"/ Is the value case sensitive when parsing?","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":128539,"byte_end":128584,"line_start":78,"line_end":78,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3176},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":128812,"byte_end":128815,"line_start":87,"line_end":87,"column_start":5,"column_end":8},"name":"Iso","qualname":"::format_description::modifier::WeekNumberRepr::Iso","value":"WeekNumberRepr::Iso","parent":{"krate":0,"index":3175},"children":[],"decl_id":null,"docs":" Week 1 is the week that contains January 4.\n","sig":null,"attributes":[{"value":"/ Week 1 is the week that contains January 4.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":128760,"byte_end":128807,"line_start":86,"line_end":86,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3178},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":128885,"byte_end":128891,"line_start":89,"line_end":89,"column_start":5,"column_end":11},"name":"Sunday","qualname":"::format_description::modifier::WeekNumberRepr::Sunday","value":"WeekNumberRepr::Sunday","parent":{"krate":0,"index":3175},"children":[],"decl_id":null,"docs":" Week 1 begins on the first Sunday of the calendar year.\n","sig":null,"attributes":[{"value":"/ Week 1 begins on the first Sunday of the calendar year.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":128821,"byte_end":128880,"line_start":88,"line_end":88,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3180},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":128961,"byte_end":128967,"line_start":91,"line_end":91,"column_start":5,"column_end":11},"name":"Monday","qualname":"::format_description::modifier::WeekNumberRepr::Monday","value":"WeekNumberRepr::Monday","parent":{"krate":0,"index":3175},"children":[],"decl_id":null,"docs":" Week 1 begins on the first Monday of the calendar year.\n","sig":null,"attributes":[{"value":"/ Week 1 begins on the first Monday of the calendar year.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":128897,"byte_end":128956,"line_start":90,"line_end":90,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":3175},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":128739,"byte_end":128753,"line_start":85,"line_end":85,"column_start":10,"column_end":24},"name":"WeekNumberRepr","qualname":"::format_description::modifier::WeekNumberRepr","value":"enum WeekNumberRepr { Iso, Sunday, Monday, }","parent":null,"children":[{"krate":0,"index":3176},{"krate":0,"index":3178},{"krate":0,"index":3180}],"decl_id":null,"docs":" The representation used for the week number.\n","sig":null,"attributes":[{"value":"/ The representation used for the week number.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":128618,"byte_end":128666,"line_start":82,"line_end":82,"column_start":1,"column_end":49}},{"value":"non_exhaustive","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":128667,"byte_end":128684,"line_start":83,"line_end":83,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3193},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":129072,"byte_end":129082,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"WeekNumber","qualname":"::format_description::modifier::WeekNumber","value":"WeekNumber { padding, repr }","parent":null,"children":[{"krate":0,"index":3194},{"krate":0,"index":3195}],"decl_id":null,"docs":" Week within the year.\n","sig":null,"attributes":[{"value":"/ Week within the year.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":128972,"byte_end":128997,"line_start":94,"line_end":94,"column_start":1,"column_end":26}},{"value":"non_exhaustive","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":128998,"byte_end":129015,"line_start":95,"line_end":95,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3194},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":129142,"byte_end":129149,"line_start":99,"line_end":99,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::WeekNumber::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":3193},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":129089,"byte_end":129133,"line_start":98,"line_end":98,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":3195},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":129220,"byte_end":129224,"line_start":101,"line_end":101,"column_start":9,"column_end":13},"name":"repr","qualname":"::format_description::modifier::WeekNumber::repr","value":"format_description::modifier::WeekNumberRepr","parent":{"krate":0,"index":3193},"children":[],"decl_id":null,"docs":" What kind of representation should be used?\n","sig":null,"attributes":[{"value":"/ What kind of representation should be used?","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":129164,"byte_end":129211,"line_start":100,"line_end":100,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3209},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":129414,"byte_end":129418,"line_start":109,"line_end":109,"column_start":5,"column_end":9},"name":"Full","qualname":"::format_description::modifier::YearRepr::Full","value":"YearRepr::Full","parent":{"krate":0,"index":3208},"children":[],"decl_id":null,"docs":" The full value of the year.\n","sig":null,"attributes":[{"value":"/ The full value of the year.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":129378,"byte_end":129409,"line_start":108,"line_end":108,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3211},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":129470,"byte_end":129477,"line_start":111,"line_end":111,"column_start":5,"column_end":12},"name":"LastTwo","qualname":"::format_description::modifier::YearRepr::LastTwo","value":"YearRepr::LastTwo","parent":{"krate":0,"index":3208},"children":[],"decl_id":null,"docs":" Only the last two digits of the year.\n","sig":null,"attributes":[{"value":"/ Only the last two digits of the year.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":129424,"byte_end":129465,"line_start":110,"line_end":110,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":3208},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":129363,"byte_end":129371,"line_start":107,"line_end":107,"column_start":10,"column_end":18},"name":"YearRepr","qualname":"::format_description::modifier::YearRepr","value":"enum YearRepr { Full, LastTwo, }","parent":null,"children":[{"krate":0,"index":3209},{"krate":0,"index":3211}],"decl_id":null,"docs":" The representation used for a year value.\n","sig":null,"attributes":[{"value":"/ The representation used for a year value.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":129245,"byte_end":129290,"line_start":104,"line_end":104,"column_start":1,"column_end":46}},{"value":"non_exhaustive","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":129291,"byte_end":129308,"line_start":105,"line_end":105,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3224},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":129578,"byte_end":129582,"line_start":117,"line_end":117,"column_start":12,"column_end":16},"name":"Year","qualname":"::format_description::modifier::Year","value":"Year { padding, repr, iso_week_based, sign_is_mandatory }","parent":null,"children":[{"krate":0,"index":3225},{"krate":0,"index":3226},{"krate":0,"index":3227},{"krate":0,"index":3228}],"decl_id":null,"docs":" Year of the date.\n","sig":null,"attributes":[{"value":"/ Year of the date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":129482,"byte_end":129503,"line_start":114,"line_end":114,"column_start":1,"column_end":22}},{"value":"non_exhaustive","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":129504,"byte_end":129521,"line_start":115,"line_end":115,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3225},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":129642,"byte_end":129649,"line_start":119,"line_end":119,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Year::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":3224},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":129589,"byte_end":129633,"line_start":118,"line_end":118,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":3226},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":129720,"byte_end":129724,"line_start":121,"line_end":121,"column_start":9,"column_end":13},"name":"repr","qualname":"::format_description::modifier::Year::repr","value":"format_description::modifier::YearRepr","parent":{"krate":0,"index":3224},"children":[],"decl_id":null,"docs":" What kind of representation should be used?\n","sig":null,"attributes":[{"value":"/ What kind of representation should be used?","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":129664,"byte_end":129711,"line_start":120,"line_end":120,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3227},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":129829,"byte_end":129843,"line_start":123,"line_end":123,"column_start":9,"column_end":23},"name":"iso_week_based","qualname":"::format_description::modifier::Year::iso_week_based","value":"bool","parent":{"krate":0,"index":3224},"children":[],"decl_id":null,"docs":" Whether the value is based on the ISO week number or the Gregorian calendar.\n","sig":null,"attributes":[{"value":"/ Whether the value is based on the ISO week number or the Gregorian calendar.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":129740,"byte_end":129820,"line_start":122,"line_end":122,"column_start":5,"column_end":85}}]},{"kind":"Field","id":{"krate":0,"index":3228},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":129953,"byte_end":129970,"line_start":125,"line_end":125,"column_start":9,"column_end":26},"name":"sign_is_mandatory","qualname":"::format_description::modifier::Year::sign_is_mandatory","value":"bool","parent":{"krate":0,"index":3224},"children":[],"decl_id":null,"docs":" Whether the `+` sign is present when a positive year contains fewer than five digits.\n","sig":null,"attributes":[{"value":"/ Whether the `+` sign is present when a positive year contains fewer than five digits.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":129855,"byte_end":129944,"line_start":124,"line_end":124,"column_start":5,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":3241},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":130130,"byte_end":130134,"line_start":133,"line_end":133,"column_start":12,"column_end":16},"name":"Hour","qualname":"::format_description::modifier::Hour","value":"Hour { padding, is_12_hour_clock }","parent":null,"children":[{"krate":0,"index":3242},{"krate":0,"index":3243}],"decl_id":null,"docs":" Hour of the day.\n","sig":null,"attributes":[{"value":"/ Hour of the day.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":130035,"byte_end":130055,"line_start":130,"line_end":130,"column_start":1,"column_end":21}},{"value":"non_exhaustive","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":130056,"byte_end":130073,"line_start":131,"line_end":131,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3242},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":130194,"byte_end":130201,"line_start":135,"line_end":135,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Hour::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":3241},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":130141,"byte_end":130185,"line_start":134,"line_end":134,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":3243},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":130279,"byte_end":130295,"line_start":137,"line_end":137,"column_start":9,"column_end":25},"name":"is_12_hour_clock","qualname":"::format_description::modifier::Hour::is_12_hour_clock","value":"bool","parent":{"krate":0,"index":3241},"children":[],"decl_id":null,"docs":" Is the hour displayed using a 12 or 24-hour clock?\n","sig":null,"attributes":[{"value":"/ Is the hour displayed using a 12 or 24-hour clock?","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":130216,"byte_end":130270,"line_start":136,"line_end":136,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":3256},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":130408,"byte_end":130414,"line_start":143,"line_end":143,"column_start":12,"column_end":18},"name":"Minute","qualname":"::format_description::modifier::Minute","value":"Minute { padding }","parent":null,"children":[{"krate":0,"index":3257}],"decl_id":null,"docs":" Minute within the hour.\n","sig":null,"attributes":[{"value":"/ Minute within the hour.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":130306,"byte_end":130333,"line_start":140,"line_end":140,"column_start":1,"column_end":28}},{"value":"non_exhaustive","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":130334,"byte_end":130351,"line_start":141,"line_end":141,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3257},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":130474,"byte_end":130481,"line_start":145,"line_end":145,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Minute::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":3256},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":130421,"byte_end":130465,"line_start":144,"line_end":144,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3270},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":130597,"byte_end":130603,"line_start":151,"line_end":151,"column_start":12,"column_end":18},"name":"Period","qualname":"::format_description::modifier::Period","value":"Period { is_uppercase, case_sensitive }","parent":null,"children":[{"krate":0,"index":3271},{"krate":0,"index":3272}],"decl_id":null,"docs":" AM/PM part of the time.\n","sig":null,"attributes":[{"value":"/ AM/PM part of the time.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":130495,"byte_end":130522,"line_start":148,"line_end":148,"column_start":1,"column_end":28}},{"value":"non_exhaustive","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":130523,"byte_end":130540,"line_start":149,"line_end":149,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3271},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":130660,"byte_end":130672,"line_start":153,"line_end":153,"column_start":9,"column_end":21},"name":"is_uppercase","qualname":"::format_description::modifier::Period::is_uppercase","value":"bool","parent":{"krate":0,"index":3270},"children":[],"decl_id":null,"docs":" Is the period uppercase or lowercase?\n","sig":null,"attributes":[{"value":"/ Is the period uppercase or lowercase?","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":130610,"byte_end":130651,"line_start":152,"line_end":152,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":3272},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":130838,"byte_end":130852,"line_start":157,"line_end":157,"column_start":9,"column_end":23},"name":"case_sensitive","qualname":"::format_description::modifier::Period::case_sensitive","value":"bool","parent":{"krate":0,"index":3270},"children":[],"decl_id":null,"docs":" Is the value case sensitive when parsing?","sig":null,"attributes":[{"value":"/ Is the value case sensitive when parsing?","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":130684,"byte_end":130729,"line_start":154,"line_end":154,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":130734,"byte_end":130737,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Note that when `false`, the `is_uppercase` field has no effect on parsing behavior.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":130742,"byte_end":130829,"line_start":156,"line_end":156,"column_start":5,"column_end":92}}]},{"kind":"Struct","id":{"krate":0,"index":3285},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":130967,"byte_end":130973,"line_start":163,"line_end":163,"column_start":12,"column_end":18},"name":"Second","qualname":"::format_description::modifier::Second","value":"Second { padding }","parent":null,"children":[{"krate":0,"index":3286}],"decl_id":null,"docs":" Second within the minute.\n","sig":null,"attributes":[{"value":"/ Second within the minute.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":130863,"byte_end":130892,"line_start":160,"line_end":160,"column_start":1,"column_end":30}},{"value":"non_exhaustive","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":130893,"byte_end":130910,"line_start":161,"line_end":161,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3286},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":131033,"byte_end":131040,"line_start":165,"line_end":165,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Second::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":3285},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":130980,"byte_end":131024,"line_start":164,"line_end":164,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3300},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":131239,"byte_end":131242,"line_start":173,"line_end":173,"column_start":5,"column_end":8},"name":"One","qualname":"::format_description::modifier::SubsecondDigits::One","value":"SubsecondDigits::One","parent":{"krate":0,"index":3299},"children":[],"decl_id":null,"docs":" Exactly one digit.\n","sig":null,"attributes":[{"value":"/ Exactly one digit.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":131212,"byte_end":131234,"line_start":172,"line_end":172,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3302},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":131276,"byte_end":131279,"line_start":175,"line_end":175,"column_start":5,"column_end":8},"name":"Two","qualname":"::format_description::modifier::SubsecondDigits::Two","value":"SubsecondDigits::Two","parent":{"krate":0,"index":3299},"children":[],"decl_id":null,"docs":" Exactly two digits.\n","sig":null,"attributes":[{"value":"/ Exactly two digits.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":131248,"byte_end":131271,"line_start":174,"line_end":174,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3304},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":131315,"byte_end":131320,"line_start":177,"line_end":177,"column_start":5,"column_end":10},"name":"Three","qualname":"::format_description::modifier::SubsecondDigits::Three","value":"SubsecondDigits::Three","parent":{"krate":0,"index":3299},"children":[],"decl_id":null,"docs":" Exactly three digits.\n","sig":null,"attributes":[{"value":"/ Exactly three digits.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":131285,"byte_end":131310,"line_start":176,"line_end":176,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3306},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":131355,"byte_end":131359,"line_start":179,"line_end":179,"column_start":5,"column_end":9},"name":"Four","qualname":"::format_description::modifier::SubsecondDigits::Four","value":"SubsecondDigits::Four","parent":{"krate":0,"index":3299},"children":[],"decl_id":null,"docs":" Exactly four digits.\n","sig":null,"attributes":[{"value":"/ Exactly four digits.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":131326,"byte_end":131350,"line_start":178,"line_end":178,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3308},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":131394,"byte_end":131398,"line_start":181,"line_end":181,"column_start":5,"column_end":9},"name":"Five","qualname":"::format_description::modifier::SubsecondDigits::Five","value":"SubsecondDigits::Five","parent":{"krate":0,"index":3299},"children":[],"decl_id":null,"docs":" Exactly five digits.\n","sig":null,"attributes":[{"value":"/ Exactly five digits.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":131365,"byte_end":131389,"line_start":180,"line_end":180,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3310},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":131432,"byte_end":131435,"line_start":183,"line_end":183,"column_start":5,"column_end":8},"name":"Six","qualname":"::format_description::modifier::SubsecondDigits::Six","value":"SubsecondDigits::Six","parent":{"krate":0,"index":3299},"children":[],"decl_id":null,"docs":" Exactly six digits.\n","sig":null,"attributes":[{"value":"/ Exactly six digits.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":131404,"byte_end":131427,"line_start":182,"line_end":182,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3312},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":131471,"byte_end":131476,"line_start":185,"line_end":185,"column_start":5,"column_end":10},"name":"Seven","qualname":"::format_description::modifier::SubsecondDigits::Seven","value":"SubsecondDigits::Seven","parent":{"krate":0,"index":3299},"children":[],"decl_id":null,"docs":" Exactly seven digits.\n","sig":null,"attributes":[{"value":"/ Exactly seven digits.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":131441,"byte_end":131466,"line_start":184,"line_end":184,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3314},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":131512,"byte_end":131517,"line_start":187,"line_end":187,"column_start":5,"column_end":10},"name":"Eight","qualname":"::format_description::modifier::SubsecondDigits::Eight","value":"SubsecondDigits::Eight","parent":{"krate":0,"index":3299},"children":[],"decl_id":null,"docs":" Exactly eight digits.\n","sig":null,"attributes":[{"value":"/ Exactly eight digits.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":131482,"byte_end":131507,"line_start":186,"line_end":186,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3316},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":131552,"byte_end":131556,"line_start":189,"line_end":189,"column_start":5,"column_end":9},"name":"Nine","qualname":"::format_description::modifier::SubsecondDigits::Nine","value":"SubsecondDigits::Nine","parent":{"krate":0,"index":3299},"children":[],"decl_id":null,"docs":" Exactly nine digits.\n","sig":null,"attributes":[{"value":"/ Exactly nine digits.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":131523,"byte_end":131547,"line_start":188,"line_end":188,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3318},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":131694,"byte_end":131703,"line_start":192,"line_end":192,"column_start":5,"column_end":14},"name":"OneOrMore","qualname":"::format_description::modifier::SubsecondDigits::OneOrMore","value":"SubsecondDigits::OneOrMore","parent":{"krate":0,"index":3299},"children":[],"decl_id":null,"docs":" Any number of digits (up to nine) that is at least one. When formatting, the minimum digits\n necessary will be used.\n","sig":null,"attributes":[{"value":"/ Any number of digits (up to nine) that is at least one. When formatting, the minimum digits","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":131562,"byte_end":131657,"line_start":190,"line_end":190,"column_start":5,"column_end":100}},{"value":"/ necessary will be used.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":131662,"byte_end":131689,"line_start":191,"line_end":191,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":3299},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":131190,"byte_end":131205,"line_start":171,"line_end":171,"column_start":10,"column_end":25},"name":"SubsecondDigits","qualname":"::format_description::modifier::SubsecondDigits","value":"enum SubsecondDigits {\n    One,\n    Two,\n    Three,\n    Four,\n    Five,\n    Six,\n    Seven,\n    Eight,\n    Nine,\n    OneOrMore,\n}","parent":null,"children":[{"krate":0,"index":3300},{"krate":0,"index":3302},{"krate":0,"index":3304},{"krate":0,"index":3306},{"krate":0,"index":3308},{"krate":0,"index":3310},{"krate":0,"index":3312},{"krate":0,"index":3314},{"krate":0,"index":3316},{"krate":0,"index":3318}],"decl_id":null,"docs":" The number of digits present in a subsecond representation.\n","sig":null,"attributes":[{"value":"/ The number of digits present in a subsecond representation.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":131054,"byte_end":131117,"line_start":168,"line_end":168,"column_start":1,"column_end":64}},{"value":"non_exhaustive","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":131118,"byte_end":131135,"line_start":169,"line_end":169,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3331},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":131815,"byte_end":131824,"line_start":198,"line_end":198,"column_start":12,"column_end":21},"name":"Subsecond","qualname":"::format_description::modifier::Subsecond","value":"Subsecond { digits }","parent":null,"children":[{"krate":0,"index":3332}],"decl_id":null,"docs":" Subsecond within the second.\n","sig":null,"attributes":[{"value":"/ Subsecond within the second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":131708,"byte_end":131740,"line_start":195,"line_end":195,"column_start":1,"column_end":33}},{"value":"non_exhaustive","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":131741,"byte_end":131758,"line_start":196,"line_end":196,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3332},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":131889,"byte_end":131895,"line_start":200,"line_end":200,"column_start":9,"column_end":15},"name":"digits","qualname":"::format_description::modifier::Subsecond::digits","value":"format_description::modifier::SubsecondDigits","parent":{"krate":0,"index":3331},"children":[],"decl_id":null,"docs":" How many digits are present in the component?\n","sig":null,"attributes":[{"value":"/ How many digits are present in the component?","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":131831,"byte_end":131880,"line_start":199,"line_end":199,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":3345},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":132075,"byte_end":132085,"line_start":208,"line_end":208,"column_start":12,"column_end":22},"name":"OffsetHour","qualname":"::format_description::modifier::OffsetHour","value":"OffsetHour { sign_is_mandatory, padding }","parent":null,"children":[{"krate":0,"index":3346},{"krate":0,"index":3347}],"decl_id":null,"docs":" Hour of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Hour of the UTC offset.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":131973,"byte_end":132000,"line_start":205,"line_end":205,"column_start":1,"column_end":28}},{"value":"non_exhaustive","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":132001,"byte_end":132018,"line_start":206,"line_end":206,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3346},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":132156,"byte_end":132173,"line_start":210,"line_end":210,"column_start":9,"column_end":26},"name":"sign_is_mandatory","qualname":"::format_description::modifier::OffsetHour::sign_is_mandatory","value":"bool","parent":{"krate":0,"index":3345},"children":[],"decl_id":null,"docs":" Whether the `+` sign is present on positive values.\n","sig":null,"attributes":[{"value":"/ Whether the `+` sign is present on positive values.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":132092,"byte_end":132147,"line_start":209,"line_end":209,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":3347},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":132238,"byte_end":132245,"line_start":212,"line_end":212,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::OffsetHour::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":3345},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":132185,"byte_end":132229,"line_start":211,"line_end":211,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3360},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":132379,"byte_end":132391,"line_start":218,"line_end":218,"column_start":12,"column_end":24},"name":"OffsetMinute","qualname":"::format_description::modifier::OffsetMinute","value":"OffsetMinute { padding }","parent":null,"children":[{"krate":0,"index":3361}],"decl_id":null,"docs":" Minute within the hour of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Minute within the hour of the UTC offset.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":132259,"byte_end":132304,"line_start":215,"line_end":215,"column_start":1,"column_end":46}},{"value":"non_exhaustive","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":132305,"byte_end":132322,"line_start":216,"line_end":216,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3361},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":132451,"byte_end":132458,"line_start":220,"line_end":220,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::OffsetMinute::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":3360},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":132398,"byte_end":132442,"line_start":219,"line_end":219,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3374},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":132594,"byte_end":132606,"line_start":226,"line_end":226,"column_start":12,"column_end":24},"name":"OffsetSecond","qualname":"::format_description::modifier::OffsetSecond","value":"OffsetSecond { padding }","parent":null,"children":[{"krate":0,"index":3375}],"decl_id":null,"docs":" Second within the minute of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Second within the minute of the UTC offset.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":132472,"byte_end":132519,"line_start":223,"line_end":223,"column_start":1,"column_end":48}},{"value":"non_exhaustive","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":132520,"byte_end":132537,"line_start":224,"line_end":224,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3375},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":132666,"byte_end":132673,"line_start":228,"line_end":228,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::OffsetSecond::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":3374},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":132613,"byte_end":132657,"line_start":227,"line_end":227,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3389},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":132909,"byte_end":132914,"line_start":237,"line_end":237,"column_start":5,"column_end":10},"name":"Space","qualname":"::format_description::modifier::Padding::Space","value":"Padding::Space","parent":{"krate":0,"index":3388},"children":[],"decl_id":null,"docs":" A space character (` `) should be used as padding.\n","sig":null,"attributes":[{"value":"/ A space character (` `) should be used as padding.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":132850,"byte_end":132904,"line_start":236,"line_end":236,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3391},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":132978,"byte_end":132982,"line_start":239,"line_end":239,"column_start":5,"column_end":9},"name":"Zero","qualname":"::format_description::modifier::Padding::Zero","value":"Padding::Zero","parent":{"krate":0,"index":3388},"children":[],"decl_id":null,"docs":" A zero character (`0`) should be used as padding.\n","sig":null,"attributes":[{"value":"/ A zero character (`0`) should be used as padding.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":132920,"byte_end":132973,"line_start":238,"line_end":238,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3393},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":133102,"byte_end":133106,"line_start":242,"line_end":242,"column_start":5,"column_end":9},"name":"None","qualname":"::format_description::modifier::Padding::None","value":"Padding::None","parent":{"krate":0,"index":3388},"children":[],"decl_id":null,"docs":" There is no padding. This can result in a width below the otherwise minimum number of\n characters.\n","sig":null,"attributes":[{"value":"/ There is no padding. This can result in a width below the otherwise minimum number of","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":132988,"byte_end":133077,"line_start":240,"line_end":240,"column_start":5,"column_end":94}},{"value":"/ characters.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":133082,"byte_end":133097,"line_start":241,"line_end":241,"column_start":5,"column_end":20}}]},{"kind":"Enum","id":{"krate":0,"index":3388},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":132836,"byte_end":132843,"line_start":235,"line_end":235,"column_start":10,"column_end":17},"name":"Padding","qualname":"::format_description::modifier::Padding","value":"enum Padding { Space, Zero, None, }","parent":null,"children":[{"krate":0,"index":3389},{"krate":0,"index":3391},{"krate":0,"index":3393}],"decl_id":null,"docs":" Type of padding to ensure a minimum width.\n","sig":null,"attributes":[{"value":"/ Type of padding to ensure a minimum width.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":132717,"byte_end":132763,"line_start":232,"line_end":232,"column_start":1,"column_end":47}},{"value":"non_exhaustive","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":132764,"byte_end":132781,"line_start":233,"line_end":233,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":692},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/parse.rs","byte_start":148743,"byte_end":148748,"line_start":84,"line_end":84,"column_start":8,"column_end":13},"name":"parse","qualname":"::format_description::parse::parse","value":"fn parse(&str) -> Result<Vec<FormatItem>, InvalidFormatDescription>","parent":null,"children":[],"decl_id":null,"docs":" Parse a sequence of items from the format description.","sig":null,"attributes":[{"value":"/ Parse a sequence of items from the format description.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/parse.rs","byte_start":148482,"byte_end":148540,"line_start":79,"line_end":79,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/parse.rs","byte_start":148541,"byte_end":148544,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ The syntax for the format description can be found in [the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/parse.rs","byte_start":148545,"byte_end":148607,"line_start":81,"line_end":81,"column_start":1,"column_end":63}},{"value":"/ book](https://time-rs.github.io/book/api/format-description.html).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/parse.rs","byte_start":148608,"byte_end":148678,"line_start":82,"line_end":82,"column_start":1,"column_end":71}}]},{"kind":"Mod","id":{"krate":0,"index":712},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":116455,"byte_end":116465,"line_start":39,"line_end":39,"column_start":9,"column_end":19},"name":"well_known","qualname":"::format_description::well_known","value":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","parent":null,"children":[{"krate":0,"index":713},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":789},{"krate":0,"index":790}],"decl_id":null,"docs":" Well-known formats, typically standards.\n","sig":null,"attributes":[{"value":"/ Well-known formats, typically standards.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":116402,"byte_end":116446,"line_start":38,"line_end":38,"column_start":1,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":713},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iso8601","qualname":"::format_description::well_known::iso8601","value":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","parent":null,"children":[{"krate":0,"index":714},{"krate":0,"index":754},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":761},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":3504},{"krate":0,"index":3507},{"krate":0,"index":3512},{"krate":0,"index":3515},{"krate":0,"index":3518},{"krate":0,"index":3523},{"krate":0,"index":3526},{"krate":0,"index":766},{"krate":0,"index":769},{"krate":0,"index":771},{"krate":0,"index":3530},{"krate":0,"index":3545},{"krate":0,"index":3547},{"krate":0,"index":3549},{"krate":0,"index":3550},{"krate":0,"index":3551},{"krate":0,"index":3553},{"krate":0,"index":3554},{"krate":0,"index":3556},{"krate":0,"index":3563},{"krate":0,"index":3565},{"krate":0,"index":3567},{"krate":0,"index":3568},{"krate":0,"index":3569},{"krate":0,"index":3571},{"krate":0,"index":3572},{"krate":0,"index":3574},{"krate":0,"index":3581},{"krate":0,"index":3583},{"krate":0,"index":3585},{"krate":0,"index":3586},{"krate":0,"index":3587},{"krate":0,"index":3590},{"krate":0,"index":3591},{"krate":0,"index":3593},{"krate":0,"index":3598},{"krate":0,"index":3600},{"krate":0,"index":3602},{"krate":0,"index":3603},{"krate":0,"index":3604},{"krate":0,"index":3606},{"krate":0,"index":3607},{"krate":0,"index":3609},{"krate":0,"index":3616},{"krate":0,"index":773}],"decl_id":null,"docs":" The format described in ISO 8601.\n","sig":null,"attributes":[{"value":"/ The format described in ISO 8601.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":149081,"byte_end":149118,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":737},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":157365,"byte_end":157386,"line_start":12,"line_end":12,"column_start":10,"column_end":31},"name":"DoNotRelyOnWhatThisIs","qualname":"::format_description::well_known::iso8601::adt_hack::DoNotRelyOnWhatThisIs","value":"u128","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":738},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":157595,"byte_end":157608,"line_start":18,"line_end":18,"column_start":10,"column_end":23},"name":"EncodedConfig","qualname":"::format_description::well_known::iso8601::adt_hack::EncodedConfig","value":"DoNotRelyOnWhatThisIs","parent":null,"children":[],"decl_id":null,"docs":" An encoded [`Config`] that can be used as a const parameter to [`Iso8601`].","sig":null,"attributes":[{"value":"/ An encoded [`Config`] that can be used as a const parameter to [`Iso8601`].","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":157396,"byte_end":157475,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":157476,"byte_end":157479,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The type this is aliased to must not be relied upon. It can change in any release without","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":157480,"byte_end":157573,"line_start":16,"line_end":16,"column_start":1,"column_end":94}},{"value":"/ notice.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":157574,"byte_end":157585,"line_start":17,"line_end":17,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":159403,"byte_end":159409,"line_start":56,"line_end":56,"column_start":18,"column_end":24},"name":"encode","qualname":"<Config>::encode","value":"const fn encode(&Self) -> EncodedConfig","parent":null,"children":[],"decl_id":null,"docs":" Encode the configuration, permitting it to be used as a const parameter of [`Iso8601`].","sig":null,"attributes":[{"value":"/ Encode the configuration, permitting it to be used as a const parameter of [`Iso8601`].","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":159140,"byte_end":159231,"line_start":52,"line_end":52,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":159236,"byte_end":159239,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ The value returned by this method must only be used as a const parameter to [`Iso8601`]. Any","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":159244,"byte_end":159340,"line_start":54,"line_end":54,"column_start":5,"column_end":101}},{"value":"/ other usage is unspecified behavior.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":159345,"byte_end":159385,"line_start":55,"line_end":55,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":3504},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":150485,"byte_end":150492,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"Iso8601","qualname":"::format_description::well_known::iso8601::Iso8601","value":"","parent":null,"children":[],"decl_id":null,"docs":" The format described in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html).","sig":null,"attributes":[{"value":"/ The format described in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":149729,"byte_end":149824,"line_start":25,"line_end":25,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":149825,"byte_end":149828,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This implementation is of ISO 8601-1:2019. It may not be compatible with other versions.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":149829,"byte_end":149921,"line_start":27,"line_end":27,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":149922,"byte_end":149925,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The const parameter `CONFIG` **must** be a value that was returned by [`Config::encode`].","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":149926,"byte_end":150019,"line_start":29,"line_end":29,"column_start":1,"column_end":94}},{"value":"/ Passing any other value is **unspecified behavior**.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":150020,"byte_end":150076,"line_start":30,"line_end":30,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":150077,"byte_end":150080,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Example: 1997-11-21T09:55:06.000000000-06:00","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":150081,"byte_end":150129,"line_start":32,"line_end":32,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":150130,"byte_end":150133,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":150134,"byte_end":150148,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":150149,"byte_end":150152,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":150153,"byte_end":150164,"line_start":36,"line_end":36,"column_start":1,"column_end":12}},{"value":"/ # use time::format_description::well_known::Iso8601;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":150165,"byte_end":150221,"line_start":37,"line_end":37,"column_start":1,"column_end":57}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":150222,"byte_end":150255,"line_start":38,"line_end":38,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":150256,"byte_end":150271,"line_start":39,"line_end":39,"column_start":1,"column_end":16}},{"value":"/     datetime!(1997-11-12 9:55:06 -6:00).format(&Iso8601::DEFAULT)?,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":150272,"byte_end":150343,"line_start":40,"line_end":40,"column_start":1,"column_end":72}},{"value":"/     \"1997-11-12T09:55:06.000000000-06:00\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":150344,"byte_end":150389,"line_start":41,"line_end":41,"column_start":1,"column_end":46}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":150390,"byte_end":150396,"line_start":42,"line_end":42,"column_start":1,"column_end":7}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":150397,"byte_end":150427,"line_start":43,"line_end":43,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":150428,"byte_end":150435,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":150604,"byte_end":150607,"line_start":49,"line_end":49,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Iso8601<CONFIG> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut core::fmt::Formatter) -> core::fmt::Result","parent":{"krate":2,"index":9902},"children":[],"decl_id":{"krate":2,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":770},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":151542,"byte_end":151549,"line_start":71,"line_end":71,"column_start":15,"column_end":22},"name":"DEFAULT","qualname":"::format_description::well_known::iso8601::Iso8601::<DEFAULT_CONFIG>::DEFAULT","value":"Self","parent":{"krate":0,"index":769},"children":[],"decl_id":null,"docs":" An [`Iso8601`] with the default configuration.","sig":null,"attributes":[{"value":"/ An [`Iso8601`] with the default configuration.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":150826,"byte_end":150876,"line_start":57,"line_end":57,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":150881,"byte_end":150884,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ The following is the default behavior:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":150889,"byte_end":150931,"line_start":59,"line_end":59,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":150936,"byte_end":150939,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ - The configuration can be used for both formatting and parsing.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":150944,"byte_end":151012,"line_start":61,"line_end":61,"column_start":5,"column_end":73}},{"value":"/ - The date, time, and UTC offset are all formatted.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":151017,"byte_end":151072,"line_start":62,"line_end":62,"column_start":5,"column_end":60}},{"value":"/ - Separators (such as `-` and `:`) are included.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":151077,"byte_end":151129,"line_start":63,"line_end":63,"column_start":5,"column_end":57}},{"value":"/ - The year contains four digits, such that the year must be between 0 and 9999.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":151134,"byte_end":151217,"line_start":64,"line_end":64,"column_start":5,"column_end":88}},{"value":"/ - The date uses the calendar format.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":151222,"byte_end":151262,"line_start":65,"line_end":65,"column_start":5,"column_end":45}},{"value":"/ - The time has precision to the second and nine decimal digits.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":151267,"byte_end":151334,"line_start":66,"line_end":66,"column_start":5,"column_end":72}},{"value":"/ - The UTC offset has precision to the minute.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":151339,"byte_end":151388,"line_start":67,"line_end":67,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":151393,"byte_end":151396,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If you need different behavior, use [`Config::DEFAULT`] and [`Config`]'s methods to create","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":151401,"byte_end":151495,"line_start":69,"line_end":69,"column_start":5,"column_end":99}},{"value":"/ a custom configuration.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":151500,"byte_end":151527,"line_start":70,"line_end":70,"column_start":5,"column_end":32}}]},{"kind":"Const","id":{"krate":0,"index":772},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":151730,"byte_end":151737,"line_start":77,"line_end":77,"column_start":15,"column_end":22},"name":"PARSING","qualname":"::format_description::well_known::iso8601::Iso8601::<PARSING_ONLY>::PARSING","value":"Self","parent":{"krate":0,"index":771},"children":[],"decl_id":null,"docs":" An [`Iso8601`] that can only be used for parsing. Using this to format a value is\n unspecified behavior.\n","sig":null,"attributes":[{"value":"/ An [`Iso8601`] that can only be used for parsing. Using this to format a value is","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":151600,"byte_end":151685,"line_start":75,"line_end":75,"column_start":5,"column_end":90}},{"value":"/ unspecified behavior.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":151690,"byte_end":151715,"line_start":76,"line_end":76,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3531},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":151985,"byte_end":151989,"line_start":85,"line_end":85,"column_start":5,"column_end":9},"name":"None","qualname":"::format_description::well_known::iso8601::FormattedComponents::None","value":"FormattedComponents::None","parent":{"krate":0,"index":3530},"children":[],"decl_id":null,"docs":" The configuration can only be used for parsing. Using this to format a value is\n unspecified behavior.\n","sig":null,"attributes":[{"value":"/ The configuration can only be used for parsing. Using this to format a value is","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":151867,"byte_end":151950,"line_start":83,"line_end":83,"column_start":5,"column_end":88}},{"value":"/ unspecified behavior.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":151955,"byte_end":151980,"line_start":84,"line_end":84,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3533},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":152025,"byte_end":152029,"line_start":87,"line_end":87,"column_start":5,"column_end":9},"name":"Date","qualname":"::format_description::well_known::iso8601::FormattedComponents::Date","value":"FormattedComponents::Date","parent":{"krate":0,"index":3530},"children":[],"decl_id":null,"docs":" Format only the date.\n","sig":null,"attributes":[{"value":"/ Format only the date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":151995,"byte_end":152020,"line_start":86,"line_end":86,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3535},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":152065,"byte_end":152069,"line_start":89,"line_end":89,"column_start":5,"column_end":9},"name":"Time","qualname":"::format_description::well_known::iso8601::FormattedComponents::Time","value":"FormattedComponents::Time","parent":{"krate":0,"index":3530},"children":[],"decl_id":null,"docs":" Format only the time.\n","sig":null,"attributes":[{"value":"/ Format only the time.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":152035,"byte_end":152060,"line_start":88,"line_end":88,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3537},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":152111,"byte_end":152117,"line_start":91,"line_end":91,"column_start":5,"column_end":11},"name":"Offset","qualname":"::format_description::well_known::iso8601::FormattedComponents::Offset","value":"FormattedComponents::Offset","parent":{"krate":0,"index":3530},"children":[],"decl_id":null,"docs":" Format only the UTC offset.\n","sig":null,"attributes":[{"value":"/ Format only the UTC offset.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":152075,"byte_end":152106,"line_start":90,"line_end":90,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3539},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":152157,"byte_end":152165,"line_start":93,"line_end":93,"column_start":5,"column_end":13},"name":"DateTime","qualname":"::format_description::well_known::iso8601::FormattedComponents::DateTime","value":"FormattedComponents::DateTime","parent":{"krate":0,"index":3530},"children":[],"decl_id":null,"docs":" Format the date and time.\n","sig":null,"attributes":[{"value":"/ Format the date and time.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":152123,"byte_end":152152,"line_start":92,"line_end":92,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3541},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":152218,"byte_end":152232,"line_start":95,"line_end":95,"column_start":5,"column_end":19},"name":"DateTimeOffset","qualname":"::format_description::well_known::iso8601::FormattedComponents::DateTimeOffset","value":"FormattedComponents::DateTimeOffset","parent":{"krate":0,"index":3530},"children":[],"decl_id":null,"docs":" Format the date, time, and UTC offset.\n","sig":null,"attributes":[{"value":"/ Format the date, time, and UTC offset.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":152171,"byte_end":152213,"line_start":94,"line_end":94,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3543},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":152278,"byte_end":152288,"line_start":97,"line_end":97,"column_start":5,"column_end":15},"name":"TimeOffset","qualname":"::format_description::well_known::iso8601::FormattedComponents::TimeOffset","value":"FormattedComponents::TimeOffset","parent":{"krate":0,"index":3530},"children":[],"decl_id":null,"docs":" Format the time and UTC offset.\n","sig":null,"attributes":[{"value":"/ Format the time and UTC offset.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":152238,"byte_end":152273,"line_start":96,"line_end":96,"column_start":5,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":3530},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":151841,"byte_end":151860,"line_start":82,"line_end":82,"column_start":10,"column_end":29},"name":"FormattedComponents","qualname":"::format_description::well_known::iso8601::FormattedComponents","value":"enum FormattedComponents {\n    None,\n    Date,\n    Time,\n    Offset,\n    DateTime,\n    DateTimeOffset,\n    TimeOffset,\n}","parent":null,"children":[{"krate":0,"index":3531},{"krate":0,"index":3533},{"krate":0,"index":3535},{"krate":0,"index":3537},{"krate":0,"index":3539},{"krate":0,"index":3541},{"krate":0,"index":3543}],"decl_id":null,"docs":" Which components to format.\n","sig":null,"attributes":[{"value":"/ Which components to format.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":151755,"byte_end":151786,"line_start":80,"line_end":80,"column_start":1,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3557},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":152439,"byte_end":152447,"line_start":104,"line_end":104,"column_start":5,"column_end":13},"name":"Calendar","qualname":"::format_description::well_known::iso8601::DateKind::Calendar","value":"DateKind::Calendar","parent":{"krate":0,"index":3556},"children":[],"decl_id":null,"docs":" Use the year-month-day format.\n","sig":null,"attributes":[{"value":"/ Use the year-month-day format.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":152400,"byte_end":152434,"line_start":103,"line_end":103,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3559},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":152495,"byte_end":152499,"line_start":106,"line_end":106,"column_start":5,"column_end":9},"name":"Week","qualname":"::format_description::well_known::iso8601::DateKind::Week","value":"DateKind::Week","parent":{"krate":0,"index":3556},"children":[],"decl_id":null,"docs":" Use the year-week-weekday format.\n","sig":null,"attributes":[{"value":"/ Use the year-week-weekday format.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":152453,"byte_end":152490,"line_start":105,"line_end":105,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3561},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":152542,"byte_end":152549,"line_start":108,"line_end":108,"column_start":5,"column_end":12},"name":"Ordinal","qualname":"::format_description::well_known::iso8601::DateKind::Ordinal","value":"DateKind::Ordinal","parent":{"krate":0,"index":3556},"children":[],"decl_id":null,"docs":" Use the week-ordinal format.\n","sig":null,"attributes":[{"value":"/ Use the week-ordinal format.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":152505,"byte_end":152537,"line_start":107,"line_end":107,"column_start":5,"column_end":37}}]},{"kind":"Enum","id":{"krate":0,"index":3556},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":152385,"byte_end":152393,"line_start":102,"line_end":102,"column_start":10,"column_end":18},"name":"DateKind","qualname":"::format_description::well_known::iso8601::DateKind","value":"enum DateKind { Calendar, Week, Ordinal, }","parent":null,"children":[{"krate":0,"index":3557},{"krate":0,"index":3559},{"krate":0,"index":3561}],"decl_id":null,"docs":" Which format to use for the date.\n","sig":null,"attributes":[{"value":"/ Which format to use for the date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":152293,"byte_end":152330,"line_start":100,"line_end":100,"column_start":1,"column_end":38}}]},{"kind":"StructVariant","id":{"krate":0,"index":3575},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":152842,"byte_end":152846,"line_start":116,"line_end":116,"column_start":5,"column_end":9},"name":"Hour","qualname":"::format_description::well_known::iso8601::TimePrecision::Hour","value":"TimePrecision::Hour { decimal_digits }","parent":{"krate":0,"index":3574},"children":[],"decl_id":null,"docs":" Format the hour only. Minutes, seconds, and nanoseconds will be represented with the\n specified number of decimal digits, if any.\n","sig":null,"attributes":[{"value":"/ Format the hour only. Minutes, seconds, and nanoseconds will be represented with the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":152697,"byte_end":152785,"line_start":114,"line_end":114,"column_start":5,"column_end":93}},{"value":"/ specified number of decimal digits, if any.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":152790,"byte_end":152837,"line_start":115,"line_end":115,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3576},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":152913,"byte_end":152927,"line_start":118,"line_end":118,"column_start":9,"column_end":23},"name":"decimal_digits","qualname":"::format_description::well_known::iso8601::TimePrecision::Hour::decimal_digits","value":"std::option::Option<std::num::NonZeroU8>","parent":{"krate":0,"index":3575},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":152857,"byte_end":152904,"line_start":117,"line_end":117,"column_start":9,"column_end":56}}]},{"kind":"StructVariant","id":{"krate":0,"index":3577},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":153100,"byte_end":153106,"line_start":122,"line_end":122,"column_start":5,"column_end":11},"name":"Minute","qualname":"::format_description::well_known::iso8601::TimePrecision::Minute","value":"TimePrecision::Minute { decimal_digits }","parent":{"krate":0,"index":3574},"children":[],"decl_id":null,"docs":" Format the hour and minute. Seconds and nanoseconds will be represented with the specified\n number of decimal digits, if any.\n","sig":null,"attributes":[{"value":"/ Format the hour and minute. Seconds and nanoseconds will be represented with the specified","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":152959,"byte_end":153053,"line_start":120,"line_end":120,"column_start":5,"column_end":99}},{"value":"/ number of decimal digits, if any.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":153058,"byte_end":153095,"line_start":121,"line_end":121,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":3578},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":153173,"byte_end":153187,"line_start":124,"line_end":124,"column_start":9,"column_end":23},"name":"decimal_digits","qualname":"::format_description::well_known::iso8601::TimePrecision::Minute::decimal_digits","value":"std::option::Option<std::num::NonZeroU8>","parent":{"krate":0,"index":3577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":153117,"byte_end":153164,"line_start":123,"line_end":123,"column_start":9,"column_end":56}}]},{"kind":"StructVariant","id":{"krate":0,"index":3579},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":153357,"byte_end":153363,"line_start":128,"line_end":128,"column_start":5,"column_end":11},"name":"Second","qualname":"::format_description::well_known::iso8601::TimePrecision::Second","value":"TimePrecision::Second { decimal_digits }","parent":{"krate":0,"index":3574},"children":[],"decl_id":null,"docs":" Format the hour, minute, and second. Nanoseconds will be represented with the specified\n number of decimal digits, if any.\n","sig":null,"attributes":[{"value":"/ Format the hour, minute, and second. Nanoseconds will be represented with the specified","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":153219,"byte_end":153310,"line_start":126,"line_end":126,"column_start":5,"column_end":96}},{"value":"/ number of decimal digits, if any.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":153315,"byte_end":153352,"line_start":127,"line_end":127,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":3580},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":153430,"byte_end":153444,"line_start":130,"line_end":130,"column_start":9,"column_end":23},"name":"decimal_digits","qualname":"::format_description::well_known::iso8601::TimePrecision::Second::decimal_digits","value":"std::option::Option<std::num::NonZeroU8>","parent":{"krate":0,"index":3579},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":153374,"byte_end":153421,"line_start":129,"line_end":129,"column_start":9,"column_end":56}}]},{"kind":"Enum","id":{"krate":0,"index":3574},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":152677,"byte_end":152690,"line_start":113,"line_end":113,"column_start":10,"column_end":23},"name":"TimePrecision","qualname":"::format_description::well_known::iso8601::TimePrecision","value":"enum TimePrecision {\n    Hour {\n            decimal_digits: Option<NonZeroU8>,\n        },\n    Minute {\n            decimal_digits: Option<NonZeroU8>,\n        },\n    Second {\n            decimal_digits: Option<NonZeroU8>,\n        },\n}","parent":null,"children":[{"krate":0,"index":3575},{"krate":0,"index":3577},{"krate":0,"index":3579}],"decl_id":null,"docs":" The precision and number of decimal digits present for the time.\n","sig":null,"attributes":[{"value":"/ The precision and number of decimal digits present for the time.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":152554,"byte_end":152622,"line_start":111,"line_end":111,"column_start":1,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3594},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":153665,"byte_end":153669,"line_start":138,"line_end":138,"column_start":5,"column_end":9},"name":"Hour","qualname":"::format_description::well_known::iso8601::OffsetPrecision::Hour","value":"OffsetPrecision::Hour","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" Format only the offset hour. Requires the offset minute to be zero.\n","sig":null,"attributes":[{"value":"/ Format only the offset hour. Requires the offset minute to be zero.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":153589,"byte_end":153660,"line_start":137,"line_end":137,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3596},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":153723,"byte_end":153729,"line_start":140,"line_end":140,"column_start":5,"column_end":11},"name":"Minute","qualname":"::format_description::well_known::iso8601::OffsetPrecision::Minute","value":"OffsetPrecision::Minute","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" Format both the offset hour and minute.\n","sig":null,"attributes":[{"value":"/ Format both the offset hour and minute.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":153675,"byte_end":153718,"line_start":139,"line_end":139,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":3593},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":153567,"byte_end":153582,"line_start":136,"line_end":136,"column_start":10,"column_end":25},"name":"OffsetPrecision","qualname":"::format_description::well_known::iso8601::OffsetPrecision","value":"enum OffsetPrecision { Hour, Minute, }","parent":null,"children":[{"krate":0,"index":3594},{"krate":0,"index":3596}],"decl_id":null,"docs":" The precision for the UTC offset.\n","sig":null,"attributes":[{"value":"/ The precision for the UTC offset.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":153475,"byte_end":153512,"line_start":134,"line_end":134,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3609},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":154043,"byte_end":154049,"line_start":149,"line_end":149,"column_start":12,"column_end":18},"name":"Config","qualname":"::format_description::well_known::iso8601::Config","value":"Config {  }","parent":null,"children":[{"krate":0,"index":3610},{"krate":0,"index":3611},{"krate":0,"index":3612},{"krate":0,"index":3613},{"krate":0,"index":3614},{"krate":0,"index":3615}],"decl_id":null,"docs":" Configuration for [`Iso8601`].\n","sig":null,"attributes":[{"value":"/ Configuration for [`Iso8601`].","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":153734,"byte_end":153768,"line_start":143,"line_end":143,"column_start":1,"column_end":35}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":153875,"byte_end":153913,"line_start":146,"line_end":146,"column_start":1,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":774},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":155317,"byte_end":155324,"line_start":178,"line_end":178,"column_start":15,"column_end":22},"name":"DEFAULT","qualname":"::format_description::well_known::iso8601::Config::DEFAULT","value":"Self","parent":{"krate":0,"index":773},"children":[],"decl_id":null,"docs":" A configuration for the [`Iso8601`] format.","sig":null,"attributes":[{"value":"/ A configuration for the [`Iso8601`] format.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":154656,"byte_end":154703,"line_start":165,"line_end":165,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":154708,"byte_end":154711,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ The following is the default behavior:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":154716,"byte_end":154758,"line_start":167,"line_end":167,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":154763,"byte_end":154766,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ - The configuration can be used for both formatting and parsing.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":154771,"byte_end":154839,"line_start":169,"line_end":169,"column_start":5,"column_end":73}},{"value":"/ - The date, time, and UTC offset are all formatted.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":154844,"byte_end":154899,"line_start":170,"line_end":170,"column_start":5,"column_end":60}},{"value":"/ - Separators (such as `-` and `:`) are included.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":154904,"byte_end":154956,"line_start":171,"line_end":171,"column_start":5,"column_end":57}},{"value":"/ - The year contains four digits, such that the year must be between 0 and 9999.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":154961,"byte_end":155044,"line_start":172,"line_end":172,"column_start":5,"column_end":88}},{"value":"/ - The date uses the calendar format.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":155049,"byte_end":155089,"line_start":173,"line_end":173,"column_start":5,"column_end":45}},{"value":"/ - The time has precision to the second and nine decimal digits.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":155094,"byte_end":155161,"line_start":174,"line_end":174,"column_start":5,"column_end":72}},{"value":"/ - The UTC offset has precision to the minute.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":155166,"byte_end":155215,"line_start":175,"line_end":175,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":155220,"byte_end":155223,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ If you need different behavior, use the setter methods on this struct.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":155228,"byte_end":155302,"line_start":177,"line_end":177,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":775},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":155759,"byte_end":155783,"line_start":190,"line_end":190,"column_start":18,"column_end":42},"name":"set_formatted_components","qualname":"<Config>::set_formatted_components","value":"const fn set_formatted_components(Self, FormattedComponents) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether the format the date, time, and/or UTC offset.\n","sig":null,"attributes":[{"value":"/ Set whether the format the date, time, and/or UTC offset.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":155680,"byte_end":155741,"line_start":189,"line_end":189,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":776},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":156018,"byte_end":156036,"line_start":198,"line_end":198,"column_start":18,"column_end":36},"name":"set_use_separators","qualname":"<Config>::set_use_separators","value":"const fn set_use_separators(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether the format contains separators (such as `-` or `:`).\n","sig":null,"attributes":[{"value":"/ Set whether the format contains separators (such as `-` or `:`).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":155932,"byte_end":156000,"line_start":197,"line_end":197,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":777},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":156215,"byte_end":156237,"line_start":206,"line_end":206,"column_start":18,"column_end":40},"name":"set_year_is_six_digits","qualname":"<Config>::set_year_is_six_digits","value":"const fn set_year_is_six_digits(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether the year is six digits.\n","sig":null,"attributes":[{"value":"/ Set whether the year is six digits.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":156158,"byte_end":156197,"line_start":205,"line_end":205,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":778},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":156422,"byte_end":156435,"line_start":214,"line_end":214,"column_start":18,"column_end":31},"name":"set_date_kind","qualname":"<Config>::set_date_kind","value":"const fn set_date_kind(Self, DateKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the format used for the date.\n","sig":null,"attributes":[{"value":"/ Set the format used for the date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":156367,"byte_end":156404,"line_start":213,"line_end":213,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":156609,"byte_end":156627,"line_start":219,"line_end":219,"column_start":18,"column_end":36},"name":"set_time_precision","qualname":"<Config>::set_time_precision","value":"const fn set_time_precision(Self, TimePrecision) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the precision and number of decimal digits present for the time.\n","sig":null,"attributes":[{"value":"/ Set the precision and number of decimal digits present for the time.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":156519,"byte_end":156591,"line_start":218,"line_end":218,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":780},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":156817,"byte_end":156837,"line_start":227,"line_end":227,"column_start":18,"column_end":38},"name":"set_offset_precision","qualname":"<Config>::set_offset_precision","value":"const fn set_offset_precision(Self, OffsetPrecision) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the precision for the UTC offset.\n","sig":null,"attributes":[{"value":"/ Set the precision for the UTC offset.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":156758,"byte_end":156799,"line_start":226,"line_end":226,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":3618},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc2822.rs","byte_start":167569,"byte_end":167576,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"Rfc2822","qualname":"::format_description::well_known::rfc2822::Rfc2822","value":"","parent":null,"children":[],"decl_id":null,"docs":" The format described in [RFC 2822](https://tools.ietf.org/html/rfc2822#section-3.3).","sig":null,"attributes":[{"value":"/ The format described in [RFC 2822](https://tools.ietf.org/html/rfc2822#section-3.3).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc2822.rs","byte_start":166802,"byte_end":166890,"line_start":3,"line_end":3,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc2822.rs","byte_start":166891,"byte_end":166894,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Example: Fri, 21 Nov 1997 09:55:06 -0600","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc2822.rs","byte_start":166895,"byte_end":166939,"line_start":5,"line_end":5,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc2822.rs","byte_start":166940,"byte_end":166943,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc2822.rs","byte_start":166944,"byte_end":166958,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc2822.rs","byte_start":166959,"byte_end":166962,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc2822.rs","byte_start":166963,"byte_end":166974,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"/ # use time::{format_description::well_known::Rfc2822, macros::datetime, OffsetDateTime};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc2822.rs","byte_start":166975,"byte_end":167067,"line_start":10,"line_end":10,"column_start":1,"column_end":93}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc2822.rs","byte_start":167068,"byte_end":167083,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/     OffsetDateTime::parse(\"Sat, 12 Jun 1993 13:25:19 GMT\", &Rfc2822)?,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc2822.rs","byte_start":167084,"byte_end":167158,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/     datetime!(1993-06-12 13:25:19 +00:00)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc2822.rs","byte_start":167159,"byte_end":167204,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc2822.rs","byte_start":167205,"byte_end":167211,"line_start":14,"line_end":14,"column_start":1,"column_end":7}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc2822.rs","byte_start":167212,"byte_end":167242,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc2822.rs","byte_start":167243,"byte_end":167250,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc2822.rs","byte_start":167251,"byte_end":167254,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc2822.rs","byte_start":167255,"byte_end":167266,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/ # use time::{format_description::well_known::Rfc2822, macros::datetime};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc2822.rs","byte_start":167267,"byte_end":167343,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc2822.rs","byte_start":167344,"byte_end":167359,"line_start":20,"line_end":20,"column_start":1,"column_end":16}},{"value":"/     datetime!(1997-11-21 09:55:06 -06:00).format(&Rfc2822)?,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc2822.rs","byte_start":167360,"byte_end":167424,"line_start":21,"line_end":21,"column_start":1,"column_end":65}},{"value":"/     \"Fri, 21 Nov 1997 09:55:06 -0600\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc2822.rs","byte_start":167425,"byte_end":167466,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc2822.rs","byte_start":167467,"byte_end":167473,"line_start":23,"line_end":23,"column_start":1,"column_end":7}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc2822.rs","byte_start":167474,"byte_end":167504,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc2822.rs","byte_start":167505,"byte_end":167512,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3631},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc3339.rs","byte_start":168376,"byte_end":168383,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"Rfc3339","qualname":"::format_description::well_known::rfc3339::Rfc3339","value":"","parent":null,"children":[],"decl_id":null,"docs":" The format described in [RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6).","sig":null,"attributes":[{"value":"/ The format described in [RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc3339.rs","byte_start":167618,"byte_end":167706,"line_start":3,"line_end":3,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc3339.rs","byte_start":167707,"byte_end":167710,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Format example: 1985-04-12T23:20:50.52Z","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc3339.rs","byte_start":167711,"byte_end":167754,"line_start":5,"line_end":5,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc3339.rs","byte_start":167755,"byte_end":167758,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc3339.rs","byte_start":167759,"byte_end":167773,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc3339.rs","byte_start":167774,"byte_end":167777,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc3339.rs","byte_start":167778,"byte_end":167789,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"/ # use time::{format_description::well_known::Rfc3339, macros::datetime, OffsetDateTime};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc3339.rs","byte_start":167790,"byte_end":167882,"line_start":10,"line_end":10,"column_start":1,"column_end":93}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc3339.rs","byte_start":167883,"byte_end":167898,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/     OffsetDateTime::parse(\"1985-04-12T23:20:50.52Z\", &Rfc3339)?,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc3339.rs","byte_start":167899,"byte_end":167967,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"/     datetime!(1985-04-12 23:20:50.52 +00:00)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc3339.rs","byte_start":167968,"byte_end":168016,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc3339.rs","byte_start":168017,"byte_end":168023,"line_start":14,"line_end":14,"column_start":1,"column_end":7}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc3339.rs","byte_start":168024,"byte_end":168054,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc3339.rs","byte_start":168055,"byte_end":168062,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc3339.rs","byte_start":168063,"byte_end":168066,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc3339.rs","byte_start":168067,"byte_end":168078,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/ # use time::{format_description::well_known::Rfc3339, macros::datetime};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc3339.rs","byte_start":168079,"byte_end":168155,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc3339.rs","byte_start":168156,"byte_end":168171,"line_start":20,"line_end":20,"column_start":1,"column_end":16}},{"value":"/     datetime!(1985-04-12 23:20:50.52 +00:00).format(&Rfc3339)?,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc3339.rs","byte_start":168172,"byte_end":168239,"line_start":21,"line_end":21,"column_start":1,"column_end":68}},{"value":"/     \"1985-04-12T23:20:50.52Z\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc3339.rs","byte_start":168240,"byte_end":168273,"line_start":22,"line_end":22,"column_start":1,"column_end":34}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc3339.rs","byte_start":168274,"byte_end":168280,"line_start":23,"line_end":23,"column_start":1,"column_end":7}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc3339.rs","byte_start":168281,"byte_end":168311,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/rfc3339.rs","byte_start":168312,"byte_end":168319,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3646},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":117022,"byte_end":117029,"line_start":59,"line_end":59,"column_start":5,"column_end":12},"name":"Literal","qualname":"::format_description::FormatItem::Literal","value":"FormatItem::Literal(&'a [u8])","parent":{"krate":0,"index":3644},"children":[],"decl_id":null,"docs":" Bytes that are formatted as-is.","sig":null,"attributes":[{"value":"/ Bytes that are formatted as-is.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":116829,"byte_end":116864,"line_start":55,"line_end":55,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":116869,"byte_end":116872,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ **Note**: If you call the `format` method that returns a `String`, these bytes will be","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":116877,"byte_end":116967,"line_start":57,"line_end":57,"column_start":5,"column_end":95}},{"value":"/ passed through `String::from_utf8_lossy`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":116972,"byte_end":117017,"line_start":58,"line_end":58,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":3648},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":117030,"byte_end":117038,"line_start":59,"line_end":59,"column_start":13,"column_end":21},"name":"0","qualname":"::format_description::FormatItem::Literal::0","value":"&'a [u8]","parent":{"krate":0,"index":3646},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3649},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":117108,"byte_end":117117,"line_start":61,"line_end":61,"column_start":5,"column_end":14},"name":"Component","qualname":"::format_description::FormatItem::Component","value":"FormatItem::Component(Component)","parent":{"krate":0,"index":3644},"children":[],"decl_id":null,"docs":" A minimal representation of a single non-literal item.\n","sig":null,"attributes":[{"value":"/ A minimal representation of a single non-literal item.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":117045,"byte_end":117103,"line_start":60,"line_end":60,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":3651},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":117118,"byte_end":117127,"line_start":61,"line_end":61,"column_start":15,"column_end":24},"name":"0","qualname":"::format_description::FormatItem::Component::0","value":"format_description::component::Component","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3652},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":117243,"byte_end":117251,"line_start":64,"line_end":64,"column_start":5,"column_end":13},"name":"Compound","qualname":"::format_description::FormatItem::Compound","value":"FormatItem::Compound(&'a [Self])","parent":{"krate":0,"index":3644},"children":[],"decl_id":null,"docs":" A series of literals or components that collectively form a partial or complete\n description.\n","sig":null,"attributes":[{"value":"/ A series of literals or components that collectively form a partial or complete","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":117134,"byte_end":117217,"line_start":62,"line_end":62,"column_start":5,"column_end":88}},{"value":"/ description.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":117222,"byte_end":117238,"line_start":63,"line_end":63,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":3654},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":117252,"byte_end":117262,"line_start":64,"line_end":64,"column_start":14,"column_end":24},"name":"0","qualname":"::format_description::FormatItem::Compound::0","value":"&'a [format_description::FormatItem<'a>]","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3655},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":117514,"byte_end":117522,"line_start":69,"line_end":69,"column_start":5,"column_end":13},"name":"Optional","qualname":"::format_description::FormatItem::Optional","value":"FormatItem::Optional(&'a Self)","parent":{"krate":0,"index":3644},"children":[],"decl_id":null,"docs":" A `FormatItem` that may or may not be present when parsing. If parsing fails, there will be\n no effect on the resulting `struct`.","sig":null,"attributes":[{"value":"/ A `FormatItem` that may or may not be present when parsing. If parsing fails, there will be","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":117269,"byte_end":117364,"line_start":65,"line_end":65,"column_start":5,"column_end":100}},{"value":"/ no effect on the resulting `struct`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":117369,"byte_end":117409,"line_start":66,"line_end":66,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":117414,"byte_end":117417,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This variant has no effect on formatting, as the value is guaranteed to be present.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":117422,"byte_end":117509,"line_start":68,"line_end":68,"column_start":5,"column_end":92}}]},{"kind":"Field","id":{"krate":0,"index":3657},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":117523,"byte_end":117531,"line_start":69,"line_end":69,"column_start":14,"column_end":22},"name":"0","qualname":"::format_description::FormatItem::Optional::0","value":"&'a format_description::FormatItem<'a>","parent":{"krate":0,"index":3655},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3658},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":117757,"byte_end":117762,"line_start":73,"line_end":73,"column_start":5,"column_end":10},"name":"First","qualname":"::format_description::FormatItem::First","value":"FormatItem::First(&'a [Self])","parent":{"krate":0,"index":3644},"children":[],"decl_id":null,"docs":" A series of `FormatItem`s where, when parsing, the first successful parse is used. When\n formatting, the first element of the slice is used.  An empty slice is a no-op when\n formatting or parsing.\n","sig":null,"attributes":[{"value":"/ A series of `FormatItem`s where, when parsing, the first successful parse is used. When","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":117538,"byte_end":117629,"line_start":70,"line_end":70,"column_start":5,"column_end":96}},{"value":"/ formatting, the first element of the slice is used.  An empty slice is a no-op when","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":117634,"byte_end":117721,"line_start":71,"line_end":71,"column_start":5,"column_end":92}},{"value":"/ formatting or parsing.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":117726,"byte_end":117752,"line_start":72,"line_end":72,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":3660},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":117763,"byte_end":117773,"line_start":73,"line_end":73,"column_start":11,"column_end":21},"name":"0","qualname":"::format_description::FormatItem::First::0","value":"&'a [format_description::FormatItem<'a>]","parent":{"krate":0,"index":3658},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3644},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":116808,"byte_end":116818,"line_start":54,"line_end":54,"column_start":10,"column_end":20},"name":"FormatItem","qualname":"::format_description::FormatItem","value":"enum FormatItem<'a> {\n    Literal(&'a [u8]),\n    Component(Component),\n    Compound(&'a [Self]),\n    Optional(&'a Self),\n    First(&'a [Self]),\n}","parent":null,"children":[{"krate":0,"index":3646},{"krate":0,"index":3649},{"krate":0,"index":3652},{"krate":0,"index":3655},{"krate":0,"index":3658}],"decl_id":null,"docs":" A complete description of how to format and parse a type.\n","sig":null,"attributes":[{"value":"/ A complete description of how to format and parse a type.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":116636,"byte_end":116697,"line_start":50,"line_end":50,"column_start":1,"column_end":62}},{"value":"non_exhaustive","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":116698,"byte_end":116715,"line_start":51,"line_end":51,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":793},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":117849,"byte_end":117852,"line_start":78,"line_end":78,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FormatItem as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9902},"children":[],"decl_id":{"krate":2,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":118391,"byte_end":118395,"line_start":90,"line_end":90,"column_start":8,"column_end":12},"name":"from","qualname":"<FormatItem as std::convert::From>::from","value":"fn from(Component) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":118567,"byte_end":118575,"line_start":98,"line_end":98,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Component as std::convert::TryFrom>::try_from","value":"fn try_from(FormatItem) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":118845,"byte_end":118849,"line_start":107,"line_end":107,"column_start":8,"column_end":12},"name":"from","qualname":"<FormatItem as std::convert::From>::from","value":"fn from(&'a [FormatItem]) -> FormatItem","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":119051,"byte_end":119059,"line_start":115,"line_end":115,"column_start":8,"column_end":16},"name":"try_from","qualname":"<&'_ [FormatItem] as std::convert::TryFrom>::try_from","value":"fn try_from(FormatItem) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":119310,"byte_end":119312,"line_start":124,"line_end":124,"column_start":8,"column_end":10},"name":"eq","qualname":"<FormatItem as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Component) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":809},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":119487,"byte_end":119489,"line_start":130,"line_end":130,"column_start":8,"column_end":10},"name":"eq","qualname":"<Component as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &FormatItem) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":119620,"byte_end":119622,"line_start":136,"line_end":136,"column_start":8,"column_end":10},"name":"eq","qualname":"<FormatItem as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &&[FormatItem]) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":813},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":119810,"byte_end":119812,"line_start":142,"line_end":142,"column_start":8,"column_end":10},"name":"eq","qualname":"<&'_ [FormatItem] as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &FormatItem) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":814},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/formatting/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"formatting","qualname":"::formatting","value":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/formatting/mod.rs","parent":null,"children":[{"krate":0,"index":815},{"krate":0,"index":931},{"krate":0,"index":1005},{"krate":0,"index":1008},{"krate":0,"index":1011},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1018},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1025},{"krate":0,"index":1028},{"krate":0,"index":1031},{"krate":0,"index":1034},{"krate":0,"index":1036},{"krate":0,"index":1038},{"krate":0,"index":1040},{"krate":0,"index":1042},{"krate":0,"index":1044},{"krate":0,"index":1047},{"krate":0,"index":1049},{"krate":0,"index":1051},{"krate":0,"index":1053},{"krate":0,"index":1055},{"krate":0,"index":1059},{"krate":0,"index":1063},{"krate":0,"index":1067},{"krate":0,"index":1070},{"krate":0,"index":1073},{"krate":0,"index":1076},{"krate":0,"index":1079},{"krate":0,"index":1083},{"krate":0,"index":1086},{"krate":0,"index":1090},{"krate":0,"index":1093},{"krate":0,"index":1096},{"krate":0,"index":1098},{"krate":0,"index":1101},{"krate":0,"index":1113},{"krate":0,"index":1116},{"krate":0,"index":1119}],"decl_id":null,"docs":" Formatting for various types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"formatting\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":9542,"byte_end":9572,"line_start":284,"line_end":284,"column_start":1,"column_end":31}},{"value":"/ Formatting for various types.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/formatting/mod.rs","byte_start":168386,"byte_end":168419,"line_start":1,"line_end":1,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":870},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/formatting/formattable.rs","byte_start":185758,"byte_end":185769,"line_start":16,"line_end":16,"column_start":11,"column_end":22},"name":"Formattable","qualname":"::formatting::formattable::Formattable","value":"Formattable: sealed::Sealed","parent":null,"children":[],"decl_id":null,"docs":" A type that can be formatted.\n","sig":null,"attributes":[{"value":"/ A type that can be formatted.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/formatting/formattable.rs","byte_start":185666,"byte_end":185699,"line_start":14,"line_end":14,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":881},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/formatting/formattable.rs","byte_start":186389,"byte_end":186395,"line_start":31,"line_end":31,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::formatting::formattable::sealed::Sealed","value":"Sealed","parent":null,"children":[{"krate":0,"index":882},{"krate":0,"index":884}],"decl_id":null,"docs":" Format the item using a format description, the intended output, and the various components.\n","sig":null,"attributes":[{"value":"/ Format the item using a format description, the intended output, and the various components.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/formatting/formattable.rs","byte_start":186212,"byte_end":186308,"line_start":29,"line_end":29,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/formatting/formattable.rs","byte_start":186502,"byte_end":186513,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"format_into","qualname":"::formatting::formattable::sealed::Sealed::format_into","value":"fn format_into<impl io::Write>(&Self, &mut impl io::Write, Option<Date>,\nOption<Time>, Option<UtcOffset>) -> Result<usize, error::Format> where\nimpl io::Write: io::Write","parent":{"krate":0,"index":881},"children":[],"decl_id":null,"docs":" Format the item into the provided output, returning the number of bytes written.\n","sig":null,"attributes":[{"value":"/ Format the item into the provided output, returning the number of bytes written.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/formatting/formattable.rs","byte_start":186406,"byte_end":186490,"line_start":32,"line_end":32,"column_start":9,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/formatting/formattable.rs","byte_start":186785,"byte_end":186791,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"format","qualname":"::formatting::formattable::sealed::Sealed::format","value":"fn format(&Self, Option<Date>, Option<Time>, Option<UtcOffset>)\n-> Result<String, error::Format>","parent":{"krate":0,"index":881},"children":[],"decl_id":null,"docs":" Format the item directly to a `String`.\n","sig":null,"attributes":[{"value":"/ Format the item directly to a `String`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/formatting/formattable.rs","byte_start":186730,"byte_end":186773,"line_start":41,"line_end":41,"column_start":9,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/formatting/formattable.rs","byte_start":187215,"byte_end":187226,"line_start":57,"line_end":57,"column_start":8,"column_end":19},"name":"format_into","qualname":"<FormatItem as formatting::formattable::sealed::Sealed>::format_into","value":"fn format_into<impl io::Write>(&Self, &mut impl io::Write, Option<Date>,\nOption<Time>, Option<UtcOffset>) -> Result<usize, error::Format> where\nimpl io::Write: io::Write","parent":{"krate":0,"index":881},"children":[],"decl_id":{"krate":0,"index":882},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/formatting/formattable.rs","byte_start":188006,"byte_end":188017,"line_start":78,"line_end":78,"column_start":8,"column_end":19},"name":"format_into","qualname":"<[FormatItem] as formatting::formattable::sealed::Sealed>::format_into","value":"fn format_into<impl io::Write>(&Self, &mut impl io::Write, Option<Date>,\nOption<Time>, Option<UtcOffset>) -> Result<usize, error::Format> where\nimpl io::Write: io::Write","parent":{"krate":0,"index":881},"children":[],"decl_id":{"krate":0,"index":882},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/formatting/formattable.rs","byte_start":188450,"byte_end":188461,"line_start":97,"line_end":97,"column_start":8,"column_end":19},"name":"format_into","qualname":"<T as formatting::formattable::sealed::Sealed>::format_into","value":"fn format_into<impl io::Write>(&Self, &mut impl io::Write, Option<Date>,\nOption<Time>, Option<UtcOffset>) -> Result<usize, error::Format> where\nimpl io::Write: io::Write","parent":{"krate":0,"index":881},"children":[],"decl_id":{"krate":0,"index":882},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/formatting/formattable.rs","byte_start":188815,"byte_end":188826,"line_start":111,"line_end":111,"column_start":8,"column_end":19},"name":"format_into","qualname":"<Rfc2822 as formatting::formattable::sealed::Sealed>::format_into","value":"fn format_into<impl io::Write>(&Self, &mut impl io::Write, Option<Date>,\nOption<Time>, Option<UtcOffset>) -> Result<usize, error::Format> where\nimpl io::Write: io::Write","parent":{"krate":0,"index":881},"children":[],"decl_id":{"krate":0,"index":882},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/formatting/formattable.rs","byte_start":190779,"byte_end":190790,"line_start":160,"line_end":160,"column_start":8,"column_end":19},"name":"format_into","qualname":"<Rfc3339 as formatting::formattable::sealed::Sealed>::format_into","value":"fn format_into<impl io::Write>(&Self, &mut impl io::Write, Option<Date>,\nOption<Time>, Option<UtcOffset>) -> Result<usize, error::Format> where\nimpl io::Write: io::Write","parent":{"krate":0,"index":881},"children":[],"decl_id":{"krate":0,"index":882},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/formatting/formattable.rs","byte_start":194120,"byte_end":194131,"line_start":242,"line_end":242,"column_start":8,"column_end":19},"name":"format_into","qualname":"<Iso8601<CONFIG> as formatting::formattable::sealed::Sealed>::format_into","value":"fn format_into<impl io::Write>(&Self, &mut impl io::Write, Option<Date>,\nOption<Time>, Option<UtcOffset>) -> Result<usize, error::Format> where\nimpl io::Write: io::Write","parent":{"krate":0,"index":881},"children":[],"decl_id":{"krate":0,"index":882},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3675},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":202674,"byte_end":202681,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"Instant","qualname":"::instant::Instant","value":"","parent":null,"children":[],"decl_id":null,"docs":" A measurement of a monotonically non-decreasing clock. Opaque and useful only with [`Duration`].","sig":null,"attributes":[{"value":"/ A measurement of a monotonically non-decreasing clock. Opaque and useful only with [`Duration`].","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":201500,"byte_end":201600,"line_start":11,"line_end":11,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":201601,"byte_end":201604,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Instants are always guaranteed to be no less than any previously measured instant when created,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":201605,"byte_end":201704,"line_start":13,"line_end":13,"column_start":1,"column_end":100}},{"value":"/ and are often useful for tasks such as measuring benchmarks or timing how long an operation","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":201705,"byte_end":201800,"line_start":14,"line_end":14,"column_start":1,"column_end":96}},{"value":"/ takes.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":201801,"byte_end":201811,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":201812,"byte_end":201815,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Note, however, that instants are not guaranteed to be **steady**. In other words, each tick of","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":201816,"byte_end":201914,"line_start":17,"line_end":17,"column_start":1,"column_end":99}},{"value":"/ the underlying clock may not be the same length (e.g. some seconds may be longer than others).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":201915,"byte_end":202013,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ An instant may jump forwards or experience time dilation (slow down or speed up), but it will","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":202014,"byte_end":202111,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"/ never go backwards.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":202112,"byte_end":202135,"line_start":20,"line_end":20,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":202136,"byte_end":202139,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Instants are opaque types that can only be compared to one another. There is no method to get","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":202140,"byte_end":202237,"line_start":22,"line_end":22,"column_start":1,"column_end":98}},{"value":"/ \"the number of seconds\" from an instant. Instead, it only allows measuring the duration between","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":202238,"byte_end":202337,"line_start":23,"line_end":23,"column_start":1,"column_end":100}},{"value":"/ two instants (or comparing two instants).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":202338,"byte_end":202383,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":202384,"byte_end":202387,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This implementation allows for operations with signed [`Duration`]s, but is otherwise identical","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":202388,"byte_end":202487,"line_start":26,"line_end":26,"column_start":1,"column_end":100}},{"value":"/ to [`std::time::Instant`].","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":202488,"byte_end":202518,"line_start":27,"line_end":27,"column_start":1,"column_end":31}},{"value":"repr(transparent)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":202574,"byte_end":202594,"line_start":29,"line_end":29,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":3677},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":202682,"byte_end":202696,"line_start":31,"line_end":31,"column_start":20,"column_end":34},"name":"0","qualname":"::instant::Instant::0","value":"std::time::Instant","parent":{"krate":0,"index":3675},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1156},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":202912,"byte_end":202915,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"now","qualname":"<Instant>::now","value":"fn now() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an `Instant` corresponding to \"now\".","sig":null,"attributes":[{"value":"/ Returns an `Instant` corresponding to \"now\".","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":202745,"byte_end":202793,"line_start":35,"line_end":35,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":202798,"byte_end":202801,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":202806,"byte_end":202817,"line_start":37,"line_end":37,"column_start":5,"column_end":16}},{"value":"/ # use time::Instant;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":202822,"byte_end":202846,"line_start":38,"line_end":38,"column_start":5,"column_end":29}},{"value":"/ println!(\"{:?}\", Instant::now());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":202851,"byte_end":202888,"line_start":39,"line_end":39,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":202893,"byte_end":202900,"line_start":40,"line_end":40,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1157},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":203427,"byte_end":203434,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"fn elapsed(Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed since this instant was created. The duration will always\n be nonnegative if the instant is not synthetically created.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed since this instant was created. The duration will always","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":202971,"byte_end":203066,"line_start":45,"line_end":45,"column_start":5,"column_end":100}},{"value":"/ be nonnegative if the instant is not synthetically created.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":203071,"byte_end":203134,"line_start":46,"line_end":46,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":203139,"byte_end":203142,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":203147,"byte_end":203158,"line_start":48,"line_end":48,"column_start":5,"column_end":16}},{"value":"/ # use time::{Instant, ext::{NumericalStdDuration, NumericalDuration}};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":203163,"byte_end":203237,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ # use std::thread;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":203242,"byte_end":203264,"line_start":50,"line_end":50,"column_start":5,"column_end":27}},{"value":"/ let instant = Instant::now();","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":203269,"byte_end":203302,"line_start":51,"line_end":51,"column_start":5,"column_end":38}},{"value":"/ thread::sleep(1.std_milliseconds());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":203307,"byte_end":203347,"line_start":52,"line_end":52,"column_start":5,"column_end":45}},{"value":"/ assert!(instant.elapsed() >= 1.milliseconds());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":203352,"byte_end":203403,"line_start":53,"line_end":53,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":203408,"byte_end":203415,"line_start":54,"line_end":54,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1158},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":204053,"byte_end":204064,"line_start":71,"line_end":71,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Instant>::checked_add","value":"fn checked_add(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self + duration` if `t` can be represented as\n `Instant` (which means it's inside the bounds of the underlying data structure), `None`\n otherwise.","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self + duration` if `t` can be represented as","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":203555,"byte_end":203645,"line_start":61,"line_end":61,"column_start":5,"column_end":95}},{"value":"/ `Instant` (which means it's inside the bounds of the underlying data structure), `None`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":203650,"byte_end":203741,"line_start":62,"line_end":62,"column_start":5,"column_end":96}},{"value":"/ otherwise.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":203746,"byte_end":203760,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":203765,"byte_end":203768,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":203773,"byte_end":203784,"line_start":65,"line_end":65,"column_start":5,"column_end":16}},{"value":"/ # use time::{Instant, ext::NumericalDuration};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":203789,"byte_end":203839,"line_start":66,"line_end":66,"column_start":5,"column_end":55}},{"value":"/ let now = Instant::now();","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":203844,"byte_end":203873,"line_start":67,"line_end":67,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(now.checked_add(5.seconds()), Some(now + 5.seconds()));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":203878,"byte_end":203948,"line_start":68,"line_end":68,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(now.checked_add((-5).seconds()), Some(now + (-5).seconds()));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":203953,"byte_end":204029,"line_start":69,"line_end":69,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":204034,"byte_end":204041,"line_start":70,"line_end":70,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1159},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":204926,"byte_end":204937,"line_start":92,"line_end":92,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Instant>::checked_sub","value":"fn checked_sub(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self - duration` if `t` can be represented as\n `Instant` (which means it's inside the bounds of the underlying data structure), `None`\n otherwise.","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self - duration` if `t` can be represented as","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":204428,"byte_end":204518,"line_start":82,"line_end":82,"column_start":5,"column_end":95}},{"value":"/ `Instant` (which means it's inside the bounds of the underlying data structure), `None`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":204523,"byte_end":204614,"line_start":83,"line_end":83,"column_start":5,"column_end":96}},{"value":"/ otherwise.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":204619,"byte_end":204633,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":204638,"byte_end":204641,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":204646,"byte_end":204657,"line_start":86,"line_end":86,"column_start":5,"column_end":16}},{"value":"/ # use time::{Instant, ext::NumericalDuration};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":204662,"byte_end":204712,"line_start":87,"line_end":87,"column_start":5,"column_end":55}},{"value":"/ let now = Instant::now();","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":204717,"byte_end":204746,"line_start":88,"line_end":88,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(now.checked_sub(5.seconds()), Some(now - 5.seconds()));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":204751,"byte_end":204821,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(now.checked_sub((-5).seconds()), Some(now - (-5).seconds()));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":204826,"byte_end":204902,"line_start":90,"line_end":90,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":204907,"byte_end":204914,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1160},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":205543,"byte_end":205553,"line_start":111,"line_end":111,"column_start":18,"column_end":28},"name":"into_inner","qualname":"<Instant>::into_inner","value":"const fn into_inner(Self) -> StdInstant","parent":null,"children":[],"decl_id":null,"docs":" Obtain the inner [`std::time::Instant`].","sig":null,"attributes":[{"value":"/ Obtain the inner [`std::time::Instant`].","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":205337,"byte_end":205381,"line_start":104,"line_end":104,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":205386,"byte_end":205389,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":205394,"byte_end":205405,"line_start":106,"line_end":106,"column_start":5,"column_end":16}},{"value":"/ # use time::Instant;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":205410,"byte_end":205434,"line_start":107,"line_end":107,"column_start":5,"column_end":29}},{"value":"/ let now = Instant::now();","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":205439,"byte_end":205468,"line_start":108,"line_end":108,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(now.into_inner(), now.0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":205473,"byte_end":205513,"line_start":109,"line_end":109,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":205518,"byte_end":205525,"line_start":110,"line_end":110,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1162},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":205666,"byte_end":205670,"line_start":118,"line_end":118,"column_start":8,"column_end":12},"name":"from","qualname":"<Instant as std::convert::From>::from","value":"fn from(StdInstant) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":205776,"byte_end":205780,"line_start":124,"line_end":124,"column_start":8,"column_end":12},"name":"from","qualname":"<StdInstant as std::convert::From>::from","value":"fn from(Instant) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1167},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":205895,"byte_end":205898,"line_start":132,"line_end":132,"column_start":8,"column_end":11},"name":"sub","qualname":"<Instant as std::ops::Sub>::sub","value":"fn sub(Self, Self) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1170},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":206438,"byte_end":206441,"line_start":147,"line_end":147,"column_start":8,"column_end":11},"name":"sub","qualname":"<Instant as std::ops::Sub>::sub","value":"fn sub(Self, StdInstant) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1173},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":206592,"byte_end":206595,"line_start":155,"line_end":155,"column_start":8,"column_end":11},"name":"sub","qualname":"<StdInstant as std::ops::Sub>::sub","value":"fn sub(Self, Instant) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1176},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":206740,"byte_end":206743,"line_start":163,"line_end":163,"column_start":8,"column_end":11},"name":"add","qualname":"<Instant as std::ops::Add>::add","value":"fn add(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1179},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":207137,"byte_end":207140,"line_start":178,"line_end":178,"column_start":8,"column_end":11},"name":"add","qualname":"<StdInstant as std::ops::Add>::add","value":"fn add(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1182},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":207299,"byte_end":207302,"line_start":186,"line_end":186,"column_start":8,"column_end":11},"name":"add","qualname":"<Instant as std::ops::Add>::add","value":"fn add(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1185},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":207547,"byte_end":207550,"line_start":197,"line_end":197,"column_start":8,"column_end":11},"name":"sub","qualname":"<Instant as std::ops::Sub>::sub","value":"fn sub(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1188},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":207944,"byte_end":207947,"line_start":212,"line_end":212,"column_start":8,"column_end":11},"name":"sub","qualname":"<StdInstant as std::ops::Sub>::sub","value":"fn sub(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1191},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":208106,"byte_end":208109,"line_start":220,"line_end":220,"column_start":8,"column_end":11},"name":"sub","qualname":"<Instant as std::ops::Sub>::sub","value":"fn sub(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1193},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":208337,"byte_end":208339,"line_start":229,"line_end":229,"column_start":8,"column_end":10},"name":"eq","qualname":"<Instant as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &StdInstant) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1195},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":208455,"byte_end":208457,"line_start":235,"line_end":235,"column_start":8,"column_end":10},"name":"eq","qualname":"<StdInstant as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Instant) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1197},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":208572,"byte_end":208583,"line_start":241,"line_end":241,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<Instant as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &StdInstant) -> Option<Ordering>","parent":{"krate":2,"index":2848},"children":[],"decl_id":{"krate":2,"index":2850},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1199},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":208721,"byte_end":208732,"line_start":247,"line_end":247,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<StdInstant as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &Instant) -> Option<Ordering>","parent":{"krate":2,"index":2848},"children":[],"decl_id":{"krate":2,"index":2850},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1201},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":208863,"byte_end":208869,"line_start":253,"line_end":253,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Instant as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &StdInstant","parent":{"krate":2,"index":3047},"children":[],"decl_id":{"krate":2,"index":3049},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1203},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":208964,"byte_end":208970,"line_start":259,"line_end":259,"column_start":8,"column_end":14},"name":"borrow","qualname":"<Instant as std::borrow::Borrow>::borrow","value":"fn borrow(&Self) -> &StdInstant","parent":{"krate":2,"index":2747},"children":[],"decl_id":{"krate":2,"index":2749},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1204},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/macros.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/macros.rs","parent":null,"children":[{"krate":0,"index":1205},{"krate":0,"index":1208},{"krate":0,"index":1211},{"krate":0,"index":1214},{"krate":0,"index":1217}],"decl_id":null,"docs":" Macros to construct statically known values.\n","sig":null,"attributes":[{"value":"cfg(feature = \"macros\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":9630,"byte_end":9656,"line_start":288,"line_end":288,"column_start":1,"column_end":27}},{"value":"/ Macros to construct statically known values.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/macros.rs","byte_start":209045,"byte_end":209093,"line_start":1,"line_end":1,"column_start":1,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3710},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/month.rs","byte_start":214758,"byte_end":214765,"line_start":15,"line_end":15,"column_start":5,"column_end":12},"name":"January","qualname":"::month::Month::January","value":"Month::January","parent":{"krate":0,"index":3709},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3713},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/month.rs","byte_start":214775,"byte_end":214783,"line_start":16,"line_end":16,"column_start":5,"column_end":13},"name":"February","qualname":"::month::Month::February","value":"Month::February","parent":{"krate":0,"index":3709},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3716},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/month.rs","byte_start":214793,"byte_end":214798,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"March","qualname":"::month::Month::March","value":"Month::March","parent":{"krate":0,"index":3709},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3719},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/month.rs","byte_start":214808,"byte_end":214813,"line_start":18,"line_end":18,"column_start":5,"column_end":10},"name":"April","qualname":"::month::Month::April","value":"Month::April","parent":{"krate":0,"index":3709},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3722},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/month.rs","byte_start":214823,"byte_end":214826,"line_start":19,"line_end":19,"column_start":5,"column_end":8},"name":"May","qualname":"::month::Month::May","value":"Month::May","parent":{"krate":0,"index":3709},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3725},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/month.rs","byte_start":214836,"byte_end":214840,"line_start":20,"line_end":20,"column_start":5,"column_end":9},"name":"June","qualname":"::month::Month::June","value":"Month::June","parent":{"krate":0,"index":3709},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3728},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/month.rs","byte_start":214850,"byte_end":214854,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"July","qualname":"::month::Month::July","value":"Month::July","parent":{"krate":0,"index":3709},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3731},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/month.rs","byte_start":214864,"byte_end":214870,"line_start":22,"line_end":22,"column_start":5,"column_end":11},"name":"August","qualname":"::month::Month::August","value":"Month::August","parent":{"krate":0,"index":3709},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3734},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/month.rs","byte_start":214880,"byte_end":214889,"line_start":23,"line_end":23,"column_start":5,"column_end":14},"name":"September","qualname":"::month::Month::September","value":"Month::September","parent":{"krate":0,"index":3709},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3737},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/month.rs","byte_start":214899,"byte_end":214906,"line_start":24,"line_end":24,"column_start":5,"column_end":12},"name":"October","qualname":"::month::Month::October","value":"Month::October","parent":{"krate":0,"index":3709},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3740},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/month.rs","byte_start":214917,"byte_end":214925,"line_start":25,"line_end":25,"column_start":5,"column_end":13},"name":"November","qualname":"::month::Month::November","value":"Month::November","parent":{"krate":0,"index":3709},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3743},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/month.rs","byte_start":214936,"byte_end":214944,"line_start":26,"line_end":26,"column_start":5,"column_end":13},"name":"December","qualname":"::month::Month::December","value":"Month::December","parent":{"krate":0,"index":3709},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3709},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/month.rs","byte_start":214746,"byte_end":214751,"line_start":14,"line_end":14,"column_start":10,"column_end":15},"name":"Month","qualname":"::month::Month","value":"enum Month {\n    January = ,\n    February = ,\n    March = ,\n    April = ,\n    May = ,\n    June = ,\n    July = ,\n    August = ,\n    September = ,\n    October = ,\n    November = ,\n    December = ,\n}","parent":null,"children":[{"krate":0,"index":3710},{"krate":0,"index":3713},{"krate":0,"index":3716},{"krate":0,"index":3719},{"krate":0,"index":3722},{"krate":0,"index":3725},{"krate":0,"index":3728},{"krate":0,"index":3731},{"krate":0,"index":3734},{"krate":0,"index":3737},{"krate":0,"index":3740},{"krate":0,"index":3743}],"decl_id":null,"docs":" Months of the year.\n","sig":null,"attributes":[{"value":"/ Months of the year.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/month.rs","byte_start":214590,"byte_end":214613,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/month.rs","byte_start":214614,"byte_end":214661,"line_start":11,"line_end":11,"column_start":1,"column_end":48}},{"value":"repr(u8)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/month.rs","byte_start":214674,"byte_end":214685,"line_start":12,"line_end":12,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/month.rs","byte_start":215901,"byte_end":215909,"line_start":61,"line_end":61,"column_start":18,"column_end":26},"name":"previous","qualname":"<Month>::previous","value":"const fn previous(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the previous month.","sig":null,"attributes":[{"value":"/ Get the previous month.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/month.rs","byte_start":215729,"byte_end":215756,"line_start":55,"line_end":55,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/month.rs","byte_start":215761,"byte_end":215764,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/month.rs","byte_start":215769,"byte_end":215780,"line_start":57,"line_end":57,"column_start":5,"column_end":16}},{"value":"/ # use time::Month;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/month.rs","byte_start":215785,"byte_end":215807,"line_start":58,"line_end":58,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(Month::January.previous(), Month::December);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/month.rs","byte_start":215812,"byte_end":215871,"line_start":59,"line_end":59,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/month.rs","byte_start":215876,"byte_end":215883,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1237},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/month.rs","byte_start":216496,"byte_end":216500,"line_start":84,"line_end":84,"column_start":18,"column_end":22},"name":"next","qualname":"<Month>::next","value":"const fn next(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the next month.","sig":null,"attributes":[{"value":"/ Get the next month.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/month.rs","byte_start":216332,"byte_end":216355,"line_start":78,"line_end":78,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/month.rs","byte_start":216360,"byte_end":216363,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/month.rs","byte_start":216368,"byte_end":216379,"line_start":80,"line_end":80,"column_start":5,"column_end":16}},{"value":"/ # use time::Month;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/month.rs","byte_start":216384,"byte_end":216406,"line_start":81,"line_end":81,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(Month::January.next(), Month::February);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/month.rs","byte_start":216411,"byte_end":216466,"line_start":82,"line_end":82,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/month.rs","byte_start":216471,"byte_end":216478,"line_start":83,"line_end":83,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1239},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/month.rs","byte_start":216958,"byte_end":216961,"line_start":103,"line_end":103,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Month as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1242},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/month.rs","byte_start":217526,"byte_end":217534,"line_start":124,"line_end":124,"column_start":8,"column_end":16},"name":"from_str","qualname":"<Month as std::str::FromStr>::from_str","value":"fn from_str(&str) -> Result<Self, Self::Err>","parent":{"krate":2,"index":12556},"children":[],"decl_id":{"krate":2,"index":12558},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1244},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/month.rs","byte_start":218124,"byte_end":218128,"line_start":144,"line_end":144,"column_start":8,"column_end":12},"name":"from","qualname":"<u8 as std::convert::From>::from","value":"fn from(Month) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1247},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/month.rs","byte_start":218258,"byte_end":218266,"line_start":152,"line_end":152,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Month as std::convert::TryFrom>::try_from","value":"fn try_from(u8) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3760},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":219574,"byte_end":219588,"line_start":31,"line_end":31,"column_start":12,"column_end":26},"name":"OffsetDateTime","qualname":"::offset_date_time::OffsetDateTime","value":"OffsetDateTime {  }","parent":null,"children":[{"krate":0,"index":3761},{"krate":0,"index":3762}],"decl_id":null,"docs":" A [`PrimitiveDateTime`] with a [`UtcOffset`].","sig":null,"attributes":[{"value":"/ A [`PrimitiveDateTime`] with a [`UtcOffset`].","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":219421,"byte_end":219470,"line_start":27,"line_end":27,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":219471,"byte_end":219474,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ All comparisons are performed using the UTC time.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":219475,"byte_end":219528,"line_start":29,"line_end":29,"column_start":1,"column_end":54}}]},{"kind":"Const","id":{"krate":0,"index":1324},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":220093,"byte_end":220103,"line_start":45,"line_end":45,"column_start":15,"column_end":25},"name":"UNIX_EPOCH","qualname":"::offset_date_time::OffsetDateTime::UNIX_EPOCH","value":"Self","parent":{"krate":0,"index":1323},"children":[],"decl_id":null,"docs":" Midnight, 1 January, 1970 (UTC).","sig":null,"attributes":[{"value":"/ Midnight, 1 January, 1970 (UTC).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":219869,"byte_end":219905,"line_start":39,"line_end":39,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":219910,"byte_end":219913,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":219918,"byte_end":219929,"line_start":41,"line_end":41,"column_start":5,"column_end":16}},{"value":"/ # use time::{OffsetDateTime, macros::datetime};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":219934,"byte_end":219985,"line_start":42,"line_end":42,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(OffsetDateTime::UNIX_EPOCH, datetime!(1970-01-01 0:00 UTC),);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":219990,"byte_end":220066,"line_start":43,"line_end":43,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":220071,"byte_end":220078,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1325},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":220614,"byte_end":220621,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"now_utc","qualname":"<OffsetDateTime>::now_utc","value":"fn now_utc() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `OffsetDateTime` with the current date and time in UTC.","sig":null,"attributes":[{"value":"/ Create a new `OffsetDateTime` with the current date and time in UTC.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":220224,"byte_end":220296,"line_start":50,"line_end":50,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":220301,"byte_end":220304,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":220309,"byte_end":220320,"line_start":52,"line_end":52,"column_start":5,"column_end":16}},{"value":"/ # use time::{OffsetDateTime, macros::offset};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":220325,"byte_end":220374,"line_start":53,"line_end":53,"column_start":5,"column_end":54}},{"value":"/ assert!(OffsetDateTime::now_utc().year() >= 2019);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":220379,"byte_end":220433,"line_start":54,"line_end":54,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(OffsetDateTime::now_utc().offset(), offset!(UTC));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":220438,"byte_end":220503,"line_start":55,"line_end":55,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":220508,"byte_end":220515,"line_start":56,"line_end":56,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":220520,"byte_end":220543,"line_start":57,"line_end":57,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1326},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":222570,"byte_end":222579,"line_start":117,"line_end":117,"column_start":18,"column_end":27},"name":"to_offset","qualname":"<OffsetDateTime>::to_offset","value":"const fn to_offset(Self, UtcOffset) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert the `OffsetDateTime` from the current [`UtcOffset`] to the provided [`UtcOffset`].","sig":null,"attributes":[{"value":"/ Convert the `OffsetDateTime` from the current [`UtcOffset`] to the provided [`UtcOffset`].","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":221630,"byte_end":221724,"line_start":92,"line_end":92,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":221729,"byte_end":221732,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":221737,"byte_end":221748,"line_start":94,"line_end":94,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":221753,"byte_end":221796,"line_start":95,"line_end":95,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":221801,"byte_end":221816,"line_start":96,"line_end":96,"column_start":5,"column_end":20}},{"value":"/     datetime!(2000-01-01 0:00 UTC)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":221821,"byte_end":221859,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/         .to_offset(offset!(-1))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":221864,"byte_end":221899,"line_start":98,"line_end":98,"column_start":5,"column_end":40}},{"value":"/         .year(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":221904,"byte_end":221924,"line_start":99,"line_end":99,"column_start":5,"column_end":25}},{"value":"/     1999,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":221929,"byte_end":221942,"line_start":100,"line_end":100,"column_start":5,"column_end":18}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":221947,"byte_end":221953,"line_start":101,"line_end":101,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":221958,"byte_end":221961,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ // Let's see what time Sydney's new year's celebration is in New York // and Los Angeles.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":221966,"byte_end":222059,"line_start":103,"line_end":103,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":222064,"byte_end":222067,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ // Construct midnight on new year's in Sydney.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":222072,"byte_end":222122,"line_start":105,"line_end":105,"column_start":5,"column_end":55}},{"value":"/ let sydney = datetime!(2000-01-01 0:00 +11);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":222127,"byte_end":222175,"line_start":106,"line_end":106,"column_start":5,"column_end":53}},{"value":"/ let new_york = sydney.to_offset(offset!(-5));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":222180,"byte_end":222229,"line_start":107,"line_end":107,"column_start":5,"column_end":54}},{"value":"/ let los_angeles = sydney.to_offset(offset!(-8));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":222234,"byte_end":222286,"line_start":108,"line_end":108,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(sydney.hour(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":222291,"byte_end":222324,"line_start":109,"line_end":109,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(new_york.hour(), 8);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":222329,"byte_end":222364,"line_start":110,"line_end":110,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(los_angeles.hour(), 5);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":222369,"byte_end":222407,"line_start":111,"line_end":111,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":222412,"byte_end":222419,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":222424,"byte_end":222427,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":222432,"byte_end":222444,"line_start":114,"line_end":114,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":222449,"byte_end":222452,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ This method panics if the local date-time in the new offset is outside the supported range.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":222457,"byte_end":222552,"line_start":116,"line_end":116,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":1328},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":225925,"byte_end":225944,"line_start":206,"line_end":206,"column_start":18,"column_end":37},"name":"from_unix_timestamp","qualname":"<OffsetDateTime>::from_unix_timestamp","value":"const fn from_unix_timestamp(i64) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Create an `OffsetDateTime` from the provided Unix timestamp. Calling `.offset()` on the\n resulting value is guaranteed to return UTC.","sig":null,"attributes":[{"value":"/ Create an `OffsetDateTime` from the provided Unix timestamp. Calling `.offset()` on the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":224908,"byte_end":224999,"line_start":179,"line_end":179,"column_start":5,"column_end":96}},{"value":"/ resulting value is guaranteed to return UTC.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":225004,"byte_end":225052,"line_start":180,"line_end":180,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":225057,"byte_end":225060,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":225065,"byte_end":225076,"line_start":182,"line_end":182,"column_start":5,"column_end":16}},{"value":"/ # use time::{OffsetDateTime, macros::datetime};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":225081,"byte_end":225132,"line_start":183,"line_end":183,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":225137,"byte_end":225152,"line_start":184,"line_end":184,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp(0),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":225157,"byte_end":225204,"line_start":185,"line_end":185,"column_start":5,"column_end":52}},{"value":"/     Ok(OffsetDateTime::UNIX_EPOCH),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":225209,"byte_end":225248,"line_start":186,"line_end":186,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":225253,"byte_end":225259,"line_start":187,"line_end":187,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":225264,"byte_end":225279,"line_start":188,"line_end":188,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp(1_546_300_800),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":225284,"byte_end":225343,"line_start":189,"line_end":189,"column_start":5,"column_end":64}},{"value":"/     Ok(datetime!(2019-01-01 0:00 UTC)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":225348,"byte_end":225391,"line_start":190,"line_end":190,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":225396,"byte_end":225402,"line_start":191,"line_end":191,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":225407,"byte_end":225414,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":225419,"byte_end":225422,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ If you have a timestamp-nanosecond pair, you can use something along the lines of the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":225427,"byte_end":225516,"line_start":194,"line_end":194,"column_start":5,"column_end":94}},{"value":"/ following:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":225521,"byte_end":225535,"line_start":195,"line_end":195,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":225540,"byte_end":225543,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":225548,"byte_end":225559,"line_start":197,"line_end":197,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, OffsetDateTime, ext::NumericalDuration};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":225564,"byte_end":225631,"line_start":198,"line_end":198,"column_start":5,"column_end":72}},{"value":"/ let (timestamp, nanos) = (1, 500_000_000);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":225636,"byte_end":225682,"line_start":199,"line_end":199,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":225687,"byte_end":225702,"line_start":200,"line_end":200,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp(timestamp)? + Duration::nanoseconds(nanos),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":225707,"byte_end":225794,"line_start":201,"line_end":201,"column_start":5,"column_end":92}},{"value":"/     OffsetDateTime::UNIX_EPOCH + 1.5.seconds()","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":225799,"byte_end":225849,"line_start":202,"line_end":202,"column_start":5,"column_end":55}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":225854,"byte_end":225860,"line_start":203,"line_end":203,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":225865,"byte_end":225895,"line_start":204,"line_end":204,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":225900,"byte_end":225907,"line_start":205,"line_end":205,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1331},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":227620,"byte_end":227645,"line_start":247,"line_end":247,"column_start":18,"column_end":43},"name":"from_unix_timestamp_nanos","qualname":"<OffsetDateTime>::from_unix_timestamp_nanos","value":"const fn from_unix_timestamp_nanos(i128)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Construct an `OffsetDateTime` from the provided Unix timestamp (in nanoseconds). Calling\n `.offset()` on the resulting value is guaranteed to return UTC.","sig":null,"attributes":[{"value":"/ Construct an `OffsetDateTime` from the provided Unix timestamp (in nanoseconds). Calling","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":227052,"byte_end":227144,"line_start":233,"line_end":233,"column_start":5,"column_end":97}},{"value":"/ `.offset()` on the resulting value is guaranteed to return UTC.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":227149,"byte_end":227216,"line_start":234,"line_end":234,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":227221,"byte_end":227224,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":227229,"byte_end":227240,"line_start":236,"line_end":236,"column_start":5,"column_end":16}},{"value":"/ # use time::{OffsetDateTime, macros::datetime};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":227245,"byte_end":227296,"line_start":237,"line_end":237,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":227301,"byte_end":227316,"line_start":238,"line_end":238,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp_nanos(0),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":227321,"byte_end":227374,"line_start":239,"line_end":239,"column_start":5,"column_end":58}},{"value":"/     Ok(OffsetDateTime::UNIX_EPOCH),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":227379,"byte_end":227418,"line_start":240,"line_end":240,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":227423,"byte_end":227429,"line_start":241,"line_end":241,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":227434,"byte_end":227449,"line_start":242,"line_end":242,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp_nanos(1_546_300_800_000_000_000),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":227454,"byte_end":227531,"line_start":243,"line_end":243,"column_start":5,"column_end":82}},{"value":"/     Ok(datetime!(2019-01-01 0:00 UTC)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":227536,"byte_end":227579,"line_start":244,"line_end":244,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":227584,"byte_end":227590,"line_start":245,"line_end":245,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":227595,"byte_end":227602,"line_start":246,"line_end":246,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1332},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":228532,"byte_end":228538,"line_start":272,"line_end":272,"column_start":18,"column_end":24},"name":"offset","qualname":"<OffsetDateTime>::offset","value":"const fn offset(Self) -> UtcOffset","parent":null,"children":[],"decl_id":null,"docs":" Get the [`UtcOffset`].","sig":null,"attributes":[{"value":"/ Get the [`UtcOffset`].","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":228256,"byte_end":228282,"line_start":265,"line_end":265,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":228287,"byte_end":228290,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":228295,"byte_end":228306,"line_start":267,"line_end":267,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":228311,"byte_end":228354,"line_start":268,"line_end":268,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).offset(), offset!(UTC));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":228359,"byte_end":228429,"line_start":269,"line_end":269,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 +1).offset(), offset!(+1));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":228434,"byte_end":228502,"line_start":270,"line_end":270,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":228507,"byte_end":228514,"line_start":271,"line_end":271,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1333},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":228900,"byte_end":228914,"line_start":283,"line_end":283,"column_start":18,"column_end":32},"name":"unix_timestamp","qualname":"<OffsetDateTime>::unix_timestamp","value":"const fn unix_timestamp(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the [Unix timestamp](https://en.wikipedia.org/wiki/Unix_time).","sig":null,"attributes":[{"value":"/ Get the [Unix timestamp](https://en.wikipedia.org/wiki/Unix_time).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":228591,"byte_end":228661,"line_start":276,"line_end":276,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":228666,"byte_end":228669,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":228674,"byte_end":228685,"line_start":278,"line_end":278,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":228690,"byte_end":228723,"line_start":279,"line_end":279,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(1970-01-01 0:00 UTC).unix_timestamp(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":228728,"byte_end":228795,"line_start":280,"line_end":280,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(1970-01-01 0:00 -1).unix_timestamp(), 3_600);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":228800,"byte_end":228870,"line_start":281,"line_end":281,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":228875,"byte_end":228882,"line_start":282,"line_end":282,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1334},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":229690,"byte_end":229710,"line_start":304,"line_end":304,"column_start":18,"column_end":38},"name":"unix_timestamp_nanos","qualname":"<OffsetDateTime>::unix_timestamp_nanos","value":"const fn unix_timestamp_nanos(Self) -> i128","parent":null,"children":[],"decl_id":null,"docs":" Get the Unix timestamp in nanoseconds.","sig":null,"attributes":[{"value":"/ Get the Unix timestamp in nanoseconds.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":229352,"byte_end":229394,"line_start":294,"line_end":294,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":229399,"byte_end":229402,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":229407,"byte_end":229418,"line_start":296,"line_end":296,"column_start":5,"column_end":16}},{"value":"/ use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":229423,"byte_end":229454,"line_start":297,"line_end":297,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(datetime!(1970-01-01 0:00 UTC).unix_timestamp_nanos(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":229459,"byte_end":229532,"line_start":298,"line_end":298,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":229537,"byte_end":229552,"line_start":299,"line_end":299,"column_start":5,"column_end":20}},{"value":"/     datetime!(1970-01-01 0:00 -1).unix_timestamp_nanos(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":229557,"byte_end":229618,"line_start":300,"line_end":300,"column_start":5,"column_end":66}},{"value":"/     3_600_000_000_000,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":229623,"byte_end":229649,"line_start":301,"line_end":301,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":229654,"byte_end":229660,"line_start":302,"line_end":302,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":229665,"byte_end":229672,"line_start":303,"line_end":303,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1335},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":230218,"byte_end":230222,"line_start":320,"line_end":320,"column_start":18,"column_end":22},"name":"date","qualname":"<OffsetDateTime>::date","value":"const fn date(Self) -> Date","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Date`] in the stored offset.","sig":null,"attributes":[{"value":"/ Get the [`Date`] in the stored offset.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":229820,"byte_end":229862,"line_start":308,"line_end":308,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":229867,"byte_end":229870,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":229875,"byte_end":229886,"line_start":310,"line_end":310,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{date, datetime, offset};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":229891,"byte_end":229940,"line_start":311,"line_end":311,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).date(), date!(2019-01-01));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":229945,"byte_end":230018,"line_start":312,"line_end":312,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":230023,"byte_end":230038,"line_start":313,"line_end":313,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":230043,"byte_end":230081,"line_start":314,"line_end":314,"column_start":5,"column_end":43}},{"value":"/         .to_offset(offset!(-1))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":230086,"byte_end":230121,"line_start":315,"line_end":315,"column_start":5,"column_end":40}},{"value":"/         .date(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":230126,"byte_end":230146,"line_start":316,"line_end":316,"column_start":5,"column_end":25}},{"value":"/     date!(2018-12-31),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":230151,"byte_end":230177,"line_start":317,"line_end":317,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":230182,"byte_end":230188,"line_start":318,"line_end":318,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":230193,"byte_end":230200,"line_start":319,"line_end":319,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1336},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":230671,"byte_end":230675,"line_start":336,"line_end":336,"column_start":18,"column_end":22},"name":"time","qualname":"<OffsetDateTime>::time","value":"const fn time(Self) -> Time","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Time`] in the stored offset.","sig":null,"attributes":[{"value":"/ Get the [`Time`] in the stored offset.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":230285,"byte_end":230327,"line_start":324,"line_end":324,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":230332,"byte_end":230335,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":230340,"byte_end":230351,"line_start":326,"line_end":326,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset, time};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":230356,"byte_end":230405,"line_start":327,"line_end":327,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).time(), time!(0:00));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":230410,"byte_end":230477,"line_start":328,"line_end":328,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":230482,"byte_end":230497,"line_start":329,"line_end":329,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":230502,"byte_end":230540,"line_start":330,"line_end":330,"column_start":5,"column_end":43}},{"value":"/         .to_offset(offset!(-1))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":230545,"byte_end":230580,"line_start":331,"line_end":331,"column_start":5,"column_end":40}},{"value":"/         .time(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":230585,"byte_end":230605,"line_start":332,"line_end":332,"column_start":5,"column_end":25}},{"value":"/     time!(23:00)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":230610,"byte_end":230630,"line_start":333,"line_end":333,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":230635,"byte_end":230641,"line_start":334,"line_end":334,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":230646,"byte_end":230653,"line_start":335,"line_end":335,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1337},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":231206,"byte_end":231210,"line_start":354,"line_end":354,"column_start":18,"column_end":22},"name":"year","qualname":"<OffsetDateTime>::year","value":"const fn year(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the year of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the year of the date in the stored offset.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":230766,"byte_end":230816,"line_start":341,"line_end":341,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":230821,"byte_end":230824,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":230829,"byte_end":230840,"line_start":343,"line_end":343,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":230845,"byte_end":230888,"line_start":344,"line_end":344,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).year(), 2019);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":230893,"byte_end":230953,"line_start":345,"line_end":345,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":230958,"byte_end":230973,"line_start":346,"line_end":346,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-12-31 23:00 UTC)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":230978,"byte_end":231017,"line_start":347,"line_end":347,"column_start":5,"column_end":44}},{"value":"/         .to_offset(offset!(+1))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":231022,"byte_end":231057,"line_start":348,"line_end":348,"column_start":5,"column_end":40}},{"value":"/         .year(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":231062,"byte_end":231082,"line_start":349,"line_end":349,"column_start":5,"column_end":25}},{"value":"/     2020,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":231087,"byte_end":231100,"line_start":350,"line_end":350,"column_start":5,"column_end":18}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":231105,"byte_end":231111,"line_start":351,"line_end":351,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00 UTC).year(), 2020);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":231116,"byte_end":231176,"line_start":352,"line_end":352,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":231181,"byte_end":231188,"line_start":353,"line_end":353,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1338},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":231689,"byte_end":231694,"line_start":371,"line_end":371,"column_start":18,"column_end":23},"name":"month","qualname":"<OffsetDateTime>::month","value":"const fn month(Self) -> Month","parent":null,"children":[],"decl_id":null,"docs":" Get the month of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the month of the date in the stored offset.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":231264,"byte_end":231315,"line_start":358,"line_end":358,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":231320,"byte_end":231323,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":231328,"byte_end":231339,"line_start":360,"line_end":360,"column_start":5,"column_end":16}},{"value":"/ # use time::Month;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":231344,"byte_end":231366,"line_start":361,"line_end":361,"column_start":5,"column_end":27}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":231371,"byte_end":231414,"line_start":362,"line_end":362,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).month(), Month::January);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":231419,"byte_end":231490,"line_start":363,"line_end":363,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":231495,"byte_end":231510,"line_start":364,"line_end":364,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-12-31 23:00 UTC)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":231515,"byte_end":231554,"line_start":365,"line_end":365,"column_start":5,"column_end":44}},{"value":"/         .to_offset(offset!(+1))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":231559,"byte_end":231594,"line_start":366,"line_end":366,"column_start":5,"column_end":40}},{"value":"/         .month(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":231599,"byte_end":231620,"line_start":367,"line_end":367,"column_start":5,"column_end":26}},{"value":"/     Month::January,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":231625,"byte_end":231648,"line_start":368,"line_end":368,"column_start":5,"column_end":28}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":231653,"byte_end":231659,"line_start":369,"line_end":369,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":231664,"byte_end":231671,"line_start":370,"line_end":370,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1339},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":232190,"byte_end":232193,"line_start":389,"line_end":389,"column_start":18,"column_end":21},"name":"day","qualname":"<OffsetDateTime>::day","value":"const fn day(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the day of the date in the stored offset.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":231751,"byte_end":231800,"line_start":375,"line_end":375,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":231805,"byte_end":231808,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=31`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":231813,"byte_end":231873,"line_start":377,"line_end":377,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":231878,"byte_end":231881,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":231886,"byte_end":231897,"line_start":379,"line_end":379,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":231902,"byte_end":231945,"line_start":380,"line_end":380,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).day(), 1);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":231950,"byte_end":232006,"line_start":381,"line_end":381,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":232011,"byte_end":232026,"line_start":382,"line_end":382,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-12-31 23:00 UTC)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":232031,"byte_end":232070,"line_start":383,"line_end":383,"column_start":5,"column_end":44}},{"value":"/         .to_offset(offset!(+1))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":232075,"byte_end":232110,"line_start":384,"line_end":384,"column_start":5,"column_end":40}},{"value":"/         .day(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":232115,"byte_end":232134,"line_start":385,"line_end":385,"column_start":5,"column_end":24}},{"value":"/     1,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":232139,"byte_end":232149,"line_start":386,"line_end":386,"column_start":5,"column_end":15}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":232154,"byte_end":232160,"line_start":387,"line_end":387,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":232165,"byte_end":232172,"line_start":388,"line_end":388,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1340},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":232705,"byte_end":232712,"line_start":407,"line_end":407,"column_start":18,"column_end":25},"name":"ordinal","qualname":"<OffsetDateTime>::ordinal","value":"const fn ordinal(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the year of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the day of the year of the date in the stored offset.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":232245,"byte_end":232306,"line_start":393,"line_end":393,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":232311,"byte_end":232314,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=366`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":232319,"byte_end":232380,"line_start":395,"line_end":395,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":232385,"byte_end":232388,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":232393,"byte_end":232404,"line_start":397,"line_end":397,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":232409,"byte_end":232452,"line_start":398,"line_end":398,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).ordinal(), 1);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":232457,"byte_end":232517,"line_start":399,"line_end":399,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":232522,"byte_end":232537,"line_start":400,"line_end":400,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-12-31 23:00 UTC)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":232542,"byte_end":232581,"line_start":401,"line_end":401,"column_start":5,"column_end":44}},{"value":"/         .to_offset(offset!(+1))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":232586,"byte_end":232621,"line_start":402,"line_end":402,"column_start":5,"column_end":40}},{"value":"/         .ordinal(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":232626,"byte_end":232649,"line_start":403,"line_end":403,"column_start":5,"column_end":28}},{"value":"/     1,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":232654,"byte_end":232664,"line_start":404,"line_end":404,"column_start":5,"column_end":15}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":232669,"byte_end":232675,"line_start":405,"line_end":405,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":232680,"byte_end":232687,"line_start":406,"line_end":406,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1341},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":233261,"byte_end":233269,"line_start":422,"line_end":422,"column_start":18,"column_end":26},"name":"iso_week","qualname":"<OffsetDateTime>::iso_week","value":"const fn iso_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO week number of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the ISO week number of the date in the stored offset.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":232769,"byte_end":232830,"line_start":411,"line_end":411,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":232835,"byte_end":232838,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=53`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":232843,"byte_end":232903,"line_start":413,"line_end":413,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":232908,"byte_end":232911,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":232916,"byte_end":232927,"line_start":415,"line_end":415,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":232932,"byte_end":232965,"line_start":416,"line_end":416,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).iso_week(), 1);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":232970,"byte_end":233031,"line_start":417,"line_end":417,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00 UTC).iso_week(), 1);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":233036,"byte_end":233097,"line_start":418,"line_end":418,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00 UTC).iso_week(), 53);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":233102,"byte_end":233164,"line_start":419,"line_end":419,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00 UTC).iso_week(), 53);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":233169,"byte_end":233231,"line_start":420,"line_end":420,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":233236,"byte_end":233243,"line_start":421,"line_end":421,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1342},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":233856,"byte_end":233873,"line_start":437,"line_end":437,"column_start":18,"column_end":35},"name":"sunday_based_week","qualname":"<OffsetDateTime>::sunday_based_week","value":"const fn sunday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Sunday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Sunday.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":233326,"byte_end":233390,"line_start":426,"line_end":426,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":233395,"byte_end":233398,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":233403,"byte_end":233463,"line_start":428,"line_end":428,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":233468,"byte_end":233471,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":233476,"byte_end":233487,"line_start":430,"line_end":430,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":233492,"byte_end":233525,"line_start":431,"line_end":431,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).sunday_based_week(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":233530,"byte_end":233600,"line_start":432,"line_end":432,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00 UTC).sunday_based_week(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":233605,"byte_end":233675,"line_start":433,"line_end":433,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00 UTC).sunday_based_week(), 52);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":233680,"byte_end":233751,"line_start":434,"line_end":434,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00 UTC).sunday_based_week(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":233756,"byte_end":233826,"line_start":435,"line_end":435,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":233831,"byte_end":233838,"line_start":436,"line_end":436,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1343},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":234469,"byte_end":234486,"line_start":452,"line_end":452,"column_start":18,"column_end":35},"name":"monday_based_week","qualname":"<OffsetDateTime>::monday_based_week","value":"const fn monday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Monday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Monday.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":233939,"byte_end":234003,"line_start":441,"line_end":441,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":234008,"byte_end":234011,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":234016,"byte_end":234076,"line_start":443,"line_end":443,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":234081,"byte_end":234084,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":234089,"byte_end":234100,"line_start":445,"line_end":445,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":234105,"byte_end":234138,"line_start":446,"line_end":446,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).monday_based_week(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":234143,"byte_end":234213,"line_start":447,"line_end":447,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00 UTC).monday_based_week(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":234218,"byte_end":234288,"line_start":448,"line_end":448,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00 UTC).monday_based_week(), 52);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":234293,"byte_end":234364,"line_start":449,"line_end":449,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00 UTC).monday_based_week(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":234369,"byte_end":234439,"line_start":450,"line_end":450,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":234444,"byte_end":234451,"line_start":451,"line_end":451,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1344},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":234818,"byte_end":234834,"line_start":465,"line_end":465,"column_start":18,"column_end":34},"name":"to_calendar_date","qualname":"<OffsetDateTime>::to_calendar_date","value":"const fn to_calendar_date(Self) -> (i32, Month, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the year, month, and day.","sig":null,"attributes":[{"value":"/ Get the year, month, and day.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":234552,"byte_end":234585,"line_start":456,"line_end":456,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":234590,"byte_end":234593,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":234598,"byte_end":234609,"line_start":458,"line_end":458,"column_start":5,"column_end":16}},{"value":"/ # use time::{macros::datetime, Month};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":234614,"byte_end":234656,"line_start":459,"line_end":459,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":234661,"byte_end":234676,"line_start":460,"line_end":460,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC).to_calendar_date(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":234681,"byte_end":234739,"line_start":461,"line_end":461,"column_start":5,"column_end":63}},{"value":"/     (2019, Month::January, 1)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":234744,"byte_end":234777,"line_start":462,"line_end":462,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":234782,"byte_end":234788,"line_start":463,"line_end":463,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":234793,"byte_end":234800,"line_start":464,"line_end":464,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1345},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":235160,"byte_end":235175,"line_start":478,"line_end":478,"column_start":18,"column_end":33},"name":"to_ordinal_date","qualname":"<OffsetDateTime>::to_ordinal_date","value":"const fn to_ordinal_date(Self) -> (i32, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the year and ordinal day number.","sig":null,"attributes":[{"value":"/ Get the year and ordinal day number.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":234913,"byte_end":234953,"line_start":469,"line_end":469,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":234958,"byte_end":234961,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":234966,"byte_end":234977,"line_start":471,"line_end":471,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":234982,"byte_end":235015,"line_start":472,"line_end":472,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":235020,"byte_end":235035,"line_start":473,"line_end":473,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC).to_ordinal_date(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":235040,"byte_end":235097,"line_start":474,"line_end":474,"column_start":5,"column_end":62}},{"value":"/     (2019, 1)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":235102,"byte_end":235119,"line_start":475,"line_end":475,"column_start":5,"column_end":22}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":235124,"byte_end":235130,"line_start":476,"line_end":476,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":235135,"byte_end":235142,"line_start":477,"line_end":477,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1346},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":236034,"byte_end":236050,"line_start":507,"line_end":507,"column_start":18,"column_end":34},"name":"to_iso_week_date","qualname":"<OffsetDateTime>::to_iso_week_date","value":"const fn to_iso_week_date(Self) -> (i32, u8, Weekday)","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO 8601 year, week number, and weekday.","sig":null,"attributes":[{"value":"/ Get the ISO 8601 year, week number, and weekday.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":235247,"byte_end":235299,"line_start":482,"line_end":482,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":235304,"byte_end":235307,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":235312,"byte_end":235323,"line_start":484,"line_end":484,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::datetime};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":235328,"byte_end":235375,"line_start":485,"line_end":485,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":235380,"byte_end":235395,"line_start":486,"line_end":486,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC).to_iso_week_date(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":235400,"byte_end":235458,"line_start":487,"line_end":487,"column_start":5,"column_end":63}},{"value":"/     (2019, 1, Tuesday)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":235463,"byte_end":235489,"line_start":488,"line_end":488,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":235494,"byte_end":235500,"line_start":489,"line_end":489,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":235505,"byte_end":235520,"line_start":490,"line_end":490,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-10-04 0:00 UTC).to_iso_week_date(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":235525,"byte_end":235583,"line_start":491,"line_end":491,"column_start":5,"column_end":63}},{"value":"/     (2019, 40, Friday)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":235588,"byte_end":235614,"line_start":492,"line_end":492,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":235619,"byte_end":235625,"line_start":493,"line_end":493,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":235630,"byte_end":235645,"line_start":494,"line_end":494,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00 UTC).to_iso_week_date(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":235650,"byte_end":235708,"line_start":495,"line_end":495,"column_start":5,"column_end":63}},{"value":"/     (2020, 1, Wednesday)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":235713,"byte_end":235741,"line_start":496,"line_end":496,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":235746,"byte_end":235752,"line_start":497,"line_end":497,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":235757,"byte_end":235772,"line_start":498,"line_end":498,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-12-31 0:00 UTC).to_iso_week_date(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":235777,"byte_end":235835,"line_start":499,"line_end":499,"column_start":5,"column_end":63}},{"value":"/     (2020, 53, Thursday)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":235840,"byte_end":235868,"line_start":500,"line_end":500,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":235873,"byte_end":235879,"line_start":501,"line_end":501,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":235884,"byte_end":235899,"line_start":502,"line_end":502,"column_start":5,"column_end":20}},{"value":"/     datetime!(2021-01-01 0:00 UTC).to_iso_week_date(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":235904,"byte_end":235962,"line_start":503,"line_end":503,"column_start":5,"column_end":63}},{"value":"/     (2020, 53, Friday)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":235967,"byte_end":235993,"line_start":504,"line_end":504,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":235998,"byte_end":236004,"line_start":505,"line_end":505,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":236009,"byte_end":236016,"line_start":506,"line_end":506,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1347},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":236501,"byte_end":236508,"line_start":519,"line_end":519,"column_start":18,"column_end":25},"name":"weekday","qualname":"<OffsetDateTime>::weekday","value":"const fn weekday(Self) -> Weekday","parent":null,"children":[],"decl_id":null,"docs":" Get the weekday of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the weekday of the date in the stored offset.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":236131,"byte_end":236184,"line_start":511,"line_end":511,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":236189,"byte_end":236192,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":236197,"byte_end":236208,"line_start":513,"line_end":513,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::datetime};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":236213,"byte_end":236260,"line_start":514,"line_end":514,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).weekday(), Tuesday);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":236265,"byte_end":236331,"line_start":515,"line_end":515,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2019-02-01 0:00 UTC).weekday(), Friday);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":236336,"byte_end":236401,"line_start":516,"line_end":516,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(datetime!(2019-03-01 0:00 UTC).weekday(), Friday);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":236406,"byte_end":236471,"line_start":517,"line_end":517,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":236476,"byte_end":236483,"line_start":518,"line_end":518,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1348},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":237271,"byte_end":237284,"line_start":535,"line_end":535,"column_start":18,"column_end":31},"name":"to_julian_day","qualname":"<OffsetDateTime>::to_julian_day","value":"const fn to_julian_day(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the Julian day for the date. The time is not taken into account for this calculation.","sig":null,"attributes":[{"value":"/ Get the Julian day for the date. The time is not taken into account for this calculation.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":236569,"byte_end":236662,"line_start":523,"line_end":523,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":236667,"byte_end":236670,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ The algorithm to perform this conversion is derived from one provided by Peter Baum; it is","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":236675,"byte_end":236769,"line_start":525,"line_end":525,"column_start":5,"column_end":99}},{"value":"/ freely available [here](https://www.researchgate.net/publication/316558298_Date_Algorithms).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":236774,"byte_end":236870,"line_start":526,"line_end":526,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":236875,"byte_end":236878,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":236883,"byte_end":236894,"line_start":528,"line_end":528,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":236899,"byte_end":236932,"line_start":529,"line_end":529,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(-4713-11-24 0:00 UTC).to_julian_day(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":236937,"byte_end":237004,"line_start":530,"line_end":530,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(2000-01-01 0:00 UTC).to_julian_day(), 2_451_545);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":237009,"byte_end":237083,"line_start":531,"line_end":531,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).to_julian_day(), 2_458_485);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":237088,"byte_end":237162,"line_start":532,"line_end":532,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00 UTC).to_julian_day(), 2_458_849);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":237167,"byte_end":237241,"line_start":533,"line_end":533,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":237246,"byte_end":237253,"line_start":534,"line_end":534,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1349},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":237694,"byte_end":237700,"line_start":548,"line_end":548,"column_start":18,"column_end":24},"name":"to_hms","qualname":"<OffsetDateTime>::to_hms","value":"const fn to_hms(Self) -> (u8, u8, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, and second.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, and second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":237405,"byte_end":237448,"line_start":541,"line_end":541,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":237453,"byte_end":237456,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":237461,"byte_end":237472,"line_start":543,"line_end":543,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":237477,"byte_end":237510,"line_start":544,"line_end":544,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00 UTC).to_hms(), (0, 0, 0));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":237515,"byte_end":237585,"line_start":545,"line_end":545,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-01-01 23:59:59 UTC).to_hms(), (23, 59, 59));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":237590,"byte_end":237664,"line_start":546,"line_end":546,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":237669,"byte_end":237676,"line_start":547,"line_end":547,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1350},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":238159,"byte_end":238171,"line_start":565,"line_end":565,"column_start":18,"column_end":30},"name":"to_hms_milli","qualname":"<OffsetDateTime>::to_hms_milli","value":"const fn to_hms_milli(Self) -> (u8, u8, u8, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and millisecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and millisecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":237765,"byte_end":237821,"line_start":552,"line_end":552,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":237826,"byte_end":237829,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":237834,"byte_end":237845,"line_start":554,"line_end":554,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":237850,"byte_end":237883,"line_start":555,"line_end":555,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":237888,"byte_end":237903,"line_start":556,"line_end":556,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00:00 UTC).to_hms_milli(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":237908,"byte_end":237965,"line_start":557,"line_end":557,"column_start":5,"column_end":62}},{"value":"/     (0, 0, 0, 0)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":237970,"byte_end":237990,"line_start":558,"line_end":558,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":237995,"byte_end":238001,"line_start":559,"line_end":559,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":238006,"byte_end":238021,"line_start":560,"line_end":560,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999 UTC).to_hms_milli(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":238026,"byte_end":238088,"line_start":561,"line_end":561,"column_start":5,"column_end":67}},{"value":"/     (23, 59, 59, 999)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":238093,"byte_end":238118,"line_start":562,"line_end":562,"column_start":5,"column_end":30}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":238123,"byte_end":238129,"line_start":563,"line_end":563,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":238134,"byte_end":238141,"line_start":564,"line_end":564,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1351},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":238649,"byte_end":238661,"line_start":582,"line_end":582,"column_start":18,"column_end":30},"name":"to_hms_micro","qualname":"<OffsetDateTime>::to_hms_micro","value":"const fn to_hms_micro(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and microsecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and microsecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":238247,"byte_end":238303,"line_start":569,"line_end":569,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":238308,"byte_end":238311,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":238316,"byte_end":238327,"line_start":571,"line_end":571,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":238332,"byte_end":238365,"line_start":572,"line_end":572,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":238370,"byte_end":238385,"line_start":573,"line_end":573,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00:00 UTC).to_hms_micro(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":238390,"byte_end":238447,"line_start":574,"line_end":574,"column_start":5,"column_end":62}},{"value":"/     (0, 0, 0, 0)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":238452,"byte_end":238472,"line_start":575,"line_end":575,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":238477,"byte_end":238483,"line_start":576,"line_end":576,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":238488,"byte_end":238503,"line_start":577,"line_end":577,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999_999 UTC).to_hms_micro(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":238508,"byte_end":238574,"line_start":578,"line_end":578,"column_start":5,"column_end":71}},{"value":"/     (23, 59, 59, 999_999)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":238579,"byte_end":238608,"line_start":579,"line_end":579,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":238613,"byte_end":238619,"line_start":580,"line_end":580,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":238624,"byte_end":238631,"line_start":581,"line_end":581,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1352},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":239144,"byte_end":239155,"line_start":599,"line_end":599,"column_start":18,"column_end":29},"name":"to_hms_nano","qualname":"<OffsetDateTime>::to_hms_nano","value":"const fn to_hms_nano(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and nanosecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and nanosecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":238737,"byte_end":238792,"line_start":586,"line_end":586,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":238797,"byte_end":238800,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":238805,"byte_end":238816,"line_start":588,"line_end":588,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":238821,"byte_end":238854,"line_start":589,"line_end":589,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":238859,"byte_end":238874,"line_start":590,"line_end":590,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00:00 UTC).to_hms_nano(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":238879,"byte_end":238935,"line_start":591,"line_end":591,"column_start":5,"column_end":61}},{"value":"/     (0, 0, 0, 0)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":238940,"byte_end":238960,"line_start":592,"line_end":592,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":238965,"byte_end":238971,"line_start":593,"line_end":593,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":238976,"byte_end":238991,"line_start":594,"line_end":594,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999_999_999 UTC).to_hms_nano(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":238996,"byte_end":239065,"line_start":595,"line_end":595,"column_start":5,"column_end":74}},{"value":"/     (23, 59, 59, 999_999_999)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":239070,"byte_end":239103,"line_start":596,"line_end":596,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":239108,"byte_end":239114,"line_start":597,"line_end":597,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":239119,"byte_end":239126,"line_start":598,"line_end":598,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1353},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":239669,"byte_end":239673,"line_start":617,"line_end":617,"column_start":18,"column_end":22},"name":"hour","qualname":"<OffsetDateTime>::hour","value":"const fn hour(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour in the stored offset.","sig":null,"attributes":[{"value":"/ Get the clock hour in the stored offset.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":239230,"byte_end":239274,"line_start":603,"line_end":603,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":239279,"byte_end":239282,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..24`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":239287,"byte_end":239346,"line_start":605,"line_end":605,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":239351,"byte_end":239354,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":239359,"byte_end":239370,"line_start":607,"line_end":607,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":239375,"byte_end":239418,"line_start":608,"line_end":608,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).hour(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":239423,"byte_end":239480,"line_start":609,"line_end":609,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":239485,"byte_end":239500,"line_start":610,"line_end":610,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59 UTC)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":239505,"byte_end":239547,"line_start":611,"line_end":611,"column_start":5,"column_end":47}},{"value":"/         .to_offset(offset!(-2))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":239552,"byte_end":239587,"line_start":612,"line_end":612,"column_start":5,"column_end":40}},{"value":"/         .hour(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":239592,"byte_end":239612,"line_start":613,"line_end":613,"column_start":5,"column_end":25}},{"value":"/     21,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":239617,"byte_end":239628,"line_start":614,"line_end":614,"column_start":5,"column_end":16}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":239633,"byte_end":239639,"line_start":615,"line_end":615,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":239644,"byte_end":239651,"line_start":616,"line_end":616,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1354},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":240184,"byte_end":240190,"line_start":635,"line_end":635,"column_start":18,"column_end":24},"name":"minute","qualname":"<OffsetDateTime>::minute","value":"const fn minute(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the minute within the hour in the stored offset.","sig":null,"attributes":[{"value":"/ Get the minute within the hour in the stored offset.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":239726,"byte_end":239782,"line_start":621,"line_end":621,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":239787,"byte_end":239790,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":239795,"byte_end":239854,"line_start":623,"line_end":623,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":239859,"byte_end":239862,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":239867,"byte_end":239878,"line_start":625,"line_end":625,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":239883,"byte_end":239926,"line_start":626,"line_end":626,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).minute(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":239931,"byte_end":239990,"line_start":627,"line_end":627,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":239995,"byte_end":240010,"line_start":628,"line_end":628,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59 UTC)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":240015,"byte_end":240057,"line_start":629,"line_end":629,"column_start":5,"column_end":47}},{"value":"/         .to_offset(offset!(+0:30))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":240062,"byte_end":240100,"line_start":630,"line_end":630,"column_start":5,"column_end":43}},{"value":"/         .minute(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":240105,"byte_end":240127,"line_start":631,"line_end":631,"column_start":5,"column_end":27}},{"value":"/     29,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":240132,"byte_end":240143,"line_start":632,"line_end":632,"column_start":5,"column_end":16}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":240148,"byte_end":240154,"line_start":633,"line_end":633,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":240159,"byte_end":240166,"line_start":634,"line_end":634,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1355},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":240708,"byte_end":240714,"line_start":653,"line_end":653,"column_start":18,"column_end":24},"name":"second","qualname":"<OffsetDateTime>::second","value":"const fn second(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the second within the minute in the stored offset.","sig":null,"attributes":[{"value":"/ Get the second within the minute in the stored offset.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":240245,"byte_end":240303,"line_start":639,"line_end":639,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":240308,"byte_end":240311,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":240316,"byte_end":240375,"line_start":641,"line_end":641,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":240380,"byte_end":240383,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":240388,"byte_end":240399,"line_start":643,"line_end":643,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":240404,"byte_end":240447,"line_start":644,"line_end":644,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).second(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":240452,"byte_end":240511,"line_start":645,"line_end":645,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":240516,"byte_end":240531,"line_start":646,"line_end":646,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59 UTC)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":240536,"byte_end":240578,"line_start":647,"line_end":647,"column_start":5,"column_end":47}},{"value":"/         .to_offset(offset!(+0:00:30))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":240583,"byte_end":240624,"line_start":648,"line_end":648,"column_start":5,"column_end":46}},{"value":"/         .second(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":240629,"byte_end":240651,"line_start":649,"line_end":649,"column_start":5,"column_end":27}},{"value":"/     29,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":240656,"byte_end":240667,"line_start":650,"line_end":650,"column_start":5,"column_end":16}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":240672,"byte_end":240678,"line_start":651,"line_end":651,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":240683,"byte_end":240690,"line_start":652,"line_end":652,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1356},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":241292,"byte_end":241303,"line_start":669,"line_end":669,"column_start":18,"column_end":29},"name":"millisecond","qualname":"<OffsetDateTime>::millisecond","value":"const fn millisecond(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the milliseconds within the second in the stored offset.","sig":null,"attributes":[{"value":"/ Get the milliseconds within the second in the stored offset.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":240913,"byte_end":240977,"line_start":660,"line_end":660,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":240982,"byte_end":240985,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":240990,"byte_end":241052,"line_start":662,"line_end":662,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":241057,"byte_end":241060,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":241065,"byte_end":241076,"line_start":664,"line_end":664,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":241081,"byte_end":241114,"line_start":665,"line_end":665,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).millisecond(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":241119,"byte_end":241183,"line_start":666,"line_end":666,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59.999 UTC).millisecond(), 999);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":241188,"byte_end":241262,"line_start":667,"line_end":667,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":241267,"byte_end":241274,"line_start":668,"line_end":668,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1357},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":241790,"byte_end":241801,"line_start":685,"line_end":685,"column_start":18,"column_end":29},"name":"microsecond","qualname":"<OffsetDateTime>::microsecond","value":"const fn microsecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the microseconds within the second in the stored offset.","sig":null,"attributes":[{"value":"/ Get the microseconds within the second in the stored offset.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":241364,"byte_end":241428,"line_start":673,"line_end":673,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":241433,"byte_end":241436,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":241441,"byte_end":241507,"line_start":675,"line_end":675,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":241512,"byte_end":241515,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":241520,"byte_end":241531,"line_start":677,"line_end":677,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":241536,"byte_end":241569,"line_start":678,"line_end":678,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).microsecond(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":241574,"byte_end":241638,"line_start":679,"line_end":679,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":241643,"byte_end":241658,"line_start":680,"line_end":680,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59.999_999 UTC).microsecond(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":241663,"byte_end":241728,"line_start":681,"line_end":681,"column_start":5,"column_end":70}},{"value":"/     999_999,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":241733,"byte_end":241749,"line_start":682,"line_end":682,"column_start":5,"column_end":21}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":241754,"byte_end":241760,"line_start":683,"line_end":683,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":241765,"byte_end":241772,"line_start":684,"line_end":684,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1358},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":242297,"byte_end":242307,"line_start":701,"line_end":701,"column_start":18,"column_end":28},"name":"nanosecond","qualname":"<OffsetDateTime>::nanosecond","value":"const fn nanosecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the nanoseconds within the second in the stored offset.","sig":null,"attributes":[{"value":"/ Get the nanoseconds within the second in the stored offset.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":241862,"byte_end":241925,"line_start":689,"line_end":689,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":241930,"byte_end":241933,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000_000`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":241938,"byte_end":242008,"line_start":691,"line_end":691,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":242013,"byte_end":242016,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":242021,"byte_end":242032,"line_start":693,"line_end":693,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":242037,"byte_end":242070,"line_start":694,"line_end":694,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).nanosecond(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":242075,"byte_end":242138,"line_start":695,"line_end":695,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":242143,"byte_end":242158,"line_start":696,"line_end":696,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59.999_999_999 UTC).nanosecond(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":242163,"byte_end":242231,"line_start":697,"line_end":697,"column_start":5,"column_end":73}},{"value":"/     999_999_999,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":242236,"byte_end":242256,"line_start":698,"line_end":698,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":242261,"byte_end":242267,"line_start":699,"line_end":699,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":242272,"byte_end":242279,"line_start":700,"line_end":700,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1359},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":243118,"byte_end":243129,"line_start":724,"line_end":724,"column_start":18,"column_end":29},"name":"checked_add","qualname":"<OffsetDateTime>::checked_add","value":"const fn checked_add(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, returning `None` if an overflow occurred.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":242456,"byte_end":242529,"line_start":708,"line_end":708,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":242534,"byte_end":242537,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":242542,"byte_end":242549,"line_start":710,"line_end":710,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":242554,"byte_end":242601,"line_start":711,"line_end":711,"column_start":5,"column_end":52}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":242606,"byte_end":242649,"line_start":712,"line_end":712,"column_start":5,"column_end":48}},{"value":"/ let datetime = Date::MIN.midnight().assume_offset(offset!(+10));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":242654,"byte_end":242722,"line_start":713,"line_end":713,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(datetime.checked_add((-2).days()), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":242727,"byte_end":242783,"line_start":714,"line_end":714,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":242788,"byte_end":242791,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ let datetime = Date::MAX.midnight().assume_offset(offset!(+10));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":242796,"byte_end":242864,"line_start":716,"line_end":716,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(datetime.checked_add(2.days()), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":242869,"byte_end":242922,"line_start":717,"line_end":717,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":242927,"byte_end":242930,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":242935,"byte_end":242950,"line_start":719,"line_end":719,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30 +10).checked_add(27.hours()),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":242955,"byte_end":243023,"line_start":720,"line_end":720,"column_start":5,"column_end":73}},{"value":"/     Some(datetime!(2019 - 11 - 26 18:30 +10))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":243028,"byte_end":243077,"line_start":721,"line_end":721,"column_start":5,"column_end":54}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":243082,"byte_end":243088,"line_start":722,"line_end":722,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":243093,"byte_end":243100,"line_start":723,"line_end":723,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1360},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":243946,"byte_end":243957,"line_start":744,"line_end":744,"column_start":18,"column_end":29},"name":"checked_sub","qualname":"<OffsetDateTime>::checked_sub","value":"const fn checked_sub(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, returning `None` if an overflow occurred.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":243284,"byte_end":243357,"line_start":728,"line_end":728,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":243362,"byte_end":243365,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":243370,"byte_end":243377,"line_start":730,"line_end":730,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":243382,"byte_end":243429,"line_start":731,"line_end":731,"column_start":5,"column_end":52}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":243434,"byte_end":243477,"line_start":732,"line_end":732,"column_start":5,"column_end":48}},{"value":"/ let datetime = Date::MIN.midnight().assume_offset(offset!(+10));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":243482,"byte_end":243550,"line_start":733,"line_end":733,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(datetime.checked_sub(2.days()), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":243555,"byte_end":243608,"line_start":734,"line_end":734,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":243613,"byte_end":243616,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ let datetime = Date::MAX.midnight().assume_offset(offset!(+10));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":243621,"byte_end":243689,"line_start":736,"line_end":736,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(datetime.checked_sub((-2).days()), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":243694,"byte_end":243750,"line_start":737,"line_end":737,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":243755,"byte_end":243758,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":243763,"byte_end":243778,"line_start":739,"line_end":739,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30 +10).checked_sub(27.hours()),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":243783,"byte_end":243851,"line_start":740,"line_end":740,"column_start":5,"column_end":73}},{"value":"/     Some(datetime!(2019 - 11 - 24 12:30 +10))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":243856,"byte_end":243905,"line_start":741,"line_end":741,"column_start":5,"column_end":54}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":243910,"byte_end":243916,"line_start":742,"line_end":742,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":243921,"byte_end":243928,"line_start":743,"line_end":743,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1361},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":244899,"byte_end":244913,"line_start":770,"line_end":770,"column_start":18,"column_end":32},"name":"saturating_add","qualname":"<OffsetDateTime>::saturating_add","value":"const fn saturating_add(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, saturating value on overflow.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":244186,"byte_end":244247,"line_start":750,"line_end":750,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":244252,"byte_end":244255,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":244260,"byte_end":244267,"line_start":752,"line_end":752,"column_start":5,"column_end":12}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":244272,"byte_end":244311,"line_start":753,"line_end":753,"column_start":5,"column_end":44}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":244316,"byte_end":244349,"line_start":754,"line_end":754,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":244354,"byte_end":244369,"line_start":755,"line_end":755,"column_start":5,"column_end":20}},{"value":"/     datetime!(-999999 - 01 - 01 0:00 +10).saturating_add((-2).days()),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":244374,"byte_end":244448,"line_start":756,"line_end":756,"column_start":5,"column_end":79}},{"value":"/     datetime!(-999999 - 01 - 01 0:00 +10)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":244453,"byte_end":244498,"line_start":757,"line_end":757,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":244503,"byte_end":244509,"line_start":758,"line_end":758,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":244514,"byte_end":244517,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":244522,"byte_end":244537,"line_start":760,"line_end":760,"column_start":5,"column_end":20}},{"value":"/     datetime!(+999999 - 12 - 31 23:59:59.999_999_999 +10).saturating_add(2.days()),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":244542,"byte_end":244629,"line_start":761,"line_end":761,"column_start":5,"column_end":92}},{"value":"/     datetime!(+999999 - 12 - 31 23:59:59.999_999_999 +10)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":244634,"byte_end":244695,"line_start":762,"line_end":762,"column_start":5,"column_end":66}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":244700,"byte_end":244706,"line_start":763,"line_end":763,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":244711,"byte_end":244714,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":244719,"byte_end":244734,"line_start":765,"line_end":765,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30 +10).saturating_add(27.hours()),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":244739,"byte_end":244810,"line_start":766,"line_end":766,"column_start":5,"column_end":76}},{"value":"/     datetime!(2019 - 11 - 26 18:30 +10)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":244815,"byte_end":244858,"line_start":767,"line_end":767,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":244863,"byte_end":244869,"line_start":768,"line_end":768,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":244874,"byte_end":244881,"line_start":769,"line_end":769,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1362},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":246001,"byte_end":246015,"line_start":801,"line_end":801,"column_start":18,"column_end":32},"name":"saturating_sub","qualname":"<OffsetDateTime>::saturating_sub","value":"const fn saturating_sub(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, saturating value on overflow.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":245288,"byte_end":245349,"line_start":781,"line_end":781,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":245354,"byte_end":245357,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":245362,"byte_end":245369,"line_start":783,"line_end":783,"column_start":5,"column_end":12}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":245374,"byte_end":245413,"line_start":784,"line_end":784,"column_start":5,"column_end":44}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":245418,"byte_end":245451,"line_start":785,"line_end":785,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":245456,"byte_end":245471,"line_start":786,"line_end":786,"column_start":5,"column_end":20}},{"value":"/     datetime!(-999999 - 01 - 01 0:00 +10).saturating_sub(2.days()),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":245476,"byte_end":245547,"line_start":787,"line_end":787,"column_start":5,"column_end":76}},{"value":"/     datetime!(-999999 - 01 - 01 0:00 +10)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":245552,"byte_end":245597,"line_start":788,"line_end":788,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":245602,"byte_end":245608,"line_start":789,"line_end":789,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":245613,"byte_end":245616,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":245621,"byte_end":245636,"line_start":791,"line_end":791,"column_start":5,"column_end":20}},{"value":"/     datetime!(+999999 - 12 - 31 23:59:59.999_999_999 +10).saturating_sub((-2).days()),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":245641,"byte_end":245731,"line_start":792,"line_end":792,"column_start":5,"column_end":95}},{"value":"/     datetime!(+999999 - 12 - 31 23:59:59.999_999_999 +10)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":245736,"byte_end":245797,"line_start":793,"line_end":793,"column_start":5,"column_end":66}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":245802,"byte_end":245808,"line_start":794,"line_end":794,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":245813,"byte_end":245816,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":245821,"byte_end":245836,"line_start":796,"line_end":796,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30 +10).saturating_sub(27.hours()),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":245841,"byte_end":245912,"line_start":797,"line_end":797,"column_start":5,"column_end":76}},{"value":"/     datetime!(2019 - 11 - 24 12:30 +10)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":245917,"byte_end":245960,"line_start":798,"line_end":798,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":245965,"byte_end":245971,"line_start":799,"line_end":799,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":245976,"byte_end":245983,"line_start":800,"line_end":800,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1364},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":247264,"byte_end":247276,"line_start":836,"line_end":836,"column_start":18,"column_end":30},"name":"replace_time","qualname":"<OffsetDateTime>::replace_time","value":"const fn replace_time(Self, Time) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the time, which is assumed to be in the stored offset. The date and offset\n components are unchanged.","sig":null,"attributes":[{"value":"/ Replace the time, which is assumed to be in the stored offset. The date and offset","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":246532,"byte_end":246618,"line_start":817,"line_end":817,"column_start":5,"column_end":91}},{"value":"/ components are unchanged.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":246623,"byte_end":246652,"line_start":818,"line_end":818,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":246657,"byte_end":246660,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":246665,"byte_end":246676,"line_start":820,"line_end":820,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, time};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":246681,"byte_end":246722,"line_start":821,"line_end":821,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":246727,"byte_end":246742,"line_start":822,"line_end":822,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 5:00 UTC).replace_time(time!(12:00)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":246747,"byte_end":246813,"line_start":823,"line_end":823,"column_start":5,"column_end":71}},{"value":"/     datetime!(2020-01-01 12:00 UTC)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":246818,"byte_end":246857,"line_start":824,"line_end":824,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":246862,"byte_end":246868,"line_start":825,"line_end":825,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":246873,"byte_end":246888,"line_start":826,"line_end":826,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00 -5).replace_time(time!(7:00)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":246893,"byte_end":246958,"line_start":827,"line_end":827,"column_start":5,"column_end":70}},{"value":"/     datetime!(2020-01-01 7:00 -5)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":246963,"byte_end":247000,"line_start":828,"line_end":828,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":247005,"byte_end":247011,"line_start":829,"line_end":829,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":247016,"byte_end":247031,"line_start":830,"line_end":830,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00 +1).replace_time(time!(12:00)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":247036,"byte_end":247101,"line_start":831,"line_end":831,"column_start":5,"column_end":70}},{"value":"/     datetime!(2020-01-01 12:00 +1)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":247106,"byte_end":247144,"line_start":832,"line_end":832,"column_start":5,"column_end":43}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":247149,"byte_end":247155,"line_start":833,"line_end":833,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":247160,"byte_end":247167,"line_start":834,"line_end":834,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `OffsetDateTime`.\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":247172,"byte_end":247246,"line_start":835,"line_end":835,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1365},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":248015,"byte_end":248027,"line_start":857,"line_end":857,"column_start":18,"column_end":30},"name":"replace_date","qualname":"<OffsetDateTime>::replace_date","value":"const fn replace_date(Self, Date) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the date, which is assumed to be in the stored offset. The time and offset\n components are unchanged.","sig":null,"attributes":[{"value":"/ Replace the date, which is assumed to be in the stored offset. The time and offset","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":247416,"byte_end":247502,"line_start":842,"line_end":842,"column_start":5,"column_end":91}},{"value":"/ components are unchanged.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":247507,"byte_end":247536,"line_start":843,"line_end":843,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":247541,"byte_end":247544,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":247549,"byte_end":247560,"line_start":845,"line_end":845,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, date};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":247565,"byte_end":247606,"line_start":846,"line_end":846,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":247611,"byte_end":247626,"line_start":847,"line_end":847,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00 UTC).replace_date(date!(2020-01-30)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":247631,"byte_end":247703,"line_start":848,"line_end":848,"column_start":5,"column_end":77}},{"value":"/     datetime!(2020-01-30 12:00 UTC)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":247708,"byte_end":247747,"line_start":849,"line_end":849,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":247752,"byte_end":247758,"line_start":850,"line_end":850,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":247763,"byte_end":247778,"line_start":851,"line_end":851,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00 +1).replace_date(date!(2020-01-30)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":247783,"byte_end":247853,"line_start":852,"line_end":852,"column_start":5,"column_end":75}},{"value":"/     datetime!(2020-01-30 0:00 +1)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":247858,"byte_end":247895,"line_start":853,"line_end":853,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":247900,"byte_end":247906,"line_start":854,"line_end":854,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":247911,"byte_end":247918,"line_start":855,"line_end":855,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `OffsetDateTime`.\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":247923,"byte_end":247997,"line_start":856,"line_end":856,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1366},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":248792,"byte_end":248809,"line_start":878,"line_end":878,"column_start":18,"column_end":35},"name":"replace_date_time","qualname":"<OffsetDateTime>::replace_date_time","value":"const fn replace_date_time(Self, PrimitiveDateTime) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the date and time, which are assumed to be in the stored offset. The offset\n component remains unchanged.","sig":null,"attributes":[{"value":"/ Replace the date and time, which are assumed to be in the stored offset. The offset","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":248167,"byte_end":248254,"line_start":863,"line_end":863,"column_start":5,"column_end":92}},{"value":"/ component remains unchanged.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":248259,"byte_end":248291,"line_start":864,"line_end":864,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":248296,"byte_end":248299,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":248304,"byte_end":248315,"line_start":866,"line_end":866,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":248320,"byte_end":248353,"line_start":867,"line_end":867,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":248358,"byte_end":248373,"line_start":868,"line_end":868,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00 UTC).replace_date_time(datetime!(2020-01-30 16:00)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":248378,"byte_end":248465,"line_start":869,"line_end":869,"column_start":5,"column_end":92}},{"value":"/     datetime!(2020-01-30 16:00 UTC)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":248470,"byte_end":248509,"line_start":870,"line_end":870,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":248514,"byte_end":248520,"line_start":871,"line_end":871,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":248525,"byte_end":248540,"line_start":872,"line_end":872,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00 +1).replace_date_time(datetime!(2020-01-30 0:00)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":248545,"byte_end":248630,"line_start":873,"line_end":873,"column_start":5,"column_end":90}},{"value":"/     datetime!(2020-01-30 0:00 +1)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":248635,"byte_end":248672,"line_start":874,"line_end":874,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":248677,"byte_end":248683,"line_start":875,"line_end":875,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":248688,"byte_end":248695,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `OffsetDateTime`.\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":248700,"byte_end":248774,"line_start":877,"line_end":877,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1367},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":249308,"byte_end":249322,"line_start":892,"line_end":892,"column_start":18,"column_end":32},"name":"replace_offset","qualname":"<OffsetDateTime>::replace_offset","value":"const fn replace_offset(Self, UtcOffset) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the offset. The date and time components remain unchanged.","sig":null,"attributes":[{"value":"/ Replace the offset. The date and time components remain unchanged.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":248912,"byte_end":248982,"line_start":882,"line_end":882,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":248987,"byte_end":248990,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":248995,"byte_end":249006,"line_start":884,"line_end":884,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":249011,"byte_end":249054,"line_start":885,"line_end":885,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":249059,"byte_end":249074,"line_start":886,"line_end":886,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00 UTC).replace_offset(offset!(-5)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":249079,"byte_end":249146,"line_start":887,"line_end":887,"column_start":5,"column_end":72}},{"value":"/     datetime!(2020-01-01 0:00 -5)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":249151,"byte_end":249188,"line_start":888,"line_end":888,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":249193,"byte_end":249199,"line_start":889,"line_end":889,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":249204,"byte_end":249211,"line_start":890,"line_end":890,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `OffsetDateTime`.\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":249216,"byte_end":249290,"line_start":891,"line_end":891,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1368},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":249976,"byte_end":249988,"line_start":907,"line_end":907,"column_start":18,"column_end":30},"name":"replace_year","qualname":"<OffsetDateTime>::replace_year","value":"const fn replace_year(Self, i32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the year. The month and day will be unchanged.","sig":null,"attributes":[{"value":"/ Replace the year. The month and day will be unchanged.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":249419,"byte_end":249477,"line_start":896,"line_end":896,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":249482,"byte_end":249485,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":249490,"byte_end":249501,"line_start":898,"line_end":898,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":249506,"byte_end":249539,"line_start":899,"line_end":899,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":249544,"byte_end":249559,"line_start":900,"line_end":900,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00 +01).replace_year(2019),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":249564,"byte_end":249627,"line_start":901,"line_end":901,"column_start":5,"column_end":68}},{"value":"/     Ok(datetime!(2019 - 02 - 18 12:00 +01))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":249632,"byte_end":249679,"line_start":902,"line_end":902,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":249684,"byte_end":249690,"line_start":903,"line_end":903,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00 +01).replace_year(-1_000_000_000).is_err()); // -1_000_000_000 isn't a valid year","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":249695,"byte_end":249819,"line_start":904,"line_end":904,"column_start":5,"column_end":129}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00 +01).replace_year(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid year","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":249824,"byte_end":249946,"line_start":905,"line_end":905,"column_start":5,"column_end":127}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":249951,"byte_end":249958,"line_start":906,"line_end":906,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1369},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":250593,"byte_end":250606,"line_start":922,"line_end":922,"column_start":18,"column_end":31},"name":"replace_month","qualname":"<OffsetDateTime>::replace_month","value":"const fn replace_month(Self, Month) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the month of the year.","sig":null,"attributes":[{"value":"/ Replace the month of the year.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":250148,"byte_end":250182,"line_start":911,"line_end":911,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":250187,"byte_end":250190,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":250195,"byte_end":250206,"line_start":913,"line_end":913,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":250211,"byte_end":250244,"line_start":914,"line_end":914,"column_start":5,"column_end":38}},{"value":"/ # use time::Month;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":250249,"byte_end":250271,"line_start":915,"line_end":915,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":250276,"byte_end":250291,"line_start":916,"line_end":916,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00 +01).replace_month(Month::January),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":250296,"byte_end":250370,"line_start":917,"line_end":917,"column_start":5,"column_end":79}},{"value":"/     Ok(datetime!(2022 - 01 - 18 12:00 +01))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":250375,"byte_end":250422,"line_start":918,"line_end":918,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":250427,"byte_end":250433,"line_start":919,"line_end":919,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 01 - 30 12:00 +01).replace_month(Month::February).is_err()); // 30 isn't a valid day in February","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":250438,"byte_end":250563,"line_start":920,"line_end":920,"column_start":5,"column_end":130}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":250568,"byte_end":250575,"line_start":921,"line_end":921,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1370},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":251260,"byte_end":251271,"line_start":937,"line_end":937,"column_start":18,"column_end":29},"name":"replace_day","qualname":"<OffsetDateTime>::replace_day","value":"const fn replace_day(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the day of the month.","sig":null,"attributes":[{"value":"/ Replace the day of the month.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":250771,"byte_end":250804,"line_start":926,"line_end":926,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":250809,"byte_end":250812,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":250817,"byte_end":250828,"line_start":928,"line_end":928,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":250833,"byte_end":250866,"line_start":929,"line_end":929,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":250871,"byte_end":250886,"line_start":930,"line_end":930,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00 +01).replace_day(1),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":250891,"byte_end":250950,"line_start":931,"line_end":931,"column_start":5,"column_end":64}},{"value":"/     Ok(datetime!(2022 - 02 - 01 12:00 +01))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":250955,"byte_end":251002,"line_start":932,"line_end":932,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":251007,"byte_end":251013,"line_start":933,"line_end":933,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00 +01).replace_day(0).is_err()); // 00 isn't a valid day","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":251018,"byte_end":251115,"line_start":934,"line_end":934,"column_start":5,"column_end":102}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00 +01).replace_day(30).is_err()); // 30 isn't a valid day in February","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":251120,"byte_end":251230,"line_start":935,"line_end":935,"column_start":5,"column_end":115}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":251235,"byte_end":251242,"line_start":936,"line_end":936,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1371},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":251844,"byte_end":251856,"line_start":951,"line_end":951,"column_start":18,"column_end":30},"name":"replace_hour","qualname":"<OffsetDateTime>::replace_hour","value":"const fn replace_hour(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the clock hour.","sig":null,"attributes":[{"value":"/ Replace the clock hour.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":251427,"byte_end":251454,"line_start":941,"line_end":941,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":251459,"byte_end":251462,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":251467,"byte_end":251478,"line_start":943,"line_end":943,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":251483,"byte_end":251516,"line_start":944,"line_end":944,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":251521,"byte_end":251536,"line_start":945,"line_end":945,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_hour(7),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":251541,"byte_end":251616,"line_start":946,"line_end":946,"column_start":5,"column_end":80}},{"value":"/     Ok(datetime!(2022 - 02 - 18 07:02:03.004_005_006 +01))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":251621,"byte_end":251683,"line_start":947,"line_end":947,"column_start":5,"column_end":67}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":251688,"byte_end":251694,"line_start":948,"line_end":948,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_hour(24).is_err()); // 24 isn't a valid hour","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":251699,"byte_end":251814,"line_start":949,"line_end":949,"column_start":5,"column_end":120}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":251819,"byte_end":251826,"line_start":950,"line_end":950,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1372},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":252451,"byte_end":252465,"line_start":965,"line_end":965,"column_start":18,"column_end":32},"name":"replace_minute","qualname":"<OffsetDateTime>::replace_minute","value":"const fn replace_minute(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the minutes within the hour.","sig":null,"attributes":[{"value":"/ Replace the minutes within the hour.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":252015,"byte_end":252055,"line_start":955,"line_end":955,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":252060,"byte_end":252063,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":252068,"byte_end":252079,"line_start":957,"line_end":957,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":252084,"byte_end":252117,"line_start":958,"line_end":958,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":252122,"byte_end":252137,"line_start":959,"line_end":959,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_minute(7),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":252142,"byte_end":252219,"line_start":960,"line_end":960,"column_start":5,"column_end":82}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:07:03.004_005_006 +01))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":252224,"byte_end":252286,"line_start":961,"line_end":961,"column_start":5,"column_end":67}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":252291,"byte_end":252297,"line_start":962,"line_end":962,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_minute(60).is_err()); // 60 isn't a valid minute","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":252302,"byte_end":252421,"line_start":963,"line_end":963,"column_start":5,"column_end":124}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":252426,"byte_end":252433,"line_start":964,"line_end":964,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1373},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":253068,"byte_end":253082,"line_start":979,"line_end":979,"column_start":18,"column_end":32},"name":"replace_second","qualname":"<OffsetDateTime>::replace_second","value":"const fn replace_second(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the seconds within the minute.","sig":null,"attributes":[{"value":"/ Replace the seconds within the minute.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":252630,"byte_end":252672,"line_start":969,"line_end":969,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":252677,"byte_end":252680,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":252685,"byte_end":252696,"line_start":971,"line_end":971,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":252701,"byte_end":252734,"line_start":972,"line_end":972,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":252739,"byte_end":252754,"line_start":973,"line_end":973,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_second(7),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":252759,"byte_end":252836,"line_start":974,"line_end":974,"column_start":5,"column_end":82}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:07.004_005_006 +01))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":252841,"byte_end":252903,"line_start":975,"line_end":975,"column_start":5,"column_end":67}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":252908,"byte_end":252914,"line_start":976,"line_end":976,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_second(60).is_err()); // 60 isn't a valid second","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":252919,"byte_end":253038,"line_start":977,"line_end":977,"column_start":5,"column_end":124}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":253043,"byte_end":253050,"line_start":978,"line_end":978,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1374},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":253703,"byte_end":253722,"line_start":993,"line_end":993,"column_start":18,"column_end":37},"name":"replace_millisecond","qualname":"<OffsetDateTime>::replace_millisecond","value":"const fn replace_millisecond(Self, u16) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the milliseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the milliseconds within the second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":253247,"byte_end":253294,"line_start":983,"line_end":983,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":253299,"byte_end":253302,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":253307,"byte_end":253318,"line_start":985,"line_end":985,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":253323,"byte_end":253356,"line_start":986,"line_end":986,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":253361,"byte_end":253376,"line_start":987,"line_end":987,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_millisecond(7),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":253381,"byte_end":253463,"line_start":988,"line_end":988,"column_start":5,"column_end":87}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007 +01))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":253468,"byte_end":253522,"line_start":989,"line_end":989,"column_start":5,"column_end":59}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":253527,"byte_end":253533,"line_start":990,"line_end":990,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_millisecond(1_000).is_err()); // 1_000 isn't a valid millisecond","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":253538,"byte_end":253673,"line_start":991,"line_end":991,"column_start":5,"column_end":140}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":253678,"byte_end":253685,"line_start":992,"line_end":992,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1375},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":254438,"byte_end":254457,"line_start":1013,"line_end":1013,"column_start":18,"column_end":37},"name":"replace_microsecond","qualname":"<OffsetDateTime>::replace_microsecond","value":"const fn replace_microsecond(Self, u32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the microseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the microseconds within the second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":253966,"byte_end":254013,"line_start":1003,"line_end":1003,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":254018,"byte_end":254021,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":254026,"byte_end":254037,"line_start":1005,"line_end":1005,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":254042,"byte_end":254075,"line_start":1006,"line_end":1006,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":254080,"byte_end":254095,"line_start":1007,"line_end":1007,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_microsecond(7_008),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":254100,"byte_end":254186,"line_start":1008,"line_end":1008,"column_start":5,"column_end":91}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007_008 +01))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":254191,"byte_end":254249,"line_start":1009,"line_end":1009,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":254254,"byte_end":254260,"line_start":1010,"line_end":1010,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_microsecond(1_000_000).is_err()); // 1_000_000 isn't a valid microsecond","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":254265,"byte_end":254408,"line_start":1011,"line_end":1011,"column_start":5,"column_end":148}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":254413,"byte_end":254420,"line_start":1012,"line_end":1012,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1376},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":255185,"byte_end":255203,"line_start":1033,"line_end":1033,"column_start":18,"column_end":36},"name":"replace_nanosecond","qualname":"<OffsetDateTime>::replace_nanosecond","value":"const fn replace_nanosecond(Self, u32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the nanoseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the nanoseconds within the second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":254701,"byte_end":254747,"line_start":1023,"line_end":1023,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":254752,"byte_end":254755,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":254760,"byte_end":254771,"line_start":1025,"line_end":1025,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":254776,"byte_end":254809,"line_start":1026,"line_end":1026,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":254814,"byte_end":254829,"line_start":1027,"line_end":1027,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_nanosecond(7_008_009),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":254834,"byte_end":254923,"line_start":1028,"line_end":1028,"column_start":5,"column_end":94}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007_008_009 +01))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":254928,"byte_end":254990,"line_start":1029,"line_end":1029,"column_start":5,"column_end":67}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":254995,"byte_end":255001,"line_start":1030,"line_end":1030,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_nanosecond(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid nanosecond","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":255006,"byte_end":255155,"line_start":1031,"line_end":1031,"column_start":5,"column_end":154}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":255160,"byte_end":255167,"line_start":1032,"line_end":1032,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1378},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":255652,"byte_end":255663,"line_start":1047,"line_end":1047,"column_start":12,"column_end":23},"name":"format_into","qualname":"<OffsetDateTime>::format_into","value":"fn format_into<impl io::Write,\nimpl Formattable + ?Sized>(Self, &mut impl io::Write,\n&impl Formattable + ?Sized) -> Result<usize, error::Format> where\nimpl io::Write: io::Write, impl Formattable + ?Sized: Formattable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Format the `OffsetDateTime` using the provided [format\n description](crate::format_description).\n","sig":null,"attributes":[{"value":"/ Format the `OffsetDateTime` using the provided [format","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":255533,"byte_end":255591,"line_start":1045,"line_end":1045,"column_start":5,"column_end":63}},{"value":"/ description](crate::format_description).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":255596,"byte_end":255640,"line_start":1046,"line_end":1046,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1381},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":256561,"byte_end":256567,"line_start":1075,"line_end":1075,"column_start":12,"column_end":18},"name":"format","qualname":"<OffsetDateTime>::format","value":"fn format<impl Formattable + ?Sized>(Self, &impl Formattable + ?Sized)\n-> Result<String, error::Format> where\nimpl Formattable + ?Sized: Formattable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Format the `OffsetDateTime` using the provided [format\n description](crate::format_description).","sig":null,"attributes":[{"value":"/ Format the `OffsetDateTime` using the provided [format","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":255964,"byte_end":256022,"line_start":1060,"line_end":1060,"column_start":5,"column_end":63}},{"value":"/ description](crate::format_description).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":256027,"byte_end":256071,"line_start":1061,"line_end":1061,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":256076,"byte_end":256079,"line_start":1062,"line_end":1062,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":256084,"byte_end":256095,"line_start":1063,"line_end":1063,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::datetime};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":256100,"byte_end":256155,"line_start":1064,"line_end":1064,"column_start":5,"column_end":60}},{"value":"/ let format = format_description::parse(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":256160,"byte_end":256203,"line_start":1065,"line_end":1065,"column_start":5,"column_end":48}},{"value":"/     \"[year]-[month]-[day] [hour]:[minute]:[second] [offset_hour \\","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":256208,"byte_end":256277,"line_start":1066,"line_end":1066,"column_start":5,"column_end":74}},{"value":"/          sign:mandatory]:[offset_minute]:[offset_second]\",","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":256282,"byte_end":256344,"line_start":1067,"line_end":1067,"column_start":5,"column_end":67}},{"value":"/ )?;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":256349,"byte_end":256356,"line_start":1068,"line_end":1068,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":256361,"byte_end":256376,"line_start":1069,"line_end":1069,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-02 03:04:05 +06:07:08).format(&format)?,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":256381,"byte_end":256447,"line_start":1070,"line_end":1070,"column_start":5,"column_end":71}},{"value":"/     \"2020-01-02 03:04:05 +06:07:08\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":256452,"byte_end":256491,"line_start":1071,"line_end":1071,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":256496,"byte_end":256502,"line_start":1072,"line_end":1072,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":256507,"byte_end":256537,"line_start":1073,"line_end":1073,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":256542,"byte_end":256549,"line_start":1074,"line_end":1074,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1384},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":257431,"byte_end":257436,"line_start":1097,"line_end":1097,"column_start":12,"column_end":17},"name":"parse","qualname":"<OffsetDateTime>::parse","value":"fn parse<impl Parsable + ?Sized>(&str, &impl Parsable + ?Sized)\n-> Result<Self, error::Parse> where impl Parsable + ?Sized: Parsable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Parse an `OffsetDateTime` from the input using the provided [format\n description](crate::format_description).","sig":null,"attributes":[{"value":"/ Parse an `OffsetDateTime` from the input using the provided [format","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":256789,"byte_end":256860,"line_start":1082,"line_end":1082,"column_start":5,"column_end":76}},{"value":"/ description](crate::format_description).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":256865,"byte_end":256909,"line_start":1083,"line_end":1083,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":256914,"byte_end":256917,"line_start":1084,"line_end":1084,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":256922,"byte_end":256933,"line_start":1085,"line_end":1085,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::datetime, OffsetDateTime};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":256938,"byte_end":257009,"line_start":1086,"line_end":1086,"column_start":5,"column_end":76}},{"value":"/ let format = format_description::parse(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":257014,"byte_end":257057,"line_start":1087,"line_end":1087,"column_start":5,"column_end":48}},{"value":"/     \"[year]-[month]-[day] [hour]:[minute]:[second] [offset_hour \\","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":257062,"byte_end":257131,"line_start":1088,"line_end":1088,"column_start":5,"column_end":74}},{"value":"/          sign:mandatory]:[offset_minute]:[offset_second]\",","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":257136,"byte_end":257198,"line_start":1089,"line_end":1089,"column_start":5,"column_end":67}},{"value":"/ )?;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":257203,"byte_end":257210,"line_start":1090,"line_end":1090,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":257215,"byte_end":257230,"line_start":1091,"line_end":1091,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::parse(\"2020-01-02 03:04:05 +06:07:08\", &format)?,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":257235,"byte_end":257308,"line_start":1092,"line_end":1092,"column_start":5,"column_end":78}},{"value":"/     datetime!(2020-01-02 03:04:05 +06:07:08)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":257313,"byte_end":257361,"line_start":1093,"line_end":1093,"column_start":5,"column_end":53}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":257366,"byte_end":257372,"line_start":1094,"line_end":1094,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":257377,"byte_end":257407,"line_start":1095,"line_end":1095,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":257412,"byte_end":257419,"line_start":1096,"line_end":1096,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1388},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":258587,"byte_end":258590,"line_start":1129,"line_end":1129,"column_start":8,"column_end":11},"name":"fmt","qualname":"<OffsetDateTime as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1390},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":258821,"byte_end":258823,"line_start":1137,"line_end":1137,"column_start":8,"column_end":10},"name":"eq","qualname":"<OffsetDateTime as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Self) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1392},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":258986,"byte_end":258997,"line_start":1143,"line_end":1143,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<OffsetDateTime as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &Self) -> Option<Ordering>","parent":{"krate":2,"index":2848},"children":[],"decl_id":{"krate":2,"index":2850},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1394},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":259113,"byte_end":259116,"line_start":1149,"line_end":1149,"column_start":8,"column_end":11},"name":"cmp","qualname":"<OffsetDateTime as std::cmp::Ord>::cmp","value":"fn cmp(&Self, &Self) -> Ordering","parent":{"krate":2,"index":2838},"children":[],"decl_id":{"krate":2,"index":2839},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1396},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":259293,"byte_end":259297,"line_start":1156,"line_end":1156,"column_start":8,"column_end":12},"name":"hash","qualname":"<OffsetDateTime as std::hash::Hash>::hash","value":"fn hash<H>(&Self, &mut H) where H: Hasher","parent":{"krate":2,"index":10115},"children":[],"decl_id":{"krate":2,"index":10116},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1401},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":259673,"byte_end":259676,"line_start":1169,"line_end":1169,"column_start":8,"column_end":11},"name":"add","qualname":"<OffsetDateTime as std::ops::Add>::add","value":"fn add(Self, T) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1405},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":259972,"byte_end":259975,"line_start":1182,"line_end":1182,"column_start":8,"column_end":11},"name":"sub","qualname":"<OffsetDateTime as std::ops::Sub>::sub","value":"fn sub(Self, T) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1408},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":260204,"byte_end":260207,"line_start":1192,"line_end":1192,"column_start":8,"column_end":11},"name":"sub","qualname":"<OffsetDateTime as std::ops::Sub>::sub","value":"fn sub(Self, Self) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1411},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":260529,"byte_end":260532,"line_start":1203,"line_end":1203,"column_start":8,"column_end":11},"name":"add","qualname":"<SystemTime as std::ops::Add>::add","value":"fn add(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1414},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":260999,"byte_end":261002,"line_start":1221,"line_end":1221,"column_start":8,"column_end":11},"name":"sub","qualname":"<SystemTime as std::ops::Sub>::sub","value":"fn sub(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1417},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":261278,"byte_end":261281,"line_start":1232,"line_end":1232,"column_start":8,"column_end":11},"name":"sub","qualname":"<OffsetDateTime as std::ops::Sub>::sub","value":"fn sub(Self, SystemTime) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1420},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":261465,"byte_end":261468,"line_start":1241,"line_end":1241,"column_start":8,"column_end":11},"name":"sub","qualname":"<SystemTime as std::ops::Sub>::sub","value":"fn sub(Self, OffsetDateTime) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1422},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":261643,"byte_end":261645,"line_start":1248,"line_end":1248,"column_start":8,"column_end":10},"name":"eq","qualname":"<OffsetDateTime as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &SystemTime) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1424},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":261803,"byte_end":261805,"line_start":1255,"line_end":1255,"column_start":8,"column_end":10},"name":"eq","qualname":"<SystemTime as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &OffsetDateTime) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1426},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":261978,"byte_end":261989,"line_start":1262,"line_end":1262,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<OffsetDateTime as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &SystemTime) -> Option<Ordering>","parent":{"krate":2,"index":2848},"children":[],"decl_id":{"krate":2,"index":2850},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1428},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":262174,"byte_end":262185,"line_start":1269,"line_end":1269,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<SystemTime as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &OffsetDateTime) -> Option<Ordering>","parent":{"krate":2,"index":2848},"children":[],"decl_id":{"krate":2,"index":2850},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1430},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":262377,"byte_end":262381,"line_start":1276,"line_end":1276,"column_start":8,"column_end":12},"name":"from","qualname":"<OffsetDateTime as std::convert::From>::from","value":"fn from(SystemTime) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1432},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":262759,"byte_end":262763,"line_start":1287,"line_end":1287,"column_start":8,"column_end":12},"name":"from","qualname":"<SystemTime as std::convert::From>::from","value":"fn from(OffsetDateTime) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1433},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"parsing","qualname":"::parsing","value":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/mod.rs","parent":null,"children":[{"krate":0,"index":1434},{"krate":0,"index":1618},{"krate":0,"index":1708},{"krate":0,"index":1800},{"krate":0,"index":2120},{"krate":0,"index":2294},{"krate":0,"index":2305},{"krate":0,"index":2308},{"krate":0,"index":3905},{"krate":0,"index":3911},{"krate":0,"index":2311},{"krate":0,"index":2322},{"krate":0,"index":2325}],"decl_id":null,"docs":" Parsing for various types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":9706,"byte_end":9733,"line_start":292,"line_end":292,"column_start":1,"column_end":28}},{"value":"/ Parsing for various types.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/mod.rs","byte_start":264042,"byte_end":264072,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":1855},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":306863,"byte_end":306871,"line_start":14,"line_end":14,"column_start":11,"column_end":19},"name":"Parsable","qualname":"::parsing::parsable::Parsable","value":"Parsable: sealed::Sealed","parent":null,"children":[],"decl_id":null,"docs":" A type that can be parsed.\n","sig":null,"attributes":[{"value":"/ A type that can be parsed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":306774,"byte_end":306804,"line_start":12,"line_end":12,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":1866},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":307487,"byte_end":307493,"line_start":31,"line_end":31,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::parsing::parsable::sealed::Sealed","value":"Sealed","parent":null,"children":[{"krate":0,"index":1867},{"krate":0,"index":1869},{"krate":0,"index":1870},{"krate":0,"index":1871},{"krate":0,"index":1872},{"krate":0,"index":1873},{"krate":0,"index":1874}],"decl_id":null,"docs":" Parse the item using a format description and an input.\n","sig":null,"attributes":[{"value":"/ Parse the item using a format description and an input.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":307350,"byte_end":307409,"line_start":29,"line_end":29,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1867},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":307679,"byte_end":307689,"line_start":35,"line_end":35,"column_start":12,"column_end":22},"name":"parse_into","qualname":"::parsing::parsable::sealed::Sealed::parse_into","value":"fn parse_into<'a>(&Self, &'a [u8], &mut Parsed)\n-> Result<&'a [u8], error::Parse>","parent":{"krate":0,"index":1866},"children":[],"decl_id":null,"docs":" Parse the item into the provided [`Parsed`] struct.","sig":null,"attributes":[{"value":"/ Parse the item into the provided [`Parsed`] struct.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":307504,"byte_end":307559,"line_start":32,"line_end":32,"column_start":9,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":307568,"byte_end":307571,"line_start":33,"line_end":33,"column_start":9,"column_end":12}},{"value":"/ This method can be used to parse a single component without parsing the full value.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":307580,"byte_end":307667,"line_start":34,"line_end":34,"column_start":9,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":1869},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":308059,"byte_end":308064,"line_start":45,"line_end":45,"column_start":12,"column_end":17},"name":"parse","qualname":"::parsing::parsable::sealed::Sealed::parse","value":"fn parse(&Self, &[u8]) -> Result<Parsed, error::Parse>","parent":{"krate":0,"index":1866},"children":[],"decl_id":null,"docs":" Parse the item into a new [`Parsed`] struct.","sig":null,"attributes":[{"value":"/ Parse the item into a new [`Parsed`] struct.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":307830,"byte_end":307878,"line_start":41,"line_end":41,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":307887,"byte_end":307890,"line_start":42,"line_end":42,"column_start":9,"column_end":12}},{"value":"/ This method can only be used to parse a complete value of a type. If any characters","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":307899,"byte_end":307986,"line_start":43,"line_end":43,"column_start":9,"column_end":96}},{"value":"/ remain after parsing, an error will be returned.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":307995,"byte_end":308047,"line_start":44,"line_end":44,"column_start":9,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1870},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":308435,"byte_end":308445,"line_start":55,"line_end":55,"column_start":12,"column_end":22},"name":"parse_date","qualname":"::parsing::parsable::sealed::Sealed::parse_date","value":"fn parse_date(&Self, &[u8]) -> Result<Date, error::Parse>","parent":{"krate":0,"index":1866},"children":[],"decl_id":null,"docs":" Parse a [`Date`] from the format description.\n","sig":null,"attributes":[{"value":"/ Parse a [`Date`] from the format description.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":308374,"byte_end":308423,"line_start":54,"line_end":54,"column_start":9,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1871},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":308626,"byte_end":308636,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"parse_time","qualname":"::parsing::parsable::sealed::Sealed::parse_time","value":"fn parse_time(&Self, &[u8]) -> Result<Time, error::Parse>","parent":{"krate":0,"index":1866},"children":[],"decl_id":null,"docs":" Parse a [`Time`] from the format description.\n","sig":null,"attributes":[{"value":"/ Parse a [`Time`] from the format description.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":308565,"byte_end":308614,"line_start":59,"line_end":59,"column_start":9,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1872},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":308822,"byte_end":308834,"line_start":65,"line_end":65,"column_start":12,"column_end":24},"name":"parse_offset","qualname":"::parsing::parsable::sealed::Sealed::parse_offset","value":"fn parse_offset(&Self, &[u8]) -> Result<UtcOffset, error::Parse>","parent":{"krate":0,"index":1866},"children":[],"decl_id":null,"docs":" Parse a [`UtcOffset`] from the format description.\n","sig":null,"attributes":[{"value":"/ Parse a [`UtcOffset`] from the format description.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":308756,"byte_end":308810,"line_start":64,"line_end":64,"column_start":9,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1873},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":309033,"byte_end":309048,"line_start":70,"line_end":70,"column_start":12,"column_end":27},"name":"parse_date_time","qualname":"::parsing::parsable::sealed::Sealed::parse_date_time","value":"fn parse_date_time(&Self, &[u8]) -> Result<PrimitiveDateTime, error::Parse>","parent":{"krate":0,"index":1866},"children":[],"decl_id":null,"docs":" Parse a [`PrimitiveDateTime`] from the format description.\n","sig":null,"attributes":[{"value":"/ Parse a [`PrimitiveDateTime`] from the format description.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":308959,"byte_end":309021,"line_start":69,"line_end":69,"column_start":9,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1874},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":309252,"byte_end":309274,"line_start":75,"line_end":75,"column_start":12,"column_end":34},"name":"parse_offset_date_time","qualname":"::parsing::parsable::sealed::Sealed::parse_offset_date_time","value":"fn parse_offset_date_time(&Self, &[u8])\n-> Result<OffsetDateTime, error::Parse>","parent":{"krate":0,"index":1866},"children":[],"decl_id":null,"docs":" Parse a [`OffsetDateTime`] from the format description.\n","sig":null,"attributes":[{"value":"/ Parse a [`OffsetDateTime`] from the format description.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":309181,"byte_end":309240,"line_start":74,"line_end":74,"column_start":9,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1876},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":309478,"byte_end":309488,"line_start":83,"line_end":83,"column_start":8,"column_end":18},"name":"parse_into","qualname":"<FormatItem as parsing::parsable::sealed::Sealed>::parse_into","value":"fn parse_into<'a>(&Self, &'a [u8], &mut Parsed)\n-> Result<&'a [u8], error::Parse>","parent":{"krate":0,"index":1866},"children":[],"decl_id":{"krate":0,"index":1867},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1879},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":309708,"byte_end":309718,"line_start":93,"line_end":93,"column_start":8,"column_end":18},"name":"parse_into","qualname":"<[FormatItem] as parsing::parsable::sealed::Sealed>::parse_into","value":"fn parse_into<'a>(&Self, &'a [u8], &mut Parsed)\n-> Result<&'a [u8], error::Parse>","parent":{"krate":0,"index":1866},"children":[],"decl_id":{"krate":0,"index":1867},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1883},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":309971,"byte_end":309981,"line_start":106,"line_end":106,"column_start":8,"column_end":18},"name":"parse_into","qualname":"<T as parsing::parsable::sealed::Sealed>::parse_into","value":"fn parse_into<'a>(&Self, &'a [u8], &mut Parsed)\n-> Result<&'a [u8], error::Parse>","parent":{"krate":0,"index":1866},"children":[],"decl_id":{"krate":0,"index":1867},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1886},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":310253,"byte_end":310263,"line_start":118,"line_end":118,"column_start":8,"column_end":18},"name":"parse_into","qualname":"<Rfc2822 as parsing::parsable::sealed::Sealed>::parse_into","value":"fn parse_into<'a>(&Self, &'a [u8], &mut Parsed)\n-> Result<&'a [u8], error::Parse>","parent":{"krate":0,"index":1866},"children":[],"decl_id":{"krate":0,"index":1867},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1958},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":316997,"byte_end":317019,"line_start":275,"line_end":275,"column_start":8,"column_end":30},"name":"parse_offset_date_time","qualname":"<Rfc2822 as parsing::parsable::sealed::Sealed>::parse_offset_date_time","value":"fn parse_offset_date_time(&Self, &[u8])\n-> Result<OffsetDateTime, error::Parse>","parent":{"krate":0,"index":1866},"children":[],"decl_id":{"krate":0,"index":1874},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2011},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":324026,"byte_end":324036,"line_start":445,"line_end":445,"column_start":8,"column_end":18},"name":"parse_into","qualname":"<Rfc3339 as parsing::parsable::sealed::Sealed>::parse_into","value":"fn parse_into<'a>(&Self, &'a [u8], &mut Parsed)\n-> Result<&'a [u8], error::Parse>","parent":{"krate":0,"index":1866},"children":[],"decl_id":{"krate":0,"index":1867},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2070},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":328482,"byte_end":328504,"line_start":550,"line_end":550,"column_start":8,"column_end":30},"name":"parse_offset_date_time","qualname":"<Rfc3339 as parsing::parsable::sealed::Sealed>::parse_offset_date_time","value":"fn parse_offset_date_time(&Self, &[u8])\n-> Result<OffsetDateTime, error::Parse>","parent":{"krate":0,"index":1866},"children":[],"decl_id":{"krate":0,"index":1874},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2115},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":333701,"byte_end":333711,"line_start":671,"line_end":671,"column_start":8,"column_end":18},"name":"parse_into","qualname":"<Iso8601<CONFIG> as parsing::parsable::sealed::Sealed>::parse_into","value":"fn parse_into<'a>(&Self, &'a [u8], &mut Parsed)\n-> Result<&'a [u8], error::Parse>","parent":{"krate":0,"index":1866},"children":[],"decl_id":{"krate":0,"index":1867},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3811},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":336507,"byte_end":336513,"line_start":23,"line_end":23,"column_start":12,"column_end":18},"name":"Parsed","qualname":"::parsing::parsed::Parsed","value":"Parsed {  }","parent":null,"children":[{"krate":0,"index":3812},{"krate":0,"index":3813},{"krate":0,"index":3814},{"krate":0,"index":3815},{"krate":0,"index":3816},{"krate":0,"index":3817},{"krate":0,"index":3818},{"krate":0,"index":3819},{"krate":0,"index":3820},{"krate":0,"index":3821},{"krate":0,"index":3822},{"krate":0,"index":3823},{"krate":0,"index":3824},{"krate":0,"index":3825},{"krate":0,"index":3826},{"krate":0,"index":3827},{"krate":0,"index":3828},{"krate":0,"index":3829},{"krate":0,"index":3830},{"krate":0,"index":3831},{"krate":0,"index":3832}],"decl_id":null,"docs":" All information parsed.","sig":null,"attributes":[{"value":"/ All information parsed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":336181,"byte_end":336208,"line_start":16,"line_end":16,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":336209,"byte_end":336212,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This information is directly used to construct the final values.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":336213,"byte_end":336281,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":336282,"byte_end":336285,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Most users will not need think about this struct in any way. It is public to allow for manual","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":336286,"byte_end":336383,"line_start":20,"line_end":20,"column_start":1,"column_end":98}},{"value":"/ control over values, in the instance that the default parser is insufficient.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":336384,"byte_end":336465,"line_start":21,"line_end":21,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2220},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":338474,"byte_end":338477,"line_start":72,"line_end":72,"column_start":18,"column_end":21},"name":"new","qualname":"<Parsed>::new","value":"const fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance of `Parsed` with no information known.\n","sig":null,"attributes":[{"value":"/ Create a new instance of `Parsed` with no information known.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":338392,"byte_end":338456,"line_start":71,"line_end":71,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2221},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":339452,"byte_end":339462,"line_start":103,"line_end":103,"column_start":12,"column_end":22},"name":"parse_item","qualname":"<Parsed>::parse_item","value":"fn parse_item<'a>(&mut Self, &'a [u8], &FormatItem)\n-> Result<&'a [u8], error::ParseFromDescription>","parent":null,"children":[],"decl_id":null,"docs":" Parse a single [`FormatItem`], mutating the struct. The remaining input is returned as the\n `Ok` value.","sig":null,"attributes":[{"value":"/ Parse a single [`FormatItem`], mutating the struct. The remaining input is returned as the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":339166,"byte_end":339260,"line_start":98,"line_end":98,"column_start":5,"column_end":99}},{"value":"/ `Ok` value.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":339265,"byte_end":339280,"line_start":99,"line_end":99,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":339285,"byte_end":339288,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ If a [`FormatItem::Optional`] is passed, parsing will not fail; the input will be returned","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":339293,"byte_end":339387,"line_start":101,"line_end":101,"column_start":5,"column_end":99}},{"value":"/ as-is if the expected format is not present.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":339392,"byte_end":339440,"line_start":102,"line_end":102,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2223},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":341025,"byte_end":341036,"line_start":139,"line_end":139,"column_start":12,"column_end":23},"name":"parse_items","qualname":"<Parsed>::parse_items","value":"fn parse_items<'a>(&mut Self, &'a [u8], &[FormatItem])\n-> Result<&'a [u8], error::ParseFromDescription>","parent":null,"children":[],"decl_id":null,"docs":" Parse a sequence of [`FormatItem`]s, mutating the struct. The remaining input is returned as\n the `Ok` value.","sig":null,"attributes":[{"value":"/ Parse a sequence of [`FormatItem`]s, mutating the struct. The remaining input is returned as","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":340747,"byte_end":340843,"line_start":134,"line_end":134,"column_start":5,"column_end":101}},{"value":"/ the `Ok` value.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":340848,"byte_end":340867,"line_start":135,"line_end":135,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":340872,"byte_end":340875,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ This method will fail if any of the contained [`FormatItem`]s fail to parse. `self` will not","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":340880,"byte_end":340976,"line_start":137,"line_end":137,"column_start":5,"column_end":101}},{"value":"/ be mutated in this instance.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":340981,"byte_end":341013,"line_start":138,"line_end":138,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2225},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":341565,"byte_end":341578,"line_start":155,"line_end":155,"column_start":12,"column_end":25},"name":"parse_literal","qualname":"<Parsed>::parse_literal","value":"fn parse_literal<'a>(&'a [u8], &[u8])\n-> Result<&'a [u8], error::ParseFromDescription>","parent":null,"children":[],"decl_id":null,"docs":" Parse a literal byte sequence. The remaining input is returned as the `Ok` value.\n","sig":null,"attributes":[{"value":"/ Parse a literal byte sequence. The remaining input is returned as the `Ok` value.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":341468,"byte_end":341553,"line_start":154,"line_end":154,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":2227},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":341935,"byte_end":341950,"line_start":166,"line_end":166,"column_start":12,"column_end":27},"name":"parse_component","qualname":"<Parsed>::parse_component","value":"fn parse_component<'a>(&mut Self, &'a [u8], Component)\n-> Result<&'a [u8], error::ParseFromDescription>","parent":null,"children":[],"decl_id":null,"docs":" Parse a single component, mutating the struct. The remaining input is returned as the `Ok`\n value.\n","sig":null,"attributes":[{"value":"/ Parse a single component, mutating the struct. The remaining input is returned as the `Ok`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":341814,"byte_end":341908,"line_start":164,"line_end":164,"column_start":5,"column_end":99}},{"value":"/ value.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":341913,"byte_end":341923,"line_start":165,"line_end":165,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":3838},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":346953,"byte_end":346957,"line_start":266,"line_end":266,"column_start":9,"column_end":13},"name":"year","qualname":"<Parsed>::year","value":"const fn year(&Self) -> Option<i32>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":346770,"byte_end":346801,"line_start":256,"line_end":256,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3839},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":346972,"byte_end":346985,"line_start":267,"line_end":267,"column_start":9,"column_end":22},"name":"year_last_two","qualname":"<Parsed>::year_last_two","value":"const fn year_last_two(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":346770,"byte_end":346801,"line_start":256,"line_end":256,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3840},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":346999,"byte_end":347007,"line_start":268,"line_end":268,"column_start":9,"column_end":17},"name":"iso_year","qualname":"<Parsed>::iso_year","value":"const fn iso_year(&Self) -> Option<i32>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":346770,"byte_end":346801,"line_start":256,"line_end":256,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3841},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":347022,"byte_end":347039,"line_start":269,"line_end":269,"column_start":9,"column_end":26},"name":"iso_year_last_two","qualname":"<Parsed>::iso_year_last_two","value":"const fn iso_year_last_two(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":346770,"byte_end":346801,"line_start":256,"line_end":256,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3842},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":347053,"byte_end":347058,"line_start":270,"line_end":270,"column_start":9,"column_end":14},"name":"month","qualname":"<Parsed>::month","value":"const fn month(&Self) -> Option<Month>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":346770,"byte_end":346801,"line_start":256,"line_end":256,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3843},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":347075,"byte_end":347093,"line_start":271,"line_end":271,"column_start":9,"column_end":27},"name":"sunday_week_number","qualname":"<Parsed>::sunday_week_number","value":"const fn sunday_week_number(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":346770,"byte_end":346801,"line_start":256,"line_end":256,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3844},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":347107,"byte_end":347125,"line_start":272,"line_end":272,"column_start":9,"column_end":27},"name":"monday_week_number","qualname":"<Parsed>::monday_week_number","value":"const fn monday_week_number(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":346770,"byte_end":346801,"line_start":256,"line_end":256,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3845},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":347139,"byte_end":347154,"line_start":273,"line_end":273,"column_start":9,"column_end":24},"name":"iso_week_number","qualname":"<Parsed>::iso_week_number","value":"const fn iso_week_number(&Self) -> Option<NonZeroU8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":346770,"byte_end":346801,"line_start":256,"line_end":256,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3846},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":347175,"byte_end":347182,"line_start":274,"line_end":274,"column_start":9,"column_end":16},"name":"weekday","qualname":"<Parsed>::weekday","value":"const fn weekday(&Self) -> Option<Weekday>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":346770,"byte_end":346801,"line_start":256,"line_end":256,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3847},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":347201,"byte_end":347208,"line_start":275,"line_end":275,"column_start":9,"column_end":16},"name":"ordinal","qualname":"<Parsed>::ordinal","value":"const fn ordinal(&Self) -> Option<NonZeroU16>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":346770,"byte_end":346801,"line_start":256,"line_end":256,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3848},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":347230,"byte_end":347233,"line_start":276,"line_end":276,"column_start":9,"column_end":12},"name":"day","qualname":"<Parsed>::day","value":"const fn day(&Self) -> Option<NonZeroU8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":346770,"byte_end":346801,"line_start":256,"line_end":256,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3849},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":347254,"byte_end":347261,"line_start":277,"line_end":277,"column_start":9,"column_end":16},"name":"hour_24","qualname":"<Parsed>::hour_24","value":"const fn hour_24(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":346770,"byte_end":346801,"line_start":256,"line_end":256,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3850},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":347275,"byte_end":347282,"line_start":278,"line_end":278,"column_start":9,"column_end":16},"name":"hour_12","qualname":"<Parsed>::hour_12","value":"const fn hour_12(&Self) -> Option<NonZeroU8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":346770,"byte_end":346801,"line_start":256,"line_end":256,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3851},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":347303,"byte_end":347316,"line_start":279,"line_end":279,"column_start":9,"column_end":22},"name":"hour_12_is_pm","qualname":"<Parsed>::hour_12_is_pm","value":"const fn hour_12_is_pm(&Self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":346770,"byte_end":346801,"line_start":256,"line_end":256,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3852},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":347332,"byte_end":347338,"line_start":280,"line_end":280,"column_start":9,"column_end":15},"name":"minute","qualname":"<Parsed>::minute","value":"const fn minute(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":346770,"byte_end":346801,"line_start":256,"line_end":256,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3853},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":347352,"byte_end":347358,"line_start":281,"line_end":281,"column_start":9,"column_end":15},"name":"second","qualname":"<Parsed>::second","value":"const fn second(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":346770,"byte_end":346801,"line_start":256,"line_end":256,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3854},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":347372,"byte_end":347381,"line_start":282,"line_end":282,"column_start":9,"column_end":18},"name":"subsecond","qualname":"<Parsed>::subsecond","value":"const fn subsecond(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":346770,"byte_end":346801,"line_start":256,"line_end":256,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3855},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":347396,"byte_end":347407,"line_start":283,"line_end":283,"column_start":9,"column_end":20},"name":"offset_hour","qualname":"<Parsed>::offset_hour","value":"const fn offset_hour(&Self) -> Option<i8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":346770,"byte_end":346801,"line_start":256,"line_end":256,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2258},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":347582,"byte_end":347595,"line_start":288,"line_end":288,"column_start":18,"column_end":31},"name":"offset_minute","qualname":"<Parsed>::offset_minute","value":"const fn offset_minute(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the absolute value of the offset minute.\n","sig":null,"attributes":[{"value":"/ Obtain the absolute value of the offset minute.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":347424,"byte_end":347475,"line_start":286,"line_end":286,"column_start":5,"column_end":56}},{"value":"deprecated(since = \"0.3.8\", note =\n\"use `parsed.offset_minute_signed()` instead\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":347480,"byte_end":347564,"line_start":287,"line_end":287,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":2259},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":347761,"byte_end":347781,"line_start":293,"line_end":293,"column_start":18,"column_end":38},"name":"offset_minute_signed","qualname":"<Parsed>::offset_minute_signed","value":"const fn offset_minute_signed(&Self) -> Option<i8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the offset minute as an `i8`.\n","sig":null,"attributes":[{"value":"/ Obtain the offset minute as an `i8`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":347703,"byte_end":347743,"line_start":292,"line_end":292,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2260},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":348001,"byte_end":348014,"line_start":299,"line_end":299,"column_start":18,"column_end":31},"name":"offset_second","qualname":"<Parsed>::offset_second","value":"const fn offset_second(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the absolute value of the offset second.\n","sig":null,"attributes":[{"value":"/ Obtain the absolute value of the offset second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":347843,"byte_end":347894,"line_start":297,"line_end":297,"column_start":5,"column_end":56}},{"value":"deprecated(since = \"0.3.8\", note =\n\"use `parsed.offset_second_signed()` instead\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":347899,"byte_end":347983,"line_start":298,"line_end":298,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":2261},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":348180,"byte_end":348200,"line_start":304,"line_end":304,"column_start":18,"column_end":38},"name":"offset_second_signed","qualname":"<Parsed>::offset_second_signed","value":"const fn offset_second_signed(&Self) -> Option<i8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the offset second as an `i8`.\n","sig":null,"attributes":[{"value":"/ Obtain the offset second as an `i8`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":348122,"byte_end":348162,"line_start":303,"line_end":303,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3856},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":349090,"byte_end":349098,"line_start":333,"line_end":333,"column_start":9,"column_end":17},"name":"set_year","qualname":"<Parsed>::set_year","value":"fn set_year(&mut Self, i32) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":348673,"byte_end":348701,"line_start":319,"line_end":319,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3857},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":349118,"byte_end":349135,"line_start":334,"line_end":334,"column_start":9,"column_end":26},"name":"set_year_last_two","qualname":"<Parsed>::set_year_last_two","value":"fn set_year_last_two(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":348673,"byte_end":348701,"line_start":319,"line_end":319,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3858},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":349163,"byte_end":349175,"line_start":335,"line_end":335,"column_start":9,"column_end":21},"name":"set_iso_year","qualname":"<Parsed>::set_iso_year","value":"fn set_iso_year(&mut Self, i32) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":348673,"byte_end":348701,"line_start":319,"line_end":319,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3859},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":349199,"byte_end":349220,"line_start":336,"line_end":336,"column_start":9,"column_end":30},"name":"set_iso_year_last_two","qualname":"<Parsed>::set_iso_year_last_two","value":"fn set_iso_year_last_two(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":348673,"byte_end":348701,"line_start":319,"line_end":319,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3860},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":349252,"byte_end":349261,"line_start":337,"line_end":337,"column_start":9,"column_end":18},"name":"set_month","qualname":"<Parsed>::set_month","value":"fn set_month(&mut Self, Month) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":348673,"byte_end":348701,"line_start":319,"line_end":319,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3861},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":349284,"byte_end":349306,"line_start":338,"line_end":338,"column_start":9,"column_end":31},"name":"set_sunday_week_number","qualname":"<Parsed>::set_sunday_week_number","value":"fn set_sunday_week_number(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":348673,"byte_end":348701,"line_start":319,"line_end":319,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3862},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":349339,"byte_end":349361,"line_start":339,"line_end":339,"column_start":9,"column_end":31},"name":"set_monday_week_number","qualname":"<Parsed>::set_monday_week_number","value":"fn set_monday_week_number(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":348673,"byte_end":348701,"line_start":319,"line_end":319,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3863},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":349394,"byte_end":349413,"line_start":340,"line_end":340,"column_start":9,"column_end":28},"name":"set_iso_week_number","qualname":"<Parsed>::set_iso_week_number","value":"fn set_iso_week_number(&mut Self, NonZeroU8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":348673,"byte_end":348701,"line_start":319,"line_end":319,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3864},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":349450,"byte_end":349461,"line_start":341,"line_end":341,"column_start":9,"column_end":20},"name":"set_weekday","qualname":"<Parsed>::set_weekday","value":"fn set_weekday(&mut Self, Weekday) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":348673,"byte_end":348701,"line_start":319,"line_end":319,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3865},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":349488,"byte_end":349499,"line_start":342,"line_end":342,"column_start":9,"column_end":20},"name":"set_ordinal","qualname":"<Parsed>::set_ordinal","value":"fn set_ordinal(&mut Self, NonZeroU16) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":348673,"byte_end":348701,"line_start":319,"line_end":319,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3866},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":349529,"byte_end":349536,"line_start":343,"line_end":343,"column_start":9,"column_end":16},"name":"set_day","qualname":"<Parsed>::set_day","value":"fn set_day(&mut Self, NonZeroU8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":348673,"byte_end":348701,"line_start":319,"line_end":319,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3867},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":349561,"byte_end":349572,"line_start":344,"line_end":344,"column_start":9,"column_end":20},"name":"set_hour_24","qualname":"<Parsed>::set_hour_24","value":"fn set_hour_24(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":348673,"byte_end":348701,"line_start":319,"line_end":319,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3868},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":349594,"byte_end":349605,"line_start":345,"line_end":345,"column_start":9,"column_end":20},"name":"set_hour_12","qualname":"<Parsed>::set_hour_12","value":"fn set_hour_12(&mut Self, NonZeroU8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":348673,"byte_end":348701,"line_start":319,"line_end":319,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3869},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":349634,"byte_end":349651,"line_start":346,"line_end":346,"column_start":9,"column_end":26},"name":"set_hour_12_is_pm","qualname":"<Parsed>::set_hour_12_is_pm","value":"fn set_hour_12_is_pm(&mut Self, bool) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":348673,"byte_end":348701,"line_start":319,"line_end":319,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3870},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":349681,"byte_end":349691,"line_start":347,"line_end":347,"column_start":9,"column_end":19},"name":"set_minute","qualname":"<Parsed>::set_minute","value":"fn set_minute(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":348673,"byte_end":348701,"line_start":319,"line_end":319,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3871},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":349712,"byte_end":349722,"line_start":348,"line_end":348,"column_start":9,"column_end":19},"name":"set_second","qualname":"<Parsed>::set_second","value":"fn set_second(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":348673,"byte_end":348701,"line_start":319,"line_end":319,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3872},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":349743,"byte_end":349756,"line_start":349,"line_end":349,"column_start":9,"column_end":22},"name":"set_subsecond","qualname":"<Parsed>::set_subsecond","value":"fn set_subsecond(&mut Self, u32) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":348673,"byte_end":348701,"line_start":319,"line_end":319,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3873},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":349781,"byte_end":349796,"line_start":350,"line_end":350,"column_start":9,"column_end":24},"name":"set_offset_hour","qualname":"<Parsed>::set_offset_hour","value":"fn set_offset_hour(&mut Self, i8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":348673,"byte_end":348701,"line_start":319,"line_end":319,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2265},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":349980,"byte_end":349997,"line_start":358,"line_end":358,"column_start":12,"column_end":29},"name":"set_offset_minute","qualname":"<Parsed>::set_offset_minute","value":"fn set_offset_minute(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":349825,"byte_end":349853,"line_start":353,"line_end":353,"column_start":5,"column_end":33}},{"value":"deprecated(since = \"0.3.8\", note =\n\"use `parsed.set_offset_minute_signed()` instead\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":349858,"byte_end":349968,"line_start":354,"line_end":357,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":2266},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":350230,"byte_end":350254,"line_start":367,"line_end":367,"column_start":12,"column_end":36},"name":"set_offset_minute_signed","qualname":"<Parsed>::set_offset_minute_signed","value":"fn set_offset_minute_signed(&mut Self, i8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the `offset_minute` component.\n","sig":null,"attributes":[{"value":"/ Set the `offset_minute` component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":350180,"byte_end":350218,"line_start":366,"line_end":366,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2267},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":350518,"byte_end":350535,"line_start":377,"line_end":377,"column_start":12,"column_end":29},"name":"set_offset_second","qualname":"<Parsed>::set_offset_second","value":"fn set_offset_second(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":350363,"byte_end":350391,"line_start":372,"line_end":372,"column_start":5,"column_end":33}},{"value":"deprecated(since = \"0.3.8\", note =\n\"use `parsed.set_offset_second_signed()` instead\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":350396,"byte_end":350506,"line_start":373,"line_end":376,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":2268},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":350768,"byte_end":350792,"line_start":386,"line_end":386,"column_start":12,"column_end":36},"name":"set_offset_second_signed","qualname":"<Parsed>::set_offset_second_signed","value":"fn set_offset_second_signed(&mut Self, i8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the `offset_second` component.\n","sig":null,"attributes":[{"value":"/ Set the `offset_second` component.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":350718,"byte_end":350756,"line_start":385,"line_end":385,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3874},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":351770,"byte_end":351779,"line_start":416,"line_end":416,"column_start":9,"column_end":18},"name":"with_year","qualname":"<Parsed>::with_year","value":"const fn with_year(Self, i32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":351305,"byte_end":351351,"line_start":402,"line_end":402,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3875},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":351799,"byte_end":351817,"line_start":417,"line_end":417,"column_start":9,"column_end":27},"name":"with_year_last_two","qualname":"<Parsed>::with_year_last_two","value":"const fn with_year_last_two(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":351305,"byte_end":351351,"line_start":402,"line_end":402,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3876},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":351845,"byte_end":351858,"line_start":418,"line_end":418,"column_start":9,"column_end":22},"name":"with_iso_year","qualname":"<Parsed>::with_iso_year","value":"const fn with_iso_year(Self, i32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":351305,"byte_end":351351,"line_start":402,"line_end":402,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3877},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":351882,"byte_end":351904,"line_start":419,"line_end":419,"column_start":9,"column_end":31},"name":"with_iso_year_last_two","qualname":"<Parsed>::with_iso_year_last_two","value":"const fn with_iso_year_last_two(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":351305,"byte_end":351351,"line_start":402,"line_end":402,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3878},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":351936,"byte_end":351946,"line_start":420,"line_end":420,"column_start":9,"column_end":19},"name":"with_month","qualname":"<Parsed>::with_month","value":"const fn with_month(Self, Month) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":351305,"byte_end":351351,"line_start":402,"line_end":402,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3879},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":351969,"byte_end":351992,"line_start":421,"line_end":421,"column_start":9,"column_end":32},"name":"with_sunday_week_number","qualname":"<Parsed>::with_sunday_week_number","value":"const fn with_sunday_week_number(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":351305,"byte_end":351351,"line_start":402,"line_end":402,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3880},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":352025,"byte_end":352048,"line_start":422,"line_end":422,"column_start":9,"column_end":32},"name":"with_monday_week_number","qualname":"<Parsed>::with_monday_week_number","value":"const fn with_monday_week_number(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":351305,"byte_end":351351,"line_start":402,"line_end":402,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3881},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":352081,"byte_end":352101,"line_start":423,"line_end":423,"column_start":9,"column_end":29},"name":"with_iso_week_number","qualname":"<Parsed>::with_iso_week_number","value":"const fn with_iso_week_number(Self, NonZeroU8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":351305,"byte_end":351351,"line_start":402,"line_end":402,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3882},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":352138,"byte_end":352150,"line_start":424,"line_end":424,"column_start":9,"column_end":21},"name":"with_weekday","qualname":"<Parsed>::with_weekday","value":"const fn with_weekday(Self, Weekday) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":351305,"byte_end":351351,"line_start":402,"line_end":402,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3883},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":352177,"byte_end":352189,"line_start":425,"line_end":425,"column_start":9,"column_end":21},"name":"with_ordinal","qualname":"<Parsed>::with_ordinal","value":"const fn with_ordinal(Self, NonZeroU16) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":351305,"byte_end":351351,"line_start":402,"line_end":402,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3884},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":352219,"byte_end":352227,"line_start":426,"line_end":426,"column_start":9,"column_end":17},"name":"with_day","qualname":"<Parsed>::with_day","value":"const fn with_day(Self, NonZeroU8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":351305,"byte_end":351351,"line_start":402,"line_end":402,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3885},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":352252,"byte_end":352264,"line_start":427,"line_end":427,"column_start":9,"column_end":21},"name":"with_hour_24","qualname":"<Parsed>::with_hour_24","value":"const fn with_hour_24(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":351305,"byte_end":351351,"line_start":402,"line_end":402,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3886},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":352286,"byte_end":352298,"line_start":428,"line_end":428,"column_start":9,"column_end":21},"name":"with_hour_12","qualname":"<Parsed>::with_hour_12","value":"const fn with_hour_12(Self, NonZeroU8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":351305,"byte_end":351351,"line_start":402,"line_end":402,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3887},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":352327,"byte_end":352345,"line_start":429,"line_end":429,"column_start":9,"column_end":27},"name":"with_hour_12_is_pm","qualname":"<Parsed>::with_hour_12_is_pm","value":"const fn with_hour_12_is_pm(Self, bool) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":351305,"byte_end":351351,"line_start":402,"line_end":402,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3888},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":352375,"byte_end":352386,"line_start":430,"line_end":430,"column_start":9,"column_end":20},"name":"with_minute","qualname":"<Parsed>::with_minute","value":"const fn with_minute(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":351305,"byte_end":351351,"line_start":402,"line_end":402,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3889},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":352407,"byte_end":352418,"line_start":431,"line_end":431,"column_start":9,"column_end":20},"name":"with_second","qualname":"<Parsed>::with_second","value":"const fn with_second(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":351305,"byte_end":351351,"line_start":402,"line_end":402,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3890},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":352439,"byte_end":352453,"line_start":432,"line_end":432,"column_start":9,"column_end":23},"name":"with_subsecond","qualname":"<Parsed>::with_subsecond","value":"const fn with_subsecond(Self, u32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":351305,"byte_end":351351,"line_start":402,"line_end":402,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3891},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":352478,"byte_end":352494,"line_start":433,"line_end":433,"column_start":9,"column_end":25},"name":"with_offset_hour","qualname":"<Parsed>::with_offset_hour","value":"const fn with_offset_hour(Self, i8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":351305,"byte_end":351351,"line_start":402,"line_end":402,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2272},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":352703,"byte_end":352721,"line_start":441,"line_end":441,"column_start":18,"column_end":36},"name":"with_offset_minute","qualname":"<Parsed>::with_offset_minute","value":"const fn with_offset_minute(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":352523,"byte_end":352569,"line_start":436,"line_end":436,"column_start":5,"column_end":51}},{"value":"deprecated(since = \"0.3.8\", note =\n\"use `parsed.with_offset_minute_signed()` instead\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":352574,"byte_end":352685,"line_start":437,"line_end":440,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":2273},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":352976,"byte_end":353001,"line_start":450,"line_end":450,"column_start":18,"column_end":43},"name":"with_offset_minute_signed","qualname":"<Parsed>::with_offset_minute_signed","value":"const fn with_offset_minute_signed(Self, i8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the `offset_minute` component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the `offset_minute` component and return `self`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":352902,"byte_end":352958,"line_start":449,"line_end":449,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2274},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":353293,"byte_end":353311,"line_start":460,"line_end":460,"column_start":18,"column_end":36},"name":"with_offset_second","qualname":"<Parsed>::with_offset_second","value":"const fn with_offset_second(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":353113,"byte_end":353159,"line_start":455,"line_end":455,"column_start":5,"column_end":51}},{"value":"deprecated(since = \"0.3.8\", note =\n\"use `parsed.with_offset_second_signed()` instead\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":353164,"byte_end":353275,"line_start":456,"line_end":459,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":2275},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":353566,"byte_end":353591,"line_start":469,"line_end":469,"column_start":18,"column_end":43},"name":"with_offset_second_signed","qualname":"<Parsed>::with_offset_second_signed","value":"const fn with_offset_second_signed(Self, i8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the `offset_second` component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the `offset_second` component and return `self`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":353492,"byte_end":353548,"line_start":468,"line_end":468,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2278},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":353780,"byte_end":353788,"line_start":478,"line_end":478,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Date as std::convert::TryFrom>::try_from","value":"fn try_from(Parsed) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2283},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":356066,"byte_end":356074,"line_start":538,"line_end":538,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Time as std::convert::TryFrom>::try_from","value":"fn try_from(Parsed) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2286},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":357236,"byte_end":357244,"line_start":566,"line_end":566,"column_start":8,"column_end":16},"name":"try_from","qualname":"<UtcOffset as std::convert::TryFrom>::try_from","value":"fn try_from(Parsed) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2290},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":358024,"byte_end":358032,"line_start":588,"line_end":588,"column_start":8,"column_end":16},"name":"try_from","qualname":"<PrimitiveDateTime as std::convert::TryFrom>::try_from","value":"fn try_from(Parsed) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2293},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":358312,"byte_end":358320,"line_start":597,"line_end":597,"column_start":8,"column_end":16},"name":"try_from","qualname":"<OffsetDateTime as std::convert::TryFrom>::try_from","value":"fn try_from(Parsed) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: unwrap_in_result)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":358237,"byte_end":358271,"line_start":596,"line_end":596,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3915},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":361429,"byte_end":361446,"line_start":17,"line_end":17,"column_start":12,"column_end":29},"name":"PrimitiveDateTime","qualname":"::primitive_date_time::PrimitiveDateTime","value":"PrimitiveDateTime {  }","parent":null,"children":[{"krate":0,"index":3916},{"krate":0,"index":3917}],"decl_id":null,"docs":" Combined date and time.\n","sig":null,"attributes":[{"value":"/ Combined date and time.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":361322,"byte_end":361349,"line_start":15,"line_end":15,"column_start":1,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":2380},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":362217,"byte_end":362220,"line_start":37,"line_end":37,"column_start":15,"column_end":18},"name":"MIN","qualname":"::primitive_date_time::PrimitiveDateTime::MIN","value":"Self","parent":{"krate":0,"index":2379},"children":[],"decl_id":null,"docs":" The smallest value that can be represented by `PrimitiveDateTime`.","sig":null,"attributes":[{"value":"/ The smallest value that can be represented by `PrimitiveDateTime`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":361639,"byte_end":361709,"line_start":25,"line_end":25,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":361714,"byte_end":361717,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ Depending on `large-dates` feature flag, value of this constant may vary.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":361722,"byte_end":361799,"line_start":27,"line_end":27,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":361804,"byte_end":361807,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ 1. With `large-dates` disabled it is equal to `-9999 - 01 - 01 00:00:00.0`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":361812,"byte_end":361890,"line_start":29,"line_end":29,"column_start":5,"column_end":83}},{"value":"/ 2. With `large-dates` enabled it is equal to `-999999 - 01 - 01 00:00:00.0`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":361895,"byte_end":361974,"line_start":30,"line_end":30,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":361979,"byte_end":361982,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":361987,"byte_end":361998,"line_start":32,"line_end":32,"column_start":5,"column_end":16}},{"value":"/ # use time::{PrimitiveDateTime, macros::datetime};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":362003,"byte_end":362057,"line_start":33,"line_end":33,"column_start":5,"column_end":59}},{"value":"/ // Assuming `large-dates` feature is enabled.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":362062,"byte_end":362111,"line_start":34,"line_end":34,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(PrimitiveDateTime::MIN, datetime!(-999999 - 01 - 01 0:00));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":362116,"byte_end":362190,"line_start":35,"line_end":35,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":362195,"byte_end":362202,"line_start":36,"line_end":36,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":2381},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":362878,"byte_end":362881,"line_start":51,"line_end":51,"column_start":15,"column_end":18},"name":"MAX","qualname":"::primitive_date_time::PrimitiveDateTime::MAX","value":"Self","parent":{"krate":0,"index":2379},"children":[],"decl_id":null,"docs":" The largest value that can be represented by `PrimitiveDateTime`.","sig":null,"attributes":[{"value":"/ The largest value that can be represented by `PrimitiveDateTime`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":362267,"byte_end":362336,"line_start":39,"line_end":39,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":362341,"byte_end":362344,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Depending on `large-dates` feature flag, value of this constant may vary.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":362349,"byte_end":362426,"line_start":41,"line_end":41,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":362431,"byte_end":362434,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ 1. With `large-dates` disabled it is equal to `9999 - 12 - 31 23:59:59.999_999_999`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":362439,"byte_end":362526,"line_start":43,"line_end":43,"column_start":5,"column_end":92}},{"value":"/ 2. With `large-dates` enabled it is equal to `999999 - 12 - 31 23:59:59.999_999_999`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":362531,"byte_end":362619,"line_start":44,"line_end":44,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":362624,"byte_end":362627,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":362632,"byte_end":362643,"line_start":46,"line_end":46,"column_start":5,"column_end":16}},{"value":"/ # use time::{PrimitiveDateTime, macros::datetime};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":362648,"byte_end":362702,"line_start":47,"line_end":47,"column_start":5,"column_end":59}},{"value":"/ // Assuming `large-dates` feature is enabled.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":362707,"byte_end":362756,"line_start":48,"line_end":48,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(PrimitiveDateTime::MAX, datetime!(+999999 - 12 - 31 23:59:59.999_999_999));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":362761,"byte_end":362851,"line_start":49,"line_end":49,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":362856,"byte_end":362863,"line_start":50,"line_end":50,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2382},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":363271,"byte_end":363274,"line_start":62,"line_end":62,"column_start":18,"column_end":21},"name":"new","qualname":"<PrimitiveDateTime>::new","value":"const fn new(Date, Time) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PrimitiveDateTime` from the provided [`Date`] and [`Time`].","sig":null,"attributes":[{"value":"/ Create a new `PrimitiveDateTime` from the provided [`Date`] and [`Time`].","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":362928,"byte_end":363005,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":363010,"byte_end":363013,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":363018,"byte_end":363029,"line_start":55,"line_end":55,"column_start":5,"column_end":16}},{"value":"/ # use time::{PrimitiveDateTime, macros::{date, datetime, time}};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":363034,"byte_end":363102,"line_start":56,"line_end":56,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":363107,"byte_end":363122,"line_start":57,"line_end":57,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::new(date!(2019-01-01), time!(0:00)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":363127,"byte_end":363190,"line_start":58,"line_end":58,"column_start":5,"column_end":68}},{"value":"/     datetime!(2019-01-01 0:00),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":363195,"byte_end":363230,"line_start":59,"line_end":59,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":363235,"byte_end":363241,"line_start":60,"line_end":60,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":363246,"byte_end":363253,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2383},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":363613,"byte_end":363617,"line_start":73,"line_end":73,"column_start":18,"column_end":22},"name":"date","qualname":"<PrimitiveDateTime>::date","value":"const fn date(Self) -> Date","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Date`] component of the `PrimitiveDateTime`.","sig":null,"attributes":[{"value":"/ Get the [`Date`] component of the `PrimitiveDateTime`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":363381,"byte_end":363439,"line_start":67,"line_end":67,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":363444,"byte_end":363447,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":363452,"byte_end":363463,"line_start":69,"line_end":69,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{date, datetime};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":363468,"byte_end":363509,"line_start":70,"line_end":70,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).date(), date!(2019-01-01));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":363514,"byte_end":363583,"line_start":71,"line_end":71,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":363588,"byte_end":363595,"line_start":72,"line_end":72,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2384},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":363877,"byte_end":363881,"line_start":82,"line_end":82,"column_start":18,"column_end":22},"name":"time","qualname":"<PrimitiveDateTime>::time","value":"const fn time(Self) -> Time","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Time`] component of the `PrimitiveDateTime`.","sig":null,"attributes":[{"value":"/ Get the [`Time`] component of the `PrimitiveDateTime`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":363663,"byte_end":363721,"line_start":77,"line_end":77,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":363726,"byte_end":363729,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":363734,"byte_end":363745,"line_start":79,"line_end":79,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, time};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":363750,"byte_end":363791,"line_start":80,"line_end":80,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).time(), time!(0:00));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":363796,"byte_end":363859,"line_start":81,"line_end":81,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2385},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":364294,"byte_end":364298,"line_start":96,"line_end":96,"column_start":18,"column_end":22},"name":"year","qualname":"<PrimitiveDateTime>::year","value":"const fn year(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the year of the date.","sig":null,"attributes":[{"value":"/ Get the year of the date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":363990,"byte_end":364019,"line_start":88,"line_end":88,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":364024,"byte_end":364027,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":364032,"byte_end":364043,"line_start":90,"line_end":90,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":364048,"byte_end":364081,"line_start":91,"line_end":91,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).year(), 2019);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":364086,"byte_end":364142,"line_start":92,"line_end":92,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).year(), 2019);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":364147,"byte_end":364203,"line_start":93,"line_end":93,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00).year(), 2020);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":364208,"byte_end":364264,"line_start":94,"line_end":94,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":364269,"byte_end":364276,"line_start":95,"line_end":95,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2386},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":364626,"byte_end":364631,"line_start":107,"line_end":107,"column_start":18,"column_end":23},"name":"month","qualname":"<PrimitiveDateTime>::month","value":"const fn month(Self) -> Month","parent":null,"children":[],"decl_id":null,"docs":" Get the month of the date.","sig":null,"attributes":[{"value":"/ Get the month of the date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":364350,"byte_end":364380,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":364385,"byte_end":364388,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":364393,"byte_end":364404,"line_start":102,"line_end":102,"column_start":5,"column_end":16}},{"value":"/ # use time::{macros::datetime, Month};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":364409,"byte_end":364451,"line_start":103,"line_end":103,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).month(), Month::January);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":364456,"byte_end":364523,"line_start":104,"line_end":104,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).month(), Month::December);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":364528,"byte_end":364596,"line_start":105,"line_end":105,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":364601,"byte_end":364608,"line_start":106,"line_end":106,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2387},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":364994,"byte_end":364997,"line_start":120,"line_end":120,"column_start":18,"column_end":21},"name":"day","qualname":"<PrimitiveDateTime>::day","value":"const fn day(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the date.","sig":null,"attributes":[{"value":"/ Get the day of the date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":364686,"byte_end":364714,"line_start":111,"line_end":111,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":364719,"byte_end":364722,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=31`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":364727,"byte_end":364787,"line_start":113,"line_end":113,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":364792,"byte_end":364795,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":364800,"byte_end":364811,"line_start":115,"line_end":115,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":364816,"byte_end":364849,"line_start":116,"line_end":116,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).day(), 1);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":364854,"byte_end":364906,"line_start":117,"line_end":117,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).day(), 31);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":364911,"byte_end":364964,"line_start":118,"line_end":118,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":364969,"byte_end":364976,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2388},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":365394,"byte_end":365401,"line_start":133,"line_end":133,"column_start":18,"column_end":25},"name":"ordinal","qualname":"<PrimitiveDateTime>::ordinal","value":"const fn ordinal(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the year.","sig":null,"attributes":[{"value":"/ Get the day of the year.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":365047,"byte_end":365075,"line_start":124,"line_end":124,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":365080,"byte_end":365083,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=366` (`1..=365` for common years).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":365088,"byte_end":365178,"line_start":126,"line_end":126,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":365183,"byte_end":365186,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":365191,"byte_end":365202,"line_start":128,"line_end":128,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":365207,"byte_end":365240,"line_start":129,"line_end":129,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).ordinal(), 1);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":365245,"byte_end":365301,"line_start":130,"line_end":130,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).ordinal(), 365);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":365306,"byte_end":365364,"line_start":131,"line_end":131,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":365369,"byte_end":365376,"line_start":132,"line_end":132,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2389},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":365962,"byte_end":365970,"line_start":149,"line_end":149,"column_start":18,"column_end":26},"name":"iso_week","qualname":"<PrimitiveDateTime>::iso_week","value":"const fn iso_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO week number.","sig":null,"attributes":[{"value":"/ Get the ISO week number.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":365456,"byte_end":365484,"line_start":137,"line_end":137,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":365489,"byte_end":365492,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=53`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":365497,"byte_end":365557,"line_start":139,"line_end":139,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":365562,"byte_end":365565,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":365570,"byte_end":365581,"line_start":141,"line_end":141,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":365586,"byte_end":365619,"line_start":142,"line_end":142,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).iso_week(), 1);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":365624,"byte_end":365681,"line_start":143,"line_end":143,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(datetime!(2019-10-04 0:00).iso_week(), 40);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":365686,"byte_end":365744,"line_start":144,"line_end":144,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00).iso_week(), 1);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":365749,"byte_end":365806,"line_start":145,"line_end":145,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00).iso_week(), 53);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":365811,"byte_end":365869,"line_start":146,"line_end":146,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00).iso_week(), 53);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":365874,"byte_end":365932,"line_start":147,"line_end":147,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":365937,"byte_end":365944,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2390},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":366539,"byte_end":366556,"line_start":164,"line_end":164,"column_start":18,"column_end":35},"name":"sunday_based_week","qualname":"<PrimitiveDateTime>::sunday_based_week","value":"const fn sunday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Sunday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Sunday.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":366025,"byte_end":366089,"line_start":153,"line_end":153,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":366094,"byte_end":366097,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":366102,"byte_end":366162,"line_start":155,"line_end":155,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":366167,"byte_end":366170,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":366175,"byte_end":366186,"line_start":157,"line_end":157,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":366191,"byte_end":366224,"line_start":158,"line_end":158,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).sunday_based_week(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":366229,"byte_end":366295,"line_start":159,"line_end":159,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00).sunday_based_week(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":366300,"byte_end":366366,"line_start":160,"line_end":160,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00).sunday_based_week(), 52);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":366371,"byte_end":366438,"line_start":161,"line_end":161,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00).sunday_based_week(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":366443,"byte_end":366509,"line_start":162,"line_end":162,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":366514,"byte_end":366521,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2391},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":367134,"byte_end":367151,"line_start":179,"line_end":179,"column_start":18,"column_end":35},"name":"monday_based_week","qualname":"<PrimitiveDateTime>::monday_based_week","value":"const fn monday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Monday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Monday.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":366620,"byte_end":366684,"line_start":168,"line_end":168,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":366689,"byte_end":366692,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":366697,"byte_end":366757,"line_start":170,"line_end":170,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":366762,"byte_end":366765,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":366770,"byte_end":366781,"line_start":172,"line_end":172,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":366786,"byte_end":366819,"line_start":173,"line_end":173,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).monday_based_week(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":366824,"byte_end":366890,"line_start":174,"line_end":174,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00).monday_based_week(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":366895,"byte_end":366961,"line_start":175,"line_end":175,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00).monday_based_week(), 52);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":366966,"byte_end":367033,"line_start":176,"line_end":176,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00).monday_based_week(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":367038,"byte_end":367104,"line_start":177,"line_end":177,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":367109,"byte_end":367116,"line_start":178,"line_end":178,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2392},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":367477,"byte_end":367493,"line_start":192,"line_end":192,"column_start":18,"column_end":34},"name":"to_calendar_date","qualname":"<PrimitiveDateTime>::to_calendar_date","value":"const fn to_calendar_date(Self) -> (i32, Month, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the year, month, and day.","sig":null,"attributes":[{"value":"/ Get the year, month, and day.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":367215,"byte_end":367248,"line_start":183,"line_end":183,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":367253,"byte_end":367256,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":367261,"byte_end":367272,"line_start":185,"line_end":185,"column_start":5,"column_end":16}},{"value":"/ # use time::{macros::datetime, Month};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":367277,"byte_end":367319,"line_start":186,"line_end":186,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":367324,"byte_end":367339,"line_start":187,"line_end":187,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00).to_calendar_date(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":367344,"byte_end":367398,"line_start":188,"line_end":188,"column_start":5,"column_end":59}},{"value":"/     (2019, Month::January, 1)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":367403,"byte_end":367436,"line_start":189,"line_end":189,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":367441,"byte_end":367447,"line_start":190,"line_end":190,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":367452,"byte_end":367459,"line_start":191,"line_end":191,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2393},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":367779,"byte_end":367794,"line_start":202,"line_end":202,"column_start":18,"column_end":33},"name":"to_ordinal_date","qualname":"<PrimitiveDateTime>::to_ordinal_date","value":"const fn to_ordinal_date(Self) -> (i32, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the year and ordinal day number.","sig":null,"attributes":[{"value":"/ Get the year and ordinal day number.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":367570,"byte_end":367610,"line_start":196,"line_end":196,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":367615,"byte_end":367618,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":367623,"byte_end":367634,"line_start":198,"line_end":198,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":367639,"byte_end":367672,"line_start":199,"line_end":199,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).to_ordinal_date(), (2019, 1));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":367677,"byte_end":367749,"line_start":200,"line_end":200,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":367754,"byte_end":367761,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2394},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":368631,"byte_end":368647,"line_start":231,"line_end":231,"column_start":18,"column_end":34},"name":"to_iso_week_date","qualname":"<PrimitiveDateTime>::to_iso_week_date","value":"const fn to_iso_week_date(Self) -> (i32, u8, Weekday)","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO 8601 year, week number, and weekday.","sig":null,"attributes":[{"value":"/ Get the ISO 8601 year, week number, and weekday.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":367864,"byte_end":367916,"line_start":206,"line_end":206,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":367921,"byte_end":367924,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":367929,"byte_end":367940,"line_start":208,"line_end":208,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::datetime};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":367945,"byte_end":367992,"line_start":209,"line_end":209,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":367997,"byte_end":368012,"line_start":210,"line_end":210,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00).to_iso_week_date(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":368017,"byte_end":368071,"line_start":211,"line_end":211,"column_start":5,"column_end":59}},{"value":"/     (2019, 1, Tuesday)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":368076,"byte_end":368102,"line_start":212,"line_end":212,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":368107,"byte_end":368113,"line_start":213,"line_end":213,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":368118,"byte_end":368133,"line_start":214,"line_end":214,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-10-04 0:00).to_iso_week_date(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":368138,"byte_end":368192,"line_start":215,"line_end":215,"column_start":5,"column_end":59}},{"value":"/     (2019, 40, Friday)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":368197,"byte_end":368223,"line_start":216,"line_end":216,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":368228,"byte_end":368234,"line_start":217,"line_end":217,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":368239,"byte_end":368254,"line_start":218,"line_end":218,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00).to_iso_week_date(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":368259,"byte_end":368313,"line_start":219,"line_end":219,"column_start":5,"column_end":59}},{"value":"/     (2020, 1, Wednesday)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":368318,"byte_end":368346,"line_start":220,"line_end":220,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":368351,"byte_end":368357,"line_start":221,"line_end":221,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":368362,"byte_end":368377,"line_start":222,"line_end":222,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-12-31 0:00).to_iso_week_date(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":368382,"byte_end":368436,"line_start":223,"line_end":223,"column_start":5,"column_end":59}},{"value":"/     (2020, 53, Thursday)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":368441,"byte_end":368469,"line_start":224,"line_end":224,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":368474,"byte_end":368480,"line_start":225,"line_end":225,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":368485,"byte_end":368500,"line_start":226,"line_end":226,"column_start":5,"column_end":20}},{"value":"/     datetime!(2021-01-01 0:00).to_iso_week_date(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":368505,"byte_end":368559,"line_start":227,"line_end":227,"column_start":5,"column_end":59}},{"value":"/     (2020, 53, Friday)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":368564,"byte_end":368590,"line_start":228,"line_end":228,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":368595,"byte_end":368601,"line_start":229,"line_end":229,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":368606,"byte_end":368613,"line_start":230,"line_end":230,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2395},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":369653,"byte_end":369660,"line_start":252,"line_end":252,"column_start":18,"column_end":25},"name":"weekday","qualname":"<PrimitiveDateTime>::weekday","value":"const fn weekday(Self) -> Weekday","parent":null,"children":[],"decl_id":null,"docs":" Get the weekday.","sig":null,"attributes":[{"value":"/ Get the weekday.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":368726,"byte_end":368746,"line_start":235,"line_end":235,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":368751,"byte_end":368754,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":368759,"byte_end":368770,"line_start":237,"line_end":237,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::datetime};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":368775,"byte_end":368822,"line_start":238,"line_end":238,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).weekday(), Tuesday);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":368827,"byte_end":368889,"line_start":239,"line_end":239,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(datetime!(2019-02-01 0:00).weekday(), Friday);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":368894,"byte_end":368955,"line_start":240,"line_end":240,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-03-01 0:00).weekday(), Friday);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":368960,"byte_end":369021,"line_start":241,"line_end":241,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-04-01 0:00).weekday(), Monday);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":369026,"byte_end":369087,"line_start":242,"line_end":242,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-05-01 0:00).weekday(), Wednesday);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":369092,"byte_end":369156,"line_start":243,"line_end":243,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(datetime!(2019-06-01 0:00).weekday(), Saturday);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":369161,"byte_end":369224,"line_start":244,"line_end":244,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(datetime!(2019-07-01 0:00).weekday(), Monday);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":369229,"byte_end":369290,"line_start":245,"line_end":245,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-08-01 0:00).weekday(), Thursday);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":369295,"byte_end":369358,"line_start":246,"line_end":246,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(datetime!(2019-09-01 0:00).weekday(), Sunday);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":369363,"byte_end":369424,"line_start":247,"line_end":247,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-10-01 0:00).weekday(), Tuesday);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":369429,"byte_end":369491,"line_start":248,"line_end":248,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(datetime!(2019-11-01 0:00).weekday(), Friday);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":369496,"byte_end":369557,"line_start":249,"line_end":249,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-12-01 0:00).weekday(), Sunday);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":369562,"byte_end":369623,"line_start":250,"line_end":250,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":369628,"byte_end":369635,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2396},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":370405,"byte_end":370418,"line_start":268,"line_end":268,"column_start":18,"column_end":31},"name":"to_julian_day","qualname":"<PrimitiveDateTime>::to_julian_day","value":"const fn to_julian_day(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the Julian day for the date. The time is not taken into account for this calculation.","sig":null,"attributes":[{"value":"/ Get the Julian day for the date. The time is not taken into account for this calculation.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":369719,"byte_end":369812,"line_start":256,"line_end":256,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":369817,"byte_end":369820,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ The algorithm to perform this conversion is derived from one provided by Peter Baum; it is","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":369825,"byte_end":369919,"line_start":258,"line_end":258,"column_start":5,"column_end":99}},{"value":"/ freely available [here](https://www.researchgate.net/publication/316558298_Date_Algorithms).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":369924,"byte_end":370020,"line_start":259,"line_end":259,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":370025,"byte_end":370028,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":370033,"byte_end":370044,"line_start":261,"line_end":261,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":370049,"byte_end":370082,"line_start":262,"line_end":262,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(-4713-11-24 0:00).to_julian_day(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":370087,"byte_end":370150,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(datetime!(2000-01-01 0:00).to_julian_day(), 2_451_545);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":370155,"byte_end":370225,"line_start":264,"line_end":264,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).to_julian_day(), 2_458_485);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":370230,"byte_end":370300,"line_start":265,"line_end":265,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).to_julian_day(), 2_458_849);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":370305,"byte_end":370375,"line_start":266,"line_end":266,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":370380,"byte_end":370387,"line_start":267,"line_end":267,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2397},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":370818,"byte_end":370824,"line_start":281,"line_end":281,"column_start":18,"column_end":24},"name":"as_hms","qualname":"<PrimitiveDateTime>::as_hms","value":"const fn as_hms(Self) -> (u8, u8, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, and second.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, and second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":370537,"byte_end":370580,"line_start":274,"line_end":274,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":370585,"byte_end":370588,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":370593,"byte_end":370604,"line_start":276,"line_end":276,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":370609,"byte_end":370642,"line_start":277,"line_end":277,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00).as_hms(), (0, 0, 0));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":370647,"byte_end":370713,"line_start":278,"line_end":278,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-01-01 23:59:59).as_hms(), (23, 59, 59));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":370718,"byte_end":370788,"line_start":279,"line_end":279,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":370793,"byte_end":370800,"line_start":280,"line_end":280,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2398},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":371239,"byte_end":371251,"line_start":295,"line_end":295,"column_start":18,"column_end":30},"name":"as_hms_milli","qualname":"<PrimitiveDateTime>::as_hms_milli","value":"const fn as_hms_milli(Self) -> (u8, u8, u8, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and millisecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and millisecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":370887,"byte_end":370943,"line_start":285,"line_end":285,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":370948,"byte_end":370951,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":370956,"byte_end":370967,"line_start":287,"line_end":287,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":370972,"byte_end":371005,"line_start":288,"line_end":288,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00).as_hms_milli(), (0, 0, 0, 0));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":371010,"byte_end":371085,"line_start":289,"line_end":289,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":371090,"byte_end":371105,"line_start":290,"line_end":290,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999).as_hms_milli(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":371110,"byte_end":371168,"line_start":291,"line_end":291,"column_start":5,"column_end":63}},{"value":"/     (23, 59, 59, 999)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":371173,"byte_end":371198,"line_start":292,"line_end":292,"column_start":5,"column_end":30}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":371203,"byte_end":371209,"line_start":293,"line_end":293,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":371214,"byte_end":371221,"line_start":294,"line_end":294,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2399},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":371685,"byte_end":371697,"line_start":309,"line_end":309,"column_start":18,"column_end":30},"name":"as_hms_micro","qualname":"<PrimitiveDateTime>::as_hms_micro","value":"const fn as_hms_micro(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and microsecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and microsecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":371325,"byte_end":371381,"line_start":299,"line_end":299,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":371386,"byte_end":371389,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":371394,"byte_end":371405,"line_start":301,"line_end":301,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":371410,"byte_end":371443,"line_start":302,"line_end":302,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00).as_hms_micro(), (0, 0, 0, 0));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":371448,"byte_end":371523,"line_start":303,"line_end":303,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":371528,"byte_end":371543,"line_start":304,"line_end":304,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999_999).as_hms_micro(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":371548,"byte_end":371610,"line_start":305,"line_end":305,"column_start":5,"column_end":67}},{"value":"/     (23, 59, 59, 999_999)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":371615,"byte_end":371644,"line_start":306,"line_end":306,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":371649,"byte_end":371655,"line_start":307,"line_end":307,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":371660,"byte_end":371667,"line_start":308,"line_end":308,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2400},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":372136,"byte_end":372147,"line_start":323,"line_end":323,"column_start":18,"column_end":29},"name":"as_hms_nano","qualname":"<PrimitiveDateTime>::as_hms_nano","value":"const fn as_hms_nano(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and nanosecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and nanosecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":371771,"byte_end":371826,"line_start":313,"line_end":313,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":371831,"byte_end":371834,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":371839,"byte_end":371850,"line_start":315,"line_end":315,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":371855,"byte_end":371888,"line_start":316,"line_end":316,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00).as_hms_nano(), (0, 0, 0, 0));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":371893,"byte_end":371967,"line_start":317,"line_end":317,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":371972,"byte_end":371987,"line_start":318,"line_end":318,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999_999_999).as_hms_nano(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":371992,"byte_end":372057,"line_start":319,"line_end":319,"column_start":5,"column_end":70}},{"value":"/     (23, 59, 59, 999_999_999)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":372062,"byte_end":372095,"line_start":320,"line_end":320,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":372100,"byte_end":372106,"line_start":321,"line_end":321,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":372111,"byte_end":372118,"line_start":322,"line_end":322,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2401},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":372528,"byte_end":372532,"line_start":336,"line_end":336,"column_start":18,"column_end":22},"name":"hour","qualname":"<PrimitiveDateTime>::hour","value":"const fn hour(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour.","sig":null,"attributes":[{"value":"/ Get the clock hour.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":372220,"byte_end":372243,"line_start":327,"line_end":327,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":372248,"byte_end":372251,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..24`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":372256,"byte_end":372315,"line_start":329,"line_end":329,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":372320,"byte_end":372323,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":372328,"byte_end":372339,"line_start":331,"line_end":331,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":372344,"byte_end":372377,"line_start":332,"line_end":332,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).hour(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":372382,"byte_end":372435,"line_start":333,"line_end":333,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59).hour(), 23);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":372440,"byte_end":372498,"line_start":334,"line_end":334,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":372503,"byte_end":372510,"line_start":335,"line_end":335,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2402},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":372907,"byte_end":372913,"line_start":349,"line_end":349,"column_start":18,"column_end":24},"name":"minute","qualname":"<PrimitiveDateTime>::minute","value":"const fn minute(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the minute within the hour.","sig":null,"attributes":[{"value":"/ Get the minute within the hour.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":372583,"byte_end":372618,"line_start":340,"line_end":340,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":372623,"byte_end":372626,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":372631,"byte_end":372690,"line_start":342,"line_end":342,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":372695,"byte_end":372698,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":372703,"byte_end":372714,"line_start":344,"line_end":344,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":372719,"byte_end":372752,"line_start":345,"line_end":345,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).minute(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":372757,"byte_end":372812,"line_start":346,"line_end":346,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59).minute(), 59);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":372817,"byte_end":372877,"line_start":347,"line_end":347,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":372882,"byte_end":372889,"line_start":348,"line_end":348,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2403},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":373292,"byte_end":373298,"line_start":362,"line_end":362,"column_start":18,"column_end":24},"name":"second","qualname":"<PrimitiveDateTime>::second","value":"const fn second(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the second within the minute.","sig":null,"attributes":[{"value":"/ Get the second within the minute.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":372966,"byte_end":373003,"line_start":353,"line_end":353,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":373008,"byte_end":373011,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":373016,"byte_end":373075,"line_start":355,"line_end":355,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":373080,"byte_end":373083,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":373088,"byte_end":373099,"line_start":357,"line_end":357,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":373104,"byte_end":373137,"line_start":358,"line_end":358,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).second(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":373142,"byte_end":373197,"line_start":359,"line_end":359,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59).second(), 59);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":373202,"byte_end":373262,"line_start":360,"line_end":360,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":373267,"byte_end":373274,"line_start":361,"line_end":361,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2404},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":373701,"byte_end":373712,"line_start":375,"line_end":375,"column_start":18,"column_end":29},"name":"millisecond","qualname":"<PrimitiveDateTime>::millisecond","value":"const fn millisecond(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the milliseconds within the second.","sig":null,"attributes":[{"value":"/ Get the milliseconds within the second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":373351,"byte_end":373394,"line_start":366,"line_end":366,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":373399,"byte_end":373402,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":373407,"byte_end":373469,"line_start":368,"line_end":368,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":373474,"byte_end":373477,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":373482,"byte_end":373493,"line_start":370,"line_end":370,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":373498,"byte_end":373531,"line_start":371,"line_end":371,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).millisecond(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":373536,"byte_end":373596,"line_start":372,"line_end":372,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59.999).millisecond(), 999);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":373601,"byte_end":373671,"line_start":373,"line_end":373,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":373676,"byte_end":373683,"line_start":374,"line_end":374,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2405},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":374167,"byte_end":374178,"line_start":391,"line_end":391,"column_start":18,"column_end":29},"name":"microsecond","qualname":"<PrimitiveDateTime>::microsecond","value":"const fn microsecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the microseconds within the second.","sig":null,"attributes":[{"value":"/ Get the microseconds within the second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":373771,"byte_end":373814,"line_start":379,"line_end":379,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":373819,"byte_end":373822,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":373827,"byte_end":373893,"line_start":381,"line_end":381,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":373898,"byte_end":373901,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":373906,"byte_end":373917,"line_start":383,"line_end":383,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":373922,"byte_end":373955,"line_start":384,"line_end":384,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).microsecond(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":373960,"byte_end":374020,"line_start":385,"line_end":385,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":374025,"byte_end":374040,"line_start":386,"line_end":386,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59.999_999).microsecond(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":374045,"byte_end":374106,"line_start":387,"line_end":387,"column_start":5,"column_end":66}},{"value":"/     999_999","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":374111,"byte_end":374126,"line_start":388,"line_end":388,"column_start":5,"column_end":20}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":374131,"byte_end":374137,"line_start":389,"line_end":389,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":374142,"byte_end":374149,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2406},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":374643,"byte_end":374653,"line_start":407,"line_end":407,"column_start":18,"column_end":28},"name":"nanosecond","qualname":"<PrimitiveDateTime>::nanosecond","value":"const fn nanosecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the nanoseconds within the second.","sig":null,"attributes":[{"value":"/ Get the nanoseconds within the second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":374237,"byte_end":374279,"line_start":395,"line_end":395,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":374284,"byte_end":374287,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000_000`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":374292,"byte_end":374362,"line_start":397,"line_end":397,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":374367,"byte_end":374370,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":374375,"byte_end":374386,"line_start":399,"line_end":399,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":374391,"byte_end":374424,"line_start":400,"line_end":400,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).nanosecond(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":374429,"byte_end":374488,"line_start":401,"line_end":401,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":374493,"byte_end":374508,"line_start":402,"line_end":402,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59.999_999_999).nanosecond(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":374513,"byte_end":374577,"line_start":403,"line_end":403,"column_start":5,"column_end":69}},{"value":"/     999_999_999,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":374582,"byte_end":374602,"line_start":404,"line_end":404,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":374607,"byte_end":374613,"line_start":405,"line_end":405,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":374618,"byte_end":374625,"line_start":406,"line_end":406,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2407},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":375364,"byte_end":375377,"line_start":431,"line_end":431,"column_start":18,"column_end":31},"name":"assume_offset","qualname":"<PrimitiveDateTime>::assume_offset","value":"const fn assume_offset(Self, UtcOffset) -> OffsetDateTime","parent":null,"children":[],"decl_id":null,"docs":" Assuming that the existing `PrimitiveDateTime` represents a moment in the provided\n [`UtcOffset`], return an [`OffsetDateTime`].","sig":null,"attributes":[{"value":"/ Assuming that the existing `PrimitiveDateTime` represents a moment in the provided","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":374770,"byte_end":374856,"line_start":413,"line_end":413,"column_start":5,"column_end":91}},{"value":"/ [`UtcOffset`], return an [`OffsetDateTime`].","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":374861,"byte_end":374909,"line_start":414,"line_end":414,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":374914,"byte_end":374917,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":374922,"byte_end":374933,"line_start":416,"line_end":416,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":374938,"byte_end":374981,"line_start":417,"line_end":417,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":374986,"byte_end":375001,"line_start":418,"line_end":418,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":375006,"byte_end":375040,"line_start":419,"line_end":419,"column_start":5,"column_end":39}},{"value":"/         .assume_offset(offset!(UTC))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":375045,"byte_end":375085,"line_start":420,"line_end":420,"column_start":5,"column_end":45}},{"value":"/         .unix_timestamp(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":375090,"byte_end":375120,"line_start":421,"line_end":421,"column_start":5,"column_end":35}},{"value":"/     1_546_300_800,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":375125,"byte_end":375147,"line_start":422,"line_end":422,"column_start":5,"column_end":27}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":375152,"byte_end":375158,"line_start":423,"line_end":423,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":375163,"byte_end":375178,"line_start":424,"line_end":424,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":375183,"byte_end":375217,"line_start":425,"line_end":425,"column_start":5,"column_end":39}},{"value":"/         .assume_offset(offset!(-1))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":375222,"byte_end":375261,"line_start":426,"line_end":426,"column_start":5,"column_end":44}},{"value":"/         .unix_timestamp(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":375266,"byte_end":375296,"line_start":427,"line_end":427,"column_start":5,"column_end":35}},{"value":"/     1_546_304_400,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":375301,"byte_end":375323,"line_start":428,"line_end":428,"column_start":5,"column_end":27}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":375328,"byte_end":375334,"line_start":429,"line_end":429,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":375339,"byte_end":375346,"line_start":430,"line_end":430,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2408},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":375859,"byte_end":375869,"line_start":448,"line_end":448,"column_start":18,"column_end":28},"name":"assume_utc","qualname":"<PrimitiveDateTime>::assume_utc","value":"const fn assume_utc(Self) -> OffsetDateTime","parent":null,"children":[],"decl_id":null,"docs":" Assuming that the existing `PrimitiveDateTime` represents a moment in UTC, return an\n [`OffsetDateTime`].","sig":null,"attributes":[{"value":"/ Assuming that the existing `PrimitiveDateTime` represents a moment in UTC, return an","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":375523,"byte_end":375611,"line_start":438,"line_end":438,"column_start":5,"column_end":93}},{"value":"/ [`OffsetDateTime`].","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":375616,"byte_end":375639,"line_start":439,"line_end":439,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":375644,"byte_end":375647,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":375652,"byte_end":375663,"line_start":441,"line_end":441,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":375668,"byte_end":375701,"line_start":442,"line_end":442,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":375706,"byte_end":375721,"line_start":443,"line_end":443,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00).assume_utc().unix_timestamp(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":375726,"byte_end":375791,"line_start":444,"line_end":444,"column_start":5,"column_end":70}},{"value":"/     1_546_300_800,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":375796,"byte_end":375818,"line_start":445,"line_end":445,"column_start":5,"column_end":27}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":375823,"byte_end":375829,"line_start":446,"line_end":446,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":375834,"byte_end":375841,"line_start":447,"line_end":447,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2409},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":376603,"byte_end":376614,"line_start":470,"line_end":470,"column_start":18,"column_end":29},"name":"checked_add","qualname":"<PrimitiveDateTime>::checked_add","value":"const fn checked_add(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, returning `None` if an overflow occurred.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":376015,"byte_end":376088,"line_start":454,"line_end":454,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":376093,"byte_end":376096,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":376101,"byte_end":376108,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":376113,"byte_end":376160,"line_start":457,"line_end":457,"column_start":5,"column_end":52}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":376165,"byte_end":376198,"line_start":458,"line_end":458,"column_start":5,"column_end":38}},{"value":"/ let datetime = Date::MIN.midnight();","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":376203,"byte_end":376243,"line_start":459,"line_end":459,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(datetime.checked_add((-2).days()), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":376248,"byte_end":376304,"line_start":460,"line_end":460,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":376309,"byte_end":376312,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ let datetime = Date::MAX.midnight();","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":376317,"byte_end":376357,"line_start":462,"line_end":462,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(datetime.checked_add(1.days()), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":376362,"byte_end":376415,"line_start":463,"line_end":463,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":376420,"byte_end":376423,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":376428,"byte_end":376443,"line_start":465,"line_end":465,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30).checked_add(27.hours()),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":376448,"byte_end":376512,"line_start":466,"line_end":466,"column_start":5,"column_end":69}},{"value":"/     Some(datetime!(2019 - 11 - 26 18:30))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":376517,"byte_end":376562,"line_start":467,"line_end":467,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":376567,"byte_end":376573,"line_start":468,"line_end":468,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":376578,"byte_end":376585,"line_start":469,"line_end":469,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2410},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":377724,"byte_end":377735,"line_start":500,"line_end":500,"column_start":18,"column_end":29},"name":"checked_sub","qualname":"<PrimitiveDateTime>::checked_sub","value":"const fn checked_sub(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, returning `None` if an overflow occurred.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":377136,"byte_end":377209,"line_start":484,"line_end":484,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":377214,"byte_end":377217,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":377222,"byte_end":377229,"line_start":486,"line_end":486,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":377234,"byte_end":377281,"line_start":487,"line_end":487,"column_start":5,"column_end":52}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":377286,"byte_end":377319,"line_start":488,"line_end":488,"column_start":5,"column_end":38}},{"value":"/ let datetime = Date::MIN.midnight();","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":377324,"byte_end":377364,"line_start":489,"line_end":489,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(datetime.checked_sub(2.days()), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":377369,"byte_end":377422,"line_start":490,"line_end":490,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":377427,"byte_end":377430,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ let datetime = Date::MAX.midnight();","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":377435,"byte_end":377475,"line_start":492,"line_end":492,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(datetime.checked_sub((-1).days()), None);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":377480,"byte_end":377536,"line_start":493,"line_end":493,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":377541,"byte_end":377544,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":377549,"byte_end":377564,"line_start":495,"line_end":495,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30).checked_sub(27.hours()),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":377569,"byte_end":377633,"line_start":496,"line_end":496,"column_start":5,"column_end":69}},{"value":"/     Some(datetime!(2019 - 11 - 24 12:30))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":377638,"byte_end":377683,"line_start":497,"line_end":497,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":377688,"byte_end":377694,"line_start":498,"line_end":498,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":377699,"byte_end":377706,"line_start":499,"line_end":499,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2411},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":378965,"byte_end":378979,"line_start":536,"line_end":536,"column_start":18,"column_end":32},"name":"saturating_add","qualname":"<PrimitiveDateTime>::saturating_add","value":"const fn saturating_add(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, saturating value on overflow.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":378331,"byte_end":378392,"line_start":516,"line_end":516,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":378397,"byte_end":378400,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":378405,"byte_end":378412,"line_start":518,"line_end":518,"column_start":5,"column_end":12}},{"value":"/ # use time::{PrimitiveDateTime, ext::NumericalDuration};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":378417,"byte_end":378477,"line_start":519,"line_end":519,"column_start":5,"column_end":65}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":378482,"byte_end":378515,"line_start":520,"line_end":520,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":378520,"byte_end":378535,"line_start":521,"line_end":521,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::MIN.saturating_add((-2).days()),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":378540,"byte_end":378599,"line_start":522,"line_end":522,"column_start":5,"column_end":64}},{"value":"/     PrimitiveDateTime::MIN","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":378604,"byte_end":378634,"line_start":523,"line_end":523,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":378639,"byte_end":378645,"line_start":524,"line_end":524,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":378650,"byte_end":378653,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":378658,"byte_end":378673,"line_start":526,"line_end":526,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::MAX.saturating_add(2.days()),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":378678,"byte_end":378734,"line_start":527,"line_end":527,"column_start":5,"column_end":61}},{"value":"/     PrimitiveDateTime::MAX","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":378739,"byte_end":378769,"line_start":528,"line_end":528,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":378774,"byte_end":378780,"line_start":529,"line_end":529,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":378785,"byte_end":378788,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":378793,"byte_end":378808,"line_start":531,"line_end":531,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30).saturating_add(27.hours()),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":378813,"byte_end":378880,"line_start":532,"line_end":532,"column_start":5,"column_end":72}},{"value":"/     datetime!(2019 - 11 - 26 18:30)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":378885,"byte_end":378924,"line_start":533,"line_end":533,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":378929,"byte_end":378935,"line_start":534,"line_end":534,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":378940,"byte_end":378947,"line_start":535,"line_end":535,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2412},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":379857,"byte_end":379871,"line_start":566,"line_end":566,"column_start":18,"column_end":32},"name":"saturating_sub","qualname":"<PrimitiveDateTime>::saturating_sub","value":"const fn saturating_sub(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, saturating value on overflow.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":379223,"byte_end":379284,"line_start":546,"line_end":546,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":379289,"byte_end":379292,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":379297,"byte_end":379304,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"/ # use time::{PrimitiveDateTime, ext::NumericalDuration};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":379309,"byte_end":379369,"line_start":549,"line_end":549,"column_start":5,"column_end":65}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":379374,"byte_end":379407,"line_start":550,"line_end":550,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":379412,"byte_end":379427,"line_start":551,"line_end":551,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::MIN.saturating_sub(2.days()),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":379432,"byte_end":379488,"line_start":552,"line_end":552,"column_start":5,"column_end":61}},{"value":"/     PrimitiveDateTime::MIN","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":379493,"byte_end":379523,"line_start":553,"line_end":553,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":379528,"byte_end":379534,"line_start":554,"line_end":554,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":379539,"byte_end":379542,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":379547,"byte_end":379562,"line_start":556,"line_end":556,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::MAX.saturating_sub((-2).days()),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":379567,"byte_end":379626,"line_start":557,"line_end":557,"column_start":5,"column_end":64}},{"value":"/     PrimitiveDateTime::MAX","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":379631,"byte_end":379661,"line_start":558,"line_end":558,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":379666,"byte_end":379672,"line_start":559,"line_end":559,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":379677,"byte_end":379680,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":379685,"byte_end":379700,"line_start":561,"line_end":561,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30).saturating_sub(27.hours()),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":379705,"byte_end":379772,"line_start":562,"line_end":562,"column_start":5,"column_end":72}},{"value":"/     datetime!(2019 - 11 - 24 12:30)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":379777,"byte_end":379816,"line_start":563,"line_end":563,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":379821,"byte_end":379827,"line_start":564,"line_end":564,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":379832,"byte_end":379839,"line_start":565,"line_end":565,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2414},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":380624,"byte_end":380636,"line_start":591,"line_end":591,"column_start":18,"column_end":30},"name":"replace_time","qualname":"<PrimitiveDateTime>::replace_time","value":"const fn replace_time(Self, Time) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the time, preserving the date.","sig":null,"attributes":[{"value":"/ Replace the time, preserving the date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":380263,"byte_end":380305,"line_start":581,"line_end":581,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":380310,"byte_end":380313,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":380318,"byte_end":380329,"line_start":583,"line_end":583,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, time};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":380334,"byte_end":380375,"line_start":584,"line_end":584,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":380380,"byte_end":380395,"line_start":585,"line_end":585,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 17:00).replace_time(time!(5:00)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":380400,"byte_end":380462,"line_start":586,"line_end":586,"column_start":5,"column_end":67}},{"value":"/     datetime!(2020-01-01 5:00)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":380467,"byte_end":380501,"line_start":587,"line_end":587,"column_start":5,"column_end":39}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":380506,"byte_end":380512,"line_start":588,"line_end":588,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":380517,"byte_end":380524,"line_start":589,"line_end":589,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":380529,"byte_end":380606,"line_start":590,"line_end":590,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2415},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":381078,"byte_end":381090,"line_start":605,"line_end":605,"column_start":18,"column_end":30},"name":"replace_date","qualname":"<PrimitiveDateTime>::replace_date","value":"const fn replace_date(Self, Date) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the date, preserving the time.","sig":null,"attributes":[{"value":"/ Replace the date, preserving the time.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":380710,"byte_end":380752,"line_start":595,"line_end":595,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":380757,"byte_end":380760,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":380765,"byte_end":380776,"line_start":597,"line_end":597,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, date};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":380781,"byte_end":380822,"line_start":598,"line_end":598,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":380827,"byte_end":380842,"line_start":599,"line_end":599,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00).replace_date(date!(2020-01-30)),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":380847,"byte_end":380915,"line_start":600,"line_end":600,"column_start":5,"column_end":73}},{"value":"/     datetime!(2020-01-30 12:00)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":380920,"byte_end":380955,"line_start":601,"line_end":601,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":380960,"byte_end":380966,"line_start":602,"line_end":602,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":380971,"byte_end":380978,"line_start":603,"line_end":603,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":380983,"byte_end":381060,"line_start":604,"line_end":604,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2416},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":381787,"byte_end":381799,"line_start":621,"line_end":621,"column_start":18,"column_end":30},"name":"replace_year","qualname":"<PrimitiveDateTime>::replace_year","value":"const fn replace_year(Self, i32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the year. The month and day will be unchanged.","sig":null,"attributes":[{"value":"/ Replace the year. The month and day will be unchanged.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":381164,"byte_end":381222,"line_start":609,"line_end":609,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":381227,"byte_end":381230,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":381235,"byte_end":381246,"line_start":611,"line_end":611,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":381251,"byte_end":381284,"line_start":612,"line_end":612,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":381289,"byte_end":381304,"line_start":613,"line_end":613,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00).replace_year(2019),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":381309,"byte_end":381368,"line_start":614,"line_end":614,"column_start":5,"column_end":64}},{"value":"/     Ok(datetime!(2019 - 02 - 18 12:00))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":381373,"byte_end":381416,"line_start":615,"line_end":615,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":381421,"byte_end":381427,"line_start":616,"line_end":616,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00).replace_year(-1_000_000_000).is_err()); // -1_000_000_000 isn't a valid year","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":381432,"byte_end":381552,"line_start":617,"line_end":617,"column_start":5,"column_end":125}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00).replace_year(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid year","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":381557,"byte_end":381675,"line_start":618,"line_end":618,"column_start":5,"column_end":123}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":381680,"byte_end":381687,"line_start":619,"line_end":619,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":381692,"byte_end":381769,"line_start":620,"line_end":620,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2417},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":382458,"byte_end":382471,"line_start":637,"line_end":637,"column_start":18,"column_end":31},"name":"replace_month","qualname":"<PrimitiveDateTime>::replace_month","value":"const fn replace_month(Self, Month) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the month of the year.","sig":null,"attributes":[{"value":"/ Replace the month of the year.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":381943,"byte_end":381977,"line_start":625,"line_end":625,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":381982,"byte_end":381985,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":381990,"byte_end":382001,"line_start":627,"line_end":627,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":382006,"byte_end":382039,"line_start":628,"line_end":628,"column_start":5,"column_end":38}},{"value":"/ # use time::Month;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":382044,"byte_end":382066,"line_start":629,"line_end":629,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":382071,"byte_end":382086,"line_start":630,"line_end":630,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00).replace_month(Month::January),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":382091,"byte_end":382161,"line_start":631,"line_end":631,"column_start":5,"column_end":75}},{"value":"/     Ok(datetime!(2022 - 01 - 18 12:00))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":382166,"byte_end":382209,"line_start":632,"line_end":632,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":382214,"byte_end":382220,"line_start":633,"line_end":633,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 01 - 30 12:00).replace_month(Month::February).is_err()); // 30 isn't a valid day in February","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":382225,"byte_end":382346,"line_start":634,"line_end":634,"column_start":5,"column_end":126}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":382351,"byte_end":382358,"line_start":635,"line_end":635,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":382363,"byte_end":382440,"line_start":636,"line_end":636,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2418},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":383175,"byte_end":383186,"line_start":653,"line_end":653,"column_start":18,"column_end":29},"name":"replace_day","qualname":"<PrimitiveDateTime>::replace_day","value":"const fn replace_day(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the day of the month.","sig":null,"attributes":[{"value":"/ Replace the day of the month.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":382620,"byte_end":382653,"line_start":641,"line_end":641,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":382658,"byte_end":382661,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":382666,"byte_end":382677,"line_start":643,"line_end":643,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":382682,"byte_end":382715,"line_start":644,"line_end":644,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":382720,"byte_end":382735,"line_start":645,"line_end":645,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00).replace_day(1),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":382740,"byte_end":382795,"line_start":646,"line_end":646,"column_start":5,"column_end":60}},{"value":"/     Ok(datetime!(2022 - 02 - 01 12:00))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":382800,"byte_end":382843,"line_start":647,"line_end":647,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":382848,"byte_end":382854,"line_start":648,"line_end":648,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00).replace_day(0).is_err()); // 00 isn't a valid day","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":382859,"byte_end":382952,"line_start":649,"line_end":649,"column_start":5,"column_end":98}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00).replace_day(30).is_err()); // 30 isn't a valid day in February","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":382957,"byte_end":383063,"line_start":650,"line_end":650,"column_start":5,"column_end":111}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":383068,"byte_end":383075,"line_start":651,"line_end":651,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":383080,"byte_end":383157,"line_start":652,"line_end":652,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2419},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":383813,"byte_end":383825,"line_start":668,"line_end":668,"column_start":18,"column_end":30},"name":"replace_hour","qualname":"<PrimitiveDateTime>::replace_hour","value":"const fn replace_hour(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the clock hour.","sig":null,"attributes":[{"value":"/ Replace the clock hour.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":383326,"byte_end":383353,"line_start":657,"line_end":657,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":383358,"byte_end":383361,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":383366,"byte_end":383377,"line_start":659,"line_end":659,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":383382,"byte_end":383415,"line_start":660,"line_end":660,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":383420,"byte_end":383435,"line_start":661,"line_end":661,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_hour(7),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":383440,"byte_end":383511,"line_start":662,"line_end":662,"column_start":5,"column_end":76}},{"value":"/     Ok(datetime!(2022 - 02 - 18 07:02:03.004_005_006))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":383516,"byte_end":383574,"line_start":663,"line_end":663,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":383579,"byte_end":383585,"line_start":664,"line_end":664,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_hour(24).is_err()); // 24 isn't a valid hour","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":383590,"byte_end":383701,"line_start":665,"line_end":665,"column_start":5,"column_end":116}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":383706,"byte_end":383713,"line_start":666,"line_end":666,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":383718,"byte_end":383795,"line_start":667,"line_end":667,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2420},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":384502,"byte_end":384516,"line_start":685,"line_end":685,"column_start":18,"column_end":32},"name":"replace_minute","qualname":"<PrimitiveDateTime>::replace_minute","value":"const fn replace_minute(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the minutes within the hour.","sig":null,"attributes":[{"value":"/ Replace the minutes within the hour.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":383996,"byte_end":384036,"line_start":674,"line_end":674,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":384041,"byte_end":384044,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":384049,"byte_end":384060,"line_start":676,"line_end":676,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":384065,"byte_end":384098,"line_start":677,"line_end":677,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":384103,"byte_end":384118,"line_start":678,"line_end":678,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_minute(7),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":384123,"byte_end":384196,"line_start":679,"line_end":679,"column_start":5,"column_end":78}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:07:03.004_005_006))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":384201,"byte_end":384259,"line_start":680,"line_end":680,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":384264,"byte_end":384270,"line_start":681,"line_end":681,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_minute(60).is_err()); // 60 isn't a valid minute","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":384275,"byte_end":384390,"line_start":682,"line_end":682,"column_start":5,"column_end":120}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":384395,"byte_end":384402,"line_start":683,"line_end":683,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":384407,"byte_end":384484,"line_start":684,"line_end":684,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2421},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":385201,"byte_end":385215,"line_start":702,"line_end":702,"column_start":18,"column_end":32},"name":"replace_second","qualname":"<PrimitiveDateTime>::replace_second","value":"const fn replace_second(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the seconds within the minute.","sig":null,"attributes":[{"value":"/ Replace the seconds within the minute.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":384693,"byte_end":384735,"line_start":691,"line_end":691,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":384740,"byte_end":384743,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":384748,"byte_end":384759,"line_start":693,"line_end":693,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":384764,"byte_end":384797,"line_start":694,"line_end":694,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":384802,"byte_end":384817,"line_start":695,"line_end":695,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_second(7),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":384822,"byte_end":384895,"line_start":696,"line_end":696,"column_start":5,"column_end":78}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:07.004_005_006))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":384900,"byte_end":384958,"line_start":697,"line_end":697,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":384963,"byte_end":384969,"line_start":698,"line_end":698,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_second(60).is_err()); // 60 isn't a valid second","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":384974,"byte_end":385089,"line_start":699,"line_end":699,"column_start":5,"column_end":120}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":385094,"byte_end":385101,"line_start":700,"line_end":700,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":385106,"byte_end":385183,"line_start":701,"line_end":701,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2422},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":385918,"byte_end":385937,"line_start":719,"line_end":719,"column_start":18,"column_end":37},"name":"replace_millisecond","qualname":"<PrimitiveDateTime>::replace_millisecond","value":"const fn replace_millisecond(Self, u16) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the milliseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the milliseconds within the second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":385392,"byte_end":385439,"line_start":708,"line_end":708,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":385444,"byte_end":385447,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":385452,"byte_end":385463,"line_start":710,"line_end":710,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":385468,"byte_end":385501,"line_start":711,"line_end":711,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":385506,"byte_end":385521,"line_start":712,"line_end":712,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_millisecond(7),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":385526,"byte_end":385604,"line_start":713,"line_end":713,"column_start":5,"column_end":83}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":385609,"byte_end":385659,"line_start":714,"line_end":714,"column_start":5,"column_end":55}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":385664,"byte_end":385670,"line_start":715,"line_end":715,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_millisecond(1_000).is_err()); // 1_000 isn't a valid millisecond","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":385675,"byte_end":385806,"line_start":716,"line_end":716,"column_start":5,"column_end":136}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":385811,"byte_end":385818,"line_start":717,"line_end":717,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":385823,"byte_end":385900,"line_start":718,"line_end":718,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2423},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":386695,"byte_end":386714,"line_start":739,"line_end":739,"column_start":18,"column_end":37},"name":"replace_microsecond","qualname":"<PrimitiveDateTime>::replace_microsecond","value":"const fn replace_microsecond(Self, u32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the microseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the microseconds within the second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":386153,"byte_end":386200,"line_start":728,"line_end":728,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":386205,"byte_end":386208,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":386213,"byte_end":386224,"line_start":730,"line_end":730,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":386229,"byte_end":386262,"line_start":731,"line_end":731,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":386267,"byte_end":386282,"line_start":732,"line_end":732,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_microsecond(7_008),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":386287,"byte_end":386369,"line_start":733,"line_end":733,"column_start":5,"column_end":87}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007_008))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":386374,"byte_end":386428,"line_start":734,"line_end":734,"column_start":5,"column_end":59}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":386433,"byte_end":386439,"line_start":735,"line_end":735,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_microsecond(1_000_000).is_err()); // 1_000_000 isn't a valid microsecond","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":386444,"byte_end":386583,"line_start":736,"line_end":736,"column_start":5,"column_end":144}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":386588,"byte_end":386595,"line_start":737,"line_end":737,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":386600,"byte_end":386677,"line_start":738,"line_end":738,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2424},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":387484,"byte_end":387502,"line_start":759,"line_end":759,"column_start":18,"column_end":36},"name":"replace_nanosecond","qualname":"<PrimitiveDateTime>::replace_nanosecond","value":"const fn replace_nanosecond(Self, u32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the nanoseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the nanoseconds within the second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":386930,"byte_end":386976,"line_start":748,"line_end":748,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":386981,"byte_end":386984,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":386989,"byte_end":387000,"line_start":750,"line_end":750,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":387005,"byte_end":387038,"line_start":751,"line_end":751,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":387043,"byte_end":387058,"line_start":752,"line_end":752,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_nanosecond(7_008_009),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":387063,"byte_end":387148,"line_start":753,"line_end":753,"column_start":5,"column_end":90}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007_008_009))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":387153,"byte_end":387211,"line_start":754,"line_end":754,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":387216,"byte_end":387222,"line_start":755,"line_end":755,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_nanosecond(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid nanosecond","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":387227,"byte_end":387372,"line_start":756,"line_end":756,"column_start":5,"column_end":150}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":387377,"byte_end":387384,"line_start":757,"line_end":757,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":387389,"byte_end":387466,"line_start":758,"line_end":758,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2426},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":387929,"byte_end":387940,"line_start":772,"line_end":772,"column_start":12,"column_end":23},"name":"format_into","qualname":"<PrimitiveDateTime>::format_into","value":"fn format_into<impl io::Write,\nimpl Formattable + ?Sized>(Self, &mut impl io::Write,\n&impl Formattable + ?Sized) -> Result<usize, error::Format> where\nimpl io::Write: io::Write, impl Formattable + ?Sized: Formattable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Format the `PrimitiveDateTime` using the provided [format\n description](crate::format_description).\n","sig":null,"attributes":[{"value":"/ Format the `PrimitiveDateTime` using the provided [format","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":387807,"byte_end":387868,"line_start":770,"line_end":770,"column_start":5,"column_end":66}},{"value":"/ description](crate::format_description).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":387873,"byte_end":387917,"line_start":771,"line_end":771,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2429},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":388642,"byte_end":388648,"line_start":792,"line_end":792,"column_start":12,"column_end":18},"name":"format","qualname":"<PrimitiveDateTime>::format","value":"fn format<impl Formattable + ?Sized>(Self, &impl Formattable + ?Sized)\n-> Result<String, error::Format> where\nimpl Formattable + ?Sized: Formattable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Format the `PrimitiveDateTime` using the provided [format\n description](crate::format_description).","sig":null,"attributes":[{"value":"/ Format the `PrimitiveDateTime` using the provided [format","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":388165,"byte_end":388226,"line_start":780,"line_end":780,"column_start":5,"column_end":66}},{"value":"/ description](crate::format_description).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":388231,"byte_end":388275,"line_start":781,"line_end":781,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":388280,"byte_end":388283,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":388288,"byte_end":388299,"line_start":783,"line_end":783,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::datetime};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":388304,"byte_end":388359,"line_start":784,"line_end":784,"column_start":5,"column_end":60}},{"value":"/ let format = format_description::parse(\"[year]-[month]-[day] [hour]:[minute]:[second]\")?;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":388364,"byte_end":388457,"line_start":785,"line_end":785,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":388462,"byte_end":388477,"line_start":786,"line_end":786,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-02 03:04:05).format(&format)?,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":388482,"byte_end":388538,"line_start":787,"line_end":787,"column_start":5,"column_end":61}},{"value":"/     \"2020-01-02 03:04:05\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":388543,"byte_end":388572,"line_start":788,"line_end":788,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":388577,"byte_end":388583,"line_start":789,"line_end":789,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":388588,"byte_end":388618,"line_start":790,"line_end":790,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":388623,"byte_end":388630,"line_start":791,"line_end":791,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2432},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":389383,"byte_end":389388,"line_start":811,"line_end":811,"column_start":12,"column_end":17},"name":"parse","qualname":"<PrimitiveDateTime>::parse","value":"fn parse<impl Parsable + ?Sized>(&str, &impl Parsable + ?Sized)\n-> Result<Self, error::Parse> where impl Parsable + ?Sized: Parsable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Parse a `PrimitiveDateTime` from the input using the provided [format\n description](crate::format_description).","sig":null,"attributes":[{"value":"/ Parse a `PrimitiveDateTime` from the input using the provided [format","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":388856,"byte_end":388929,"line_start":799,"line_end":799,"column_start":5,"column_end":78}},{"value":"/ description](crate::format_description).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":388934,"byte_end":388978,"line_start":800,"line_end":800,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":388983,"byte_end":388986,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":388991,"byte_end":389002,"line_start":802,"line_end":802,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::datetime, PrimitiveDateTime};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":389007,"byte_end":389081,"line_start":803,"line_end":803,"column_start":5,"column_end":79}},{"value":"/ let format = format_description::parse(\"[year]-[month]-[day] [hour]:[minute]:[second]\")?;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":389086,"byte_end":389179,"line_start":804,"line_end":804,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":389184,"byte_end":389199,"line_start":805,"line_end":805,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::parse(\"2020-01-02 03:04:05\", &format)?,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":389204,"byte_end":389270,"line_start":806,"line_end":806,"column_start":5,"column_end":71}},{"value":"/     datetime!(2020-01-02 03:04:05)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":389275,"byte_end":389313,"line_start":807,"line_end":807,"column_start":5,"column_end":43}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":389318,"byte_end":389324,"line_start":808,"line_end":808,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":389329,"byte_end":389359,"line_start":809,"line_end":809,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":389364,"byte_end":389371,"line_start":810,"line_end":810,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2435},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":389609,"byte_end":389612,"line_start":820,"line_end":820,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PrimitiveDateTime as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2438},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":389855,"byte_end":389858,"line_start":830,"line_end":830,"column_start":8,"column_end":11},"name":"add","qualname":"<PrimitiveDateTime as std::ops::Add>::add","value":"fn add(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2441},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":390080,"byte_end":390083,"line_start":839,"line_end":839,"column_start":8,"column_end":11},"name":"add","qualname":"<PrimitiveDateTime as std::ops::Add>::add","value":"fn add(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2444},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":390635,"byte_end":390638,"line_start":860,"line_end":860,"column_start":8,"column_end":11},"name":"sub","qualname":"<PrimitiveDateTime as std::ops::Sub>::sub","value":"fn sub(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2447},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":390860,"byte_end":390863,"line_start":869,"line_end":869,"column_start":8,"column_end":11},"name":"sub","qualname":"<PrimitiveDateTime as std::ops::Sub>::sub","value":"fn sub(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2450},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":391421,"byte_end":391424,"line_start":890,"line_end":890,"column_start":8,"column_end":11},"name":"sub","qualname":"<PrimitiveDateTime as std::ops::Sub>::sub","value":"fn sub(Self, Self) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3964},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":392847,"byte_end":392851,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"Time","qualname":"::time::Time","value":"Time {  }","parent":null,"children":[{"krate":0,"index":3965},{"krate":0,"index":3966},{"krate":0,"index":3967},{"krate":0,"index":3968},{"krate":0,"index":3969}],"decl_id":null,"docs":" The clock time within a given date. Nanosecond precision.","sig":null,"attributes":[{"value":"/ The clock time within a given date. Nanosecond precision.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":392490,"byte_end":392551,"line_start":25,"line_end":25,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":392552,"byte_end":392555,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ All minutes are assumed to have exactly 60 seconds; no attempt is made to handle leap seconds","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":392556,"byte_end":392653,"line_start":27,"line_end":27,"column_start":1,"column_end":98}},{"value":"/ (either positive or negative).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":392654,"byte_end":392688,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":392689,"byte_end":392692,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ When comparing two `Time`s, they are assumed to be in the same calendar date.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":392693,"byte_end":392774,"line_start":30,"line_end":30,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2486},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":393240,"byte_end":393243,"line_start":46,"line_end":46,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Time as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9902},"children":[],"decl_id":{"krate":2,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2488},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":393737,"byte_end":393745,"line_start":63,"line_end":63,"column_start":15,"column_end":23},"name":"MIDNIGHT","qualname":"::time::Time::MIDNIGHT","value":"Self","parent":{"krate":0,"index":2487},"children":[],"decl_id":null,"docs":" Create a `Time` that is exactly midnight.","sig":null,"attributes":[{"value":"/ Create a `Time` that is exactly midnight.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":393550,"byte_end":393595,"line_start":57,"line_end":57,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":393600,"byte_end":393603,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":393608,"byte_end":393619,"line_start":59,"line_end":59,"column_start":5,"column_end":16}},{"value":"/ # use time::{Time, macros::time};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":393624,"byte_end":393661,"line_start":60,"line_end":60,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Time::MIDNIGHT, time!(0:00));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":393666,"byte_end":393710,"line_start":61,"line_end":61,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":393715,"byte_end":393722,"line_start":62,"line_end":62,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2491},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":394274,"byte_end":394300,"line_start":78,"line_end":78,"column_start":18,"column_end":44},"name":"__from_hms_nanos_unchecked","qualname":"<Time>::__from_hms_nanos_unchecked","value":"const fn __from_hms_nanos_unchecked(u8, u8, u8, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `Time` from its components.\n","sig":null,"attributes":[{"value":"/ Create a `Time` from its components.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":394197,"byte_end":394237,"line_start":76,"line_end":76,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2492},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":395212,"byte_end":395220,"line_start":111,"line_end":111,"column_start":18,"column_end":26},"name":"from_hms","qualname":"<Time>::from_hms","value":"const fn from_hms(u8, u8, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Time` from the hour, minute, and second.","sig":null,"attributes":[{"value":"/ Attempt to create a `Time` from the hour, minute, and second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":394717,"byte_end":394782,"line_start":98,"line_end":98,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":394787,"byte_end":394790,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":394795,"byte_end":394806,"line_start":100,"line_end":100,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":394811,"byte_end":394832,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms(1, 2, 3).is_ok());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":394837,"byte_end":394882,"line_start":102,"line_end":102,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":394887,"byte_end":394894,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":394899,"byte_end":394902,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":394907,"byte_end":394918,"line_start":105,"line_end":105,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":394923,"byte_end":394944,"line_start":106,"line_end":106,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms(24, 0, 0).is_err()); // 24 isn't a valid hour.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":394949,"byte_end":395022,"line_start":107,"line_end":107,"column_start":5,"column_end":78}},{"value":"/ assert!(Time::from_hms(0, 60, 0).is_err()); // 60 isn't a valid minute.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":395027,"byte_end":395102,"line_start":108,"line_end":108,"column_start":5,"column_end":80}},{"value":"/ assert!(Time::from_hms(0, 0, 60).is_err()); // 60 isn't a valid second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":395107,"byte_end":395182,"line_start":109,"line_end":109,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":395187,"byte_end":395194,"line_start":110,"line_end":110,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2493},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":396172,"byte_end":396186,"line_start":132,"line_end":132,"column_start":18,"column_end":32},"name":"from_hms_milli","qualname":"<Time>::from_hms_milli","value":"const fn from_hms_milli(u8, u8, u8, u16)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Time` from the hour, minute, second, and millisecond.","sig":null,"attributes":[{"value":"/ Attempt to create a `Time` from the hour, minute, second, and millisecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":395528,"byte_end":395606,"line_start":118,"line_end":118,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":395611,"byte_end":395614,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":395619,"byte_end":395630,"line_start":120,"line_end":120,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":395635,"byte_end":395656,"line_start":121,"line_end":121,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_milli(1, 2, 3, 4).is_ok());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":395661,"byte_end":395715,"line_start":122,"line_end":122,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":395720,"byte_end":395727,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":395732,"byte_end":395735,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":395740,"byte_end":395751,"line_start":125,"line_end":125,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":395756,"byte_end":395777,"line_start":126,"line_end":126,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_milli(24, 0, 0, 0).is_err()); // 24 isn't a valid hour.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":395782,"byte_end":395864,"line_start":127,"line_end":127,"column_start":5,"column_end":87}},{"value":"/ assert!(Time::from_hms_milli(0, 60, 0, 0).is_err()); // 60 isn't a valid minute.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":395869,"byte_end":395953,"line_start":128,"line_end":128,"column_start":5,"column_end":89}},{"value":"/ assert!(Time::from_hms_milli(0, 0, 60, 0).is_err()); // 60 isn't a valid second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":395958,"byte_end":396042,"line_start":129,"line_end":129,"column_start":5,"column_end":89}},{"value":"/ assert!(Time::from_hms_milli(0, 0, 0, 1_000).is_err()); // 1_000 isn't a valid millisecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":396047,"byte_end":396142,"line_start":130,"line_end":130,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":396147,"byte_end":396154,"line_start":131,"line_end":131,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2494},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":397348,"byte_end":397362,"line_start":164,"line_end":164,"column_start":18,"column_end":32},"name":"from_hms_micro","qualname":"<Time>::from_hms_micro","value":"const fn from_hms_micro(u8, u8, u8, u32)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Time` from the hour, minute, second, and microsecond.","sig":null,"attributes":[{"value":"/ Attempt to create a `Time` from the hour, minute, second, and microsecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":396696,"byte_end":396774,"line_start":150,"line_end":150,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":396779,"byte_end":396782,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":396787,"byte_end":396798,"line_start":152,"line_end":152,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":396803,"byte_end":396824,"line_start":153,"line_end":153,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_micro(1, 2, 3, 4).is_ok());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":396829,"byte_end":396883,"line_start":154,"line_end":154,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":396888,"byte_end":396895,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":396900,"byte_end":396903,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":396908,"byte_end":396919,"line_start":157,"line_end":157,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":396924,"byte_end":396945,"line_start":158,"line_end":158,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_micro(24, 0, 0, 0).is_err()); // 24 isn't a valid hour.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":396950,"byte_end":397032,"line_start":159,"line_end":159,"column_start":5,"column_end":87}},{"value":"/ assert!(Time::from_hms_micro(0, 60, 0, 0).is_err()); // 60 isn't a valid minute.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":397037,"byte_end":397121,"line_start":160,"line_end":160,"column_start":5,"column_end":89}},{"value":"/ assert!(Time::from_hms_micro(0, 0, 60, 0).is_err()); // 60 isn't a valid second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":397126,"byte_end":397210,"line_start":161,"line_end":161,"column_start":5,"column_end":89}},{"value":"/ assert!(Time::from_hms_micro(0, 0, 0, 1_000_000).is_err()); // 1_000_000 isn't a valid microsecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":397215,"byte_end":397318,"line_start":162,"line_end":162,"column_start":5,"column_end":108}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":397323,"byte_end":397330,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2495},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":398518,"byte_end":398531,"line_start":196,"line_end":196,"column_start":18,"column_end":31},"name":"from_hms_nano","qualname":"<Time>::from_hms_nano","value":"const fn from_hms_nano(u8, u8, u8, u32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Time` from the hour, minute, second, and nanosecond.","sig":null,"attributes":[{"value":"/ Attempt to create a `Time` from the hour, minute, second, and nanosecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":397865,"byte_end":397942,"line_start":182,"line_end":182,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":397947,"byte_end":397950,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":397955,"byte_end":397966,"line_start":184,"line_end":184,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":397971,"byte_end":397992,"line_start":185,"line_end":185,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_nano(1, 2, 3, 4).is_ok());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":397997,"byte_end":398050,"line_start":186,"line_end":186,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":398055,"byte_end":398062,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":398067,"byte_end":398070,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":398075,"byte_end":398086,"line_start":189,"line_end":189,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":398091,"byte_end":398112,"line_start":190,"line_end":190,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_nano(24, 0, 0, 0).is_err()); // 24 isn't a valid hour.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":398117,"byte_end":398198,"line_start":191,"line_end":191,"column_start":5,"column_end":86}},{"value":"/ assert!(Time::from_hms_nano(0, 60, 0, 0).is_err()); // 60 isn't a valid minute.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":398203,"byte_end":398286,"line_start":192,"line_end":192,"column_start":5,"column_end":88}},{"value":"/ assert!(Time::from_hms_nano(0, 0, 60, 0).is_err()); // 60 isn't a valid second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":398291,"byte_end":398374,"line_start":193,"line_end":193,"column_start":5,"column_end":88}},{"value":"/ assert!(Time::from_hms_nano(0, 0, 0, 1_000_000_000).is_err()); // 1_000_000_000 isn't a valid nanosecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":398379,"byte_end":398488,"line_start":194,"line_end":194,"column_start":5,"column_end":114}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":398493,"byte_end":398500,"line_start":195,"line_end":195,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2496},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":399291,"byte_end":399297,"line_start":220,"line_end":220,"column_start":18,"column_end":24},"name":"as_hms","qualname":"<Time>::as_hms","value":"const fn as_hms(Self) -> (u8, u8, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, and second.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, and second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":399044,"byte_end":399087,"line_start":213,"line_end":213,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":399092,"byte_end":399095,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":399100,"byte_end":399111,"line_start":215,"line_end":215,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":399116,"byte_end":399145,"line_start":216,"line_end":216,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).as_hms(), (0, 0, 0));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":399150,"byte_end":399201,"line_start":217,"line_end":217,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(time!(23:59:59).as_hms(), (23, 59, 59));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":399206,"byte_end":399261,"line_start":218,"line_end":218,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":399266,"byte_end":399273,"line_start":219,"line_end":219,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2497},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":399663,"byte_end":399675,"line_start":231,"line_end":231,"column_start":18,"column_end":30},"name":"as_hms_milli","qualname":"<Time>::as_hms_milli","value":"const fn as_hms_milli(Self) -> (u8, u8, u8, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and millisecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and millisecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":399379,"byte_end":399435,"line_start":224,"line_end":224,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":399440,"byte_end":399443,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":399448,"byte_end":399459,"line_start":226,"line_end":226,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":399464,"byte_end":399493,"line_start":227,"line_end":227,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).as_hms_milli(), (0, 0, 0, 0));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":399498,"byte_end":399558,"line_start":228,"line_end":228,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(time!(23:59:59.999).as_hms_milli(), (23, 59, 59, 999));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":399563,"byte_end":399633,"line_start":229,"line_end":229,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":399638,"byte_end":399645,"line_start":230,"line_end":230,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2498},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":400185,"byte_end":400197,"line_start":250,"line_end":250,"column_start":18,"column_end":30},"name":"as_hms_micro","qualname":"<Time>::as_hms_micro","value":"const fn as_hms_micro(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and microsecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and microsecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":399859,"byte_end":399915,"line_start":240,"line_end":240,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":399920,"byte_end":399923,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":399928,"byte_end":399939,"line_start":242,"line_end":242,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":399944,"byte_end":399973,"line_start":243,"line_end":243,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).as_hms_micro(), (0, 0, 0, 0));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":399978,"byte_end":400038,"line_start":244,"line_end":244,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":400043,"byte_end":400058,"line_start":245,"line_end":245,"column_start":5,"column_end":20}},{"value":"/     time!(23:59:59.999_999).as_hms_micro(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":400063,"byte_end":400110,"line_start":246,"line_end":246,"column_start":5,"column_end":52}},{"value":"/     (23, 59, 59, 999_999)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":400115,"byte_end":400144,"line_start":247,"line_end":247,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":400149,"byte_end":400155,"line_start":248,"line_end":248,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":400160,"byte_end":400167,"line_start":249,"line_end":249,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2499},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":400640,"byte_end":400651,"line_start":264,"line_end":264,"column_start":18,"column_end":29},"name":"as_hms_nano","qualname":"<Time>::as_hms_nano","value":"const fn as_hms_nano(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and nanosecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and nanosecond.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":400309,"byte_end":400364,"line_start":254,"line_end":254,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":400369,"byte_end":400372,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":400377,"byte_end":400388,"line_start":256,"line_end":256,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":400393,"byte_end":400422,"line_start":257,"line_end":257,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).as_hms_nano(), (0, 0, 0, 0));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":400427,"byte_end":400486,"line_start":258,"line_end":258,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":400491,"byte_end":400506,"line_start":259,"line_end":259,"column_start":5,"column_end":20}},{"value":"/     time!(23:59:59.999_999_999).as_hms_nano(),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":400511,"byte_end":400561,"line_start":260,"line_end":260,"column_start":5,"column_end":55}},{"value":"/     (23, 59, 59, 999_999_999)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":400566,"byte_end":400599,"line_start":261,"line_end":261,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":400604,"byte_end":400610,"line_start":262,"line_end":262,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":400615,"byte_end":400622,"line_start":263,"line_end":263,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2500},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":401032,"byte_end":401036,"line_start":277,"line_end":277,"column_start":18,"column_end":22},"name":"hour","qualname":"<Time>::hour","value":"const fn hour(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour.","sig":null,"attributes":[{"value":"/ Get the clock hour.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":400755,"byte_end":400778,"line_start":268,"line_end":268,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":400783,"byte_end":400786,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..24`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":400791,"byte_end":400850,"line_start":270,"line_end":270,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":400855,"byte_end":400858,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":400863,"byte_end":400874,"line_start":272,"line_end":272,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":400879,"byte_end":400908,"line_start":273,"line_end":273,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).hour(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":400913,"byte_end":400954,"line_start":274,"line_end":274,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(time!(23:59:59).hour(), 23);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":400959,"byte_end":401002,"line_start":275,"line_end":275,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":401007,"byte_end":401014,"line_start":276,"line_end":276,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2501},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":401373,"byte_end":401379,"line_start":290,"line_end":290,"column_start":18,"column_end":24},"name":"minute","qualname":"<Time>::minute","value":"const fn minute(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the minute within the hour.","sig":null,"attributes":[{"value":"/ Get the minute within the hour.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":401080,"byte_end":401115,"line_start":281,"line_end":281,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":401120,"byte_end":401123,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":401128,"byte_end":401187,"line_start":283,"line_end":283,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":401192,"byte_end":401195,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":401200,"byte_end":401211,"line_start":285,"line_end":285,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":401216,"byte_end":401245,"line_start":286,"line_end":286,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).minute(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":401250,"byte_end":401293,"line_start":287,"line_end":287,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(time!(23:59:59).minute(), 59);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":401298,"byte_end":401343,"line_start":288,"line_end":288,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":401348,"byte_end":401355,"line_start":289,"line_end":289,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2502},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":401720,"byte_end":401726,"line_start":303,"line_end":303,"column_start":18,"column_end":24},"name":"second","qualname":"<Time>::second","value":"const fn second(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the second within the minute.","sig":null,"attributes":[{"value":"/ Get the second within the minute.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":401425,"byte_end":401462,"line_start":294,"line_end":294,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":401467,"byte_end":401470,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":401475,"byte_end":401534,"line_start":296,"line_end":296,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":401539,"byte_end":401542,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":401547,"byte_end":401558,"line_start":298,"line_end":298,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":401563,"byte_end":401592,"line_start":299,"line_end":299,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).second(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":401597,"byte_end":401640,"line_start":300,"line_end":300,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(time!(23:59:59).second(), 59);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":401645,"byte_end":401690,"line_start":301,"line_end":301,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":401695,"byte_end":401702,"line_start":302,"line_end":302,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2503},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":402088,"byte_end":402099,"line_start":316,"line_end":316,"column_start":18,"column_end":29},"name":"millisecond","qualname":"<Time>::millisecond","value":"const fn millisecond(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the milliseconds within the second.","sig":null,"attributes":[{"value":"/ Get the milliseconds within the second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":401772,"byte_end":401815,"line_start":307,"line_end":307,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":401820,"byte_end":401823,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":401828,"byte_end":401890,"line_start":309,"line_end":309,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":401895,"byte_end":401898,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":401903,"byte_end":401914,"line_start":311,"line_end":311,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":401919,"byte_end":401948,"line_start":312,"line_end":312,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00).millisecond(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":401953,"byte_end":401998,"line_start":313,"line_end":313,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(time!(23:59:59.999).millisecond(), 999);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":402003,"byte_end":402058,"line_start":314,"line_end":314,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":402063,"byte_end":402070,"line_start":315,"line_end":315,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2504},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":402497,"byte_end":402508,"line_start":329,"line_end":329,"column_start":18,"column_end":29},"name":"microsecond","qualname":"<Time>::microsecond","value":"const fn microsecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the microseconds within the second.","sig":null,"attributes":[{"value":"/ Get the microseconds within the second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":402169,"byte_end":402212,"line_start":320,"line_end":320,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":402217,"byte_end":402220,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":402225,"byte_end":402291,"line_start":322,"line_end":322,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":402296,"byte_end":402299,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":402304,"byte_end":402315,"line_start":324,"line_end":324,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":402320,"byte_end":402349,"line_start":325,"line_end":325,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00).microsecond(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":402354,"byte_end":402399,"line_start":326,"line_end":326,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(time!(23:59:59.999_999).microsecond(), 999_999);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":402404,"byte_end":402467,"line_start":327,"line_end":327,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":402472,"byte_end":402479,"line_start":328,"line_end":328,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2505},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":402904,"byte_end":402914,"line_start":342,"line_end":342,"column_start":18,"column_end":28},"name":"nanosecond","qualname":"<Time>::nanosecond","value":"const fn nanosecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the nanoseconds within the second.","sig":null,"attributes":[{"value":"/ Get the nanoseconds within the second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":402567,"byte_end":402609,"line_start":333,"line_end":333,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":402614,"byte_end":402617,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000_000`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":402622,"byte_end":402692,"line_start":335,"line_end":335,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":402697,"byte_end":402700,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":402705,"byte_end":402716,"line_start":337,"line_end":337,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":402721,"byte_end":402750,"line_start":338,"line_end":338,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00).nanosecond(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":402755,"byte_end":402799,"line_start":339,"line_end":339,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(time!(23:59:59.999_999_999).nanosecond(), 999_999_999);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":402804,"byte_end":402874,"line_start":340,"line_end":340,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":402879,"byte_end":402886,"line_start":341,"line_end":341,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2510},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":408006,"byte_end":408018,"line_start":469,"line_end":469,"column_start":18,"column_end":30},"name":"replace_hour","qualname":"<Time>::replace_hour","value":"const fn replace_hour(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the clock hour.","sig":null,"attributes":[{"value":"/ Replace the clock hour.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":407593,"byte_end":407620,"line_start":458,"line_end":458,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":407625,"byte_end":407628,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":407633,"byte_end":407644,"line_start":460,"line_end":460,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":407649,"byte_end":407678,"line_start":461,"line_end":461,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":407683,"byte_end":407698,"line_start":462,"line_end":462,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_hour(7),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":407703,"byte_end":407755,"line_start":463,"line_end":463,"column_start":5,"column_end":57}},{"value":"/     Ok(time!(07:02:03.004_005_006))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":407760,"byte_end":407799,"line_start":464,"line_end":464,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":407804,"byte_end":407810,"line_start":465,"line_end":465,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_hour(24).is_err()); // 24 isn't a valid hour","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":407815,"byte_end":407907,"line_start":466,"line_end":466,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":407912,"byte_end":407919,"line_start":467,"line_end":467,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":407924,"byte_end":407988,"line_start":468,"line_end":468,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2511},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":408721,"byte_end":408735,"line_start":490,"line_end":490,"column_start":18,"column_end":32},"name":"replace_minute","qualname":"<Time>::replace_minute","value":"const fn replace_minute(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the minutes within the hour.","sig":null,"attributes":[{"value":"/ Replace the minutes within the hour.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":408289,"byte_end":408329,"line_start":479,"line_end":479,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":408334,"byte_end":408337,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":408342,"byte_end":408353,"line_start":481,"line_end":481,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":408358,"byte_end":408387,"line_start":482,"line_end":482,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":408392,"byte_end":408407,"line_start":483,"line_end":483,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_minute(7),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":408412,"byte_end":408466,"line_start":484,"line_end":484,"column_start":5,"column_end":59}},{"value":"/     Ok(time!(01:07:03.004_005_006))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":408471,"byte_end":408510,"line_start":485,"line_end":485,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":408515,"byte_end":408521,"line_start":486,"line_end":486,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_minute(60).is_err()); // 60 isn't a valid minute","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":408526,"byte_end":408622,"line_start":487,"line_end":487,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":408627,"byte_end":408634,"line_start":488,"line_end":488,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":408639,"byte_end":408703,"line_start":489,"line_end":489,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2512},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":409444,"byte_end":409458,"line_start":511,"line_end":511,"column_start":18,"column_end":32},"name":"replace_second","qualname":"<Time>::replace_second","value":"const fn replace_second(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the seconds within the minute.","sig":null,"attributes":[{"value":"/ Replace the seconds within the minute.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":409010,"byte_end":409052,"line_start":500,"line_end":500,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":409057,"byte_end":409060,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":409065,"byte_end":409076,"line_start":502,"line_end":502,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":409081,"byte_end":409110,"line_start":503,"line_end":503,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":409115,"byte_end":409130,"line_start":504,"line_end":504,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_second(7),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":409135,"byte_end":409189,"line_start":505,"line_end":505,"column_start":5,"column_end":59}},{"value":"/     Ok(time!(01:02:07.004_005_006))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":409194,"byte_end":409233,"line_start":506,"line_end":506,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":409238,"byte_end":409244,"line_start":507,"line_end":507,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_second(60).is_err()); // 60 isn't a valid second","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":409249,"byte_end":409345,"line_start":508,"line_end":508,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":409350,"byte_end":409357,"line_start":509,"line_end":509,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":409362,"byte_end":409426,"line_start":510,"line_end":510,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2513},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":410185,"byte_end":410204,"line_start":532,"line_end":532,"column_start":18,"column_end":37},"name":"replace_millisecond","qualname":"<Time>::replace_millisecond","value":"const fn replace_millisecond(Self, u16) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the milliseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the milliseconds within the second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":409733,"byte_end":409780,"line_start":521,"line_end":521,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":409785,"byte_end":409788,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":409793,"byte_end":409804,"line_start":523,"line_end":523,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":409809,"byte_end":409838,"line_start":524,"line_end":524,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":409843,"byte_end":409858,"line_start":525,"line_end":525,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_millisecond(7),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":409863,"byte_end":409922,"line_start":526,"line_end":526,"column_start":5,"column_end":64}},{"value":"/     Ok(time!(01:02:03.007))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":409927,"byte_end":409958,"line_start":527,"line_end":527,"column_start":5,"column_end":36}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":409963,"byte_end":409969,"line_start":528,"line_end":528,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_millisecond(1_000).is_err()); // 1_000 isn't a valid millisecond","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":409974,"byte_end":410086,"line_start":529,"line_end":529,"column_start":5,"column_end":117}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":410091,"byte_end":410098,"line_start":530,"line_end":530,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":410103,"byte_end":410167,"line_start":531,"line_end":531,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2514},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":411002,"byte_end":411021,"line_start":556,"line_end":556,"column_start":18,"column_end":37},"name":"replace_microsecond","qualname":"<Time>::replace_microsecond","value":"const fn replace_microsecond(Self, u32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the microseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the microseconds within the second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":410534,"byte_end":410581,"line_start":545,"line_end":545,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":410586,"byte_end":410589,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":410594,"byte_end":410605,"line_start":547,"line_end":547,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":410610,"byte_end":410639,"line_start":548,"line_end":548,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":410644,"byte_end":410659,"line_start":549,"line_end":549,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_microsecond(7_008),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":410664,"byte_end":410727,"line_start":550,"line_end":550,"column_start":5,"column_end":68}},{"value":"/     Ok(time!(01:02:03.007_008))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":410732,"byte_end":410767,"line_start":551,"line_end":551,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":410772,"byte_end":410778,"line_start":552,"line_end":552,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_microsecond(1_000_000).is_err()); // 1_000_000 isn't a valid microsecond","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":410783,"byte_end":410903,"line_start":553,"line_end":553,"column_start":5,"column_end":125}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":410908,"byte_end":410915,"line_start":554,"line_end":554,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":410920,"byte_end":410984,"line_start":555,"line_end":555,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2515},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":411823,"byte_end":411841,"line_start":580,"line_end":580,"column_start":18,"column_end":36},"name":"replace_nanosecond","qualname":"<Time>::replace_nanosecond","value":"const fn replace_nanosecond(Self, u32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the nanoseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the nanoseconds within the second.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":411343,"byte_end":411389,"line_start":569,"line_end":569,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":411394,"byte_end":411397,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":411402,"byte_end":411413,"line_start":571,"line_end":571,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":411418,"byte_end":411447,"line_start":572,"line_end":572,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":411452,"byte_end":411467,"line_start":573,"line_end":573,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_nanosecond(7_008_009),","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":411472,"byte_end":411538,"line_start":574,"line_end":574,"column_start":5,"column_end":71}},{"value":"/     Ok(time!(01:02:03.007_008_009))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":411543,"byte_end":411582,"line_start":575,"line_end":575,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":411587,"byte_end":411593,"line_start":576,"line_end":576,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_nanosecond(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid nanosecond","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":411598,"byte_end":411724,"line_start":577,"line_end":577,"column_start":5,"column_end":131}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":411729,"byte_end":411736,"line_start":578,"line_end":578,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":411741,"byte_end":411805,"line_start":579,"line_end":579,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2517},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":412341,"byte_end":412352,"line_start":596,"line_end":596,"column_start":12,"column_end":23},"name":"format_into","qualname":"<Time>::format_into","value":"fn format_into<impl io::Write,\nimpl Formattable + ?Sized>(Self, &mut impl io::Write,\n&impl Formattable + ?Sized) -> Result<usize, crate::error::Format> where\nimpl io::Write: io::Write, impl Formattable + ?Sized: Formattable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Format the `Time` using the provided [format description](crate::format_description).\n","sig":null,"attributes":[{"value":"/ Format the `Time` using the provided [format description](crate::format_description).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":412240,"byte_end":412329,"line_start":595,"line_end":595,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":2520},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":412936,"byte_end":412942,"line_start":612,"line_end":612,"column_start":12,"column_end":18},"name":"format","qualname":"<Time>::format","value":"fn format<impl Formattable + ?Sized>(Self, &impl Formattable + ?Sized)\n-> Result<String, crate::error::Format> where\nimpl Formattable + ?Sized: Formattable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Format the `Time` using the provided [format description](crate::format_description).","sig":null,"attributes":[{"value":"/ Format the `Time` using the provided [format description](crate::format_description).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":412568,"byte_end":412657,"line_start":604,"line_end":604,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":412662,"byte_end":412665,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":412670,"byte_end":412681,"line_start":606,"line_end":606,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::time};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":412686,"byte_end":412737,"line_start":607,"line_end":607,"column_start":5,"column_end":56}},{"value":"/ let format = format_description::parse(\"[hour]:[minute]:[second]\")?;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":412742,"byte_end":412814,"line_start":608,"line_end":608,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(time!(12:00).format(&format)?, \"12:00:00\");","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":412819,"byte_end":412877,"line_start":609,"line_end":609,"column_start":5,"column_end":63}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":412882,"byte_end":412912,"line_start":610,"line_end":610,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":412917,"byte_end":412924,"line_start":611,"line_end":611,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2523},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":413551,"byte_end":413556,"line_start":631,"line_end":631,"column_start":12,"column_end":17},"name":"parse","qualname":"<Time>::parse","value":"fn parse<impl Parsable + ?Sized>(&str, &impl Parsable + ?Sized)\n-> Result<Self, error::Parse> where impl Parsable + ?Sized: Parsable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Parse a `Time` from the input using the provided [format\n description](crate::format_description).","sig":null,"attributes":[{"value":"/ Parse a `Time` from the input using the provided [format","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":413151,"byte_end":413211,"line_start":622,"line_end":622,"column_start":5,"column_end":65}},{"value":"/ description](crate::format_description).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":413216,"byte_end":413260,"line_start":623,"line_end":623,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":413265,"byte_end":413268,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":413273,"byte_end":413284,"line_start":625,"line_end":625,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::time, Time};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":413289,"byte_end":413346,"line_start":626,"line_end":626,"column_start":5,"column_end":62}},{"value":"/ let format = format_description::parse(\"[hour]:[minute]:[second]\")?;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":413351,"byte_end":413423,"line_start":627,"line_end":627,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(Time::parse(\"12:00:00\", &format)?, time!(12:00));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":413428,"byte_end":413492,"line_start":628,"line_end":628,"column_start":5,"column_end":69}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":413497,"byte_end":413527,"line_start":629,"line_end":629,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":413532,"byte_end":413539,"line_start":630,"line_end":630,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2526},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":413759,"byte_end":413762,"line_start":640,"line_end":640,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Time as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2529},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":415121,"byte_end":415124,"line_start":676,"line_end":676,"column_start":8,"column_end":11},"name":"add","qualname":"<Time as std::ops::Add>::add","value":"fn add(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":" Add the sub-day time of the [`Duration`] to the `Time`. Wraps on overflow.","sig":null,"attributes":[{"value":"/ Add the sub-day time of the [`Duration`] to the `Time`. Wraps on overflow.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":414809,"byte_end":414887,"line_start":669,"line_end":669,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":414892,"byte_end":414895,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":414900,"byte_end":414911,"line_start":671,"line_end":671,"column_start":5,"column_end":16}},{"value":"/ # use time::{ext::NumericalDuration, macros::time};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":414916,"byte_end":414971,"line_start":672,"line_end":672,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(time!(12:00) + 2.hours(), time!(14:00));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":414976,"byte_end":415031,"line_start":673,"line_end":673,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(time!(0:00:01) + (-2).seconds(), time!(23:59:59));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":415036,"byte_end":415101,"line_start":674,"line_end":674,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":415106,"byte_end":415113,"line_start":675,"line_end":675,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2532},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":415610,"byte_end":415613,"line_start":691,"line_end":691,"column_start":8,"column_end":11},"name":"add","qualname":"<Time as std::ops::Add>::add","value":"fn add(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":" Add the sub-day time of the [`std::time::Duration`] to the `Time`. Wraps on overflow.","sig":null,"attributes":[{"value":"/ Add the sub-day time of the [`std::time::Duration`] to the `Time`. Wraps on overflow.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":415279,"byte_end":415368,"line_start":684,"line_end":684,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":415373,"byte_end":415376,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":415381,"byte_end":415392,"line_start":686,"line_end":686,"column_start":5,"column_end":16}},{"value":"/ # use time::{ext::NumericalStdDuration, macros::time};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":415397,"byte_end":415455,"line_start":687,"line_end":687,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(time!(12:00) + 2.std_hours(), time!(14:00));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":415460,"byte_end":415519,"line_start":688,"line_end":688,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(time!(23:59:59) + 2.std_seconds(), time!(0:00:01));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":415524,"byte_end":415590,"line_start":689,"line_end":689,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":415595,"byte_end":415602,"line_start":690,"line_end":690,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2535},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":416139,"byte_end":416142,"line_start":708,"line_end":708,"column_start":8,"column_end":11},"name":"sub","qualname":"<Time as std::ops::Sub>::sub","value":"fn sub(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":" Subtract the sub-day time of the [`Duration`] from the `Time`. Wraps on overflow.","sig":null,"attributes":[{"value":"/ Subtract the sub-day time of the [`Duration`] from the `Time`. Wraps on overflow.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":415820,"byte_end":415905,"line_start":701,"line_end":701,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":415910,"byte_end":415913,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":415918,"byte_end":415929,"line_start":703,"line_end":703,"column_start":5,"column_end":16}},{"value":"/ # use time::{ext::NumericalDuration, macros::time};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":415934,"byte_end":415989,"line_start":704,"line_end":704,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(time!(14:00) - 2.hours(), time!(12:00));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":415994,"byte_end":416049,"line_start":705,"line_end":705,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(time!(23:59:59) - (-2).seconds(), time!(0:00:01));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":416054,"byte_end":416119,"line_start":706,"line_end":706,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":416124,"byte_end":416131,"line_start":707,"line_end":707,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2538},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":416635,"byte_end":416638,"line_start":723,"line_end":723,"column_start":8,"column_end":11},"name":"sub","qualname":"<Time as std::ops::Sub>::sub","value":"fn sub(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":" Subtract the sub-day time of the [`std::time::Duration`] from the `Time`. Wraps on overflow.","sig":null,"attributes":[{"value":"/ Subtract the sub-day time of the [`std::time::Duration`] from the `Time`. Wraps on overflow.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":416297,"byte_end":416393,"line_start":716,"line_end":716,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":416398,"byte_end":416401,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":416406,"byte_end":416417,"line_start":718,"line_end":718,"column_start":5,"column_end":16}},{"value":"/ # use time::{ext::NumericalStdDuration, macros::time};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":416422,"byte_end":416480,"line_start":719,"line_end":719,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(time!(14:00) - 2.std_hours(), time!(12:00));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":416485,"byte_end":416544,"line_start":720,"line_end":720,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(time!(0:00:01) - 2.std_seconds(), time!(23:59:59));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":416549,"byte_end":416615,"line_start":721,"line_end":721,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":416620,"byte_end":416627,"line_start":722,"line_end":722,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2541},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":417310,"byte_end":417313,"line_start":743,"line_end":743,"column_start":8,"column_end":11},"name":"sub","qualname":"<Time as std::ops::Sub>::sub","value":"fn sub(Self, Self) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":" Subtract two `Time`s, returning the [`Duration`] between. This assumes both `Time`s are in\n the same calendar day.","sig":null,"attributes":[{"value":"/ Subtract two `Time`s, returning the [`Duration`] between. This assumes both `Time`s are in","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":416839,"byte_end":416933,"line_start":733,"line_end":733,"column_start":5,"column_end":99}},{"value":"/ the same calendar day.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":416938,"byte_end":416964,"line_start":734,"line_end":734,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":416969,"byte_end":416972,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":416977,"byte_end":416988,"line_start":736,"line_end":736,"column_start":5,"column_end":16}},{"value":"/ # use time::{ext::NumericalDuration, macros::time};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":416993,"byte_end":417048,"line_start":737,"line_end":737,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(time!(0:00) - time!(0:00), 0.seconds());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":417053,"byte_end":417108,"line_start":738,"line_end":738,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(time!(1:00) - time!(0:00), 1.hours());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":417113,"byte_end":417166,"line_start":739,"line_end":739,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(time!(0:00) - time!(1:00), (-1).hours());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":417171,"byte_end":417227,"line_start":740,"line_end":740,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(time!(0:00) - time!(23:00), (-23).hours());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":417232,"byte_end":417290,"line_start":741,"line_end":741,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":417295,"byte_end":417302,"line_start":742,"line_end":742,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3995},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":418834,"byte_end":418843,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"name":"UtcOffset","qualname":"::utc_offset::UtcOffset","value":"UtcOffset {  }","parent":null,"children":[{"krate":0,"index":3996},{"krate":0,"index":3997},{"krate":0,"index":3998}],"decl_id":null,"docs":" An offset from UTC.","sig":null,"attributes":[{"value":"/ An offset from UTC.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":418540,"byte_end":418563,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":418564,"byte_end":418567,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This struct can store values up to ±23:59:59. If you need support outside this range, please","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":418568,"byte_end":418665,"line_start":20,"line_end":20,"column_start":1,"column_end":97}},{"value":"/ file an issue with your use case.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":418666,"byte_end":418703,"line_start":21,"line_end":21,"column_start":1,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":2562},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":419255,"byte_end":419258,"line_start":40,"line_end":40,"column_start":15,"column_end":18},"name":"UTC","qualname":"::utc_offset::UtcOffset::UTC","value":"Self","parent":{"krate":0,"index":2561},"children":[],"decl_id":null,"docs":" A `UtcOffset` that is UTC.","sig":null,"attributes":[{"value":"/ A `UtcOffset` that is UTC.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":419075,"byte_end":419105,"line_start":34,"line_end":34,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":419110,"byte_end":419113,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":419118,"byte_end":419129,"line_start":36,"line_end":36,"column_start":5,"column_end":16}},{"value":"/ # use time::{UtcOffset, macros::offset};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":419134,"byte_end":419178,"line_start":37,"line_end":37,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(UtcOffset::UTC, offset!(UTC));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":419183,"byte_end":419228,"line_start":38,"line_end":38,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":419233,"byte_end":419240,"line_start":39,"line_end":39,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2563},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":419584,"byte_end":419604,"line_start":47,"line_end":47,"column_start":18,"column_end":38},"name":"__from_hms_unchecked","qualname":"<UtcOffset>::__from_hms_unchecked","value":"const fn __from_hms_unchecked(i8, i8, i8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `UtcOffset` representing an offset of the hours, minutes, and seconds provided, the\n validity of which must be guaranteed by the caller. All three parameters must have the same\n sign.\n","sig":null,"attributes":[{"value":"/ Create a `UtcOffset` representing an offset of the hours, minutes, and seconds provided, the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":419337,"byte_end":419433,"line_start":43,"line_end":43,"column_start":5,"column_end":101}},{"value":"/ validity of which must be guaranteed by the caller. All three parameters must have the same","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":419438,"byte_end":419533,"line_start":44,"line_end":44,"column_start":5,"column_end":100}},{"value":"/ sign.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":419538,"byte_end":419547,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2564},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":420795,"byte_end":420803,"line_start":83,"line_end":83,"column_start":18,"column_end":26},"name":"from_hms","qualname":"<UtcOffset>::from_hms","value":"const fn from_hms(i8, i8, i8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Create a `UtcOffset` representing an offset by the number of hours, minutes, and seconds\n provided.","sig":null,"attributes":[{"value":"/ Create a `UtcOffset` representing an offset by the number of hours, minutes, and seconds","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":420280,"byte_end":420372,"line_start":71,"line_end":71,"column_start":5,"column_end":97}},{"value":"/ provided.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":420377,"byte_end":420390,"line_start":72,"line_end":72,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":420395,"byte_end":420398,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ The sign of all three components should match. If they do not, all smaller components will","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":420403,"byte_end":420497,"line_start":74,"line_end":74,"column_start":5,"column_end":99}},{"value":"/ have their signs flipped.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":420502,"byte_end":420531,"line_start":75,"line_end":75,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":420536,"byte_end":420539,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":420544,"byte_end":420555,"line_start":77,"line_end":77,"column_start":5,"column_end":16}},{"value":"/ # use time::UtcOffset;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":420560,"byte_end":420586,"line_start":78,"line_end":78,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(UtcOffset::from_hms(1, 2, 3)?.as_hms(), (1, 2, 3));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":420591,"byte_end":420657,"line_start":79,"line_end":79,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(UtcOffset::from_hms(1, -2, -3)?.as_hms(), (1, 2, 3));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":420662,"byte_end":420730,"line_start":80,"line_end":80,"column_start":5,"column_end":73}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":420735,"byte_end":420765,"line_start":81,"line_end":81,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":420770,"byte_end":420777,"line_start":82,"line_end":82,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2565},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":421761,"byte_end":421779,"line_start":113,"line_end":113,"column_start":18,"column_end":36},"name":"from_whole_seconds","qualname":"<UtcOffset>::from_whole_seconds","value":"const fn from_whole_seconds(i32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Create a `UtcOffset` representing an offset by the number of seconds provided.","sig":null,"attributes":[{"value":"/ Create a `UtcOffset` representing an offset by the number of seconds provided.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":421480,"byte_end":421562,"line_start":106,"line_end":106,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":421567,"byte_end":421570,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":421575,"byte_end":421586,"line_start":108,"line_end":108,"column_start":5,"column_end":16}},{"value":"/ # use time::UtcOffset;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":421591,"byte_end":421617,"line_start":109,"line_end":109,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(UtcOffset::from_whole_seconds(3_723)?.as_hms(), (1, 2, 3));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":421622,"byte_end":421696,"line_start":110,"line_end":110,"column_start":5,"column_end":79}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":421701,"byte_end":421731,"line_start":111,"line_end":111,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":421736,"byte_end":421743,"line_start":112,"line_end":112,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2566},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":422527,"byte_end":422533,"line_start":133,"line_end":133,"column_start":18,"column_end":24},"name":"as_hms","qualname":"<UtcOffset>::as_hms","value":"const fn as_hms(Self) -> (i8, i8, i8)","parent":null,"children":[],"decl_id":null,"docs":" Obtain the UTC offset as its hours, minutes, and seconds. The sign of all three components\n will always match. A positive value indicates an offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the UTC offset as its hours, minutes, and seconds. The sign of all three components","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":422121,"byte_end":422215,"line_start":125,"line_end":125,"column_start":5,"column_end":99}},{"value":"/ will always match. A positive value indicates an offset to the east; a negative to the west.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":422220,"byte_end":422316,"line_start":126,"line_end":126,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":422321,"byte_end":422324,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":422329,"byte_end":422340,"line_start":128,"line_end":128,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":422345,"byte_end":422376,"line_start":129,"line_end":129,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).as_hms(), (1, 2, 3));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":422381,"byte_end":422435,"line_start":130,"line_end":130,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(offset!(-1:02:03).as_hms(), (-1, -2, -3));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":422440,"byte_end":422497,"line_start":131,"line_end":131,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":422502,"byte_end":422509,"line_start":132,"line_end":132,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2567},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":422963,"byte_end":422974,"line_start":145,"line_end":145,"column_start":18,"column_end":29},"name":"whole_hours","qualname":"<UtcOffset>::whole_hours","value":"const fn whole_hours(Self) -> i8","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of whole hours the offset is from UTC. A positive value indicates an\n offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of whole hours the offset is from UTC. A positive value indicates an","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":422618,"byte_end":422708,"line_start":137,"line_end":137,"column_start":5,"column_end":95}},{"value":"/ offset to the east; a negative to the west.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":422713,"byte_end":422760,"line_start":138,"line_end":138,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":422765,"byte_end":422768,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":422773,"byte_end":422784,"line_start":140,"line_end":140,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":422789,"byte_end":422820,"line_start":141,"line_end":141,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).whole_hours(), 1);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":422825,"byte_end":422876,"line_start":142,"line_end":142,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(offset!(-1:02:03).whole_hours(), -1);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":422881,"byte_end":422933,"line_start":143,"line_end":143,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":422938,"byte_end":422945,"line_start":144,"line_end":144,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2568},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":423372,"byte_end":423385,"line_start":157,"line_end":157,"column_start":18,"column_end":31},"name":"whole_minutes","qualname":"<UtcOffset>::whole_minutes","value":"const fn whole_minutes(Self) -> i16","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of whole minutes the offset is from UTC. A positive value indicates an\n offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of whole minutes the offset is from UTC. A positive value indicates an","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":423019,"byte_end":423111,"line_start":149,"line_end":149,"column_start":5,"column_end":97}},{"value":"/ offset to the east; a negative to the west.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":423116,"byte_end":423163,"line_start":150,"line_end":150,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":423168,"byte_end":423171,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":423176,"byte_end":423187,"line_start":152,"line_end":152,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":423192,"byte_end":423223,"line_start":153,"line_end":153,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).whole_minutes(), 62);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":423228,"byte_end":423282,"line_start":154,"line_end":154,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(offset!(-1:02:03).whole_minutes(), -62);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":423287,"byte_end":423342,"line_start":155,"line_end":155,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":423347,"byte_end":423354,"line_start":156,"line_end":156,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2569},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":423832,"byte_end":423849,"line_start":169,"line_end":169,"column_start":18,"column_end":35},"name":"minutes_past_hour","qualname":"<UtcOffset>::minutes_past_hour","value":"const fn minutes_past_hour(Self) -> i8","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of minutes past the hour the offset is from UTC. A positive value\n indicates an offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of minutes past the hour the offset is from UTC. A positive value","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":423465,"byte_end":423552,"line_start":161,"line_end":161,"column_start":5,"column_end":92}},{"value":"/ indicates an offset to the east; a negative to the west.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":423557,"byte_end":423617,"line_start":162,"line_end":162,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":423622,"byte_end":423625,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":423630,"byte_end":423641,"line_start":164,"line_end":164,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":423646,"byte_end":423677,"line_start":165,"line_end":165,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).minutes_past_hour(), 2);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":423682,"byte_end":423739,"line_start":166,"line_end":166,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(offset!(-1:02:03).minutes_past_hour(), -2);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":423744,"byte_end":423802,"line_start":167,"line_end":167,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":423807,"byte_end":423814,"line_start":168,"line_end":168,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2570},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":424385,"byte_end":424398,"line_start":183,"line_end":183,"column_start":18,"column_end":31},"name":"whole_seconds","qualname":"<UtcOffset>::whole_seconds","value":"const fn whole_seconds(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of whole seconds the offset is from UTC. A positive value indicates an\n offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of whole seconds the offset is from UTC. A positive value indicates an","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":423896,"byte_end":423988,"line_start":173,"line_end":173,"column_start":5,"column_end":97}},{"value":"/ offset to the east; a negative to the west.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":423993,"byte_end":424040,"line_start":174,"line_end":174,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":424045,"byte_end":424048,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":424053,"byte_end":424064,"line_start":176,"line_end":176,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":424069,"byte_end":424100,"line_start":177,"line_end":177,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).whole_seconds(), 3723);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":424105,"byte_end":424161,"line_start":178,"line_end":178,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(offset!(-1:02:03).whole_seconds(), -3723);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":424166,"byte_end":424223,"line_start":179,"line_end":179,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":424228,"byte_end":424235,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2571},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":424881,"byte_end":424900,"line_start":195,"line_end":195,"column_start":18,"column_end":37},"name":"seconds_past_minute","qualname":"<UtcOffset>::seconds_past_minute","value":"const fn seconds_past_minute(Self) -> i8","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of seconds past the minute the offset is from UTC. A positive value\n indicates an offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of seconds past the minute the offset is from UTC. A positive value","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":424508,"byte_end":424597,"line_start":187,"line_end":187,"column_start":5,"column_end":94}},{"value":"/ indicates an offset to the east; a negative to the west.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":424602,"byte_end":424662,"line_start":188,"line_end":188,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":424667,"byte_end":424670,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":424675,"byte_end":424686,"line_start":190,"line_end":190,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":424691,"byte_end":424722,"line_start":191,"line_end":191,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).seconds_past_minute(), 3);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":424727,"byte_end":424786,"line_start":192,"line_end":192,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(offset!(-1:02:03).seconds_past_minute(), -3);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":424791,"byte_end":424851,"line_start":193,"line_end":193,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":424856,"byte_end":424863,"line_start":194,"line_end":194,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2572},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":425266,"byte_end":425272,"line_start":210,"line_end":210,"column_start":18,"column_end":24},"name":"is_utc","qualname":"<UtcOffset>::is_utc","value":"const fn is_utc(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the offset is exactly UTC.","sig":null,"attributes":[{"value":"/ Check if the offset is exactly UTC.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":424997,"byte_end":425036,"line_start":201,"line_end":201,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":425041,"byte_end":425044,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":425049,"byte_end":425052,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":425057,"byte_end":425068,"line_start":204,"line_end":204,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":425073,"byte_end":425104,"line_start":205,"line_end":205,"column_start":5,"column_end":36}},{"value":"/ assert!(!offset!(+1:02:03).is_utc());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":425109,"byte_end":425150,"line_start":206,"line_end":206,"column_start":5,"column_end":46}},{"value":"/ assert!(!offset!(-1:02:03).is_utc());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":425155,"byte_end":425196,"line_start":207,"line_end":207,"column_start":5,"column_end":46}},{"value":"/ assert!(offset!(UTC).is_utc());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":425201,"byte_end":425236,"line_start":208,"line_end":208,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":425241,"byte_end":425248,"line_start":209,"line_end":209,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2573},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":425655,"byte_end":425666,"line_start":222,"line_end":222,"column_start":18,"column_end":29},"name":"is_positive","qualname":"<UtcOffset>::is_positive","value":"const fn is_positive(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the offset is positive, or east of UTC.","sig":null,"attributes":[{"value":"/ Check if the offset is positive, or east of UTC.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":425366,"byte_end":425418,"line_start":214,"line_end":214,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":425423,"byte_end":425426,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":425431,"byte_end":425442,"line_start":216,"line_end":216,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":425447,"byte_end":425478,"line_start":217,"line_end":217,"column_start":5,"column_end":36}},{"value":"/ assert!(offset!(+1:02:03).is_positive());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":425483,"byte_end":425528,"line_start":218,"line_end":218,"column_start":5,"column_end":50}},{"value":"/ assert!(!offset!(-1:02:03).is_positive());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":425533,"byte_end":425579,"line_start":219,"line_end":219,"column_start":5,"column_end":51}},{"value":"/ assert!(!offset!(UTC).is_positive());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":425584,"byte_end":425625,"line_start":220,"line_end":220,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":425630,"byte_end":425637,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2574},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":426046,"byte_end":426057,"line_start":234,"line_end":234,"column_start":18,"column_end":29},"name":"is_negative","qualname":"<UtcOffset>::is_negative","value":"const fn is_negative(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the offset is negative, or west of UTC.","sig":null,"attributes":[{"value":"/ Check if the offset is negative, or west of UTC.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":425757,"byte_end":425809,"line_start":226,"line_end":226,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":425814,"byte_end":425817,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":425822,"byte_end":425833,"line_start":228,"line_end":228,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":425838,"byte_end":425869,"line_start":229,"line_end":229,"column_start":5,"column_end":36}},{"value":"/ assert!(!offset!(+1:02:03).is_negative());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":425874,"byte_end":425920,"line_start":230,"line_end":230,"column_start":5,"column_end":51}},{"value":"/ assert!(offset!(-1:02:03).is_negative());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":425925,"byte_end":425970,"line_start":231,"line_end":231,"column_start":5,"column_end":50}},{"value":"/ assert!(!offset!(UTC).is_negative());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":425975,"byte_end":426016,"line_start":232,"line_end":232,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":426021,"byte_end":426028,"line_start":233,"line_end":233,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2576},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":427574,"byte_end":427585,"line_start":277,"line_end":277,"column_start":12,"column_end":23},"name":"format_into","qualname":"<UtcOffset>::format_into","value":"fn format_into<impl io::Write,\nimpl Formattable + ?Sized>(Self, &mut impl io::Write,\n&impl Formattable + ?Sized) -> Result<usize, error::Format> where\nimpl io::Write: io::Write, impl Formattable + ?Sized: Formattable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Format the `UtcOffset` using the provided [format description](crate::format_description).\n","sig":null,"attributes":[{"value":"/ Format the `UtcOffset` using the provided [format description](crate::format_description).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":427468,"byte_end":427562,"line_start":276,"line_end":276,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":2579},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":428186,"byte_end":428192,"line_start":293,"line_end":293,"column_start":12,"column_end":18},"name":"format","qualname":"<UtcOffset>::format","value":"fn format<impl Formattable + ?Sized>(Self, &impl Formattable + ?Sized)\n-> Result<String, error::Format> where\nimpl Formattable + ?Sized: Formattable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Format the `UtcOffset` using the provided [format description](crate::format_description).","sig":null,"attributes":[{"value":"/ Format the `UtcOffset` using the provided [format description](crate::format_description).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":427794,"byte_end":427888,"line_start":285,"line_end":285,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":427893,"byte_end":427896,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":427901,"byte_end":427912,"line_start":287,"line_end":287,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::offset};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":427917,"byte_end":427970,"line_start":288,"line_end":288,"column_start":5,"column_end":58}},{"value":"/ let format = format_description::parse(\"[offset_hour sign:mandatory]:[offset_minute]\")?;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":427975,"byte_end":428067,"line_start":289,"line_end":289,"column_start":5,"column_end":97}},{"value":"/ assert_eq!(offset!(+1).format(&format)?, \"+01:00\");","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":428072,"byte_end":428127,"line_start":290,"line_end":290,"column_start":5,"column_end":60}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":428132,"byte_end":428162,"line_start":291,"line_end":291,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":428167,"byte_end":428174,"line_start":292,"line_end":292,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2582},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":428798,"byte_end":428803,"line_start":309,"line_end":309,"column_start":12,"column_end":17},"name":"parse","qualname":"<UtcOffset>::parse","value":"fn parse<impl Parsable + ?Sized>(&str, &impl Parsable + ?Sized)\n-> Result<Self, error::Parse> where impl Parsable + ?Sized: Parsable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Parse a `UtcOffset` from the input using the provided [format\n description](crate::format_description).","sig":null,"attributes":[{"value":"/ Parse a `UtcOffset` from the input using the provided [format","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":428376,"byte_end":428441,"line_start":300,"line_end":300,"column_start":5,"column_end":70}},{"value":"/ description](crate::format_description).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":428446,"byte_end":428490,"line_start":301,"line_end":301,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":428495,"byte_end":428498,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":428503,"byte_end":428514,"line_start":303,"line_end":303,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::offset, UtcOffset};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":428519,"byte_end":428583,"line_start":304,"line_end":304,"column_start":5,"column_end":69}},{"value":"/ let format = format_description::parse(\"[offset_hour]:[offset_minute]\")?;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":428588,"byte_end":428665,"line_start":305,"line_end":305,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(UtcOffset::parse(\"-03:42\", &format)?, offset!(-3:42));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":428670,"byte_end":428739,"line_start":306,"line_end":306,"column_start":5,"column_end":74}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":428744,"byte_end":428774,"line_start":307,"line_end":307,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":428779,"byte_end":428786,"line_start":308,"line_end":308,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2585},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":429013,"byte_end":429016,"line_start":318,"line_end":318,"column_start":8,"column_end":11},"name":"fmt","qualname":"<UtcOffset as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2588},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":429394,"byte_end":429397,"line_start":334,"line_end":334,"column_start":8,"column_end":11},"name":"neg","qualname":"<UtcOffset as std::ops::Neg>::neg","value":"fn neg(Self) -> Self::Output","parent":{"krate":2,"index":3245},"children":[],"decl_id":{"krate":2,"index":3247},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2589},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"util","qualname":"::util","value":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","parent":null,"children":[{"krate":0,"index":2590},{"krate":0,"index":2593},{"krate":0,"index":2600},{"krate":0,"index":2602},{"krate":0,"index":2603},{"krate":0,"index":2604}],"decl_id":null,"docs":" Utility functions.\n","sig":null,"attributes":[{"value":"/ Utility functions.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":429509,"byte_end":429531,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":2600},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":430026,"byte_end":430044,"line_start":21,"line_end":21,"column_start":14,"column_end":32},"name":"days_in_year_month","qualname":"::util::days_in_year_month","value":"const fn days_in_year_month(i32, Month) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the number of days in the month of a given year.","sig":null,"attributes":[{"value":"/ Get the number of days in the month of a given year.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":429832,"byte_end":429888,"line_start":15,"line_end":15,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":429889,"byte_end":429892,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":429893,"byte_end":429904,"line_start":17,"line_end":17,"column_start":1,"column_end":12}},{"value":"/ # use time::{Month, util};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":429905,"byte_end":429935,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(util::days_in_year_month(2020, Month::February), 29);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":429936,"byte_end":430004,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":430005,"byte_end":430012,"line_start":20,"line_end":20,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2602},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":430743,"byte_end":430755,"line_start":42,"line_end":42,"column_start":14,"column_end":26},"name":"is_leap_year","qualname":"::util::is_leap_year","value":"const fn is_leap_year(i32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the provided year is a leap year in the proleptic Gregorian calendar. Uses\n [astronomical year numbering](https://en.wikipedia.org/wiki/Astronomical_year_numbering).","sig":null,"attributes":[{"value":"/ Returns if the provided year is a leap year in the proleptic Gregorian calendar. Uses","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":430318,"byte_end":430407,"line_start":31,"line_end":31,"column_start":1,"column_end":90}},{"value":"/ [astronomical year numbering](https://en.wikipedia.org/wiki/Astronomical_year_numbering).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":430408,"byte_end":430501,"line_start":32,"line_end":32,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":430502,"byte_end":430505,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":430506,"byte_end":430517,"line_start":34,"line_end":34,"column_start":1,"column_end":12}},{"value":"/ # use time::util::is_leap_year;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":430518,"byte_end":430553,"line_start":35,"line_end":35,"column_start":1,"column_end":36}},{"value":"/ assert!(!is_leap_year(1900));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":430554,"byte_end":430587,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ assert!(is_leap_year(2000));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":430588,"byte_end":430620,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/ assert!(is_leap_year(2004));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":430621,"byte_end":430653,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"/ assert!(!is_leap_year(2005));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":430654,"byte_end":430687,"line_start":39,"line_end":39,"column_start":1,"column_end":34}},{"value":"/ assert!(!is_leap_year(2100));","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":430688,"byte_end":430721,"line_start":40,"line_end":40,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":430722,"byte_end":430729,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2603},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":431228,"byte_end":431240,"line_start":58,"line_end":58,"column_start":14,"column_end":26},"name":"days_in_year","qualname":"::util::days_in_year","value":"const fn days_in_year(i32) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the number of calendar days in a given year.","sig":null,"attributes":[{"value":"/ Get the number of calendar days in a given year.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":430836,"byte_end":430888,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":430889,"byte_end":430892,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The returned value will always be either 365 or 366.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":430893,"byte_end":430949,"line_start":48,"line_end":48,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":430950,"byte_end":430953,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":430954,"byte_end":430965,"line_start":50,"line_end":50,"column_start":1,"column_end":12}},{"value":"/ # use time::util::days_in_year;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":430966,"byte_end":431001,"line_start":51,"line_end":51,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(days_in_year(1900), 365);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":431002,"byte_end":431042,"line_start":52,"line_end":52,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(days_in_year(2000), 366);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":431043,"byte_end":431083,"line_start":53,"line_end":53,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(days_in_year(2004), 366);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":431084,"byte_end":431124,"line_start":54,"line_end":54,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(days_in_year(2005), 365);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":431125,"byte_end":431165,"line_start":55,"line_end":55,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(days_in_year(2100), 365);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":431166,"byte_end":431206,"line_start":56,"line_end":56,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":431207,"byte_end":431214,"line_start":57,"line_end":57,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2604},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":431571,"byte_end":431584,"line_start":71,"line_end":71,"column_start":14,"column_end":27},"name":"weeks_in_year","qualname":"::util::weeks_in_year","value":"const fn weeks_in_year(i32) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the number of weeks in the ISO year.","sig":null,"attributes":[{"value":"/ Get the number of weeks in the ISO year.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":431311,"byte_end":431355,"line_start":62,"line_end":62,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":431356,"byte_end":431359,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ The returned value will always be either 52 or 53.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":431360,"byte_end":431414,"line_start":64,"line_end":64,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":431415,"byte_end":431418,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":431419,"byte_end":431430,"line_start":66,"line_end":66,"column_start":1,"column_end":12}},{"value":"/ # use time::util::weeks_in_year;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":431431,"byte_end":431467,"line_start":67,"line_end":67,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(weeks_in_year(2019), 52);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":431468,"byte_end":431508,"line_start":68,"line_end":68,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(weeks_in_year(2020), 53);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":431509,"byte_end":431549,"line_start":69,"line_end":69,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/util.rs","byte_start":431550,"byte_end":431557,"line_start":70,"line_end":70,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4019},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":432543,"byte_end":432549,"line_start":17,"line_end":17,"column_start":5,"column_end":11},"name":"Monday","qualname":"::weekday::Weekday::Monday","value":"Weekday::Monday","parent":{"krate":0,"index":4018},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":432491,"byte_end":432538,"line_start":16,"line_end":16,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4021},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":432607,"byte_end":432614,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"Tuesday","qualname":"::weekday::Weekday::Tuesday","value":"Weekday::Tuesday","parent":{"krate":0,"index":4018},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":432555,"byte_end":432602,"line_start":18,"line_end":18,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4023},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":432672,"byte_end":432681,"line_start":21,"line_end":21,"column_start":5,"column_end":14},"name":"Wednesday","qualname":"::weekday::Weekday::Wednesday","value":"Weekday::Wednesday","parent":{"krate":0,"index":4018},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":432620,"byte_end":432667,"line_start":20,"line_end":20,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4025},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":432739,"byte_end":432747,"line_start":23,"line_end":23,"column_start":5,"column_end":13},"name":"Thursday","qualname":"::weekday::Weekday::Thursday","value":"Weekday::Thursday","parent":{"krate":0,"index":4018},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":432687,"byte_end":432734,"line_start":22,"line_end":22,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4027},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":432805,"byte_end":432811,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Friday","qualname":"::weekday::Weekday::Friday","value":"Weekday::Friday","parent":{"krate":0,"index":4018},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":432753,"byte_end":432800,"line_start":24,"line_end":24,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4029},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":432869,"byte_end":432877,"line_start":27,"line_end":27,"column_start":5,"column_end":13},"name":"Saturday","qualname":"::weekday::Weekday::Saturday","value":"Weekday::Saturday","parent":{"krate":0,"index":4018},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":432817,"byte_end":432864,"line_start":26,"line_end":26,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4031},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":432935,"byte_end":432941,"line_start":29,"line_end":29,"column_start":5,"column_end":11},"name":"Sunday","qualname":"::weekday::Weekday::Sunday","value":"Weekday::Sunday","parent":{"krate":0,"index":4018},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":432883,"byte_end":432930,"line_start":28,"line_end":28,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":4018},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":432477,"byte_end":432484,"line_start":15,"line_end":15,"column_start":10,"column_end":17},"name":"Weekday","qualname":"::weekday::Weekday","value":"enum Weekday {\n    Monday,\n    Tuesday,\n    Wednesday,\n    Thursday,\n    Friday,\n    Saturday,\n    Sunday,\n}","parent":null,"children":[{"krate":0,"index":4019},{"krate":0,"index":4021},{"krate":0,"index":4023},{"krate":0,"index":4025},{"krate":0,"index":4027},{"krate":0,"index":4029},{"krate":0,"index":4031}],"decl_id":null,"docs":" Days of the week.","sig":null,"attributes":[{"value":"/ Days of the week.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":432230,"byte_end":432251,"line_start":10,"line_end":10,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":432252,"byte_end":432255,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ As order is dependent on context (Sunday could be either two days after or five days before","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":432256,"byte_end":432351,"line_start":12,"line_end":12,"column_start":1,"column_end":96}},{"value":"/ Friday), this type does not implement `PartialOrd` or `Ord`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":432352,"byte_end":432416,"line_start":13,"line_end":13,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2621},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":433143,"byte_end":433151,"line_start":39,"line_end":39,"column_start":18,"column_end":26},"name":"previous","qualname":"<Weekday>::previous","value":"const fn previous(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the previous weekday.","sig":null,"attributes":[{"value":"/ Get the previous weekday.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":432965,"byte_end":432994,"line_start":33,"line_end":33,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":432999,"byte_end":433002,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":433007,"byte_end":433018,"line_start":35,"line_end":35,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":433023,"byte_end":433047,"line_start":36,"line_end":36,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Tuesday.previous(), Weekday::Monday);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":433052,"byte_end":433113,"line_start":37,"line_end":37,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":433118,"byte_end":433125,"line_start":38,"line_end":38,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2622},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":433606,"byte_end":433610,"line_start":57,"line_end":57,"column_start":18,"column_end":22},"name":"next","qualname":"<Weekday>::next","value":"const fn next(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the next weekday.","sig":null,"attributes":[{"value":"/ Get the next weekday.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":433436,"byte_end":433461,"line_start":51,"line_end":51,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":433466,"byte_end":433469,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":433474,"byte_end":433485,"line_start":53,"line_end":53,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":433490,"byte_end":433514,"line_start":54,"line_end":54,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.next(), Weekday::Tuesday);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":433519,"byte_end":433576,"line_start":55,"line_end":55,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":433581,"byte_end":433588,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2623},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":434131,"byte_end":434149,"line_start":76,"line_end":76,"column_start":18,"column_end":36},"name":"number_from_monday","qualname":"<Weekday>::number_from_monday","value":"const fn number_from_monday(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the one-indexed number of days from Monday.","sig":null,"attributes":[{"value":"/ Get the one-indexed number of days from Monday.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":433895,"byte_end":433946,"line_start":69,"line_end":69,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":433951,"byte_end":433954,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":433959,"byte_end":433970,"line_start":71,"line_end":71,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":433975,"byte_end":433999,"line_start":72,"line_end":72,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.number_from_monday(), 1);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":434004,"byte_end":434060,"line_start":73,"line_end":73,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":434065,"byte_end":434072,"line_start":74,"line_end":74,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2624},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":434413,"byte_end":434431,"line_start":86,"line_end":86,"column_start":18,"column_end":36},"name":"number_from_sunday","qualname":"<Weekday>::number_from_sunday","value":"const fn number_from_sunday(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the one-indexed number of days from Sunday.","sig":null,"attributes":[{"value":"/ Get the one-indexed number of days from Sunday.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":434218,"byte_end":434269,"line_start":80,"line_end":80,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":434274,"byte_end":434277,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":434282,"byte_end":434293,"line_start":82,"line_end":82,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":434298,"byte_end":434322,"line_start":83,"line_end":83,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.number_from_sunday(), 2);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":434327,"byte_end":434383,"line_start":84,"line_end":84,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":434388,"byte_end":434395,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2625},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":434701,"byte_end":434724,"line_start":96,"line_end":96,"column_start":18,"column_end":41},"name":"number_days_from_monday","qualname":"<Weekday>::number_days_from_monday","value":"const fn number_days_from_monday(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the zero-indexed number of days from Monday.","sig":null,"attributes":[{"value":"/ Get the zero-indexed number of days from Monday.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":434500,"byte_end":434552,"line_start":90,"line_end":90,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":434557,"byte_end":434560,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":434565,"byte_end":434576,"line_start":92,"line_end":92,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":434581,"byte_end":434605,"line_start":93,"line_end":93,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.number_days_from_monday(), 0);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":434610,"byte_end":434671,"line_start":94,"line_end":94,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":434676,"byte_end":434683,"line_start":95,"line_end":95,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2626},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":434969,"byte_end":434992,"line_start":106,"line_end":106,"column_start":18,"column_end":41},"name":"number_days_from_sunday","qualname":"<Weekday>::number_days_from_sunday","value":"const fn number_days_from_sunday(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the zero-indexed number of days from Sunday.","sig":null,"attributes":[{"value":"/ Get the zero-indexed number of days from Sunday.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":434768,"byte_end":434820,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":434825,"byte_end":434828,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":434833,"byte_end":434844,"line_start":102,"line_end":102,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":434849,"byte_end":434873,"line_start":103,"line_end":103,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.number_days_from_sunday(), 1);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":434878,"byte_end":434939,"line_start":104,"line_end":104,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":434944,"byte_end":434951,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2628},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":435264,"byte_end":435267,"line_start":120,"line_end":120,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Weekday as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2631},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":435686,"byte_end":435694,"line_start":136,"line_end":136,"column_start":8,"column_end":16},"name":"from_str","qualname":"<Weekday as std::str::FromStr>::from_str","value":"fn from_str(&str) -> Result<Self, Self::Err>","parent":{"krate":2,"index":12556},"children":[],"decl_id":{"krate":2,"index":12558},"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2662},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":10703,"byte_end":10709,"line_start":326,"line_end":326,"column_start":10,"column_end":16},"name":"Result","qualname":"::Result","value":"core::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" An alias for [`std::result::Result`] with a generic error from the time crate.\n","sig":null,"attributes":[{"value":"/ An alias for [`std::result::Result`] with a generic error from the time crate.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":10611,"byte_end":10693,"line_start":325,"line_end":325,"column_start":1,"column_end":83}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":12182,"byte_end":12186,"line_start":44,"line_end":44,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":12418,"byte_end":12422,"line_start":53,"line_end":53,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":40116,"byte_end":40120,"line_start":814,"line_end":814,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":43607,"byte_end":43611,"line_start":922,"line_end":922,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":44488,"byte_end":44492,"line_start":946,"line_end":946,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":45100,"byte_end":45104,"line_start":964,"line_end":964,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":45784,"byte_end":45788,"line_start":989,"line_end":989,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":45997,"byte_end":46001,"line_start":998,"line_end":998,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":46314,"byte_end":46318,"line_start":1009,"line_end":1009,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":46534,"byte_end":46538,"line_start":1018,"line_end":1018,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":46848,"byte_end":46852,"line_start":1029,"line_end":1029,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":47656,"byte_end":47663,"line_start":22,"line_end":22,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":48375,"byte_end":48383,"line_start":44,"line_end":44,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":48618,"byte_end":48626,"line_start":53,"line_end":53,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":75086,"byte_end":75094,"line_start":772,"line_end":772,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":77360,"byte_end":77368,"line_start":839,"line_end":839,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":77736,"byte_end":77747,"line_start":853,"line_end":853,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":78187,"byte_end":78195,"line_start":870,"line_end":870,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":78388,"byte_end":78396,"line_start":879,"line_end":879,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":78647,"byte_end":78658,"line_start":888,"line_end":888,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":263},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":78845,"byte_end":78856,"line_start":898,"line_end":898,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":79115,"byte_end":79123,"line_start":907,"line_end":907,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":79270,"byte_end":79278,"line_start":915,"line_end":915,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":271},{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":79476,"byte_end":79484,"line_start":924,"line_end":924,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":79717,"byte_end":79728,"line_start":933,"line_end":933,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":80032,"byte_end":80043,"line_start":945,"line_end":945,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":81299,"byte_end":81307,"line_start":988,"line_end":988,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":81598,"byte_end":81606,"line_start":1004,"line_end":1004,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":81964,"byte_end":81972,"line_start":1022,"line_end":1022,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":82127,"byte_end":82135,"line_start":1030,"line_end":1030,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":82352,"byte_end":82360,"line_start":1040,"line_end":1040,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":82521,"byte_end":82529,"line_start":1048,"line_end":1048,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":82691,"byte_end":82702,"line_start":1056,"line_end":1056,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":82870,"byte_end":82878,"line_start":1064,"line_end":1064,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":83007,"byte_end":83018,"line_start":1070,"line_end":1070,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":83126,"byte_end":83134,"line_start":1076,"line_end":1076,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":83512,"byte_end":83523,"line_start":1090,"line_end":1090,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":83665,"byte_end":83673,"line_start":1096,"line_end":1096,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":83822,"byte_end":83830,"line_start":1102,"line_end":1102,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/component_range.rs","byte_start":89009,"byte_end":89023,"line_start":25,"line_end":25,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":335},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/component_range.rs","byte_start":89455,"byte_end":89469,"line_start":38,"line_end":38,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/component_range.rs","byte_start":89848,"byte_end":89853,"line_start":54,"line_end":54,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/component_range.rs","byte_start":89983,"byte_end":89997,"line_start":60,"line_end":60,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/component_range.rs","byte_start":90922,"byte_end":90936,"line_start":92,"line_end":92,"column_start":28,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/conversion_range.rs","byte_start":91217,"byte_end":91232,"line_start":12,"line_end":12,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/conversion_range.rs","byte_start":91430,"byte_end":91445,"line_start":19,"line_end":19,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/conversion_range.rs","byte_start":91488,"byte_end":91493,"line_start":21,"line_end":21,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/conversion_range.rs","byte_start":91615,"byte_end":91630,"line_start":27,"line_end":27,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/different_variant.rs","byte_start":92172,"byte_end":92188,"line_start":10,"line_end":10,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/different_variant.rs","byte_start":92382,"byte_end":92398,"line_start":17,"line_end":17,"column_start":28,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/different_variant.rs","byte_start":92442,"byte_end":92447,"line_start":19,"line_end":19,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/different_variant.rs","byte_start":92571,"byte_end":92587,"line_start":25,"line_end":25,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":370},{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/format.rs","byte_start":93543,"byte_end":93549,"line_start":25,"line_end":25,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/format.rs","byte_start":94127,"byte_end":94133,"line_start":42,"line_end":42,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/format.rs","byte_start":94237,"byte_end":94242,"line_start":48,"line_end":48,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/format.rs","byte_start":94528,"byte_end":94534,"line_start":60,"line_end":60,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/format.rs","byte_start":94868,"byte_end":94873,"line_start":70,"line_end":70,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/format.rs","byte_start":95049,"byte_end":95055,"line_start":77,"line_end":77,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_format_description.rs","byte_start":97022,"byte_end":97027,"line_start":50,"line_end":50,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_format_description.rs","byte_start":97299,"byte_end":97323,"line_start":60,"line_end":60,"column_start":32,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":409},{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_format_description.rs","byte_start":97611,"byte_end":97635,"line_start":71,"line_end":71,"column_start":23,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_format_description.rs","byte_start":98445,"byte_end":98469,"line_start":94,"line_end":94,"column_start":28,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_variant.rs","byte_start":98739,"byte_end":98753,"line_start":10,"line_end":10,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_variant.rs","byte_start":98930,"byte_end":98944,"line_start":17,"line_end":17,"column_start":28,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_variant.rs","byte_start":98986,"byte_end":98991,"line_start":19,"line_end":19,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_variant.rs","byte_start":99111,"byte_end":99125,"line_start":25,"line_end":25,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":425},{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse.rs","byte_start":100093,"byte_end":100098,"line_start":22,"line_end":22,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse.rs","byte_start":100463,"byte_end":100468,"line_start":33,"line_end":33,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse.rs","byte_start":100833,"byte_end":100838,"line_start":44,"line_end":44,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse.rs","byte_start":101008,"byte_end":101021,"line_start":51,"line_end":51,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":448},{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse.rs","byte_start":101357,"byte_end":101362,"line_start":63,"line_end":63,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse.rs","byte_start":101546,"byte_end":101566,"line_start":70,"line_end":70,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse.rs","byte_start":101901,"byte_end":101906,"line_start":82,"line_end":82,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse.rs","byte_start":102307,"byte_end":102312,"line_start":93,"line_end":93,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":458},{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse_from_description.rs","byte_start":103343,"byte_end":103363,"line_start":19,"line_end":19,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse_from_description.rs","byte_start":103740,"byte_end":103760,"line_start":31,"line_end":31,"column_start":28,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse_from_description.rs","byte_start":103867,"byte_end":103872,"line_start":34,"line_end":34,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse_from_description.rs","byte_start":104073,"byte_end":104093,"line_start":41,"line_end":41,"column_start":32,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":473},{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/try_from_parsed.rs","byte_start":104990,"byte_end":105003,"line_start":19,"line_end":19,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/try_from_parsed.rs","byte_start":105368,"byte_end":105381,"line_start":30,"line_end":30,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/try_from_parsed.rs","byte_start":105512,"byte_end":105526,"line_start":36,"line_end":36,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":487},{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/try_from_parsed.rs","byte_start":105835,"byte_end":105848,"line_start":48,"line_end":48,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/try_from_parsed.rs","byte_start":106158,"byte_end":106163,"line_start":58,"line_end":58,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/try_from_parsed.rs","byte_start":106350,"byte_end":106363,"line_start":65,"line_end":65,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":494},{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":86274,"byte_end":86279,"line_start":67,"line_end":67,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":87290,"byte_end":87295,"line_start":91,"line_end":91,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":121957,"byte_end":121971,"line_start":78,"line_end":78,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":641},{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":139425,"byte_end":139434,"line_start":385,"line_end":385,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":157700,"byte_end":157707,"line_start":21,"line_end":21,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":159127,"byte_end":159133,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":751},{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":150579,"byte_end":150586,"line_start":48,"line_end":48,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":150796,"byte_end":150803,"line_start":56,"line_end":56,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":151572,"byte_end":151579,"line_start":74,"line_end":74,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":772}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":154643,"byte_end":154649,"line_start":164,"line_end":164,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":117825,"byte_end":117835,"line_start":77,"line_end":77,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":793}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":118367,"byte_end":118377,"line_start":89,"line_end":89,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":795}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":118505,"byte_end":118514,"line_start":95,"line_end":95,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":797},{"krate":0,"index":798}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":118821,"byte_end":118831,"line_start":106,"line_end":106,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":119286,"byte_end":119296,"line_start":123,"line_end":123,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":119468,"byte_end":119477,"line_start":129,"line_end":129,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":119596,"byte_end":119606,"line_start":135,"line_end":135,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/formatting/formattable.rs","byte_start":185810,"byte_end":185820,"line_start":17,"line_end":17,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/formatting/formattable.rs","byte_start":185890,"byte_end":185897,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/formatting/formattable.rs","byte_start":185922,"byte_end":185929,"line_start":20,"line_end":20,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/formatting/formattable.rs","byte_start":185983,"byte_end":185990,"line_start":21,"line_end":21,"column_start":51,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/formatting/formattable.rs","byte_start":186033,"byte_end":186034,"line_start":22,"line_end":22,"column_start":32,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/formatting/formattable.rs","byte_start":187191,"byte_end":187201,"line_start":56,"line_end":56,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":887}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/formatting/formattable.rs","byte_start":188402,"byte_end":188403,"line_start":93,"line_end":93,"column_start":35,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":895}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/formatting/formattable.rs","byte_start":188798,"byte_end":188805,"line_start":110,"line_end":110,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":898}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/formatting/formattable.rs","byte_start":190762,"byte_end":190769,"line_start":159,"line_end":159,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/formatting/formattable.rs","byte_start":194095,"byte_end":194102,"line_start":241,"line_end":241,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":929}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":202705,"byte_end":202712,"line_start":33,"line_end":33,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1160}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":205649,"byte_end":205656,"line_start":117,"line_end":117,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1162}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":205756,"byte_end":205766,"line_start":123,"line_end":123,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1164}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":205849,"byte_end":205856,"line_start":129,"line_end":129,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1166},{"krate":0,"index":1167}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":206392,"byte_end":206399,"line_start":144,"line_end":144,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1169},{"krate":0,"index":1170}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":206543,"byte_end":206553,"line_start":152,"line_end":152,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1172},{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":206698,"byte_end":206705,"line_start":160,"line_end":160,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1175},{"krate":0,"index":1176}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":207092,"byte_end":207102,"line_start":175,"line_end":175,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1178},{"krate":0,"index":1179}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":207257,"byte_end":207264,"line_start":183,"line_end":183,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1181},{"krate":0,"index":1182}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":207505,"byte_end":207512,"line_start":194,"line_end":194,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1184},{"krate":0,"index":1185}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":207899,"byte_end":207909,"line_start":209,"line_end":209,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1187},{"krate":0,"index":1188}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":208064,"byte_end":208071,"line_start":217,"line_end":217,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1190},{"krate":0,"index":1191}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":208320,"byte_end":208327,"line_start":228,"line_end":228,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1193}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":208435,"byte_end":208445,"line_start":234,"line_end":234,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1195}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":208555,"byte_end":208562,"line_start":240,"line_end":240,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1197}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":208701,"byte_end":208711,"line_start":246,"line_end":246,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1199}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":208846,"byte_end":208853,"line_start":252,"line_end":252,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1201}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":208947,"byte_end":208954,"line_start":258,"line_end":258,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1203}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/month.rs","byte_start":214959,"byte_end":214964,"line_start":29,"line_end":29,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1237}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/month.rs","byte_start":216943,"byte_end":216948,"line_start":102,"line_end":102,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1239}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/month.rs","byte_start":217472,"byte_end":217477,"line_start":121,"line_end":121,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1241},{"krate":0,"index":1242}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/month.rs","byte_start":218202,"byte_end":218207,"line_start":149,"line_end":149,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1246},{"krate":0,"index":1247}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":219848,"byte_end":219862,"line_start":38,"line_end":38,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1324},{"krate":0,"index":1325},{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1338},{"krate":0,"index":1339},{"krate":0,"index":1340},{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1343},{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":1346},{"krate":0,"index":1347},{"krate":0,"index":1348},{"krate":0,"index":1349},{"krate":0,"index":1350},{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":1353},{"krate":0,"index":1354},{"krate":0,"index":1355},{"krate":0,"index":1356},{"krate":0,"index":1357},{"krate":0,"index":1358},{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1362}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":246511,"byte_end":246525,"line_start":816,"line_end":816,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1375},{"krate":0,"index":1376}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":255512,"byte_end":255526,"line_start":1044,"line_end":1044,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1378},{"krate":0,"index":1381}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":256768,"byte_end":256782,"line_start":1081,"line_end":1081,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1384},{"krate":0,"index":1386}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":258563,"byte_end":258577,"line_start":1128,"line_end":1128,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1388}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":258797,"byte_end":258811,"line_start":1136,"line_end":1136,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1390}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":258962,"byte_end":258976,"line_start":1142,"line_end":1142,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1392}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":259089,"byte_end":259103,"line_start":1148,"line_end":1148,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1394}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":259269,"byte_end":259283,"line_start":1155,"line_end":1155,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1396}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":259559,"byte_end":259573,"line_start":1163,"line_end":1163,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1400},{"krate":0,"index":1401}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":259858,"byte_end":259872,"line_start":1176,"line_end":1176,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1404},{"krate":0,"index":1405}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":260151,"byte_end":260165,"line_start":1189,"line_end":1189,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1407},{"krate":0,"index":1408}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":260484,"byte_end":260494,"line_start":1200,"line_end":1200,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1410},{"krate":0,"index":1411}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":260954,"byte_end":260964,"line_start":1218,"line_end":1218,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1413},{"krate":0,"index":1414}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":261225,"byte_end":261239,"line_start":1229,"line_end":1229,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1416},{"krate":0,"index":1417}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":261416,"byte_end":261426,"line_start":1238,"line_end":1238,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1419},{"krate":0,"index":1420}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":261619,"byte_end":261633,"line_start":1247,"line_end":1247,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1422}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":261783,"byte_end":261793,"line_start":1254,"line_end":1254,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1424}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":261954,"byte_end":261968,"line_start":1261,"line_end":1261,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1426}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":262154,"byte_end":262164,"line_start":1268,"line_end":1268,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1428}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":262353,"byte_end":262367,"line_start":1275,"line_end":1275,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1430}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":262739,"byte_end":262749,"line_start":1286,"line_end":1286,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1432}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/combinator/rfc/iso8601.rs","byte_start":272933,"byte_end":272945,"line_start":23,"line_end":23,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1471},{"krate":0,"index":1472},{"krate":0,"index":1473},{"krate":0,"index":1474}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/iso8601.rs","byte_start":293900,"byte_end":293907,"line_start":13,"line_end":13,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1772},{"krate":0,"index":1782},{"krate":0,"index":1789}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":306909,"byte_end":306919,"line_start":15,"line_end":15,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":306983,"byte_end":306990,"line_start":17,"line_end":17,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":307012,"byte_end":307019,"line_start":18,"line_end":18,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":307070,"byte_end":307077,"line_start":19,"line_end":19,"column_start":48,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":307117,"byte_end":307118,"line_start":20,"line_end":20,"column_start":29,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":309454,"byte_end":309464,"line_start":82,"line_end":82,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1876}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":309923,"byte_end":309924,"line_start":102,"line_end":102,"column_start":35,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1883}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":310236,"byte_end":310243,"line_start":117,"line_end":117,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1886},{"krate":0,"index":1958}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":324009,"byte_end":324016,"line_start":444,"line_end":444,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2011},{"krate":0,"index":2070}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":333676,"byte_end":333683,"line_start":670,"line_end":670,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2115}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":338379,"byte_end":338385,"line_start":70,"line_end":70,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2220},{"krate":0,"index":2221},{"krate":0,"index":2223},{"krate":0,"index":2225},{"krate":0,"index":2227}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":346921,"byte_end":346927,"line_start":264,"line_end":264,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3838},{"krate":0,"index":3839},{"krate":0,"index":3840},{"krate":0,"index":3841},{"krate":0,"index":3842},{"krate":0,"index":3843},{"krate":0,"index":3844},{"krate":0,"index":3845},{"krate":0,"index":3846},{"krate":0,"index":3847},{"krate":0,"index":3848},{"krate":0,"index":3849},{"krate":0,"index":3850},{"krate":0,"index":3851},{"krate":0,"index":3852},{"krate":0,"index":3853},{"krate":0,"index":3854},{"krate":0,"index":3855},{"krate":0,"index":2258},{"krate":0,"index":2259},{"krate":0,"index":2260},{"krate":0,"index":2261},{"krate":0,"index":2262}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":349058,"byte_end":349064,"line_start":331,"line_end":331,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3856},{"krate":0,"index":3857},{"krate":0,"index":3858},{"krate":0,"index":3859},{"krate":0,"index":3860},{"krate":0,"index":3861},{"krate":0,"index":3862},{"krate":0,"index":3863},{"krate":0,"index":3864},{"krate":0,"index":3865},{"krate":0,"index":3866},{"krate":0,"index":3867},{"krate":0,"index":3868},{"krate":0,"index":3869},{"krate":0,"index":3870},{"krate":0,"index":3871},{"krate":0,"index":3872},{"krate":0,"index":3873},{"krate":0,"index":2265},{"krate":0,"index":2266},{"krate":0,"index":2267},{"krate":0,"index":2268},{"krate":0,"index":2269}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":351737,"byte_end":351743,"line_start":414,"line_end":414,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3874},{"krate":0,"index":3875},{"krate":0,"index":3876},{"krate":0,"index":3877},{"krate":0,"index":3878},{"krate":0,"index":3879},{"krate":0,"index":3880},{"krate":0,"index":3881},{"krate":0,"index":3882},{"krate":0,"index":3883},{"krate":0,"index":3884},{"krate":0,"index":3885},{"krate":0,"index":3886},{"krate":0,"index":3887},{"krate":0,"index":3888},{"krate":0,"index":3889},{"krate":0,"index":3890},{"krate":0,"index":3891},{"krate":0,"index":2272},{"krate":0,"index":2273},{"krate":0,"index":2274},{"krate":0,"index":2275}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":353726,"byte_end":353730,"line_start":475,"line_end":475,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2277},{"krate":0,"index":2278}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":356012,"byte_end":356016,"line_start":535,"line_end":535,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2282},{"krate":0,"index":2283}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":357177,"byte_end":357186,"line_start":563,"line_end":563,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2285},{"krate":0,"index":2286}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":357957,"byte_end":357974,"line_start":585,"line_end":585,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2289},{"krate":0,"index":2290}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":358176,"byte_end":358190,"line_start":593,"line_end":593,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2292},{"krate":0,"index":2293}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/mod.rs","byte_start":264444,"byte_end":264454,"line_start":17,"line_end":17,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2314},{"krate":0,"index":2317},{"krate":0,"index":2320}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/mod.rs","byte_start":265187,"byte_end":265197,"line_start":36,"line_end":36,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2324}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/mod.rs","byte_start":265412,"byte_end":265422,"line_start":44,"line_end":44,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2327}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":361615,"byte_end":361632,"line_start":24,"line_end":24,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2380},{"krate":0,"index":2381},{"krate":0,"index":2382},{"krate":0,"index":2383},{"krate":0,"index":2384},{"krate":0,"index":2385},{"krate":0,"index":2386},{"krate":0,"index":2387},{"krate":0,"index":2388},{"krate":0,"index":2389},{"krate":0,"index":2390},{"krate":0,"index":2391},{"krate":0,"index":2392},{"krate":0,"index":2393},{"krate":0,"index":2394},{"krate":0,"index":2395},{"krate":0,"index":2396},{"krate":0,"index":2397},{"krate":0,"index":2398},{"krate":0,"index":2399},{"krate":0,"index":2400},{"krate":0,"index":2401},{"krate":0,"index":2402},{"krate":0,"index":2403},{"krate":0,"index":2404},{"krate":0,"index":2405},{"krate":0,"index":2406},{"krate":0,"index":2407},{"krate":0,"index":2408},{"krate":0,"index":2409},{"krate":0,"index":2410},{"krate":0,"index":2411},{"krate":0,"index":2412}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":380239,"byte_end":380256,"line_start":580,"line_end":580,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2414},{"krate":0,"index":2415},{"krate":0,"index":2416},{"krate":0,"index":2417},{"krate":0,"index":2418},{"krate":0,"index":2419},{"krate":0,"index":2420},{"krate":0,"index":2421},{"krate":0,"index":2422},{"krate":0,"index":2423},{"krate":0,"index":2424}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":387783,"byte_end":387800,"line_start":769,"line_end":769,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2426},{"krate":0,"index":2429}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":388832,"byte_end":388849,"line_start":798,"line_end":798,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2432}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":389582,"byte_end":389599,"line_start":819,"line_end":819,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2435}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":389803,"byte_end":389820,"line_start":827,"line_end":827,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2437},{"krate":0,"index":2438}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":390028,"byte_end":390045,"line_start":836,"line_end":836,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2440},{"krate":0,"index":2441}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":390583,"byte_end":390600,"line_start":857,"line_end":857,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2443},{"krate":0,"index":2444}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":390808,"byte_end":390825,"line_start":866,"line_end":866,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2446},{"krate":0,"index":2447}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":391365,"byte_end":391382,"line_start":887,"line_end":887,"column_start":14,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2449},{"krate":0,"index":2450}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":393226,"byte_end":393230,"line_start":45,"line_end":45,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2486}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":393539,"byte_end":393543,"line_start":56,"line_end":56,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2488},{"krate":0,"index":2489},{"krate":0,"index":2490},{"krate":0,"index":2491},{"krate":0,"index":2492},{"krate":0,"index":2493},{"krate":0,"index":2494},{"krate":0,"index":2495},{"krate":0,"index":2496},{"krate":0,"index":2497},{"krate":0,"index":2498},{"krate":0,"index":2499},{"krate":0,"index":2500},{"krate":0,"index":2501},{"krate":0,"index":2502},{"krate":0,"index":2503},{"krate":0,"index":2504},{"krate":0,"index":2505},{"krate":0,"index":2506},{"krate":0,"index":2507},{"krate":0,"index":2508},{"krate":0,"index":2509},{"krate":0,"index":2510},{"krate":0,"index":2511},{"krate":0,"index":2512},{"krate":0,"index":2513},{"krate":0,"index":2514},{"krate":0,"index":2515}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":412229,"byte_end":412233,"line_start":594,"line_end":594,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2517},{"krate":0,"index":2520}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":413140,"byte_end":413144,"line_start":621,"line_end":621,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2523}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":413745,"byte_end":413749,"line_start":639,"line_end":639,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2526}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":414773,"byte_end":414777,"line_start":666,"line_end":666,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2528},{"krate":0,"index":2529}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":415243,"byte_end":415247,"line_start":681,"line_end":681,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2531},{"krate":0,"index":2532}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":415784,"byte_end":415788,"line_start":698,"line_end":698,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2534},{"krate":0,"index":2535}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":416261,"byte_end":416265,"line_start":713,"line_end":713,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2537},{"krate":0,"index":2538}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":416799,"byte_end":416803,"line_start":730,"line_end":730,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2540},{"krate":0,"index":2541}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":419059,"byte_end":419068,"line_start":33,"line_end":33,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2562},{"krate":0,"index":2563},{"krate":0,"index":2564},{"krate":0,"index":2565},{"krate":0,"index":2566},{"krate":0,"index":2567},{"krate":0,"index":2568},{"krate":0,"index":2569},{"krate":0,"index":2570},{"krate":0,"index":2571},{"krate":0,"index":2572},{"krate":0,"index":2573},{"krate":0,"index":2574}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":427452,"byte_end":427461,"line_start":275,"line_end":275,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2576},{"krate":0,"index":2579}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":428360,"byte_end":428369,"line_start":299,"line_end":299,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2582}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":428994,"byte_end":429003,"line_start":317,"line_end":317,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2585}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":429350,"byte_end":429359,"line_start":331,"line_end":331,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2587},{"krate":0,"index":2588}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":432951,"byte_end":432958,"line_start":32,"line_end":32,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2621},{"krate":0,"index":2622},{"krate":0,"index":2623},{"krate":0,"index":2624},{"krate":0,"index":2625},{"krate":0,"index":2626}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":435247,"byte_end":435254,"line_start":119,"line_end":119,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2628}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":435630,"byte_end":435637,"line_start":133,"line_end":133,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2630},{"krate":0,"index":2631}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":9437,"byte_end":9442,"line_start":280,"line_end":280,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":326}},{"kind":"Mod","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":9452,"byte_end":9455,"line_start":281,"line_end":281,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":530}},{"kind":"Mod","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":9522,"byte_end":9540,"line_start":283,"line_end":283,"column_start":9,"column_end":27},"ref_id":{"krate":0,"index":596}},{"kind":"Mod","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":115616,"byte_end":115624,"line_start":9,"line_end":9,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":643}},{"kind":"Mod","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":116480,"byte_end":116487,"line_start":40,"line_end":40,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":713}},{"kind":"Mod","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":9581,"byte_end":9591,"line_start":285,"line_end":285,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":814}},{"kind":"Mod","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":9665,"byte_end":9671,"line_start":289,"line_end":289,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1204}},{"kind":"Mod","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":9742,"byte_end":9749,"line_start":293,"line_end":293,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1433}},{"kind":"Mod","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/lib.rs","byte_start":10211,"byte_end":10215,"line_start":310,"line_end":310,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2589}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":12182,"byte_end":12186,"line_start":44,"line_end":44,"column_start":21,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":2664},"to":{"krate":2,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":12418,"byte_end":12422,"line_start":53,"line_end":53,"column_start":6,"column_end":10},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2664},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":40116,"byte_end":40120,"line_start":814,"line_end":814,"column_start":6,"column_end":10},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2664},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":43607,"byte_end":43611,"line_start":922,"line_end":922,"column_start":6,"column_end":10},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":2664},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":44488,"byte_end":44492,"line_start":946,"line_end":946,"column_start":6,"column_end":10},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2664},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":45100,"byte_end":45104,"line_start":964,"line_end":964,"column_start":23,"column_end":27},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2664},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":45784,"byte_end":45788,"line_start":989,"line_end":989,"column_start":24,"column_end":28},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2664},"to":{"krate":2,"index":3218}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":45997,"byte_end":46001,"line_start":998,"line_end":998,"column_start":27,"column_end":31},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2664},"to":{"krate":2,"index":3218}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":46314,"byte_end":46318,"line_start":1009,"line_end":1009,"column_start":24,"column_end":28},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2664},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":46534,"byte_end":46538,"line_start":1018,"line_end":1018,"column_start":27,"column_end":31},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2664},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/date.rs","byte_start":46848,"byte_end":46852,"line_start":1029,"line_end":1029,"column_start":14,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2664},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":47656,"byte_end":47663,"line_start":22,"line_end":22,"column_start":18,"column_end":25},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2691},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":48375,"byte_end":48383,"line_start":44,"line_end":44,"column_start":21,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2712},"to":{"krate":2,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":48618,"byte_end":48626,"line_start":53,"line_end":53,"column_start":6,"column_end":14},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":75086,"byte_end":75094,"line_start":772,"line_end":772,"column_start":23,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2712},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":77360,"byte_end":77368,"line_start":839,"line_end":839,"column_start":31,"column_end":39},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":2712},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":77736,"byte_end":77747,"line_start":853,"line_end":853,"column_start":28,"column_end":39},"kind":{"Impl":{"id":20}},"from":{"krate":2,"index":49698},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":78187,"byte_end":78195,"line_start":870,"line_end":870,"column_start":14,"column_end":22},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":2712},"to":{"krate":2,"index":3218}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":78388,"byte_end":78396,"line_start":879,"line_end":879,"column_start":27,"column_end":35},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":2712},"to":{"krate":2,"index":3218}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":78647,"byte_end":78658,"line_start":888,"line_end":888,"column_start":24,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":2,"index":49698},"to":{"krate":2,"index":3218}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":78845,"byte_end":78856,"line_start":898,"line_end":898,"column_start":30,"column_end":41},"kind":{"Impl":{"id":26}},"from":{"krate":2,"index":49698},"to":{"krate":2,"index":3249}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":79115,"byte_end":79123,"line_start":907,"line_end":907,"column_start":14,"column_end":22},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":2712},"to":{"krate":2,"index":3245}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":79270,"byte_end":79278,"line_start":915,"line_end":915,"column_start":14,"column_end":22},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":2712},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":79476,"byte_end":79484,"line_start":924,"line_end":924,"column_start":27,"column_end":35},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":2712},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":79717,"byte_end":79728,"line_start":933,"line_end":933,"column_start":24,"column_end":35},"kind":{"Impl":{"id":30}},"from":{"krate":2,"index":49698},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":80032,"byte_end":80043,"line_start":945,"line_end":945,"column_start":30,"column_end":41},"kind":{"Impl":{"id":33}},"from":{"krate":2,"index":49698},"to":{"krate":2,"index":3253}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":81299,"byte_end":81307,"line_start":988,"line_end":988,"column_start":19,"column_end":27},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":2712},"to":{"krate":2,"index":3228}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":81598,"byte_end":81606,"line_start":1004,"line_end":1004,"column_start":19,"column_end":27},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":2712},"to":{"krate":2,"index":3228}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":81964,"byte_end":81972,"line_start":1022,"line_end":1022,"column_start":19,"column_end":27},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":2712},"to":{"krate":2,"index":3233}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":82127,"byte_end":82135,"line_start":1030,"line_end":1030,"column_start":19,"column_end":27},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2712},"to":{"krate":2,"index":3233}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":82352,"byte_end":82360,"line_start":1040,"line_end":1040,"column_start":14,"column_end":22},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2712},"to":{"krate":2,"index":3233}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":82521,"byte_end":82529,"line_start":1048,"line_end":1048,"column_start":27,"column_end":35},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":2712},"to":{"krate":2,"index":3233}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":82691,"byte_end":82702,"line_start":1056,"line_end":1056,"column_start":24,"column_end":35},"kind":{"Impl":{"id":64}},"from":{"krate":2,"index":49698},"to":{"krate":2,"index":3233}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":82870,"byte_end":82878,"line_start":1064,"line_end":1064,"column_start":33,"column_end":41},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":2712},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":83007,"byte_end":83018,"line_start":1070,"line_end":1070,"column_start":30,"column_end":41},"kind":{"Impl":{"id":66}},"from":{"krate":2,"index":49698},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":83126,"byte_end":83134,"line_start":1076,"line_end":1076,"column_start":34,"column_end":42},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":2712},"to":{"krate":2,"index":2848}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":83512,"byte_end":83523,"line_start":1090,"line_end":1090,"column_start":31,"column_end":42},"kind":{"Impl":{"id":68}},"from":{"krate":2,"index":49698},"to":{"krate":2,"index":2848}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":83665,"byte_end":83673,"line_start":1096,"line_end":1096,"column_start":14,"column_end":22},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2712},"to":{"krate":2,"index":7950}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/duration.rs","byte_start":83822,"byte_end":83830,"line_start":1102,"line_end":1102,"column_start":28,"column_end":36},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2712},"to":{"krate":2,"index":7950}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/component_range.rs","byte_start":89009,"byte_end":89023,"line_start":25,"line_end":25,"column_start":6,"column_end":20},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2843},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/component_range.rs","byte_start":89455,"byte_end":89469,"line_start":38,"line_end":38,"column_start":23,"column_end":37},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2843},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/component_range.rs","byte_start":89848,"byte_end":89853,"line_start":54,"line_end":54,"column_start":38,"column_end":43},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":2993},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/component_range.rs","byte_start":89983,"byte_end":89997,"line_start":60,"line_end":60,"column_start":32,"column_end":46},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":2843},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/component_range.rs","byte_start":90922,"byte_end":90936,"line_start":92,"line_end":92,"column_start":28,"column_end":42},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2843},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/conversion_range.rs","byte_start":91217,"byte_end":91232,"line_start":12,"line_end":12,"column_start":23,"column_end":38},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2864},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/conversion_range.rs","byte_start":91430,"byte_end":91445,"line_start":19,"line_end":19,"column_start":28,"column_end":43},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2864},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/conversion_range.rs","byte_start":91488,"byte_end":91493,"line_start":21,"line_end":21,"column_start":39,"column_end":44},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2993},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/conversion_range.rs","byte_start":91615,"byte_end":91630,"line_start":27,"line_end":27,"column_start":32,"column_end":47},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2864},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/different_variant.rs","byte_start":92172,"byte_end":92188,"line_start":10,"line_end":10,"column_start":23,"column_end":39},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2877},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/different_variant.rs","byte_start":92382,"byte_end":92398,"line_start":17,"line_end":17,"column_start":28,"column_end":44},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":2877},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/different_variant.rs","byte_start":92442,"byte_end":92447,"line_start":19,"line_end":19,"column_start":40,"column_end":45},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2993},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/different_variant.rs","byte_start":92571,"byte_end":92587,"line_start":25,"line_end":25,"column_start":32,"column_end":48},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2877},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/format.rs","byte_start":93543,"byte_end":93549,"line_start":25,"line_end":25,"column_start":23,"column_end":29},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2890},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/format.rs","byte_start":94127,"byte_end":94133,"line_start":42,"line_end":42,"column_start":26,"column_end":32},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2890},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/format.rs","byte_start":94237,"byte_end":94242,"line_start":48,"line_end":48,"column_start":30,"column_end":35},"kind":{"Impl":{"id":86}},"from":{"krate":1,"index":3940},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/format.rs","byte_start":94528,"byte_end":94534,"line_start":60,"line_end":60,"column_start":28,"column_end":34},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2890},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/format.rs","byte_start":94868,"byte_end":94873,"line_start":70,"line_end":70,"column_start":30,"column_end":35},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2993},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/format.rs","byte_start":95049,"byte_end":95055,"line_start":77,"line_end":77,"column_start":32,"column_end":38},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2890},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_format_description.rs","byte_start":97022,"byte_end":97027,"line_start":50,"line_end":50,"column_start":48,"column_end":53},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2993},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_format_description.rs","byte_start":97299,"byte_end":97323,"line_start":60,"line_end":60,"column_start":32,"column_end":56},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2901},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_format_description.rs","byte_start":97611,"byte_end":97635,"line_start":71,"line_end":71,"column_start":23,"column_end":47},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2901},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_format_description.rs","byte_start":98445,"byte_end":98469,"line_start":94,"line_end":94,"column_start":28,"column_end":52},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2901},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_variant.rs","byte_start":98739,"byte_end":98753,"line_start":10,"line_end":10,"column_start":23,"column_end":37},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2923},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_variant.rs","byte_start":98930,"byte_end":98944,"line_start":17,"line_end":17,"column_start":28,"column_end":42},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2923},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_variant.rs","byte_start":98986,"byte_end":98991,"line_start":19,"line_end":19,"column_start":38,"column_end":43},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2993},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/invalid_variant.rs","byte_start":99111,"byte_end":99125,"line_start":25,"line_end":25,"column_start":32,"column_end":46},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2923},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse.rs","byte_start":100093,"byte_end":100098,"line_start":22,"line_end":22,"column_start":23,"column_end":28},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2936},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse.rs","byte_start":100463,"byte_end":100468,"line_start":33,"line_end":33,"column_start":28,"column_end":33},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2936},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse.rs","byte_start":100833,"byte_end":100838,"line_start":44,"line_end":44,"column_start":30,"column_end":35},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2936},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse.rs","byte_start":101008,"byte_end":101021,"line_start":51,"line_end":51,"column_start":25,"column_end":38},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2975},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse.rs","byte_start":101357,"byte_end":101362,"line_start":63,"line_end":63,"column_start":37,"column_end":42},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2936},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse.rs","byte_start":101546,"byte_end":101566,"line_start":70,"line_end":70,"column_start":25,"column_end":45},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2957},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse.rs","byte_start":101901,"byte_end":101906,"line_start":82,"line_end":82,"column_start":29,"column_end":34},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2993},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse.rs","byte_start":102307,"byte_end":102312,"line_start":93,"line_end":93,"column_start":32,"column_end":37},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2936},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse_from_description.rs","byte_start":103343,"byte_end":103363,"line_start":19,"line_end":19,"column_start":23,"column_end":43},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2957},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse_from_description.rs","byte_start":103740,"byte_end":103760,"line_start":31,"line_end":31,"column_start":28,"column_end":48},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2957},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse_from_description.rs","byte_start":103867,"byte_end":103872,"line_start":34,"line_end":34,"column_start":44,"column_end":49},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2993},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/parse_from_description.rs","byte_start":104073,"byte_end":104093,"line_start":41,"line_end":41,"column_start":32,"column_end":52},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2957},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/try_from_parsed.rs","byte_start":104990,"byte_end":105003,"line_start":19,"line_end":19,"column_start":23,"column_end":36},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2975},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/try_from_parsed.rs","byte_start":105368,"byte_end":105381,"line_start":30,"line_end":30,"column_start":38,"column_end":51},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2975},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/try_from_parsed.rs","byte_start":105512,"byte_end":105526,"line_start":36,"line_end":36,"column_start":40,"column_end":54},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2843},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/try_from_parsed.rs","byte_start":105835,"byte_end":105848,"line_start":48,"line_end":48,"column_start":28,"column_end":41},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2975},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/try_from_parsed.rs","byte_start":106158,"byte_end":106163,"line_start":58,"line_end":58,"column_start":37,"column_end":42},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2993},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/try_from_parsed.rs","byte_start":106350,"byte_end":106363,"line_start":65,"line_end":65,"column_start":32,"column_end":45},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2975},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":86274,"byte_end":86279,"line_start":67,"line_end":67,"column_start":23,"column_end":28},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2993},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/error/mod.rs","byte_start":87290,"byte_end":87295,"line_start":91,"line_end":91,"column_start":28,"column_end":33},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2993},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":108684,"byte_end":108690,"line_start":60,"line_end":60,"column_start":38,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":538},"to":{"krate":0,"index":542}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/ext.rs","byte_start":112342,"byte_end":112348,"line_start":185,"line_end":185,"column_start":41,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":538},"to":{"krate":0,"index":569}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/component.rs","byte_start":121957,"byte_end":121971,"line_start":78,"line_end":78,"column_start":6,"column_end":20},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/modifier.rs","byte_start":139425,"byte_end":139434,"line_start":385,"line_end":385,"column_start":6,"column_end":15},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3480},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":157700,"byte_end":157707,"line_start":21,"line_end":21,"column_start":35,"column_end":42},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":3504},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":159127,"byte_end":159133,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3609},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":150579,"byte_end":150586,"line_start":48,"line_end":48,"column_start":56,"column_end":63},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3504},"to":{"krate":2,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":150796,"byte_end":150803,"line_start":56,"line_end":56,"column_start":6,"column_end":13},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":3504},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":151572,"byte_end":151579,"line_start":74,"line_end":74,"column_start":6,"column_end":13},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3504},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/well_known/iso8601.rs","byte_start":154643,"byte_end":154649,"line_start":164,"line_end":164,"column_start":6,"column_end":12},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3609},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":117825,"byte_end":117835,"line_start":77,"line_end":77,"column_start":21,"column_end":31},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":3644},"to":{"krate":2,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":118367,"byte_end":118377,"line_start":89,"line_end":89,"column_start":26,"column_end":36},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":3644},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":118505,"byte_end":118514,"line_start":95,"line_end":95,"column_start":34,"column_end":43},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":3022},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":118821,"byte_end":118831,"line_start":106,"line_end":106,"column_start":41,"column_end":51},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":3644},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":119286,"byte_end":119296,"line_start":123,"line_end":123,"column_start":31,"column_end":41},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3644},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":119468,"byte_end":119477,"line_start":129,"line_end":129,"column_start":36,"column_end":45},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3022},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/format_description/mod.rs","byte_start":119596,"byte_end":119606,"line_start":135,"line_end":135,"column_start":39,"column_end":49},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3644},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/formatting/formattable.rs","byte_start":185779,"byte_end":185785,"line_start":16,"line_end":16,"column_start":32,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":881},"to":{"krate":0,"index":870}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/formatting/formattable.rs","byte_start":185810,"byte_end":185820,"line_start":17,"line_end":17,"column_start":22,"column_end":32},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3644},"to":{"krate":0,"index":870}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/formatting/formattable.rs","byte_start":185890,"byte_end":185897,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3631},"to":{"krate":0,"index":870}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/formatting/formattable.rs","byte_start":185922,"byte_end":185929,"line_start":20,"line_end":20,"column_start":22,"column_end":29},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3618},"to":{"krate":0,"index":870}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/formatting/formattable.rs","byte_start":185983,"byte_end":185990,"line_start":21,"line_end":21,"column_start":51,"column_end":58},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":3504},"to":{"krate":0,"index":870}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/formatting/formattable.rs","byte_start":186033,"byte_end":186034,"line_start":22,"line_end":22,"column_start":32,"column_end":33},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":878},"to":{"krate":0,"index":870}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/formatting/formattable.rs","byte_start":187191,"byte_end":187201,"line_start":56,"line_end":56,"column_start":29,"column_end":39},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":3644},"to":{"krate":0,"index":881}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/formatting/formattable.rs","byte_start":188402,"byte_end":188403,"line_start":93,"line_end":93,"column_start":35,"column_end":36},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":894},"to":{"krate":0,"index":881}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/formatting/formattable.rs","byte_start":188798,"byte_end":188805,"line_start":110,"line_end":110,"column_start":25,"column_end":32},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":3618},"to":{"krate":0,"index":881}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/formatting/formattable.rs","byte_start":190762,"byte_end":190769,"line_start":159,"line_end":159,"column_start":25,"column_end":32},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":3631},"to":{"krate":0,"index":881}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/formatting/formattable.rs","byte_start":194095,"byte_end":194102,"line_start":241,"line_end":241,"column_start":54,"column_end":61},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":3504},"to":{"krate":0,"index":881}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":202705,"byte_end":202712,"line_start":33,"line_end":33,"column_start":6,"column_end":13},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":3675},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":205649,"byte_end":205656,"line_start":117,"line_end":117,"column_start":27,"column_end":34},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":3675},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":205756,"byte_end":205766,"line_start":123,"line_end":123,"column_start":24,"column_end":34},"kind":{"Impl":{"id":195}},"from":{"krate":1,"index":11703},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":205849,"byte_end":205856,"line_start":129,"line_end":129,"column_start":14,"column_end":21},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":3675},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":206392,"byte_end":206399,"line_start":144,"line_end":144,"column_start":26,"column_end":33},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":3675},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":206543,"byte_end":206553,"line_start":152,"line_end":152,"column_start":23,"column_end":33},"kind":{"Impl":{"id":198}},"from":{"krate":1,"index":11703},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":206698,"byte_end":206705,"line_start":160,"line_end":160,"column_start":24,"column_end":31},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":3675},"to":{"krate":2,"index":3218}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":207092,"byte_end":207102,"line_start":175,"line_end":175,"column_start":24,"column_end":34},"kind":{"Impl":{"id":200}},"from":{"krate":1,"index":11703},"to":{"krate":2,"index":3218}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":207257,"byte_end":207264,"line_start":183,"line_end":183,"column_start":27,"column_end":34},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":3675},"to":{"krate":2,"index":3218}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":207505,"byte_end":207512,"line_start":194,"line_end":194,"column_start":24,"column_end":31},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":3675},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":207899,"byte_end":207909,"line_start":209,"line_end":209,"column_start":24,"column_end":34},"kind":{"Impl":{"id":206}},"from":{"krate":1,"index":11703},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":208064,"byte_end":208071,"line_start":217,"line_end":217,"column_start":27,"column_end":34},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":3675},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":208320,"byte_end":208327,"line_start":228,"line_end":228,"column_start":32,"column_end":39},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":3675},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":208435,"byte_end":208445,"line_start":234,"line_end":234,"column_start":29,"column_end":39},"kind":{"Impl":{"id":212}},"from":{"krate":1,"index":11703},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":208555,"byte_end":208562,"line_start":240,"line_end":240,"column_start":33,"column_end":40},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":3675},"to":{"krate":2,"index":2848}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":208701,"byte_end":208711,"line_start":246,"line_end":246,"column_start":30,"column_end":40},"kind":{"Impl":{"id":214}},"from":{"krate":1,"index":11703},"to":{"krate":2,"index":2848}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":208846,"byte_end":208853,"line_start":252,"line_end":252,"column_start":28,"column_end":35},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":3675},"to":{"krate":2,"index":3047}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/instant.rs","byte_start":208947,"byte_end":208954,"line_start":258,"line_end":258,"column_start":29,"column_end":36},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":3675},"to":{"krate":2,"index":2747}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/month.rs","byte_start":214959,"byte_end":214964,"line_start":29,"line_end":29,"column_start":6,"column_end":11},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":3709},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/month.rs","byte_start":216943,"byte_end":216948,"line_start":102,"line_end":102,"column_start":23,"column_end":28},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3709},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/month.rs","byte_start":217472,"byte_end":217477,"line_start":121,"line_end":121,"column_start":18,"column_end":23},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":3709},"to":{"krate":2,"index":12556}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/month.rs","byte_start":218202,"byte_end":218207,"line_start":149,"line_end":149,"column_start":22,"column_end":27},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":3709},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":219848,"byte_end":219862,"line_start":38,"line_end":38,"column_start":6,"column_end":20},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":246511,"byte_end":246525,"line_start":816,"line_end":816,"column_start":6,"column_end":20},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":3760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":255512,"byte_end":255526,"line_start":1044,"line_end":1044,"column_start":6,"column_end":20},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":3760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":256768,"byte_end":256782,"line_start":1081,"line_end":1081,"column_start":6,"column_end":20},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":3760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":258563,"byte_end":258577,"line_start":1128,"line_end":1128,"column_start":23,"column_end":37},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":3760},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":258797,"byte_end":258811,"line_start":1136,"line_end":1136,"column_start":20,"column_end":34},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":3760},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":258962,"byte_end":258976,"line_start":1142,"line_end":1142,"column_start":21,"column_end":35},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":3760},"to":{"krate":2,"index":2848}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":259089,"byte_end":259103,"line_start":1148,"line_end":1148,"column_start":14,"column_end":28},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":3760},"to":{"krate":2,"index":2838}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":259269,"byte_end":259283,"line_start":1155,"line_end":1155,"column_start":15,"column_end":29},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":3760},"to":{"krate":2,"index":10115}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":259559,"byte_end":259573,"line_start":1163,"line_end":1163,"column_start":20,"column_end":34},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":3760},"to":{"krate":2,"index":3218}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":259858,"byte_end":259872,"line_start":1176,"line_end":1176,"column_start":20,"column_end":34},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":3760},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":260151,"byte_end":260165,"line_start":1189,"line_end":1189,"column_start":14,"column_end":28},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":3760},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":260484,"byte_end":260494,"line_start":1200,"line_end":1200,"column_start":24,"column_end":34},"kind":{"Impl":{"id":238}},"from":{"krate":1,"index":11723},"to":{"krate":2,"index":3218}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":260954,"byte_end":260964,"line_start":1218,"line_end":1218,"column_start":24,"column_end":34},"kind":{"Impl":{"id":240}},"from":{"krate":1,"index":11723},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":261225,"byte_end":261239,"line_start":1229,"line_end":1229,"column_start":26,"column_end":40},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":3760},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":261416,"byte_end":261426,"line_start":1238,"line_end":1238,"column_start":30,"column_end":40},"kind":{"Impl":{"id":243}},"from":{"krate":1,"index":11723},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":261619,"byte_end":261633,"line_start":1247,"line_end":1247,"column_start":32,"column_end":46},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":3760},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":261783,"byte_end":261793,"line_start":1254,"line_end":1254,"column_start":36,"column_end":46},"kind":{"Impl":{"id":245}},"from":{"krate":1,"index":11723},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":261954,"byte_end":261968,"line_start":1261,"line_end":1261,"column_start":33,"column_end":47},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":3760},"to":{"krate":2,"index":2848}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":262154,"byte_end":262164,"line_start":1268,"line_end":1268,"column_start":37,"column_end":47},"kind":{"Impl":{"id":247}},"from":{"krate":1,"index":11723},"to":{"krate":2,"index":2848}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":262353,"byte_end":262367,"line_start":1275,"line_end":1275,"column_start":27,"column_end":41},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":3760},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/offset_date_time.rs","byte_start":262739,"byte_end":262749,"line_start":1286,"line_end":1286,"column_start":31,"column_end":41},"kind":{"Impl":{"id":249}},"from":{"krate":1,"index":11723},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/combinator/rfc/iso8601.rs","byte_start":272933,"byte_end":272945,"line_start":23,"line_end":23,"column_start":6,"column_end":18},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":3783},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/iso8601.rs","byte_start":293900,"byte_end":293907,"line_start":13,"line_end":13,"column_start":35,"column_end":42},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":3504},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":306881,"byte_end":306887,"line_start":14,"line_end":14,"column_start":29,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":1866},"to":{"krate":0,"index":1855}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":306909,"byte_end":306919,"line_start":15,"line_end":15,"column_start":19,"column_end":29},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":3644},"to":{"krate":0,"index":1855}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":306983,"byte_end":306990,"line_start":17,"line_end":17,"column_start":19,"column_end":26},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":3618},"to":{"krate":0,"index":1855}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":307012,"byte_end":307019,"line_start":18,"line_end":18,"column_start":19,"column_end":26},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":3631},"to":{"krate":0,"index":1855}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":307070,"byte_end":307077,"line_start":19,"line_end":19,"column_start":48,"column_end":55},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":3504},"to":{"krate":0,"index":1855}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":307117,"byte_end":307118,"line_start":20,"line_end":20,"column_start":29,"column_end":30},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":1863},"to":{"krate":0,"index":1855}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":309454,"byte_end":309464,"line_start":82,"line_end":82,"column_start":25,"column_end":35},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":3644},"to":{"krate":0,"index":1866}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":309923,"byte_end":309924,"line_start":102,"line_end":102,"column_start":35,"column_end":36},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":1882},"to":{"krate":0,"index":1866}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":310236,"byte_end":310243,"line_start":117,"line_end":117,"column_start":25,"column_end":32},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":3618},"to":{"krate":0,"index":1866}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":324009,"byte_end":324016,"line_start":444,"line_end":444,"column_start":25,"column_end":32},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":3631},"to":{"krate":0,"index":1866}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsable.rs","byte_start":333676,"byte_end":333683,"line_start":670,"line_end":670,"column_start":54,"column_end":61},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":3504},"to":{"krate":0,"index":1866}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":338379,"byte_end":338385,"line_start":70,"line_end":70,"column_start":6,"column_end":12},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":3811},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":346921,"byte_end":346927,"line_start":264,"line_end":264,"column_start":6,"column_end":12},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":3811},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":349058,"byte_end":349064,"line_start":331,"line_end":331,"column_start":6,"column_end":12},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":3811},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":351737,"byte_end":351743,"line_start":414,"line_end":414,"column_start":6,"column_end":12},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":3811},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":353726,"byte_end":353730,"line_start":475,"line_end":475,"column_start":26,"column_end":30},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":2664},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":356012,"byte_end":356016,"line_start":535,"line_end":535,"column_start":26,"column_end":30},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":3964},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":357177,"byte_end":357186,"line_start":563,"line_end":563,"column_start":26,"column_end":35},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":3995},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":357957,"byte_end":357974,"line_start":585,"line_end":585,"column_start":26,"column_end":43},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":3915},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/parsed.rs","byte_start":358176,"byte_end":358190,"line_start":593,"line_end":593,"column_start":26,"column_end":40},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":3760},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/shim.rs","byte_start":359995,"byte_end":360000,"line_start":16,"line_end":16,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":3155},"to":{"krate":0,"index":2301}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/mod.rs","byte_start":264444,"byte_end":264454,"line_start":17,"line_end":17,"column_start":13,"column_end":23},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":3905},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/mod.rs","byte_start":265187,"byte_end":265197,"line_start":36,"line_end":36,"column_start":10,"column_end":20},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":3905},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/parsing/mod.rs","byte_start":265412,"byte_end":265422,"line_start":44,"line_end":44,"column_start":10,"column_end":20},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":3905},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":361615,"byte_end":361632,"line_start":24,"line_end":24,"column_start":6,"column_end":23},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":3915},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":380239,"byte_end":380256,"line_start":580,"line_end":580,"column_start":6,"column_end":23},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":3915},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":387783,"byte_end":387800,"line_start":769,"line_end":769,"column_start":6,"column_end":23},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":3915},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":388832,"byte_end":388849,"line_start":798,"line_end":798,"column_start":6,"column_end":23},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":3915},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":389582,"byte_end":389599,"line_start":819,"line_end":819,"column_start":23,"column_end":40},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":3915},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":389803,"byte_end":389820,"line_start":827,"line_end":827,"column_start":24,"column_end":41},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":3915},"to":{"krate":2,"index":3218}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":390028,"byte_end":390045,"line_start":836,"line_end":836,"column_start":27,"column_end":44},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":3915},"to":{"krate":2,"index":3218}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":390583,"byte_end":390600,"line_start":857,"line_end":857,"column_start":24,"column_end":41},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":3915},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":390808,"byte_end":390825,"line_start":866,"line_end":866,"column_start":27,"column_end":44},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":3915},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/primitive_date_time.rs","byte_start":391365,"byte_end":391382,"line_start":887,"line_end":887,"column_start":14,"column_end":31},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":3915},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":393226,"byte_end":393230,"line_start":45,"line_end":45,"column_start":21,"column_end":25},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":3964},"to":{"krate":2,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":393539,"byte_end":393543,"line_start":56,"line_end":56,"column_start":6,"column_end":10},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":3964},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":412229,"byte_end":412233,"line_start":594,"line_end":594,"column_start":6,"column_end":10},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":3964},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":413140,"byte_end":413144,"line_start":621,"line_end":621,"column_start":6,"column_end":10},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":3964},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":413745,"byte_end":413749,"line_start":639,"line_end":639,"column_start":23,"column_end":27},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":3964},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":414773,"byte_end":414777,"line_start":666,"line_end":666,"column_start":24,"column_end":28},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":3964},"to":{"krate":2,"index":3218}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":415243,"byte_end":415247,"line_start":681,"line_end":681,"column_start":27,"column_end":31},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":3964},"to":{"krate":2,"index":3218}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":415784,"byte_end":415788,"line_start":698,"line_end":698,"column_start":24,"column_end":28},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":3964},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":416261,"byte_end":416265,"line_start":713,"line_end":713,"column_start":27,"column_end":31},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":3964},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/time.rs","byte_start":416799,"byte_end":416803,"line_start":730,"line_end":730,"column_start":14,"column_end":18},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":3964},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":419059,"byte_end":419068,"line_start":33,"line_end":33,"column_start":6,"column_end":15},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":3995},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":427452,"byte_end":427461,"line_start":275,"line_end":275,"column_start":6,"column_end":15},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":3995},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":428360,"byte_end":428369,"line_start":299,"line_end":299,"column_start":6,"column_end":15},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":3995},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":428994,"byte_end":429003,"line_start":317,"line_end":317,"column_start":23,"column_end":32},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":3995},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/utc_offset.rs","byte_start":429350,"byte_end":429359,"line_start":331,"line_end":331,"column_start":14,"column_end":23},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":3995},"to":{"krate":2,"index":3245}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":432951,"byte_end":432958,"line_start":32,"line_end":32,"column_start":6,"column_end":13},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":4018},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":435247,"byte_end":435254,"line_start":119,"line_end":119,"column_start":18,"column_end":25},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":4018},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.12/src/weekday.rs","byte_start":435630,"byte_end":435637,"line_start":133,"line_end":133,"column_start":18,"column_end":25},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":4018},"to":{"krate":2,"index":12556}}]}