{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3","program":"/Users/zevkent/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","k256","--edition=2021","/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"arithmetic\"","--cfg","feature=\"default\"","--cfg","feature=\"digest\"","--cfg","feature=\"ecdsa\"","--cfg","feature=\"ecdsa-core\"","--cfg","feature=\"keccak256\"","--cfg","feature=\"pkcs8\"","--cfg","feature=\"schnorr\"","--cfg","feature=\"sha2\"","--cfg","feature=\"sha256\"","--cfg","feature=\"sha3\"","--cfg","feature=\"std\"","-C","metadata=fa365f924f94d73f","-C","extra-filename=-fa365f924f94d73f","--out-dir","/Users/zevkent/Rust-Chainlink-EA-API/target/rls/debug/deps","-L","dependency=/Users/zevkent/Rust-Chainlink-EA-API/target/rls/debug/deps","--extern","cfg_if=/Users/zevkent/Rust-Chainlink-EA-API/target/rls/debug/deps/libcfg_if-6158d710ee6747d0.rmeta","--extern","ecdsa_core=/Users/zevkent/Rust-Chainlink-EA-API/target/rls/debug/deps/libecdsa-aefaa031eea371c2.rmeta","--extern","elliptic_curve=/Users/zevkent/Rust-Chainlink-EA-API/target/rls/debug/deps/libelliptic_curve-efa1a62628c39ab4.rmeta","--extern","sha2=/Users/zevkent/Rust-Chainlink-EA-API/target/rls/debug/deps/libsha2-9fde38569a87ec83.rmeta","--extern","sha3=/Users/zevkent/Rust-Chainlink-EA-API/target/rls/debug/deps/libsha3-fc4a4f1790c93e32.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/zevkent/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/zevkent/Rust-Chainlink-EA-API/target/rls/debug/deps/libk256-fa365f924f94d73f.rmeta"},"prelude":{"crate_id":{"name":"k256","disambiguator":[11506617215659947927,0]},"crate_root":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src","external_crates":[{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[10014640881818692046,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[15800718316297612287,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[6961639640463363723,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","num":4,"id":{"name":"elliptic_curve","disambiguator":[17903307714193107988,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","num":5,"id":{"name":"alloc","disambiguator":[15443605689848621,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","num":6,"id":{"name":"std","disambiguator":[10021291131669744914,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","num":7,"id":{"name":"libc","disambiguator":[16699447446517724675,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","num":8,"id":{"name":"unwind","disambiguator":[7072391781806093942,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","num":9,"id":{"name":"cfg_if","disambiguator":[4396878825326251599,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","num":10,"id":{"name":"miniz_oxide","disambiguator":[8751207805142453879,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","num":11,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1923978614408483767,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","num":12,"id":{"name":"adler","disambiguator":[14411112285710781992,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","num":13,"id":{"name":"hashbrown","disambiguator":[2356975140922920692,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","num":14,"id":{"name":"std_detect","disambiguator":[17423446140748502282,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","num":15,"id":{"name":"rustc_demangle","disambiguator":[9260941638389817344,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","num":16,"id":{"name":"addr2line","disambiguator":[7858856860374224051,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","num":17,"id":{"name":"gimli","disambiguator":[4855109919914642709,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","num":18,"id":{"name":"object","disambiguator":[15652019722635755907,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","num":19,"id":{"name":"memchr","disambiguator":[5018606611167862631,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","num":20,"id":{"name":"panic_unwind","disambiguator":[532173890138877460,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","num":21,"id":{"name":"crypto_bigint","disambiguator":[15482386306516461349,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","num":22,"id":{"name":"generic_array","disambiguator":[2240621072192231606,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","num":23,"id":{"name":"typenum","disambiguator":[17088568447687506521,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","num":24,"id":{"name":"subtle","disambiguator":[4592793624736631850,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","num":25,"id":{"name":"rand_core","disambiguator":[13594290265621181632,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","num":26,"id":{"name":"getrandom","disambiguator":[12806343988778654016,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","num":27,"id":{"name":"cfg_if","disambiguator":[12876857907742392029,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","num":28,"id":{"name":"libc","disambiguator":[1689377702869551898,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","num":29,"id":{"name":"zeroize","disambiguator":[6414328258623653891,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","num":30,"id":{"name":"group","disambiguator":[5206110322885441682,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","num":31,"id":{"name":"ff","disambiguator":[13195476245147450864,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","num":32,"id":{"name":"digest","disambiguator":[17784180311436657786,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","num":33,"id":{"name":"crypto_common","disambiguator":[12084251914896881798,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","num":34,"id":{"name":"block_buffer","disambiguator":[10458035708730461996,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","num":35,"id":{"name":"sec1","disambiguator":[17494653410099795830,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","num":36,"id":{"name":"base16ct","disambiguator":[1965813111089517562,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","num":37,"id":{"name":"der","disambiguator":[5637477555904858218,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","num":38,"id":{"name":"const_oid","disambiguator":[12099283570722508640,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","num":39,"id":{"name":"pkcs8","disambiguator":[9915667098563576165,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","num":40,"id":{"name":"spki","disambiguator":[17158945705682709120,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","num":41,"id":{"name":"ecdsa","disambiguator":[4787766357279597674,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","num":42,"id":{"name":"signature","disambiguator":[1194567895857378823,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","num":43,"id":{"name":"rfc6979","disambiguator":[2992630970921287234,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","num":44,"id":{"name":"hmac","disambiguator":[16878957841719405445,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","num":45,"id":{"name":"sha3","disambiguator":[3938983034251320590,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","num":46,"id":{"name":"keccak","disambiguator":[16025290867638734441,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","num":47,"id":{"name":"sha2","disambiguator":[18124067097013489221,0]}},{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","num":48,"id":{"name":"cpufeatures","disambiguator":[13637060218435268163,0]}}],"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":0,"byte_end":4082,"line_start":1,"line_end":131,"column_start":1,"column_end":61}},"imports":[{"kind":"Use","ref_id":{"krate":42,"index":0},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":113408,"byte_end":113417,"line_start":76,"line_end":76,"column_start":21,"column_end":30},"alias_span":null,"name":"signature","value":"","parent":{"krate":0,"index":962}},{"kind":"Use","ref_id":{"krate":42,"index":138},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":113426,"byte_end":113431,"line_start":76,"line_end":76,"column_start":39,"column_end":44},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":962}},{"kind":"Use","ref_id":{"krate":32,"index":0},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":113493,"byte_end":113499,"line_start":79,"line_end":79,"column_start":32,"column_end":38},"alias_span":null,"name":"digest","value":"","parent":{"krate":0,"index":962}},{"kind":"Use","ref_id":{"krate":0,"index":1975},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":113549,"byte_end":113559,"line_start":82,"line_end":82,"column_start":22,"column_end":32},"alias_span":null,"name":"SigningKey","value":"","parent":{"krate":0,"index":962}},{"kind":"Use","ref_id":{"krate":0,"index":1979},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":113569,"byte_end":113581,"line_start":82,"line_end":82,"column_start":42,"column_end":54},"alias_span":null,"name":"VerifyingKey","value":"","parent":{"krate":0,"index":962}},{"kind":"Use","ref_id":{"krate":0,"index":1997},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":152035,"byte_end":152045,"line_start":68,"line_end":68,"column_start":22,"column_end":32},"alias_span":null,"name":"SigningKey","value":"","parent":{"krate":0,"index":1428}},{"kind":"Use","ref_id":{"krate":0,"index":2002},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":152055,"byte_end":152067,"line_start":68,"line_end":68,"column_start":42,"column_end":54},"alias_span":null,"name":"VerifyingKey","value":"","parent":{"krate":0,"index":1428}},{"kind":"Use","ref_id":{"krate":42,"index":0},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":152090,"byte_end":152099,"line_start":69,"line_end":69,"column_start":21,"column_end":30},"alias_span":null,"name":"signature","value":"","parent":{"krate":0,"index":1428}},{"kind":"Use","ref_id":{"krate":42,"index":138},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":152108,"byte_end":152113,"line_start":69,"line_end":69,"column_start":39,"column_end":44},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":1428}},{"kind":"Use","ref_id":{"krate":4,"index":0},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":1129,"byte_end":1143,"line_start":41,"line_end":41,"column_start":9,"column_end":23},"alias_span":null,"name":"elliptic_curve","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":2448},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":1160,"byte_end":1164,"line_start":41,"line_end":41,"column_start":40,"column_end":44},"alias_span":null,"name":"U256","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1753},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":1228,"byte_end":1239,"line_start":44,"line_end":44,"column_start":30,"column_end":41},"alias_span":null,"name":"AffinePoint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1915},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":1253,"byte_end":1268,"line_start":44,"line_end":44,"column_start":55,"column_end":70},"alias_span":null,"name":"ProjectivePoint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1934},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":1278,"byte_end":1284,"line_start":44,"line_end":44,"column_start":80,"column_end":86},"alias_span":null,"name":"Scalar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":39,"index":0},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":1455,"byte_end":1460,"line_start":51,"line_end":51,"column_start":25,"column_end":30},"alias_span":null,"name":"pkcs8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":47,"index":0},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":1544,"byte_end":1548,"line_start":55,"line_end":55,"column_start":9,"column_end":13},"alias_span":null,"name":"sha2","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":0,"byte_end":4082,"line_start":1,"line_end":131,"column_start":1,"column_end":61},"name":"","qualname":"::","value":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":962},{"krate":0,"index":1428},{"krate":0,"index":1708},{"krate":0,"index":1709},{"krate":0,"index":1712},{"krate":0,"index":1715},{"krate":0,"index":1716},{"krate":0,"index":1719},{"krate":0,"index":1722},{"krate":0,"index":1725},{"krate":0,"index":1728},{"krate":0,"index":1731},{"krate":0,"index":1732},{"krate":0,"index":1735},{"krate":0,"index":1738},{"krate":0,"index":2025},{"krate":0,"index":2027},{"krate":0,"index":2028},{"krate":0,"index":2030},{"krate":0,"index":2032},{"krate":0,"index":2034},{"krate":0,"index":2035},{"krate":0,"index":2037},{"krate":0,"index":2038},{"krate":0,"index":2040},{"krate":0,"index":2042},{"krate":0,"index":1739},{"krate":0,"index":1742},{"krate":0,"index":1743},{"krate":0,"index":1745},{"krate":0,"index":1747},{"krate":0,"index":1748},{"krate":0,"index":1749},{"krate":0,"index":1750},{"krate":0,"index":1751},{"krate":0,"index":1752}],"decl_id":null,"docs":"# [RustCrypto]: secp256k1 (K-256) elliptic curve","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":0,"byte_end":10,"line_start":1,"line_end":1,"column_start":1,"column_end":11}},{"value":"forbid(unsafe_code)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":280,"byte_end":303,"line_start":8,"line_end":8,"column_start":1,"column_end":24}},{"value":"warn(missing_docs, rust_2018_idioms, unused_qualifications)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":304,"byte_end":367,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ ## `serde` support","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":369,"byte_end":391,"line_start":11,"line_end":11,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":392,"byte_end":395,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ When the `serde` feature of this crate is enabled, `Serialize` and","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":396,"byte_end":466,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ `Deserialize` are impl'd for the following types:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":467,"byte_end":520,"line_start":14,"line_end":14,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":521,"byte_end":524,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ - [`AffinePoint`]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":525,"byte_end":546,"line_start":16,"line_end":16,"column_start":1,"column_end":22}},{"value":"/ - [`Scalar`]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":547,"byte_end":563,"line_start":17,"line_end":17,"column_start":1,"column_end":17}},{"value":"/ - [`ecdsa::VerifyingKey`]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":564,"byte_end":593,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":594,"byte_end":597,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Please see type-specific documentation for more information.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":598,"byte_end":662,"line_start":20,"line_end":20,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1753},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":6605,"byte_end":6616,"line_start":39,"line_end":39,"column_start":12,"column_end":23},"name":"AffinePoint","qualname":"::arithmetic::affine::AffinePoint","value":"AffinePoint {  }","parent":null,"children":[{"krate":0,"index":1754},{"krate":0,"index":1755},{"krate":0,"index":1756}],"decl_id":null,"docs":" secp256k1 curve point expressed in affine coordinates.","sig":null,"attributes":[{"value":"/ secp256k1 curve point expressed in affine coordinates.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":6022,"byte_end":6080,"line_start":23,"line_end":23,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":6081,"byte_end":6084,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # `serde` support","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":6085,"byte_end":6106,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":6107,"byte_end":6110,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ When the `serde` feature of this crate is enabled, the `Serialize` and","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":6111,"byte_end":6185,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ `Deserialize` traits are impl'd for this type.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":6186,"byte_end":6236,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":6237,"byte_end":6240,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ The serialization uses the [SEC1] `Elliptic-Curve-Point-to-Octet-String`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":6241,"byte_end":6317,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ encoding, serialized as binary.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":6318,"byte_end":6353,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":6354,"byte_end":6357,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ When serialized with a text-based format, the SEC1 representation is","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":6358,"byte_end":6430,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"/ subsequently hex encoded.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":6431,"byte_end":6460,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":6461,"byte_end":6464,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [SEC1]: https://www.secg.org/sec1-v2.pdf","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":6465,"byte_end":6509,"line_start":36,"line_end":36,"column_start":1,"column_end":45}}]},{"kind":"Const","id":{"krate":0,"index":97},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":7057,"byte_end":7065,"line_start":55,"line_end":55,"column_start":15,"column_end":23},"name":"IDENTITY","qualname":"::arithmetic::affine::AffinePoint::IDENTITY","value":"Self","parent":{"krate":0,"index":96},"children":[],"decl_id":null,"docs":" Additive identity of the group: the point at infinity.\n","sig":null,"attributes":[{"value":"/ Additive identity of the group: the point at infinity.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":6984,"byte_end":7042,"line_start":54,"line_end":54,"column_start":5,"column_end":63}}]},{"kind":"Const","id":{"krate":0,"index":98},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":7429,"byte_end":7438,"line_start":67,"line_end":67,"column_start":15,"column_end":24},"name":"GENERATOR","qualname":"::arithmetic::affine::AffinePoint::GENERATOR","value":"Self","parent":{"krate":0,"index":96},"children":[],"decl_id":null,"docs":" Base point of secp256k1.","sig":null,"attributes":[{"value":"/ Base point of secp256k1.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":7176,"byte_end":7204,"line_start":61,"line_end":61,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":7209,"byte_end":7212,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":7217,"byte_end":7228,"line_start":63,"line_end":63,"column_start":5,"column_end":16}},{"value":"/ Gₓ = 79be667e f9dcbbac 55a06295 ce870b07 029bfcdb 2dce28d9 59f2815b 16f81798","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":7233,"byte_end":7315,"line_start":64,"line_end":64,"column_start":5,"column_end":85}},{"value":"/ Gᵧ = 483ada77 26a3c465 5da4fbfc 0e1108a8 fd17b448 a6855419 9c47d08f fb10d4b8","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":7320,"byte_end":7402,"line_start":65,"line_end":65,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":7407,"byte_end":7414,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":8437,"byte_end":8445,"line_start":94,"line_end":94,"column_start":8,"column_end":16},"name":"identity","qualname":"<AffinePoint as elliptic_curve::group::prime::PrimeCurveAffine>::identity","value":"fn identity() -> Self","parent":{"krate":30,"index":136},"children":[],"decl_id":{"krate":30,"index":140},"docs":" Returns the identity of the group: the point at infinity.\n","sig":null,"attributes":[{"value":"/ Returns the identity of the group: the point at infinity.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":8368,"byte_end":8429,"line_start":93,"line_end":93,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":8540,"byte_end":8549,"line_start":99,"line_end":99,"column_start":8,"column_end":17},"name":"generator","qualname":"<AffinePoint as elliptic_curve::group::prime::PrimeCurveAffine>::generator","value":"fn generator() -> Self","parent":{"krate":30,"index":136},"children":[],"decl_id":{"krate":30,"index":141},"docs":" Returns the base point of secp256k1.\n","sig":null,"attributes":[{"value":"/ Returns the base point of secp256k1.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":8492,"byte_end":8532,"line_start":98,"line_end":98,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":8642,"byte_end":8653,"line_start":104,"line_end":104,"column_start":8,"column_end":19},"name":"is_identity","qualname":"<AffinePoint as elliptic_curve::group::prime::PrimeCurveAffine>::is_identity","value":"fn is_identity(&Self) -> Choice","parent":{"krate":30,"index":136},"children":[],"decl_id":{"krate":30,"index":142},"docs":" Is this point the identity point?\n","sig":null,"attributes":[{"value":"/ Is this point the identity point?","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":8597,"byte_end":8634,"line_start":103,"line_end":103,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":8764,"byte_end":8772,"line_start":109,"line_end":109,"column_start":8,"column_end":16},"name":"to_curve","qualname":"<AffinePoint as elliptic_curve::group::prime::PrimeCurveAffine>::to_curve","value":"fn to_curve(&Self) -> ProjectivePoint","parent":{"krate":30,"index":136},"children":[],"decl_id":{"krate":30,"index":143},"docs":" Convert to curve representation.\n","sig":null,"attributes":[{"value":"/ Convert to curve representation.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":8720,"byte_end":8756,"line_start":108,"line_end":108,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":8906,"byte_end":8907,"line_start":115,"line_end":115,"column_start":8,"column_end":9},"name":"x","qualname":"<AffinePoint as elliptic_curve::AffineXCoordinate>::x","value":"fn x(&Self) -> FieldBytes","parent":{"krate":4,"index":185},"children":[],"decl_id":{"krate":4,"index":187},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":9020,"byte_end":9038,"line_start":121,"line_end":121,"column_start":8,"column_end":26},"name":"conditional_select","qualname":"<AffinePoint as elliptic_curve::subtle::ConditionallySelectable>::conditional_select","value":"fn conditional_select(&AffinePoint, &AffinePoint, Choice) -> AffinePoint","parent":{"krate":24,"index":66},"children":[],"decl_id":{"krate":24,"index":67},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":9410,"byte_end":9415,"line_start":131,"line_end":131,"column_start":8,"column_end":13},"name":"ct_eq","qualname":"<AffinePoint as elliptic_curve::subtle::ConstantTimeEq>::ct_eq","value":"fn ct_eq(&Self, &AffinePoint) -> Choice","parent":{"krate":24,"index":58},"children":[],"decl_id":{"krate":24,"index":59},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":9678,"byte_end":9685,"line_start":139,"line_end":139,"column_start":8,"column_end":15},"name":"default","qualname":"<AffinePoint as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3128},"children":[],"decl_id":{"krate":1,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":9811,"byte_end":9813,"line_start":147,"line_end":147,"column_start":8,"column_end":10},"name":"eq","qualname":"<AffinePoint as core::cmp::PartialEq>::eq","value":"fn eq(&Self, &AffinePoint) -> bool","parent":{"krate":1,"index":2802},"children":[],"decl_id":{"krate":1,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":10000,"byte_end":10003,"line_start":157,"line_end":157,"column_start":8,"column_end":11},"name":"mul","qualname":"<AffinePoint as core::ops::Mul>::mul","value":"fn mul(Self, Scalar) -> ProjectivePoint","parent":{"krate":1,"index":3228},"children":[],"decl_id":{"krate":1,"index":3231},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":10180,"byte_end":10183,"line_start":165,"line_end":165,"column_start":8,"column_end":11},"name":"mul","qualname":"<AffinePoint as core::ops::Mul>::mul","value":"fn mul(Self, &Scalar) -> ProjectivePoint","parent":{"krate":1,"index":3228},"children":[],"decl_id":{"krate":1,"index":3231},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":10348,"byte_end":10351,"line_start":173,"line_end":173,"column_start":8,"column_end":11},"name":"neg","qualname":"<AffinePoint as core::ops::Neg>::neg","value":"fn neg(Self) -> Self::Output","parent":{"krate":1,"index":3245},"children":[],"decl_id":{"krate":1,"index":3247},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":10584,"byte_end":10594,"line_start":183,"line_end":183,"column_start":8,"column_end":18},"name":"decompress","qualname":"<AffinePoint as elliptic_curve::DecompressPoint>::decompress","value":"fn decompress(&FieldBytes, Choice) -> CtOption<Self>","parent":{"krate":4,"index":188},"children":[],"decl_id":{"krate":4,"index":190},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":11416,"byte_end":11425,"line_start":206,"line_end":206,"column_start":8,"column_end":17},"name":"decompact","qualname":"<AffinePoint as elliptic_curve::DecompactPoint>::decompact","value":"fn decompact(&FieldBytes) -> CtOption<Self>","parent":{"krate":4,"index":191},"children":[],"decl_id":{"krate":4,"index":193},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":11606,"byte_end":11616,"line_start":214,"line_end":214,"column_start":8,"column_end":18},"name":"from_bytes","qualname":"<AffinePoint as elliptic_curve::group::GroupEncoding>::from_bytes","value":"fn from_bytes(&Self::Repr) -> CtOption<Self>","parent":{"krate":30,"index":189},"children":[],"decl_id":{"krate":30,"index":191},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":12175,"byte_end":12195,"line_start":226,"line_end":226,"column_start":8,"column_end":28},"name":"from_bytes_unchecked","qualname":"<AffinePoint as elliptic_curve::group::GroupEncoding>::from_bytes_unchecked","value":"fn from_bytes_unchecked(&Self::Repr) -> CtOption<Self>","parent":{"krate":30,"index":189},"children":[],"decl_id":{"krate":30,"index":192},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":12348,"byte_end":12356,"line_start":231,"line_end":231,"column_start":8,"column_end":16},"name":"to_bytes","qualname":"<AffinePoint as elliptic_curve::group::GroupEncoding>::to_bytes","value":"fn to_bytes(&Self) -> Self::Repr","parent":{"krate":30,"index":189},"children":[],"decl_id":{"krate":30,"index":193},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":12829,"byte_end":12847,"line_start":245,"line_end":245,"column_start":8,"column_end":26},"name":"from_encoded_point","qualname":"<AffinePoint as elliptic_curve::sec1::FromEncodedPoint>::from_encoded_point","value":"fn from_encoded_point(&EncodedPoint) -> CtOption<Self>","parent":{"krate":4,"index":120},"children":[],"decl_id":{"krate":4,"index":122},"docs":" Attempts to parse the given [`EncodedPoint`] as an SEC1-encoded [`AffinePoint`].","sig":null,"attributes":[{"value":"/ Attempts to parse the given [`EncodedPoint`] as an SEC1-encoded [`AffinePoint`].","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":12632,"byte_end":12716,"line_start":240,"line_end":240,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":12721,"byte_end":12724,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":12729,"byte_end":12742,"line_start":242,"line_end":242,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":12747,"byte_end":12750,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ `None` value if `encoded_point` is not on the secp256k1 curve.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":12755,"byte_end":12821,"line_start":244,"line_end":244,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":13928,"byte_end":13944,"line_start":271,"line_end":271,"column_start":8,"column_end":24},"name":"to_encoded_point","qualname":"<AffinePoint as elliptic_curve::sec1::ToEncodedPoint>::to_encoded_point","value":"fn to_encoded_point(&Self, bool) -> EncodedPoint","parent":{"krate":4,"index":123},"children":[],"decl_id":{"krate":4,"index":125},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":14360,"byte_end":14368,"line_start":287,"line_end":287,"column_start":8,"column_end":16},"name":"try_from","qualname":"<AffinePoint as core::convert::TryFrom>::try_from","value":"fn try_from(EncodedPoint) -> Result<AffinePoint>","parent":{"krate":1,"index":3063},"children":[],"decl_id":{"krate":1,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":14540,"byte_end":14548,"line_start":295,"line_end":295,"column_start":8,"column_end":16},"name":"try_from","qualname":"<AffinePoint as core::convert::TryFrom>::try_from","value":"fn try_from(&EncodedPoint) -> Result<AffinePoint>","parent":{"krate":1,"index":3063},"children":[],"decl_id":{"krate":1,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":14728,"byte_end":14732,"line_start":301,"line_end":301,"column_start":8,"column_end":12},"name":"from","qualname":"<EncodedPoint as core::convert::From>::from","value":"fn from(AffinePoint) -> EncodedPoint","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":14879,"byte_end":14883,"line_start":307,"line_end":307,"column_start":8,"column_end":12},"name":"from","qualname":"<EncodedPoint as core::convert::From>::from","value":"fn from(&AffinePoint) -> EncodedPoint","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":15029,"byte_end":15033,"line_start":313,"line_end":313,"column_start":8,"column_end":12},"name":"from","qualname":"<AffinePoint as core::convert::From>::from","value":"fn from(PublicKey) -> AffinePoint","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":15162,"byte_end":15166,"line_start":319,"line_end":319,"column_start":8,"column_end":12},"name":"from","qualname":"<AffinePoint as core::convert::From>::from","value":"fn from(&PublicKey) -> AffinePoint","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":15330,"byte_end":15338,"line_start":327,"line_end":327,"column_start":8,"column_end":16},"name":"try_from","qualname":"<PublicKey as core::convert::TryFrom>::try_from","value":"fn try_from(AffinePoint) -> Result<PublicKey>","parent":{"krate":1,"index":3063},"children":[],"decl_id":{"krate":1,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":15518,"byte_end":15526,"line_start":335,"line_end":335,"column_start":8,"column_end":16},"name":"try_from","qualname":"<PublicKey as core::convert::TryFrom>::try_from","value":"fn try_from(&AffinePoint) -> Result<PublicKey>","parent":{"krate":1,"index":3063},"children":[],"decl_id":{"krate":1,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1888},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":20015,"byte_end":20027,"line_start":48,"line_end":48,"column_start":12,"column_end":24},"name":"FieldElement","qualname":"::arithmetic::field::FieldElement","value":"","parent":null,"children":[],"decl_id":null,"docs":" An element in the finite field used for curve coordinates.\n","sig":null,"attributes":[{"value":"/ An element in the finite field used for curve coordinates.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":19911,"byte_end":19973,"line_start":46,"line_end":46,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":20085,"byte_end":20091,"line_start":51,"line_end":51,"column_start":8,"column_end":14},"name":"random","qualname":"<FieldElement as elliptic_curve::Field>::random","value":"fn random<impl RngCore>(impl RngCore) -> Self where impl RngCore: RngCore","parent":{"krate":31,"index":62},"children":[],"decl_id":{"krate":31,"index":69},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":20357,"byte_end":20361,"line_start":62,"line_end":62,"column_start":8,"column_end":12},"name":"zero","qualname":"<FieldElement as elliptic_curve::Field>::zero","value":"fn zero() -> Self","parent":{"krate":31,"index":62},"children":[],"decl_id":{"krate":31,"index":71},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":20407,"byte_end":20410,"line_start":66,"line_end":66,"column_start":8,"column_end":11},"name":"one","qualname":"<FieldElement as elliptic_curve::Field>::one","value":"fn one() -> Self","parent":{"krate":31,"index":62},"children":[],"decl_id":{"krate":31,"index":72},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":20471,"byte_end":20477,"line_start":71,"line_end":71,"column_start":8,"column_end":14},"name":"square","qualname":"<FieldElement as elliptic_curve::Field>::square","value":"fn square(&Self) -> Self","parent":{"krate":31,"index":62},"children":[],"decl_id":{"krate":31,"index":75},"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":20452,"byte_end":20463,"line_start":70,"line_end":70,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":20547,"byte_end":20553,"line_start":76,"line_end":76,"column_start":8,"column_end":14},"name":"double","qualname":"<FieldElement as elliptic_curve::Field>::double","value":"fn double(&Self) -> Self","parent":{"krate":31,"index":62},"children":[],"decl_id":{"krate":31,"index":77},"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":20528,"byte_end":20539,"line_start":75,"line_end":75,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":20607,"byte_end":20613,"line_start":80,"line_end":80,"column_start":8,"column_end":14},"name":"invert","qualname":"<FieldElement as elliptic_curve::Field>::invert","value":"fn invert(&Self) -> CtOption<Self>","parent":{"krate":31,"index":62},"children":[],"decl_id":{"krate":31,"index":78},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":20677,"byte_end":20681,"line_start":84,"line_end":84,"column_start":8,"column_end":12},"name":"sqrt","qualname":"<FieldElement as elliptic_curve::Field>::sqrt","value":"fn sqrt(&Self) -> CtOption<Self>","parent":{"krate":31,"index":62},"children":[],"decl_id":{"krate":31,"index":79},"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":231},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":20794,"byte_end":20798,"line_start":91,"line_end":91,"column_start":15,"column_end":19},"name":"ZERO","qualname":"::arithmetic::field::FieldElement::ZERO","value":"Self","parent":{"krate":0,"index":230},"children":[],"decl_id":null,"docs":" Zero element.\n","sig":null,"attributes":[{"value":"/ Zero element.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":20762,"byte_end":20779,"line_start":90,"line_end":90,"column_start":5,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":232},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":20887,"byte_end":20890,"line_start":94,"line_end":94,"column_start":15,"column_end":18},"name":"ONE","qualname":"::arithmetic::field::FieldElement::ONE","value":"Self","parent":{"krate":0,"index":230},"children":[],"decl_id":null,"docs":" Multiplicative identity.\n","sig":null,"attributes":[{"value":"/ Multiplicative identity.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":20844,"byte_end":20872,"line_start":93,"line_end":93,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":21095,"byte_end":21102,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<FieldElement>::is_zero","value":"fn is_zero(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Determine if this `FieldElement` is zero.","sig":null,"attributes":[{"value":"/ Determine if this `FieldElement` is zero.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":20935,"byte_end":20980,"line_start":96,"line_end":96,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":20985,"byte_end":20988,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":20993,"byte_end":21006,"line_start":98,"line_end":98,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":21011,"byte_end":21014,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ If zero, return `Choice(1)`.  Otherwise, return `Choice(0)`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":21019,"byte_end":21083,"line_start":100,"line_end":100,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":21355,"byte_end":21362,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"is_even","qualname":"<FieldElement>::is_even","value":"fn is_even(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Determine if this `FieldElement` is even in the SEC1 sense: `self mod 2 == 0`.","sig":null,"attributes":[{"value":"/ Determine if this `FieldElement` is even in the SEC1 sense: `self mod 2 == 0`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":21158,"byte_end":21240,"line_start":105,"line_end":105,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":21245,"byte_end":21248,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":21253,"byte_end":21266,"line_start":107,"line_end":107,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":21271,"byte_end":21274,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ If even, return `Choice(1)`.  Otherwise, return `Choice(0)`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":21279,"byte_end":21343,"line_start":109,"line_end":109,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":21613,"byte_end":21619,"line_start":119,"line_end":119,"column_start":12,"column_end":18},"name":"is_odd","qualname":"<FieldElement>::is_odd","value":"fn is_odd(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Determine if this `FieldElement` is odd in the SEC1 sense: `self mod 2 == 1`.","sig":null,"attributes":[{"value":"/ Determine if this `FieldElement` is odd in the SEC1 sense: `self mod 2 == 1`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":21418,"byte_end":21499,"line_start":114,"line_end":114,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":21504,"byte_end":21507,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":21512,"byte_end":21525,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":21530,"byte_end":21533,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ If odd, return `Choice(1)`.  Otherwise, return `Choice(0)`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":21538,"byte_end":21601,"line_start":118,"line_end":118,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":22163,"byte_end":22173,"line_start":133,"line_end":133,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<FieldElement>::from_bytes","value":"fn from_bytes(&FieldBytes) -> CtOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to parse the given byte array as an SEC1-encoded field element.","sig":null,"attributes":[{"value":"/ Attempts to parse the given byte array as an SEC1-encoded field element.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":21961,"byte_end":22037,"line_start":129,"line_end":129,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":22042,"byte_end":22045,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Returns None if the byte array does not contain a big-endian integer in the range","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":22050,"byte_end":22135,"line_start":131,"line_end":131,"column_start":5,"column_end":90}},{"value":"/ [0, p).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":22140,"byte_end":22151,"line_start":132,"line_end":132,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":22343,"byte_end":22351,"line_start":138,"line_end":138,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<FieldElement>::to_bytes","value":"fn to_bytes(Self) -> FieldBytes","parent":null,"children":[],"decl_id":null,"docs":" Returns the SEC1 encoding of this field element.\n","sig":null,"attributes":[{"value":"/ Returns the SEC1 encoding of this field element.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":22279,"byte_end":22331,"line_start":137,"line_end":137,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":22589,"byte_end":22595,"line_start":144,"line_end":144,"column_start":12,"column_end":18},"name":"negate","qualname":"<FieldElement>::negate","value":"fn negate(&Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns -self, treating it as a value of given magnitude.\n The provided magnitude must be equal or greater than the actual magnitude of `self`.\n","sig":null,"attributes":[{"value":"/ Returns -self, treating it as a value of given magnitude.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":22423,"byte_end":22484,"line_start":142,"line_end":142,"column_start":5,"column_end":66}},{"value":"/ The provided magnitude must be equal or greater than the actual magnitude of `self`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":22489,"byte_end":22577,"line_start":143,"line_end":143,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":22794,"byte_end":22803,"line_start":150,"line_end":150,"column_start":12,"column_end":21},"name":"normalize","qualname":"<FieldElement>::normalize","value":"fn normalize(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Fully normalizes the field element.\n Brings the magnitude to 1 and modulo reduces the value.\n","sig":null,"attributes":[{"value":"/ Fully normalizes the field element.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":22679,"byte_end":22718,"line_start":148,"line_end":148,"column_start":5,"column_end":44}},{"value":"/ Brings the magnitude to 1 and modulo reduces the value.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":22723,"byte_end":22782,"line_start":149,"line_end":149,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":23014,"byte_end":23028,"line_start":156,"line_end":156,"column_start":12,"column_end":26},"name":"normalize_weak","qualname":"<FieldElement>::normalize_weak","value":"fn normalize_weak(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Weakly normalizes the field element.\n Brings the magnitude to 1, but does not guarantee the value to be less than the modulus.\n","sig":null,"attributes":[{"value":"/ Weakly normalizes the field element.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":22865,"byte_end":22905,"line_start":154,"line_end":154,"column_start":5,"column_end":45}},{"value":"/ Brings the magnitude to 1, but does not guarantee the value to be less than the modulus.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":22910,"byte_end":23002,"line_start":155,"line_end":155,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":23166,"byte_end":23184,"line_start":161,"line_end":161,"column_start":12,"column_end":30},"name":"normalizes_to_zero","qualname":"<FieldElement>::normalizes_to_zero","value":"fn normalizes_to_zero(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Checks if the field element becomes zero if normalized.\n","sig":null,"attributes":[{"value":"/ Checks if the field element becomes zero if normalized.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":23095,"byte_end":23154,"line_start":160,"line_end":160,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":23355,"byte_end":23365,"line_start":167,"line_end":167,"column_start":12,"column_end":22},"name":"mul_single","qualname":"<FieldElement>::mul_single","value":"fn mul_single(&Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Multiplies by a single-limb integer.\n Multiplies the magnitude by the same value.\n","sig":null,"attributes":[{"value":"/ Multiplies by a single-limb integer.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":23251,"byte_end":23291,"line_start":165,"line_end":165,"column_start":5,"column_end":45}},{"value":"/ Multiplies the magnitude by the same value.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":23296,"byte_end":23343,"line_start":166,"line_end":166,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":23503,"byte_end":23509,"line_start":173,"line_end":173,"column_start":12,"column_end":18},"name":"double","qualname":"<FieldElement>::double","value":"fn double(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns 2*self.\n Doubles the magnitude.\n","sig":null,"attributes":[{"value":"/ Returns 2*self.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":23441,"byte_end":23460,"line_start":171,"line_end":171,"column_start":5,"column_end":24}},{"value":"/ Doubles the magnitude.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":23465,"byte_end":23491,"line_start":172,"line_end":172,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":23736,"byte_end":23739,"line_start":180,"line_end":180,"column_start":12,"column_end":15},"name":"mul","qualname":"<FieldElement>::mul","value":"fn mul(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns self * rhs mod p\n Brings the magnitude to 1 (but doesn't normalize the result).\n The magnitudes of arguments should be <= 8.\n","sig":null,"attributes":[{"value":"/ Returns self * rhs mod p","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":23574,"byte_end":23602,"line_start":177,"line_end":177,"column_start":5,"column_end":33}},{"value":"/ Brings the magnitude to 1 (but doesn't normalize the result).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":23607,"byte_end":23672,"line_start":178,"line_end":178,"column_start":5,"column_end":70}},{"value":"/ The magnitudes of arguments should be <= 8.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":23677,"byte_end":23724,"line_start":179,"line_end":179,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":23981,"byte_end":23987,"line_start":188,"line_end":188,"column_start":12,"column_end":18},"name":"square","qualname":"<FieldElement>::square","value":"fn square(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns self * self.","sig":null,"attributes":[{"value":"/ Returns self * self.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":23815,"byte_end":23839,"line_start":184,"line_end":184,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":23844,"byte_end":23847,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ Brings the magnitude to 1 (but doesn't normalize the result).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":23852,"byte_end":23917,"line_start":186,"line_end":186,"column_start":5,"column_end":70}},{"value":"/ The magnitudes of arguments should be <= 8.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":23922,"byte_end":23969,"line_start":187,"line_end":187,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":24377,"byte_end":24383,"line_start":203,"line_end":203,"column_start":12,"column_end":18},"name":"invert","qualname":"<FieldElement>::invert","value":"fn invert(&Self) -> CtOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns the multiplicative inverse of self, if self is non-zero.\n The result has magnitude 1, but is not normalized.\n","sig":null,"attributes":[{"value":"/ Returns the multiplicative inverse of self, if self is non-zero.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":24238,"byte_end":24306,"line_start":201,"line_end":201,"column_start":5,"column_end":73}},{"value":"/ The result has magnitude 1, but is not normalized.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":24311,"byte_end":24365,"line_start":202,"line_end":202,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":25617,"byte_end":25621,"line_start":236,"line_end":236,"column_start":12,"column_end":16},"name":"sqrt","qualname":"<FieldElement>::sqrt","value":"fn sqrt(&Self) -> CtOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns the square root of self mod p, or `None` if no square root exists.\n The result has magnitude 1, but is not normalized.\n","sig":null,"attributes":[{"value":"/ Returns the square root of self mod p, or `None` if no square root exists.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":25468,"byte_end":25546,"line_start":234,"line_end":234,"column_start":5,"column_end":83}},{"value":"/ The result has magnitude 1, but is not normalized.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":25551,"byte_end":25605,"line_start":235,"line_end":235,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":27420,"byte_end":27438,"line_start":280,"line_end":280,"column_start":8,"column_end":26},"name":"conditional_select","qualname":"<FieldElement as elliptic_curve::subtle::ConditionallySelectable>::conditional_select","value":"fn conditional_select(&Self, &Self, Choice) -> Self","parent":{"krate":24,"index":66},"children":[],"decl_id":{"krate":24,"index":67},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":27615,"byte_end":27620,"line_start":286,"line_end":286,"column_start":8,"column_end":13},"name":"ct_eq","qualname":"<FieldElement as elliptic_curve::subtle::ConstantTimeEq>::ct_eq","value":"fn ct_eq(&Self, &Self) -> Choice","parent":{"krate":24,"index":58},"children":[],"decl_id":{"krate":24,"index":59},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":27735,"byte_end":27742,"line_start":292,"line_end":292,"column_start":8,"column_end":15},"name":"default","qualname":"<FieldElement as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3128},"children":[],"decl_id":{"krate":1,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":27897,"byte_end":27899,"line_start":302,"line_end":302,"column_start":8,"column_end":10},"name":"eq","qualname":"<FieldElement as core::cmp::PartialEq>::eq","value":"fn eq(&Self, &Self) -> bool","parent":{"krate":1,"index":2802},"children":[],"decl_id":{"krate":1,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":28062,"byte_end":28065,"line_start":310,"line_end":310,"column_start":8,"column_end":11},"name":"add","qualname":"<FieldElement as core::ops::Add>::add","value":"fn add(Self, FieldElement) -> FieldElement","parent":{"krate":1,"index":3218},"children":[],"decl_id":{"krate":1,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":28248,"byte_end":28251,"line_start":318,"line_end":318,"column_start":8,"column_end":11},"name":"add","qualname":"<FieldElement as core::ops::Add>::add","value":"fn add(Self, &FieldElement) -> FieldElement","parent":{"krate":1,"index":3218},"children":[],"decl_id":{"krate":1,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":28436,"byte_end":28439,"line_start":326,"line_end":326,"column_start":8,"column_end":11},"name":"add","qualname":"<&'_ FieldElement as core::ops::Add>::add","value":"fn add(Self, &FieldElement) -> FieldElement","parent":{"krate":1,"index":3218},"children":[],"decl_id":{"krate":1,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":28595,"byte_end":28605,"line_start":332,"line_end":332,"column_start":8,"column_end":18},"name":"add_assign","qualname":"<FieldElement as core::ops::AddAssign>::add_assign","value":"fn add_assign(&mut Self, FieldElement)","parent":{"krate":1,"index":3249},"children":[],"decl_id":{"krate":1,"index":3251},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":28737,"byte_end":28747,"line_start":338,"line_end":338,"column_start":8,"column_end":18},"name":"add_assign","qualname":"<FieldElement as core::ops::AddAssign>::add_assign","value":"fn add_assign(&mut Self, &FieldElement)","parent":{"krate":1,"index":3249},"children":[],"decl_id":{"krate":1,"index":3251},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":28905,"byte_end":28908,"line_start":346,"line_end":346,"column_start":8,"column_end":11},"name":"sub","qualname":"<FieldElement as core::ops::Sub>::sub","value":"fn sub(Self, FieldElement) -> FieldElement","parent":{"krate":1,"index":3223},"children":[],"decl_id":{"krate":1,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":29068,"byte_end":29071,"line_start":354,"line_end":354,"column_start":8,"column_end":11},"name":"sub","qualname":"<FieldElement as core::ops::Sub>::sub","value":"fn sub(Self, &FieldElement) -> FieldElement","parent":{"krate":1,"index":3223},"children":[],"decl_id":{"krate":1,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":29204,"byte_end":29214,"line_start":360,"line_end":360,"column_start":8,"column_end":18},"name":"sub_assign","qualname":"<FieldElement as core::ops::SubAssign>::sub_assign","value":"fn sub_assign(&mut Self, FieldElement)","parent":{"krate":1,"index":3253},"children":[],"decl_id":{"krate":1,"index":3255},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":29346,"byte_end":29356,"line_start":366,"line_end":366,"column_start":8,"column_end":18},"name":"sub_assign","qualname":"<FieldElement as core::ops::SubAssign>::sub_assign","value":"fn sub_assign(&mut Self, &FieldElement)","parent":{"krate":1,"index":3253},"children":[],"decl_id":{"krate":1,"index":3255},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":29515,"byte_end":29518,"line_start":374,"line_end":374,"column_start":8,"column_end":11},"name":"mul","qualname":"<FieldElement as core::ops::Mul>::mul","value":"fn mul(Self, FieldElement) -> FieldElement","parent":{"krate":1,"index":3228},"children":[],"decl_id":{"krate":1,"index":3231},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":29701,"byte_end":29704,"line_start":382,"line_end":382,"column_start":8,"column_end":11},"name":"mul","qualname":"<FieldElement as core::ops::Mul>::mul","value":"fn mul(Self, &FieldElement) -> FieldElement","parent":{"krate":1,"index":3228},"children":[],"decl_id":{"krate":1,"index":3231},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":29889,"byte_end":29892,"line_start":390,"line_end":390,"column_start":8,"column_end":11},"name":"mul","qualname":"<&'_ FieldElement as core::ops::Mul>::mul","value":"fn mul(Self, &FieldElement) -> FieldElement","parent":{"krate":1,"index":3228},"children":[],"decl_id":{"krate":1,"index":3231},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":30048,"byte_end":30058,"line_start":396,"line_end":396,"column_start":8,"column_end":18},"name":"mul_assign","qualname":"<FieldElement as core::ops::MulAssign>::mul_assign","value":"fn mul_assign(&mut Self, FieldElement)","parent":{"krate":1,"index":3257},"children":[],"decl_id":{"krate":1,"index":3259},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":30186,"byte_end":30196,"line_start":402,"line_end":402,"column_start":8,"column_end":18},"name":"mul_assign","qualname":"<FieldElement as core::ops::MulAssign>::mul_assign","value":"fn mul_assign(&mut Self, &FieldElement)","parent":{"krate":1,"index":3257},"children":[],"decl_id":{"krate":1,"index":3259},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":30336,"byte_end":30339,"line_start":410,"line_end":410,"column_start":8,"column_end":11},"name":"neg","qualname":"<FieldElement as core::ops::Neg>::neg","value":"fn neg(Self) -> FieldElement","parent":{"krate":1,"index":3245},"children":[],"decl_id":{"krate":1,"index":3247},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":30465,"byte_end":30468,"line_start":418,"line_end":418,"column_start":8,"column_end":11},"name":"neg","qualname":"<&'_ FieldElement as core::ops::Neg>::neg","value":"fn neg(Self) -> FieldElement","parent":{"krate":1,"index":3245},"children":[],"decl_id":{"krate":1,"index":3247},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/mul.rs","byte_start":50214,"byte_end":50221,"line_start":306,"line_end":306,"column_start":8,"column_end":15},"name":"lincomb","qualname":"<ProjectivePoint as elliptic_curve::ops::LinearCombination>::lincomb","value":"fn lincomb(&ProjectivePoint, &Scalar, &ProjectivePoint, &Scalar)\n-> ProjectivePoint","parent":{"krate":4,"index":56},"children":[],"decl_id":{"krate":4,"index":57},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/mul.rs","byte_start":50485,"byte_end":50488,"line_start":319,"line_end":319,"column_start":8,"column_end":11},"name":"mul","qualname":"<ProjectivePoint as core::ops::Mul>::mul","value":"fn mul(Self, Scalar) -> ProjectivePoint","parent":{"krate":1,"index":3228},"children":[],"decl_id":{"krate":1,"index":3231},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/mul.rs","byte_start":50651,"byte_end":50654,"line_start":327,"line_end":327,"column_start":8,"column_end":11},"name":"mul","qualname":"<&'_ ProjectivePoint as core::ops::Mul>::mul","value":"fn mul(Self, &Scalar) -> ProjectivePoint","parent":{"krate":1,"index":3228},"children":[],"decl_id":{"krate":1,"index":3231},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/mul.rs","byte_start":50815,"byte_end":50818,"line_start":335,"line_end":335,"column_start":8,"column_end":11},"name":"mul","qualname":"<ProjectivePoint as core::ops::Mul>::mul","value":"fn mul(Self, &Scalar) -> ProjectivePoint","parent":{"krate":1,"index":3228},"children":[],"decl_id":{"krate":1,"index":3231},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/mul.rs","byte_start":50949,"byte_end":50959,"line_start":341,"line_end":341,"column_start":8,"column_end":18},"name":"mul_assign","qualname":"<ProjectivePoint as core::ops::MulAssign>::mul_assign","value":"fn mul_assign(&mut Self, Scalar)","parent":{"krate":1,"index":3257},"children":[],"decl_id":{"krate":1,"index":3259},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/mul.rs","byte_start":51081,"byte_end":51091,"line_start":347,"line_end":347,"column_start":8,"column_end":18},"name":"mul_assign","qualname":"<ProjectivePoint as core::ops::MulAssign>::mul_assign","value":"fn mul_assign(&mut Self, &Scalar)","parent":{"krate":1,"index":3257},"children":[],"decl_id":{"krate":1,"index":3259},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1915},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":53005,"byte_end":53020,"line_start":43,"line_end":43,"column_start":12,"column_end":27},"name":"ProjectivePoint","qualname":"::arithmetic::projective::ProjectivePoint","value":"ProjectivePoint {  }","parent":null,"children":[{"krate":0,"index":1916},{"krate":0,"index":1917},{"krate":0,"index":1918}],"decl_id":null,"docs":" A point on the secp256k1 curve in projective coordinates.\n","sig":null,"attributes":[{"value":"/ A point on the secp256k1 curve in projective coordinates.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":52848,"byte_end":52909,"line_start":40,"line_end":40,"column_start":1,"column_end":62}}]},{"kind":"Const","id":{"krate":0,"index":520},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":53189,"byte_end":53197,"line_start":51,"line_end":51,"column_start":15,"column_end":23},"name":"IDENTITY","qualname":"::arithmetic::projective::ProjectivePoint::IDENTITY","value":"Self","parent":{"krate":0,"index":519},"children":[],"decl_id":null,"docs":" Additive identity of the group: the point at infinity.\n","sig":null,"attributes":[{"value":"/ Additive identity of the group: the point at infinity.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":53116,"byte_end":53174,"line_start":50,"line_end":50,"column_start":5,"column_end":63}}]},{"kind":"Const","id":{"krate":0,"index":521},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":53360,"byte_end":53369,"line_start":58,"line_end":58,"column_start":15,"column_end":24},"name":"GENERATOR","qualname":"::arithmetic::projective::ProjectivePoint::GENERATOR","value":"Self","parent":{"krate":0,"index":519},"children":[],"decl_id":null,"docs":" Base point of secp256k1.\n","sig":null,"attributes":[{"value":"/ Base point of secp256k1.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":53317,"byte_end":53345,"line_start":57,"line_end":57,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":53720,"byte_end":53728,"line_start":67,"line_end":67,"column_start":18,"column_end":26},"name":"identity","qualname":"<ProjectivePoint>::identity","value":"const fn identity() -> ProjectivePoint","parent":null,"children":[],"decl_id":null,"docs":" Returns the additive identity of SECP256k1, also known as the \"neutral element\" or\n \"point at infinity\".\n","sig":null,"attributes":[{"value":"/ Returns the additive identity of SECP256k1, also known as the \"neutral element\" or","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":53501,"byte_end":53587,"line_start":64,"line_end":64,"column_start":5,"column_end":91}},{"value":"/ \"point at infinity\".","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":53592,"byte_end":53616,"line_start":65,"line_end":65,"column_start":5,"column_end":29}},{"value":"deprecated(since = \"0.10.2\", note =\n\"use `ProjectivePoint::IDENTITY` instead\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":53621,"byte_end":53702,"line_start":66,"line_end":66,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":53925,"byte_end":53934,"line_start":73,"line_end":73,"column_start":12,"column_end":21},"name":"generator","qualname":"<ProjectivePoint>::generator","value":"fn generator() -> ProjectivePoint","parent":null,"children":[],"decl_id":null,"docs":" Returns the base point of SECP256k1.\n","sig":null,"attributes":[{"value":"/ Returns the base point of SECP256k1.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":53786,"byte_end":53826,"line_start":71,"line_end":71,"column_start":5,"column_end":45}},{"value":"deprecated(since = \"0.10.2\", note =\n\"use `ProjectivePoint::GENERATOR` instead\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":53831,"byte_end":53913,"line_start":72,"line_end":72,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":54090,"byte_end":54099,"line_start":78,"line_end":78,"column_start":12,"column_end":21},"name":"to_affine","qualname":"<ProjectivePoint>::to_affine","value":"fn to_affine(&Self) -> AffinePoint","parent":null,"children":[],"decl_id":null,"docs":" Returns the affine representation of this point, or `None` if it is the identity.\n","sig":null,"attributes":[{"value":"/ Returns the affine representation of this point, or `None` if it is the identity.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":53993,"byte_end":54078,"line_start":77,"line_end":77,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":57681,"byte_end":57687,"line_start":177,"line_end":177,"column_start":12,"column_end":18},"name":"double","qualname":"<ProjectivePoint>::double","value":"fn double(&Self) -> ProjectivePoint","parent":null,"children":[],"decl_id":null,"docs":" Doubles this point.\n","sig":null,"attributes":[{"value":"/ Doubles this point.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":57632,"byte_end":57655,"line_start":175,"line_end":175,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":57660,"byte_end":57669,"line_start":176,"line_end":176,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":59094,"byte_end":59106,"line_start":220,"line_end":220,"column_start":12,"column_end":24},"name":"endomorphism","qualname":"<ProjectivePoint>::endomorphism","value":"fn endomorphism(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates SECP256k1 endomorphism: `self * lambda`.\n","sig":null,"attributes":[{"value":"/ Calculates SECP256k1 endomorphism: `self * lambda`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":59027,"byte_end":59082,"line_start":219,"line_end":219,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":59300,"byte_end":59304,"line_start":230,"line_end":230,"column_start":8,"column_end":12},"name":"from","qualname":"<ProjectivePoint as core::convert::From>::from","value":"fn from(AffinePoint) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":59603,"byte_end":59607,"line_start":241,"line_end":241,"column_start":8,"column_end":12},"name":"from","qualname":"<ProjectivePoint as core::convert::From>::from","value":"fn from(&AffinePoint) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":59719,"byte_end":59723,"line_start":247,"line_end":247,"column_start":8,"column_end":12},"name":"from","qualname":"<AffinePoint as core::convert::From>::from","value":"fn from(ProjectivePoint) -> AffinePoint","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":59845,"byte_end":59849,"line_start":253,"line_end":253,"column_start":8,"column_end":12},"name":"from","qualname":"<AffinePoint as core::convert::From>::from","value":"fn from(&ProjectivePoint) -> AffinePoint","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":59981,"byte_end":59999,"line_start":259,"line_end":259,"column_start":8,"column_end":26},"name":"from_encoded_point","qualname":"<ProjectivePoint as elliptic_curve::sec1::FromEncodedPoint>::from_encoded_point","value":"fn from_encoded_point(&EncodedPoint) -> CtOption<Self>","parent":{"krate":4,"index":120},"children":[],"decl_id":{"krate":4,"index":122},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":60177,"byte_end":60193,"line_start":265,"line_end":265,"column_start":8,"column_end":24},"name":"to_encoded_point","qualname":"<ProjectivePoint as elliptic_curve::sec1::ToEncodedPoint>::to_encoded_point","value":"fn to_encoded_point(&Self, bool) -> EncodedPoint","parent":{"krate":4,"index":123},"children":[],"decl_id":{"krate":4,"index":125},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":60354,"byte_end":60372,"line_start":271,"line_end":271,"column_start":8,"column_end":26},"name":"conditional_select","qualname":"<ProjectivePoint as elliptic_curve::subtle::ConditionallySelectable>::conditional_select","value":"fn conditional_select(&Self, &Self, Choice) -> Self","parent":{"krate":24,"index":66},"children":[],"decl_id":{"krate":24,"index":67},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":60720,"byte_end":60725,"line_start":281,"line_end":281,"column_start":8,"column_end":13},"name":"ct_eq","qualname":"<ProjectivePoint as elliptic_curve::subtle::ConstantTimeEq>::ct_eq","value":"fn ct_eq(&Self, &Self) -> Choice","parent":{"krate":24,"index":58},"children":[],"decl_id":{"krate":24,"index":59},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":60863,"byte_end":60865,"line_start":287,"line_end":287,"column_start":8,"column_end":10},"name":"eq","qualname":"<ProjectivePoint as core::cmp::PartialEq>::eq","value":"fn eq(&Self, &Self) -> bool","parent":{"krate":1,"index":2802},"children":[],"decl_id":{"krate":1,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":61038,"byte_end":61044,"line_start":297,"line_end":297,"column_start":8,"column_end":14},"name":"random","qualname":"<ProjectivePoint as elliptic_curve::Group>::random","value":"fn random<impl RngCore>(impl RngCore) -> Self where impl RngCore: RngCore","parent":{"krate":30,"index":176},"children":[],"decl_id":{"krate":30,"index":179},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":61143,"byte_end":61151,"line_start":301,"line_end":301,"column_start":8,"column_end":16},"name":"identity","qualname":"<ProjectivePoint as elliptic_curve::Group>::identity","value":"fn identity() -> Self","parent":{"krate":30,"index":176},"children":[],"decl_id":{"krate":30,"index":181},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":61201,"byte_end":61210,"line_start":305,"line_end":305,"column_start":8,"column_end":17},"name":"generator","qualname":"<ProjectivePoint as elliptic_curve::Group>::generator","value":"fn generator() -> Self","parent":{"krate":30,"index":176},"children":[],"decl_id":{"krate":30,"index":182},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":61261,"byte_end":61272,"line_start":309,"line_end":309,"column_start":8,"column_end":19},"name":"is_identity","qualname":"<ProjectivePoint as elliptic_curve::Group>::is_identity","value":"fn is_identity(&Self) -> Choice","parent":{"krate":30,"index":176},"children":[],"decl_id":{"krate":30,"index":183},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":61358,"byte_end":61364,"line_start":314,"line_end":314,"column_start":8,"column_end":14},"name":"double","qualname":"<ProjectivePoint as elliptic_curve::Group>::double","value":"fn double(&Self) -> Self","parent":{"krate":30,"index":176},"children":[],"decl_id":{"krate":30,"index":184},"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":61339,"byte_end":61350,"line_start":313,"line_end":313,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":61500,"byte_end":61510,"line_start":322,"line_end":322,"column_start":8,"column_end":18},"name":"from_bytes","qualname":"<ProjectivePoint as elliptic_curve::group::GroupEncoding>::from_bytes","value":"fn from_bytes(&Self::Repr) -> CtOption<Self>","parent":{"krate":30,"index":189},"children":[],"decl_id":{"krate":30,"index":191},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":61639,"byte_end":61659,"line_start":326,"line_end":326,"column_start":8,"column_end":28},"name":"from_bytes_unchecked","qualname":"<ProjectivePoint as elliptic_curve::group::GroupEncoding>::from_bytes_unchecked","value":"fn from_bytes_unchecked(&Self::Repr) -> CtOption<Self>","parent":{"krate":30,"index":189},"children":[],"decl_id":{"krate":30,"index":192},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":61812,"byte_end":61820,"line_start":331,"line_end":331,"column_start":8,"column_end":16},"name":"to_bytes","qualname":"<ProjectivePoint as elliptic_curve::group::GroupEncoding>::to_bytes","value":"fn to_bytes(&Self) -> Self::Repr","parent":{"krate":30,"index":189},"children":[],"decl_id":{"krate":30,"index":193},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":62005,"byte_end":62014,"line_start":341,"line_end":341,"column_start":8,"column_end":17},"name":"to_affine","qualname":"<ProjectivePoint as elliptic_curve::group::Curve>::to_affine","value":"fn to_affine(&Self) -> AffinePoint","parent":{"krate":30,"index":185},"children":[],"decl_id":{"krate":30,"index":188},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":62203,"byte_end":62210,"line_start":351,"line_end":351,"column_start":8,"column_end":15},"name":"default","qualname":"<ProjectivePoint as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3128},"children":[],"decl_id":{"krate":1,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":62393,"byte_end":62396,"line_start":361,"line_end":361,"column_start":8,"column_end":11},"name":"add","qualname":"<&'_ ProjectivePoint as core::ops::Add>::add","value":"fn add(Self, &ProjectivePoint) -> ProjectivePoint","parent":{"krate":1,"index":3218},"children":[],"decl_id":{"krate":1,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":62591,"byte_end":62594,"line_start":369,"line_end":369,"column_start":8,"column_end":11},"name":"add","qualname":"<ProjectivePoint as core::ops::Add>::add","value":"fn add(Self, ProjectivePoint) -> ProjectivePoint","parent":{"krate":1,"index":3218},"children":[],"decl_id":{"krate":1,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":62791,"byte_end":62794,"line_start":377,"line_end":377,"column_start":8,"column_end":11},"name":"add","qualname":"<ProjectivePoint as core::ops::Add>::add","value":"fn add(Self, &ProjectivePoint) -> ProjectivePoint","parent":{"krate":1,"index":3218},"children":[],"decl_id":{"krate":1,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":62960,"byte_end":62970,"line_start":383,"line_end":383,"column_start":8,"column_end":18},"name":"add_assign","qualname":"<ProjectivePoint as core::ops::AddAssign>::add_assign","value":"fn add_assign(&mut Self, ProjectivePoint)","parent":{"krate":1,"index":3249},"children":[],"decl_id":{"krate":1,"index":3251},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":63127,"byte_end":63137,"line_start":389,"line_end":389,"column_start":8,"column_end":18},"name":"add_assign","qualname":"<ProjectivePoint as core::ops::AddAssign>::add_assign","value":"fn add_assign(&mut Self, &ProjectivePoint)","parent":{"krate":1,"index":3249},"children":[],"decl_id":{"krate":1,"index":3251},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":63319,"byte_end":63322,"line_start":397,"line_end":397,"column_start":8,"column_end":11},"name":"add","qualname":"<ProjectivePoint as core::ops::Add>::add","value":"fn add(Self, AffinePoint) -> ProjectivePoint","parent":{"krate":1,"index":3218},"children":[],"decl_id":{"krate":1,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":63518,"byte_end":63521,"line_start":405,"line_end":405,"column_start":8,"column_end":11},"name":"add","qualname":"<&'_ ProjectivePoint as core::ops::Add>::add","value":"fn add(Self, &AffinePoint) -> ProjectivePoint","parent":{"krate":1,"index":3218},"children":[],"decl_id":{"krate":1,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":63715,"byte_end":63718,"line_start":413,"line_end":413,"column_start":8,"column_end":11},"name":"add","qualname":"<ProjectivePoint as core::ops::Add>::add","value":"fn add(Self, &AffinePoint) -> ProjectivePoint","parent":{"krate":1,"index":3218},"children":[],"decl_id":{"krate":1,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":63882,"byte_end":63892,"line_start":419,"line_end":419,"column_start":8,"column_end":18},"name":"add_assign","qualname":"<ProjectivePoint as core::ops::AddAssign>::add_assign","value":"fn add_assign(&mut Self, AffinePoint)","parent":{"krate":1,"index":3249},"children":[],"decl_id":{"krate":1,"index":3251},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":64047,"byte_end":64057,"line_start":425,"line_end":425,"column_start":8,"column_end":18},"name":"add_assign","qualname":"<ProjectivePoint as core::ops::AddAssign>::add_assign","value":"fn add_assign(&mut Self, &AffinePoint)","parent":{"krate":1,"index":3249},"children":[],"decl_id":{"krate":1,"index":3251},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":64192,"byte_end":64195,"line_start":431,"line_end":431,"column_start":8,"column_end":11},"name":"sum","qualname":"<ProjectivePoint as core::iter::Sum>::sum","value":"fn sum<I>(I) -> Self where I: Iterator<Item = Self>","parent":{"krate":1,"index":7950},"children":[],"decl_id":{"krate":1,"index":7952},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":64372,"byte_end":64375,"line_start":437,"line_end":437,"column_start":8,"column_end":11},"name":"sum","qualname":"<ProjectivePoint as core::iter::Sum>::sum","value":"fn sum<I>(I) -> Self where I: Iterator<Item = &'a ProjectivePoint>","parent":{"krate":1,"index":7950},"children":[],"decl_id":{"krate":1,"index":7952},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":64564,"byte_end":64567,"line_start":445,"line_end":445,"column_start":8,"column_end":11},"name":"sub","qualname":"<ProjectivePoint as core::ops::Sub>::sub","value":"fn sub(Self, ProjectivePoint) -> ProjectivePoint","parent":{"krate":1,"index":3223},"children":[],"decl_id":{"krate":1,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":64765,"byte_end":64768,"line_start":453,"line_end":453,"column_start":8,"column_end":11},"name":"sub","qualname":"<&'_ ProjectivePoint as core::ops::Sub>::sub","value":"fn sub(Self, &ProjectivePoint) -> ProjectivePoint","parent":{"krate":1,"index":3223},"children":[],"decl_id":{"krate":1,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":64964,"byte_end":64967,"line_start":461,"line_end":461,"column_start":8,"column_end":11},"name":"sub","qualname":"<ProjectivePoint as core::ops::Sub>::sub","value":"fn sub(Self, &ProjectivePoint) -> ProjectivePoint","parent":{"krate":1,"index":3223},"children":[],"decl_id":{"krate":1,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":65133,"byte_end":65143,"line_start":467,"line_end":467,"column_start":8,"column_end":18},"name":"sub_assign","qualname":"<ProjectivePoint as core::ops::SubAssign>::sub_assign","value":"fn sub_assign(&mut Self, ProjectivePoint)","parent":{"krate":1,"index":3253},"children":[],"decl_id":{"krate":1,"index":3255},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":65300,"byte_end":65310,"line_start":473,"line_end":473,"column_start":8,"column_end":18},"name":"sub_assign","qualname":"<ProjectivePoint as core::ops::SubAssign>::sub_assign","value":"fn sub_assign(&mut Self, &ProjectivePoint)","parent":{"krate":1,"index":3253},"children":[],"decl_id":{"krate":1,"index":3255},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":65492,"byte_end":65495,"line_start":481,"line_end":481,"column_start":8,"column_end":11},"name":"sub","qualname":"<ProjectivePoint as core::ops::Sub>::sub","value":"fn sub(Self, AffinePoint) -> ProjectivePoint","parent":{"krate":1,"index":3223},"children":[],"decl_id":{"krate":1,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":65691,"byte_end":65694,"line_start":489,"line_end":489,"column_start":8,"column_end":11},"name":"sub","qualname":"<&'_ ProjectivePoint as core::ops::Sub>::sub","value":"fn sub(Self, &AffinePoint) -> ProjectivePoint","parent":{"krate":1,"index":3223},"children":[],"decl_id":{"krate":1,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":65888,"byte_end":65891,"line_start":497,"line_end":497,"column_start":8,"column_end":11},"name":"sub","qualname":"<ProjectivePoint as core::ops::Sub>::sub","value":"fn sub(Self, &AffinePoint) -> ProjectivePoint","parent":{"krate":1,"index":3223},"children":[],"decl_id":{"krate":1,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":66055,"byte_end":66065,"line_start":503,"line_end":503,"column_start":8,"column_end":18},"name":"sub_assign","qualname":"<ProjectivePoint as core::ops::SubAssign>::sub_assign","value":"fn sub_assign(&mut Self, AffinePoint)","parent":{"krate":1,"index":3253},"children":[],"decl_id":{"krate":1,"index":3255},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":66220,"byte_end":66230,"line_start":509,"line_end":509,"column_start":8,"column_end":18},"name":"sub_assign","qualname":"<ProjectivePoint as core::ops::SubAssign>::sub_assign","value":"fn sub_assign(&mut Self, &AffinePoint)","parent":{"krate":1,"index":3253},"children":[],"decl_id":{"krate":1,"index":3255},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":66401,"byte_end":66404,"line_start":517,"line_end":517,"column_start":8,"column_end":11},"name":"neg","qualname":"<ProjectivePoint as core::ops::Neg>::neg","value":"fn neg(Self) -> ProjectivePoint","parent":{"krate":1,"index":3245},"children":[],"decl_id":{"krate":1,"index":3247},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":66559,"byte_end":66562,"line_start":525,"line_end":525,"column_start":8,"column_end":11},"name":"neg","qualname":"<&'a ProjectivePoint as core::ops::Neg>::neg","value":"fn neg(Self) -> ProjectivePoint","parent":{"krate":1,"index":3245},"children":[],"decl_id":{"krate":1,"index":3247},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":66684,"byte_end":66688,"line_start":531,"line_end":531,"column_start":8,"column_end":12},"name":"from","qualname":"<ProjectivePoint as core::convert::From>::from","value":"fn from(PublicKey) -> ProjectivePoint","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":66838,"byte_end":66842,"line_start":537,"line_end":537,"column_start":8,"column_end":12},"name":"from","qualname":"<ProjectivePoint as core::convert::From>::from","value":"fn from(&PublicKey) -> ProjectivePoint","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":67020,"byte_end":67028,"line_start":545,"line_end":545,"column_start":8,"column_end":16},"name":"try_from","qualname":"<PublicKey as core::convert::TryFrom>::try_from","value":"fn try_from(ProjectivePoint) -> Result<PublicKey>","parent":{"krate":1,"index":3063},"children":[],"decl_id":{"krate":1,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":67208,"byte_end":67216,"line_start":553,"line_end":553,"column_start":8,"column_end":16},"name":"try_from","qualname":"<PublicKey as core::convert::TryFrom>::try_from","value":"fn try_from(&ProjectivePoint) -> Result<PublicKey>","parent":{"krate":1,"index":3063},"children":[],"decl_id":{"krate":1,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1934},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":75100,"byte_end":75106,"line_start":78,"line_end":78,"column_start":12,"column_end":18},"name":"Scalar","qualname":"::arithmetic::scalar::Scalar","value":"","parent":null,"children":[],"decl_id":null,"docs":" Scalars are elements in the finite field modulo n.","sig":null,"attributes":[{"value":"/ Scalars are elements in the finite field modulo n.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":73445,"byte_end":73499,"line_start":45,"line_end":45,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":73500,"byte_end":73503,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Trait impls","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":73504,"byte_end":73521,"line_start":47,"line_end":47,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":73522,"byte_end":73525,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Much of the important functionality of scalars is provided by traits from","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":73526,"byte_end":73603,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/ the [`ff`](https://docs.rs/ff/) crate, which is re-exported as","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":73604,"byte_end":73670,"line_start":50,"line_end":50,"column_start":1,"column_end":67}},{"value":"/ `k256::elliptic_curve::ff`:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":73671,"byte_end":73702,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":73703,"byte_end":73706,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ - [`Field`](https://docs.rs/ff/latest/ff/trait.Field.html) -","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":73707,"byte_end":73771,"line_start":53,"line_end":53,"column_start":1,"column_end":65}},{"value":"/   represents elements of finite fields and provides:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":73772,"byte_end":73828,"line_start":54,"line_end":54,"column_start":1,"column_end":57}},{"value":"/   - [`Field::random`](https://docs.rs/ff/latest/ff/trait.Field.html#tymethod.random) -","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":73829,"byte_end":73919,"line_start":55,"line_end":55,"column_start":1,"column_end":91}},{"value":"/     generate a random scalar","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":73920,"byte_end":73952,"line_start":56,"line_end":56,"column_start":1,"column_end":33}},{"value":"/   - `double`, `square`, and `invert` operations","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":73953,"byte_end":74004,"line_start":57,"line_end":57,"column_start":1,"column_end":52}},{"value":"/   - Bounds for [`Add`], [`Sub`], [`Mul`], and [`Neg`] (as well as `*Assign` equivalents)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":74005,"byte_end":74097,"line_start":58,"line_end":58,"column_start":1,"column_end":93}},{"value":"/   - Bounds for [`ConditionallySelectable`] from the `subtle` crate","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":74098,"byte_end":74168,"line_start":59,"line_end":59,"column_start":1,"column_end":71}},{"value":"/ - [`PrimeField`](https://docs.rs/ff/latest/ff/trait.PrimeField.html) -","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":74169,"byte_end":74243,"line_start":60,"line_end":60,"column_start":1,"column_end":75}},{"value":"/   represents elements of prime fields and provides:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":74244,"byte_end":74299,"line_start":61,"line_end":61,"column_start":1,"column_end":56}},{"value":"/   - `from_repr`/`to_repr` for converting field elements from/to big integers.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":74300,"byte_end":74381,"line_start":62,"line_end":62,"column_start":1,"column_end":82}},{"value":"/   - `multiplicative_generator` and `root_of_unity` constants.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":74382,"byte_end":74447,"line_start":63,"line_end":63,"column_start":1,"column_end":66}},{"value":"/ - [`PrimeFieldBits`](https://docs.rs/ff/latest/ff/trait.PrimeFieldBits.html) -","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":74448,"byte_end":74530,"line_start":64,"line_end":64,"column_start":1,"column_end":83}},{"value":"/   operations over field elements represented as bits (requires `bits` feature)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":74531,"byte_end":74613,"line_start":65,"line_end":65,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":74614,"byte_end":74617,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Please see the documentation for the relevant traits for more information.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":74618,"byte_end":74696,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":74697,"byte_end":74700,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # `serde` support","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":74701,"byte_end":74722,"line_start":69,"line_end":69,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":74723,"byte_end":74726,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ When the `serde` feature of this crate is enabled, the `Serialize` and","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":74727,"byte_end":74801,"line_start":71,"line_end":71,"column_start":1,"column_end":75}},{"value":"/ `Deserialize` traits are impl'd for this type.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":74802,"byte_end":74852,"line_start":72,"line_end":72,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":74853,"byte_end":74856,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ The serialization is a fixed-width big endian encoding. When used with","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":74857,"byte_end":74931,"line_start":74,"line_end":74,"column_start":1,"column_end":75}},{"value":"/ textual formats, the binary data is encoded as hexadecimal.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":74932,"byte_end":74995,"line_start":75,"line_end":75,"column_start":1,"column_end":64}}]},{"kind":"Const","id":{"krate":0,"index":818},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":75164,"byte_end":75168,"line_start":82,"line_end":82,"column_start":15,"column_end":19},"name":"ZERO","qualname":"::arithmetic::scalar::Scalar::ZERO","value":"Self","parent":{"krate":0,"index":817},"children":[],"decl_id":null,"docs":" Zero scalar.\n","sig":null,"attributes":[{"value":"/ Zero scalar.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":75133,"byte_end":75149,"line_start":81,"line_end":81,"column_start":5,"column_end":21}}]},{"kind":"Const","id":{"krate":0,"index":819},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":75243,"byte_end":75246,"line_start":85,"line_end":85,"column_start":15,"column_end":18},"name":"ONE","qualname":"::arithmetic::scalar::Scalar::ONE","value":"Self","parent":{"krate":0,"index":817},"children":[],"decl_id":null,"docs":" Multiplicative identity.\n","sig":null,"attributes":[{"value":"/ Multiplicative identity.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":75200,"byte_end":75228,"line_start":84,"line_end":84,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":820},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":75322,"byte_end":75329,"line_start":88,"line_end":88,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<Scalar>::is_zero","value":"fn is_zero(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Checks if the scalar is zero.\n","sig":null,"attributes":[{"value":"/ Checks if the scalar is zero.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":75277,"byte_end":75310,"line_start":87,"line_end":87,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":821},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":75442,"byte_end":75450,"line_start":93,"line_end":93,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<Scalar>::to_bytes","value":"fn to_bytes(&Self) -> FieldBytes","parent":null,"children":[],"decl_id":null,"docs":" Returns the SEC1 encoding of this scalar.\n","sig":null,"attributes":[{"value":"/ Returns the SEC1 encoding of this scalar.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":75385,"byte_end":75430,"line_start":92,"line_end":92,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":75560,"byte_end":75566,"line_start":98,"line_end":98,"column_start":18,"column_end":24},"name":"negate","qualname":"<Scalar>::negate","value":"const fn negate(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Negates the scalar.\n","sig":null,"attributes":[{"value":"/ Negates the scalar.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":75519,"byte_end":75542,"line_start":97,"line_end":97,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":823},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":75679,"byte_end":75682,"line_start":103,"line_end":103,"column_start":18,"column_end":21},"name":"add","qualname":"<Scalar>::add","value":"const fn add(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns self + rhs mod n.\n","sig":null,"attributes":[{"value":"/ Returns self + rhs mod n.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":75632,"byte_end":75661,"line_start":102,"line_end":102,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":75815,"byte_end":75818,"line_start":108,"line_end":108,"column_start":18,"column_end":21},"name":"sub","qualname":"<Scalar>::sub","value":"const fn sub(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns self - rhs mod n.\n","sig":null,"attributes":[{"value":"/ Returns self - rhs mod n.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":75768,"byte_end":75797,"line_start":107,"line_end":107,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":75950,"byte_end":75953,"line_start":113,"line_end":113,"column_start":12,"column_end":15},"name":"mul","qualname":"<Scalar>::mul","value":"fn mul(&Self, &Scalar) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Modulo multiplies two scalars.\n","sig":null,"attributes":[{"value":"/ Modulo multiplies two scalars.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":75904,"byte_end":75938,"line_start":112,"line_end":112,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":76089,"byte_end":76095,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"name":"square","qualname":"<Scalar>::square","value":"fn square(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Modulo squares the scalar.\n","sig":null,"attributes":[{"value":"/ Modulo squares the scalar.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":76047,"byte_end":76077,"line_start":117,"line_end":117,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":827},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":76266,"byte_end":76277,"line_start":125,"line_end":125,"column_start":12,"column_end":23},"name":"shr_vartime","qualname":"<Scalar>::shr_vartime","value":"fn shr_vartime(&Self, usize) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Right shifts the scalar.","sig":null,"attributes":[{"value":"/ Right shifts the scalar.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":76147,"byte_end":76175,"line_start":122,"line_end":122,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":76180,"byte_end":76183,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Note: not constant-time with respect to the `shift` parameter.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":76188,"byte_end":76254,"line_start":124,"line_end":124,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":76397,"byte_end":76403,"line_start":130,"line_end":130,"column_start":12,"column_end":18},"name":"invert","qualname":"<Scalar>::invert","value":"fn invert(&Self) -> CtOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Inverts the scalar.\n","sig":null,"attributes":[{"value":"/ Inverts the scalar.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":76362,"byte_end":76385,"line_start":129,"line_end":129,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":829},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":78353,"byte_end":78368,"line_start":187,"line_end":187,"column_start":12,"column_end":27},"name":"generate_biased","qualname":"<Scalar>::generate_biased","value":"fn generate_biased<impl CryptoRng + RngCore>(impl CryptoRng + RngCore) -> Self\nwhere impl CryptoRng + RngCore: CryptoRng + RngCore","parent":null,"children":[],"decl_id":null,"docs":" Returns a (nearly) uniformly-random scalar, generated in constant time.\n","sig":null,"attributes":[{"value":"/ Returns a (nearly) uniformly-random scalar, generated in constant time.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":78266,"byte_end":78341,"line_start":186,"line_end":186,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":78868,"byte_end":78884,"line_start":197,"line_end":197,"column_start":12,"column_end":28},"name":"generate_vartime","qualname":"<Scalar>::generate_vartime","value":"fn generate_vartime<impl RngCore>(impl RngCore) -> Self where\nimpl RngCore: RngCore","parent":null,"children":[],"decl_id":null,"docs":" Returns a uniformly-random scalar, generated using rejection sampling.\n","sig":null,"attributes":[{"value":"/ Returns a uniformly-random scalar, generated using rejection sampling.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":78715,"byte_end":78789,"line_start":195,"line_end":195,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":79726,"byte_end":79732,"line_start":226,"line_end":226,"column_start":8,"column_end":14},"name":"random","qualname":"<Scalar as elliptic_curve::Field>::random","value":"fn random<impl RngCore>(impl RngCore) -> Self where impl RngCore: RngCore","parent":{"krate":31,"index":62},"children":[],"decl_id":{"krate":31,"index":69},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":80303,"byte_end":80307,"line_start":239,"line_end":239,"column_start":8,"column_end":12},"name":"zero","qualname":"<Scalar as elliptic_curve::Field>::zero","value":"fn zero() -> Self","parent":{"krate":31,"index":62},"children":[],"decl_id":{"krate":31,"index":71},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":80353,"byte_end":80356,"line_start":243,"line_end":243,"column_start":8,"column_end":11},"name":"one","qualname":"<Scalar as elliptic_curve::Field>::one","value":"fn one() -> Self","parent":{"krate":31,"index":62},"children":[],"decl_id":{"krate":31,"index":72},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":80417,"byte_end":80423,"line_start":248,"line_end":248,"column_start":8,"column_end":14},"name":"square","qualname":"<Scalar as elliptic_curve::Field>::square","value":"fn square(&Self) -> Self","parent":{"krate":31,"index":62},"children":[],"decl_id":{"krate":31,"index":75},"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":80398,"byte_end":80409,"line_start":247,"line_end":247,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":80500,"byte_end":80506,"line_start":253,"line_end":253,"column_start":8,"column_end":14},"name":"double","qualname":"<Scalar as elliptic_curve::Field>::double","value":"fn double(&Self) -> Self","parent":{"krate":31,"index":62},"children":[],"decl_id":{"krate":31,"index":77},"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":80481,"byte_end":80492,"line_start":252,"line_end":252,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":80561,"byte_end":80567,"line_start":257,"line_end":257,"column_start":8,"column_end":14},"name":"invert","qualname":"<Scalar as elliptic_curve::Field>::invert","value":"fn invert(&Self) -> CtOption<Self>","parent":{"krate":31,"index":62},"children":[],"decl_id":{"krate":31,"index":78},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":80804,"byte_end":80808,"line_start":264,"line_end":264,"column_start":8,"column_end":12},"name":"sqrt","qualname":"<Scalar as elliptic_curve::Field>::sqrt","value":"fn sqrt(&Self) -> CtOption<Self>","parent":{"krate":31,"index":62},"children":[],"decl_id":{"krate":31,"index":79},"docs":" Tonelli-Shank's algorithm for q mod 16 = 1\n <https://eprint.iacr.org/2012/685.pdf> (page 12, algorithm 5)\n","sig":null,"attributes":[{"value":"/ Tonelli-Shank's algorithm for q mod 16 = 1","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":80635,"byte_end":80681,"line_start":261,"line_end":261,"column_start":5,"column_end":51}},{"value":"/ <https://eprint.iacr.org/2012/685.pdf> (page 12, algorithm 5)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":80686,"byte_end":80751,"line_start":262,"line_end":262,"column_start":5,"column_end":70}},{"value":"allow(clippy :: many_single_char_names)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":80756,"byte_end":80796,"line_start":263,"line_end":263,"column_start":5,"column_end":45}}]},{"kind":"Const","id":{"krate":0,"index":848},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":82223,"byte_end":82231,"line_start":307,"line_end":307,"column_start":11,"column_end":19},"name":"NUM_BITS","qualname":"::<arithmetic::scalar::Scalar as elliptic_curve::PrimeField>::NUM_BITS","value":"u32","parent":{"krate":0,"index":846},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":849},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":82254,"byte_end":82262,"line_start":308,"line_end":308,"column_start":11,"column_end":19},"name":"CAPACITY","qualname":"::<arithmetic::scalar::Scalar as elliptic_curve::PrimeField>::CAPACITY","value":"u32","parent":{"krate":0,"index":846},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":850},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":82285,"byte_end":82286,"line_start":309,"line_end":309,"column_start":11,"column_end":12},"name":"S","qualname":"::<arithmetic::scalar::Scalar as elliptic_curve::PrimeField>::S","value":"u32","parent":{"krate":0,"index":846},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":82493,"byte_end":82502,"line_start":315,"line_end":315,"column_start":8,"column_end":17},"name":"from_repr","qualname":"<Scalar as elliptic_curve::PrimeField>::from_repr","value":"fn from_repr(FieldBytes) -> CtOption<Self>","parent":{"krate":31,"index":82},"children":[],"decl_id":{"krate":31,"index":85},"docs":" Attempts to parse the given byte array as an SEC1-encoded scalar.","sig":null,"attributes":[{"value":"/ Attempts to parse the given byte array as an SEC1-encoded scalar.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":82302,"byte_end":82371,"line_start":311,"line_end":311,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":82376,"byte_end":82379,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Returns None if the byte array does not contain a big-endian integer in the range","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":82384,"byte_end":82469,"line_start":313,"line_end":313,"column_start":5,"column_end":90}},{"value":"/ [0, p).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":82474,"byte_end":82485,"line_start":314,"line_end":314,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":82676,"byte_end":82683,"line_start":320,"line_end":320,"column_start":8,"column_end":15},"name":"to_repr","qualname":"<Scalar as elliptic_curve::PrimeField>::to_repr","value":"fn to_repr(&Self) -> FieldBytes","parent":{"krate":31,"index":82},"children":[],"decl_id":{"krate":31,"index":87},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":82745,"byte_end":82751,"line_start":324,"line_end":324,"column_start":8,"column_end":14},"name":"is_odd","qualname":"<Scalar as elliptic_curve::PrimeField>::is_odd","value":"fn is_odd(&Self) -> Choice","parent":{"krate":31,"index":82},"children":[],"decl_id":{"krate":31,"index":88},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":82809,"byte_end":82833,"line_start":328,"line_end":328,"column_start":8,"column_end":32},"name":"multiplicative_generator","qualname":"<Scalar as elliptic_curve::PrimeField>::multiplicative_generator","value":"fn multiplicative_generator() -> Self","parent":{"krate":31,"index":82},"children":[],"decl_id":{"krate":31,"index":92},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":82880,"byte_end":82893,"line_start":332,"line_end":332,"column_start":8,"column_end":21},"name":"root_of_unity","qualname":"<Scalar as elliptic_curve::PrimeField>::root_of_unity","value":"fn root_of_unity() -> Self","parent":{"krate":31,"index":82},"children":[],"decl_id":{"krate":31,"index":94},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":83672,"byte_end":83676,"line_start":363,"line_end":363,"column_start":8,"column_end":12},"name":"from","qualname":"<Scalar as core::convert::From>::from","value":"fn from(u32) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":83768,"byte_end":83772,"line_start":369,"line_end":369,"column_start":8,"column_end":12},"name":"from","qualname":"<Scalar as core::convert::From>::from","value":"fn from(u64) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":83876,"byte_end":83880,"line_start":375,"line_end":375,"column_start":8,"column_end":12},"name":"from","qualname":"<Scalar as core::convert::From>::from","value":"fn from(ScalarCore<Secp256k1>) -> Scalar","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":84021,"byte_end":84025,"line_start":381,"line_end":381,"column_start":8,"column_end":12},"name":"from","qualname":"<Scalar as core::convert::From>::from","value":"fn from(&ScalarCore<Secp256k1>) -> Scalar","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":84166,"byte_end":84170,"line_start":387,"line_end":387,"column_start":8,"column_end":12},"name":"from","qualname":"<ScalarCore<Secp256k1> as core::convert::From>::from","value":"fn from(Scalar) -> ScalarCore<Secp256k1>","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":84311,"byte_end":84315,"line_start":393,"line_end":393,"column_start":8,"column_end":12},"name":"from","qualname":"<ScalarCore<Secp256k1> as core::convert::From>::from","value":"fn from(&Scalar) -> ScalarCore<Secp256k1>","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":84444,"byte_end":84451,"line_start":399,"line_end":399,"column_start":8,"column_end":15},"name":"is_high","qualname":"<Scalar as elliptic_curve::IsHigh>::is_high","value":"fn is_high(&Self) -> Choice","parent":{"krate":4,"index":602},"children":[],"decl_id":{"krate":4,"index":603},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":84579,"byte_end":84582,"line_start":407,"line_end":407,"column_start":8,"column_end":11},"name":"shr","qualname":"<Scalar as core::ops::Shr>::shr","value":"fn shr(Self, usize) -> Self::Output","parent":{"krate":1,"index":3298},"children":[],"decl_id":{"krate":1,"index":3301},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":84722,"byte_end":84725,"line_start":415,"line_end":415,"column_start":8,"column_end":11},"name":"shr","qualname":"<&'_ Scalar as core::ops::Shr>::shr","value":"fn shr(Self, usize) -> Self::Output","parent":{"krate":1,"index":3298},"children":[],"decl_id":{"krate":1,"index":3301},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":84850,"byte_end":84868,"line_start":421,"line_end":421,"column_start":8,"column_end":26},"name":"conditional_select","qualname":"<Scalar as elliptic_curve::subtle::ConditionallySelectable>::conditional_select","value":"fn conditional_select(&Self, &Self, Choice) -> Self","parent":{"krate":24,"index":66},"children":[],"decl_id":{"krate":24,"index":67},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":85023,"byte_end":85028,"line_start":427,"line_end":427,"column_start":8,"column_end":13},"name":"ct_eq","qualname":"<Scalar as elliptic_curve::subtle::ConstantTimeEq>::ct_eq","value":"fn ct_eq(&Self, &Self) -> Choice","parent":{"krate":24,"index":58},"children":[],"decl_id":{"krate":24,"index":59},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":85139,"byte_end":85141,"line_start":433,"line_end":433,"column_start":8,"column_end":10},"name":"eq","qualname":"<Scalar as core::cmp::PartialEq>::eq","value":"fn eq(&Self, &Self) -> bool","parent":{"krate":1,"index":2802},"children":[],"decl_id":{"krate":1,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":85294,"byte_end":85297,"line_start":443,"line_end":443,"column_start":8,"column_end":11},"name":"neg","qualname":"<Scalar as core::ops::Neg>::neg","value":"fn neg(Self) -> Scalar","parent":{"krate":1,"index":3245},"children":[],"decl_id":{"krate":1,"index":3247},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":85404,"byte_end":85407,"line_start":451,"line_end":451,"column_start":8,"column_end":11},"name":"neg","qualname":"<&'_ Scalar as core::ops::Neg>::neg","value":"fn neg(Self) -> Scalar","parent":{"krate":1,"index":3245},"children":[],"decl_id":{"krate":1,"index":3247},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":85521,"byte_end":85524,"line_start":459,"line_end":459,"column_start":8,"column_end":11},"name":"add","qualname":"<Scalar as core::ops::Add>::add","value":"fn add(Self, Scalar) -> Scalar","parent":{"krate":1,"index":3218},"children":[],"decl_id":{"krate":1,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":85668,"byte_end":85671,"line_start":467,"line_end":467,"column_start":8,"column_end":11},"name":"add","qualname":"<&'_ Scalar as core::ops::Add>::add","value":"fn add(Self, &Scalar) -> Scalar","parent":{"krate":1,"index":3218},"children":[],"decl_id":{"krate":1,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":85813,"byte_end":85816,"line_start":475,"line_end":475,"column_start":8,"column_end":11},"name":"add","qualname":"<&'_ Scalar as core::ops::Add>::add","value":"fn add(Self, Scalar) -> Scalar","parent":{"krate":1,"index":3218},"children":[],"decl_id":{"krate":1,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":85958,"byte_end":85961,"line_start":483,"line_end":483,"column_start":8,"column_end":11},"name":"add","qualname":"<Scalar as core::ops::Add>::add","value":"fn add(Self, &Scalar) -> Scalar","parent":{"krate":1,"index":3218},"children":[],"decl_id":{"krate":1,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":86082,"byte_end":86092,"line_start":489,"line_end":489,"column_start":8,"column_end":18},"name":"add_assign","qualname":"<Scalar as core::ops::AddAssign>::add_assign","value":"fn add_assign(&mut Self, Scalar)","parent":{"krate":1,"index":3249},"children":[],"decl_id":{"krate":1,"index":3251},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":905},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":86213,"byte_end":86223,"line_start":495,"line_end":495,"column_start":8,"column_end":18},"name":"add_assign","qualname":"<Scalar as core::ops::AddAssign>::add_assign","value":"fn add_assign(&mut Self, &Scalar)","parent":{"krate":1,"index":3249},"children":[],"decl_id":{"krate":1,"index":3251},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":86364,"byte_end":86367,"line_start":503,"line_end":503,"column_start":8,"column_end":11},"name":"sub","qualname":"<Scalar as core::ops::Sub>::sub","value":"fn sub(Self, Scalar) -> Scalar","parent":{"krate":1,"index":3223},"children":[],"decl_id":{"krate":1,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":86511,"byte_end":86514,"line_start":511,"line_end":511,"column_start":8,"column_end":11},"name":"sub","qualname":"<&'_ Scalar as core::ops::Sub>::sub","value":"fn sub(Self, &Scalar) -> Scalar","parent":{"krate":1,"index":3223},"children":[],"decl_id":{"krate":1,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":86656,"byte_end":86659,"line_start":519,"line_end":519,"column_start":8,"column_end":11},"name":"sub","qualname":"<Scalar as core::ops::Sub>::sub","value":"fn sub(Self, &Scalar) -> Scalar","parent":{"krate":1,"index":3223},"children":[],"decl_id":{"krate":1,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":86780,"byte_end":86790,"line_start":525,"line_end":525,"column_start":8,"column_end":18},"name":"sub_assign","qualname":"<Scalar as core::ops::SubAssign>::sub_assign","value":"fn sub_assign(&mut Self, Scalar)","parent":{"krate":1,"index":3253},"children":[],"decl_id":{"krate":1,"index":3255},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":86911,"byte_end":86921,"line_start":531,"line_end":531,"column_start":8,"column_end":18},"name":"sub_assign","qualname":"<Scalar as core::ops::SubAssign>::sub_assign","value":"fn sub_assign(&mut Self, &Scalar)","parent":{"krate":1,"index":3253},"children":[],"decl_id":{"krate":1,"index":3255},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":921},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":87062,"byte_end":87065,"line_start":539,"line_end":539,"column_start":8,"column_end":11},"name":"mul","qualname":"<Scalar as core::ops::Mul>::mul","value":"fn mul(Self, Scalar) -> Scalar","parent":{"krate":1,"index":3228},"children":[],"decl_id":{"krate":1,"index":3231},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":87209,"byte_end":87212,"line_start":547,"line_end":547,"column_start":8,"column_end":11},"name":"mul","qualname":"<&'_ Scalar as core::ops::Mul>::mul","value":"fn mul(Self, &Scalar) -> Scalar","parent":{"krate":1,"index":3228},"children":[],"decl_id":{"krate":1,"index":3231},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":87354,"byte_end":87357,"line_start":555,"line_end":555,"column_start":8,"column_end":11},"name":"mul","qualname":"<Scalar as core::ops::Mul>::mul","value":"fn mul(Self, &Scalar) -> Scalar","parent":{"krate":1,"index":3228},"children":[],"decl_id":{"krate":1,"index":3231},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":87478,"byte_end":87488,"line_start":561,"line_end":561,"column_start":8,"column_end":18},"name":"mul_assign","qualname":"<Scalar as core::ops::MulAssign>::mul_assign","value":"fn mul_assign(&mut Self, Scalar)","parent":{"krate":1,"index":3257},"children":[],"decl_id":{"krate":1,"index":3259},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":87609,"byte_end":87619,"line_start":567,"line_end":567,"column_start":8,"column_end":18},"name":"mul_assign","qualname":"<Scalar as core::ops::MulAssign>::mul_assign","value":"fn mul_assign(&mut Self, &Scalar)","parent":{"krate":1,"index":3257},"children":[],"decl_id":{"krate":1,"index":3259},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":87734,"byte_end":87751,"line_start":573,"line_end":573,"column_start":8,"column_end":25},"name":"from_uint_reduced","qualname":"<Scalar as elliptic_curve::ops::Reduce>::from_uint_reduced","value":"fn from_uint_reduced(U256) -> Self","parent":{"krate":4,"index":58},"children":[],"decl_id":{"krate":4,"index":60},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":935},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":88016,"byte_end":88033,"line_start":581,"line_end":581,"column_start":8,"column_end":25},"name":"from_uint_reduced","qualname":"<Scalar as elliptic_curve::ops::Reduce>::from_uint_reduced","value":"fn from_uint_reduced(U512) -> Self","parent":{"krate":4,"index":58},"children":[],"decl_id":{"krate":4,"index":60},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":937},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":88138,"byte_end":88163,"line_start":587,"line_end":587,"column_start":8,"column_end":33},"name":"from_uint_reduced_nonzero","qualname":"<Scalar as elliptic_curve::ops::ReduceNonZero>::from_uint_reduced_nonzero","value":"fn from_uint_reduced_nonzero(U256) -> Self","parent":{"krate":4,"index":67},"children":[],"decl_id":{"krate":4,"index":69},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":88540,"byte_end":88565,"line_start":596,"line_end":596,"column_start":8,"column_end":33},"name":"from_uint_reduced_nonzero","qualname":"<Scalar as elliptic_curve::ops::ReduceNonZero>::from_uint_reduced_nonzero","value":"fn from_uint_reduced_nonzero(U512) -> Self","parent":{"krate":4,"index":67},"children":[],"decl_id":{"krate":4,"index":69},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":88873,"byte_end":88877,"line_start":610,"line_end":610,"column_start":8,"column_end":12},"name":"from","qualname":"<FieldBytes as core::convert::From>::from","value":"fn from(Scalar) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":88982,"byte_end":88986,"line_start":616,"line_end":616,"column_start":8,"column_end":12},"name":"from","qualname":"<FieldBytes as core::convert::From>::from","value":"fn from(&Scalar) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":89085,"byte_end":89089,"line_start":622,"line_end":622,"column_start":8,"column_end":12},"name":"from","qualname":"<U256 as core::convert::From>::from","value":"fn from(Scalar) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":89179,"byte_end":89183,"line_start":628,"line_end":628,"column_start":8,"column_end":12},"name":"from","qualname":"<U256 as core::convert::From>::from","value":"fn from(&Scalar) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":962},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ecdsa","qualname":"::ecdsa","value":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","parent":null,"children":[{"krate":0,"index":963},{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1262},{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1408},{"krate":0,"index":1411},{"krate":0,"index":1414},{"krate":0,"index":1415},{"krate":0,"index":1418},{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1426}],"decl_id":null,"docs":" Elliptic Curve Digital Signature Algorithm (ECDSA).","sig":null,"attributes":[{"value":"cfg(feature = \"ecdsa-core\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":800,"byte_end":830,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/ Elliptic Curve Digital Signature Algorithm (ECDSA).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":110312,"byte_end":110367,"line_start":1,"line_end":1,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":110368,"byte_end":110371,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains support for computing and verifying ECDSA signatures.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":110372,"byte_end":110450,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ To use it, you will need to enable one of the two following Cargo features:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":110451,"byte_end":110530,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":110531,"byte_end":110534,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ - `ecdsa-core`: provides only the [`Signature`] type (which represents an","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":110535,"byte_end":110612,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/   ECDSA/secp256k1 signature). Does not require the `arithmetic` feature.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":110613,"byte_end":110689,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/   This is useful for 3rd-party crates which wish to use the `Signature`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":110690,"byte_end":110765,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/   type for interoperability purposes (particularly in conjunction with the","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":110766,"byte_end":110844,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/   [`signature::Signer`] trait). Example use cases for this include other","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":110845,"byte_end":110921,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/   software implementations of ECDSA/secp256k1 and wrappers for cloud KMS","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":110922,"byte_end":110998,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/   services or hardware devices (HSM or crypto hardware wallet).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":110999,"byte_end":111066,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/ - `ecdsa`: provides `ecdsa-core` features plus the [`SigningKey`] and","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":111067,"byte_end":111140,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/   [`VerifyingKey`] types which natively implement ECDSA/secp256k1 signing and","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":111141,"byte_end":111222,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/   verification.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":111223,"byte_end":111242,"line_start":15,"line_end":15,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":111243,"byte_end":111246,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Additionally, this crate contains support for computing ECDSA signatures","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":111247,"byte_end":111323,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ using either the SHA-256 (standard) or Keccak-256 (Ethereum) digest","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":111324,"byte_end":111395,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ functions, which are gated under the following Cargo features:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":111396,"byte_end":111462,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":111463,"byte_end":111466,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ - `sha256`: compute signatures using NIST's standard SHA-256 digest","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":111467,"byte_end":111538,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/   function. Unless you are computing signatures for Ethereum, this is","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":111539,"byte_end":111612,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/   almost certainly what you want.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":111613,"byte_end":111650,"line_start":23,"line_end":23,"column_start":1,"column_end":38}},{"value":"/ - `keccak256`: compute signatures using the Keccak-256 digest function,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":111651,"byte_end":111726,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/   an incompatible variant of the SHA-3 algorithm used exclusively by","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":111727,"byte_end":111799,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/   Ethereum.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":111800,"byte_end":111815,"line_start":26,"line_end":26,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":111816,"byte_end":111819,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Most users of this library who want to sign/verify signatures will want to","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":111820,"byte_end":111898,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/ enable the `ecdsa` and `sha256` Cargo features.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":111899,"byte_end":111950,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":111951,"byte_end":111954,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ## Ethereum Support","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":111955,"byte_end":111978,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":111979,"byte_end":111982,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This crate natively supports Ethereum-style recoverable signatures.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":111983,"byte_end":112054,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/ Please see the toplevel documentation of the [`recoverable`] module","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":112055,"byte_end":112126,"line_start":34,"line_end":34,"column_start":1,"column_end":72}},{"value":"/ for more information.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":112127,"byte_end":112152,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":112153,"byte_end":112156,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ## Signing/Verification Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":112157,"byte_end":112192,"line_start":37,"line_end":37,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":112193,"byte_end":112196,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ This example requires the `ecdsa` and `sha256` Cargo features are enabled:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":112197,"byte_end":112275,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":112276,"byte_end":112279,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":112280,"byte_end":112287,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(all(feature = \"ecdsa\", feature = \"sha256\"))]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":112288,"byte_end":112344,"line_start":42,"line_end":42,"column_start":1,"column_end":57}},{"value":"/ # {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":112345,"byte_end":112352,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use k256::{","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":112353,"byte_end":112368,"line_start":44,"line_end":44,"column_start":1,"column_end":16}},{"value":"/     ecdsa::{SigningKey, Signature, signature::Signer},","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":112369,"byte_end":112427,"line_start":45,"line_end":45,"column_start":1,"column_end":59}},{"value":"/     SecretKey,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":112428,"byte_end":112446,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/ };","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":112447,"byte_end":112453,"line_start":47,"line_end":47,"column_start":1,"column_end":7}},{"value":"/ use rand_core::OsRng; // requires 'getrandom' feature","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":112454,"byte_end":112511,"line_start":48,"line_end":48,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":112512,"byte_end":112515,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // Signing","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":112516,"byte_end":112530,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/ let signing_key = SigningKey::random(&mut OsRng); // Serialize with `::to_bytes()`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":112531,"byte_end":112617,"line_start":51,"line_end":51,"column_start":1,"column_end":87}},{"value":"/ let message = b\"ECDSA proves knowledge of a secret number in the context of a single message\";","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":112618,"byte_end":112716,"line_start":52,"line_end":52,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":112717,"byte_end":112720,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ // Note: the signature type must be annotated or otherwise inferrable as","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":112721,"byte_end":112797,"line_start":54,"line_end":54,"column_start":1,"column_end":77}},{"value":"/ // `Signer` has many impls of the `Signer` trait (for both regular and","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":112798,"byte_end":112872,"line_start":55,"line_end":55,"column_start":1,"column_end":75}},{"value":"/ // recoverable signature types).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":112873,"byte_end":112909,"line_start":56,"line_end":56,"column_start":1,"column_end":37}},{"value":"/ let signature: Signature = signing_key.sign(message);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":112910,"byte_end":112967,"line_start":57,"line_end":57,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":112968,"byte_end":112971,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // Verification","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":112972,"byte_end":112991,"line_start":59,"line_end":59,"column_start":1,"column_end":20}},{"value":"/ use k256::{EncodedPoint, ecdsa::{VerifyingKey, signature::Verifier}};","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":112992,"byte_end":113065,"line_start":60,"line_end":60,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":113066,"byte_end":113069,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ let verifying_key = VerifyingKey::from(&signing_key); // Serialize with `::to_encoded_point()`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":113070,"byte_end":113168,"line_start":62,"line_end":62,"column_start":1,"column_end":99}},{"value":"/ assert!(verifying_key.verify(message, &signature).is_ok());","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":113169,"byte_end":113232,"line_start":63,"line_end":63,"column_start":1,"column_end":64}},{"value":"/ # }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":113233,"byte_end":113240,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":113241,"byte_end":113248,"line_start":65,"line_end":65,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":963},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"recoverable","qualname":"::ecdsa::recoverable","value":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","parent":null,"children":[{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":975},{"krate":0,"index":978},{"krate":0,"index":981},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":991},{"krate":0,"index":994},{"krate":0,"index":997},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1004},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1011},{"krate":0,"index":1014},{"krate":0,"index":1017},{"krate":0,"index":1020},{"krate":0,"index":1023},{"krate":0,"index":1026},{"krate":0,"index":1029},{"krate":0,"index":1032},{"krate":0,"index":1035},{"krate":0,"index":1038},{"krate":0,"index":1952},{"krate":0,"index":1955},{"krate":0,"index":1956},{"krate":0,"index":1959},{"krate":0,"index":1960},{"krate":0,"index":1963},{"krate":0,"index":1964},{"krate":0,"index":1039},{"krate":0,"index":1052},{"krate":0,"index":1054},{"krate":0,"index":1056},{"krate":0,"index":1058},{"krate":0,"index":1061},{"krate":0,"index":1063},{"krate":0,"index":1967},{"krate":0,"index":1970},{"krate":0,"index":1971},{"krate":0,"index":1973},{"krate":0,"index":1065},{"krate":0,"index":1068},{"krate":0,"index":1071},{"krate":0,"index":1073},{"krate":0,"index":1076}],"decl_id":null,"docs":" Ethereum-style \"recoverable signatures\".","sig":null,"attributes":[{"value":"/ Ethereum-style \"recoverable signatures\".","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":117491,"byte_end":117535,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":117536,"byte_end":117539,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ These signatures include an additional [`Id`] field which allows for","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":117540,"byte_end":117612,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"/ recovery of the [`VerifyingKey`] which can be used to verify them.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":117613,"byte_end":117683,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":117684,"byte_end":117687,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This is helpful in cases where a hash/fingerprint of a [`VerifyingKey`]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":117688,"byte_end":117763,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ for a given signature in known in advance.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":117764,"byte_end":117810,"line_start":7,"line_end":7,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":117811,"byte_end":117814,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ## Signing/Recovery Example","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":117815,"byte_end":117846,"line_start":9,"line_end":9,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":117847,"byte_end":117850,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ NOTE: make sure to enable both the `ecdsa` and `keccak256` features of","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":117851,"byte_end":117925,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ this crate for the example to work.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":117926,"byte_end":117965,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":117966,"byte_end":117969,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":117970,"byte_end":117977,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(all(feature = \"ecdsa\", feature = \"keccak256\"))]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":117978,"byte_end":118037,"line_start":15,"line_end":15,"column_start":1,"column_end":60}},{"value":"/ # {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":118038,"byte_end":118045,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ use k256::{","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":118046,"byte_end":118061,"line_start":17,"line_end":17,"column_start":1,"column_end":16}},{"value":"/     ecdsa::{SigningKey, recoverable, signature::Signer},","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":118062,"byte_end":118122,"line_start":18,"line_end":18,"column_start":1,"column_end":61}},{"value":"/     EncodedPoint","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":118123,"byte_end":118143,"line_start":19,"line_end":19,"column_start":1,"column_end":21}},{"value":"/ };","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":118144,"byte_end":118150,"line_start":20,"line_end":20,"column_start":1,"column_end":7}},{"value":"/ use rand_core::OsRng; // requires 'getrandom' feature","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":118151,"byte_end":118208,"line_start":21,"line_end":21,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":118209,"byte_end":118212,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ // Signing","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":118213,"byte_end":118227,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/ let signing_key = SigningKey::random(&mut OsRng); // Serialize with `::to_bytes()`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":118228,"byte_end":118314,"line_start":24,"line_end":24,"column_start":1,"column_end":87}},{"value":"/ let verifying_key = signing_key.verifying_key();","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":118315,"byte_end":118367,"line_start":25,"line_end":25,"column_start":1,"column_end":53}},{"value":"/ let message = b\"ECDSA proves knowledge of a secret number in the context of a single message\";","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":118368,"byte_end":118466,"line_start":26,"line_end":26,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":118467,"byte_end":118470,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ // Note: the signature type must be annotated or otherwise inferrable as","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":118471,"byte_end":118547,"line_start":28,"line_end":28,"column_start":1,"column_end":77}},{"value":"/ // `Signer` has many impls of the `Signer` trait (for both regular and","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":118548,"byte_end":118622,"line_start":29,"line_end":29,"column_start":1,"column_end":75}},{"value":"/ // recoverable signature types).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":118623,"byte_end":118659,"line_start":30,"line_end":30,"column_start":1,"column_end":37}},{"value":"/ let signature: recoverable::Signature = signing_key.sign(message);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":118660,"byte_end":118730,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ let recovered_key = signature.recover_verifying_key(message).expect(\"couldn't recover pubkey\");","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":118731,"byte_end":118830,"line_start":32,"line_end":32,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":118831,"byte_end":118834,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(&verifying_key, &recovered_key);","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":118835,"byte_end":118882,"line_start":34,"line_end":34,"column_start":1,"column_end":48}},{"value":"/ # }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":118883,"byte_end":118890,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":118891,"byte_end":118898,"line_start":36,"line_end":36,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":1038},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":119554,"byte_end":119558,"line_start":64,"line_end":64,"column_start":11,"column_end":15},"name":"SIZE","qualname":"::ecdsa::recoverable::SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Size of an Ethereum-style recoverable signature in bytes\n","sig":null,"attributes":[{"value":"/ Size of an Ethereum-style recoverable signature in bytes","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":119483,"byte_end":119543,"line_start":63,"line_end":63,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":1952},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":119980,"byte_end":119989,"line_start":76,"line_end":76,"column_start":12,"column_end":21},"name":"Signature","qualname":"::ecdsa::recoverable::Signature","value":"Signature {  }","parent":null,"children":[{"krate":0,"index":1953}],"decl_id":null,"docs":" Ethereum-style \"recoverable signatures\" which allow for the recovery of\n the signer's [`VerifyingKey`] from the signature itself.","sig":null,"attributes":[{"value":"/ Ethereum-style \"recoverable signatures\" which allow for the recovery of","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":119573,"byte_end":119648,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"/ the signer's [`VerifyingKey`] from the signature itself.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":119649,"byte_end":119709,"line_start":67,"line_end":67,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":119710,"byte_end":119713,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ This format consists of [`Signature`] followed by a 1-byte recovery [`Id`]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":119714,"byte_end":119792,"line_start":69,"line_end":69,"column_start":1,"column_end":79}},{"value":"/ (65-bytes total):","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":119793,"byte_end":119814,"line_start":70,"line_end":70,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":119815,"byte_end":119818,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ - `r`: 32-byte integer, big endian","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":119819,"byte_end":119857,"line_start":72,"line_end":72,"column_start":1,"column_end":39}},{"value":"/ - `s`: 32-byte integer, big endian","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":119858,"byte_end":119896,"line_start":73,"line_end":73,"column_start":1,"column_end":39}},{"value":"/ - `v`: 1-byte recovery [`Id`]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":119897,"byte_end":119930,"line_start":74,"line_end":74,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":120303,"byte_end":120306,"line_start":86,"line_end":86,"column_start":12,"column_end":15},"name":"new","qualname":"<Signature>::new","value":"fn new(&super::Signature, Id) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new recoverable ECDSA/secp256k1 signature from a regular\n fixed-size signature and an associated recovery [`Id`].","sig":null,"attributes":[{"value":"/ Create a new recoverable ECDSA/secp256k1 signature from a regular","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":120039,"byte_end":120108,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/ fixed-size signature and an associated recovery [`Id`].","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":120113,"byte_end":120172,"line_start":82,"line_end":82,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":120177,"byte_end":120180,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ This is an \"unchecked\" conversion and assumes the provided [`Id`]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":120185,"byte_end":120254,"line_start":84,"line_end":84,"column_start":5,"column_end":74}},{"value":"/ is valid for this signature.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":120259,"byte_end":120291,"line_start":85,"line_end":85,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":120597,"byte_end":120608,"line_start":94,"line_end":94,"column_start":12,"column_end":23},"name":"recovery_id","qualname":"<Signature>::recovery_id","value":"fn recovery_id(Self) -> Id","parent":null,"children":[],"decl_id":null,"docs":" Get the recovery [`Id`] for this signature\n","sig":null,"attributes":[{"value":"/ Get the recovery [`Id`] for this signature","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":120539,"byte_end":120585,"line_start":93,"line_end":93,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":121199,"byte_end":121218,"line_start":108,"line_end":108,"column_start":12,"column_end":31},"name":"from_trial_recovery","qualname":"<Signature>::from_trial_recovery","value":"fn from_trial_recovery(&VerifyingKey, &[u8], &super::Signature)\n-> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Given a public key, message, and signature, use trial recovery\n to determine if a suitable recovery ID exists, or return an error\n otherwise.","sig":null,"attributes":[{"value":"/ Given a public key, message, and signature, use trial recovery","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":120698,"byte_end":120764,"line_start":98,"line_end":98,"column_start":5,"column_end":71}},{"value":"/ to determine if a suitable recovery ID exists, or return an error","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":120769,"byte_end":120838,"line_start":99,"line_end":99,"column_start":5,"column_end":74}},{"value":"/ otherwise.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":120843,"byte_end":120857,"line_start":100,"line_end":100,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":120862,"byte_end":120865,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ Assumes Keccak256 as the message digest function. Use","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":120870,"byte_end":120927,"line_start":102,"line_end":102,"column_start":5,"column_end":62}},{"value":"/ [`Signature::from_digest_trial_recovery`] to support other","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":120932,"byte_end":120994,"line_start":103,"line_end":103,"column_start":5,"column_end":67}},{"value":"/digest functions.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":120999,"byte_end":121019,"line_start":104,"line_end":104,"column_start":5,"column_end":25}},{"value":"cfg(all(feature = \"ecdsa\", feature = \"keccak256\"))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":121024,"byte_end":121077,"line_start":105,"line_end":105,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1044},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":121706,"byte_end":121732,"line_start":121,"line_end":121,"column_start":12,"column_end":38},"name":"from_digest_trial_recovery","qualname":"<Signature>::from_digest_trial_recovery","value":"fn from_digest_trial_recovery<D>(&VerifyingKey, D, &super::Signature)\n-> Result<Self> where D: Clone + Digest + FixedOutput<OutputSize = U32>","parent":null,"children":[],"decl_id":null,"docs":" Given a public key, message digest, and signature, use trial recovery\n to determine if a suitable recovery ID exists, or return an error\n otherwise.\n","sig":null,"attributes":[{"value":"/ Given a public key, message digest, and signature, use trial recovery","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":121445,"byte_end":121518,"line_start":116,"line_end":116,"column_start":5,"column_end":78}},{"value":"/ to determine if a suitable recovery ID exists, or return an error","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":121523,"byte_end":121592,"line_start":117,"line_end":117,"column_start":5,"column_end":74}},{"value":"/ otherwise.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":121597,"byte_end":121611,"line_start":118,"line_end":118,"column_start":5,"column_end":19}},{"value":"cfg(feature = \"ecdsa\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":121616,"byte_end":121641,"line_start":119,"line_end":119,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1046},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":122873,"byte_end":122894,"line_start":153,"line_end":153,"column_start":12,"column_end":33},"name":"recover_verifying_key","qualname":"<Signature>::recover_verifying_key","value":"fn recover_verifying_key(&Self, &[u8]) -> Result<VerifyingKey>","parent":null,"children":[],"decl_id":null,"docs":" Recover the public key used to create the given signature as a\n [`VerifyingKey`].\n","sig":null,"attributes":[{"value":"/ Recover the public key used to create the given signature as a","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":122601,"byte_end":122667,"line_start":148,"line_end":148,"column_start":5,"column_end":71}},{"value":"/ [`VerifyingKey`].","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":122672,"byte_end":122693,"line_start":149,"line_end":149,"column_start":5,"column_end":26}},{"value":"cfg(all(feature = \"ecdsa\", feature = \"keccak256\"))","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":122698,"byte_end":122751,"line_start":150,"line_end":150,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1047},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":123259,"byte_end":123292,"line_start":161,"line_end":161,"column_start":12,"column_end":45},"name":"recover_verifying_key_from_digest","qualname":"<Signature>::recover_verifying_key_from_digest","value":"fn recover_verifying_key_from_digest<D>(&Self, D) -> Result<VerifyingKey>\nwhere D: Digest<OutputSize = U32>","parent":null,"children":[],"decl_id":null,"docs":" Recover the public key used to create the given signature as a\n [`VerifyingKey`] from the provided precomputed [`Digest`].\n","sig":null,"attributes":[{"value":"/ Recover the public key used to create the given signature as a","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":123031,"byte_end":123097,"line_start":157,"line_end":157,"column_start":5,"column_end":71}},{"value":"/ [`VerifyingKey`] from the provided precomputed [`Digest`].","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":123102,"byte_end":123164,"line_start":158,"line_end":158,"column_start":5,"column_end":67}},{"value":"cfg(feature = \"ecdsa\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":123169,"byte_end":123194,"line_start":159,"line_end":159,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1049},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":123770,"byte_end":123809,"line_start":173,"line_end":173,"column_start":12,"column_end":51},"name":"recover_verifying_key_from_digest_bytes","qualname":"<Signature>::recover_verifying_key_from_digest_bytes","value":"fn recover_verifying_key_from_digest_bytes(&Self, &FieldBytes)\n-> Result<VerifyingKey>","parent":null,"children":[],"decl_id":null,"docs":" Recover the public key used to create the given signature as a\n [`VerifyingKey`] from the raw bytes of a message digest.\n","sig":null,"attributes":[{"value":"/ Recover the public key used to create the given signature as a","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":123483,"byte_end":123549,"line_start":168,"line_end":168,"column_start":5,"column_end":71}},{"value":"/ [`VerifyingKey`] from the raw bytes of a message digest.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":123554,"byte_end":123614,"line_start":169,"line_end":169,"column_start":5,"column_end":65}},{"value":"cfg(feature = \"ecdsa\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":123619,"byte_end":123644,"line_start":170,"line_end":170,"column_start":5,"column_end":30}},{"value":"allow(non_snake_case, clippy :: many_single_char_names)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":123702,"byte_end":123758,"line_start":172,"line_end":172,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1050},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":124692,"byte_end":124693,"line_start":199,"line_end":199,"column_start":12,"column_end":13},"name":"r","qualname":"<Signature>::r","value":"fn r(&Self) -> NonZeroScalar","parent":null,"children":[],"decl_id":null,"docs":" Parse the `r` component of this signature to a [`NonZeroScalar`]\n","sig":null,"attributes":[{"value":"/ Parse the `r` component of this signature to a [`NonZeroScalar`]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":124529,"byte_end":124597,"line_start":196,"line_end":196,"column_start":5,"column_end":73}},{"value":"cfg(feature = \"ecdsa\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":124602,"byte_end":124627,"line_start":197,"line_end":197,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1051},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":125009,"byte_end":125010,"line_start":207,"line_end":207,"column_start":12,"column_end":13},"name":"s","qualname":"<Signature>::s","value":"fn s(&Self) -> NonZeroScalar","parent":null,"children":[],"decl_id":null,"docs":" Parse the `s` component of this signature to a [`NonZeroScalar`]\n","sig":null,"attributes":[{"value":"/ Parse the `s` component of this signature to a [`NonZeroScalar`]","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":124846,"byte_end":124914,"line_start":204,"line_end":204,"column_start":5,"column_end":73}},{"value":"cfg(feature = \"ecdsa\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":124919,"byte_end":124944,"line_start":205,"line_end":205,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1053},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":125224,"byte_end":125234,"line_start":214,"line_end":214,"column_start":8,"column_end":18},"name":"from_bytes","qualname":"<Signature as ecdsa::signature::Signature>::from_bytes","value":"fn from_bytes(&[u8]) -> Result<Self>","parent":{"krate":42,"index":62},"children":[],"decl_id":{"krate":42,"index":63},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1055},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":125341,"byte_end":125347,"line_start":220,"line_end":220,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Signature as core::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &[u8]","parent":{"krate":1,"index":3047},"children":[],"decl_id":{"krate":1,"index":3049},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1057},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":125433,"byte_end":125436,"line_start":226,"line_end":226,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Signature as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9902},"children":[],"decl_id":{"krate":1,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1060},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":125642,"byte_end":125650,"line_start":234,"line_end":234,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Signature as core::convert::TryFrom>::try_from","value":"fn try_from(&[u8]) -> Result<Self>","parent":{"krate":1,"index":3063},"children":[],"decl_id":{"krate":1,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1062},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":125987,"byte_end":125991,"line_start":246,"line_end":246,"column_start":8,"column_end":12},"name":"from","qualname":"<super::Signature as core::convert::From>::from","value":"fn from(Signature) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1967},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":126832,"byte_end":126834,"line_start":268,"line_end":268,"column_start":12,"column_end":14},"name":"Id","qualname":"::ecdsa::recoverable::Id","value":"","parent":null,"children":[],"decl_id":null,"docs":" Identifier used to compute a [`VerifyingKey`] from a [`Signature`].","sig":null,"attributes":[{"value":"/ Identifier used to compute a [`VerifyingKey`] from a [`Signature`].","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":126202,"byte_end":126273,"line_start":256,"line_end":256,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":126274,"byte_end":126277,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ In practice these values are always either `0` or `1`, and indicate","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":126278,"byte_end":126349,"line_start":258,"line_end":258,"column_start":1,"column_end":72}},{"value":"/ whether or not the y-coordinate of the original [`VerifyingKey`] is odd.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":126350,"byte_end":126426,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":126427,"byte_end":126430,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ While values `2` and `3` are also defined to capture whether `r`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":126431,"byte_end":126499,"line_start":261,"line_end":261,"column_start":1,"column_end":69}},{"value":"/ overflowed the curve's order, this crate does *not* support them.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":126500,"byte_end":126569,"line_start":262,"line_end":262,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":126570,"byte_end":126573,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ There is a vanishingly small chance of these values occurring outside","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":126574,"byte_end":126647,"line_start":264,"line_end":264,"column_start":1,"column_end":74}},{"value":"/ of contrived examples, so for simplicity's sake handling these values","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":126648,"byte_end":126721,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ is unsupported and will return an `Error` when parsing the `Id`.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":126722,"byte_end":126790,"line_start":266,"line_end":266,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1066},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":126927,"byte_end":126930,"line_start":272,"line_end":272,"column_start":12,"column_end":15},"name":"new","qualname":"<Id>::new","value":"fn new(u8) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Id`] from the given byte value\n","sig":null,"attributes":[{"value":"/ Create a new [`Id`] from the given byte value","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":126866,"byte_end":126915,"line_start":271,"line_end":271,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":127213,"byte_end":127221,"line_start":288,"line_end":288,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Id as core::convert::TryFrom>::try_from","value":"fn try_from(u8) -> Result<Self>","parent":{"krate":1,"index":3063},"children":[],"decl_id":{"krate":1,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1072},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":127313,"byte_end":127317,"line_start":294,"line_end":294,"column_start":8,"column_end":12},"name":"from","qualname":"<u8 as core::convert::From>::from","value":"fn from(Id) -> u8","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1075},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":127452,"byte_end":127460,"line_start":302,"line_end":302,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Id as core::convert::TryFrom>::try_from","value":"fn try_from(ecdsa_core::RecoveryId) -> Result<Id>","parent":{"krate":1,"index":3063},"children":[],"decl_id":{"krate":1,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":127730,"byte_end":127734,"line_start":314,"line_end":314,"column_start":8,"column_end":12},"name":"from","qualname":"<ecdsa_core::RecoveryId as core::convert::From>::from","value":"fn from(Id) -> ecdsa_core::RecoveryId","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1975},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":132404,"byte_end":132414,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"name":"SigningKey","qualname":"::ecdsa::sign::SigningKey","value":"SigningKey {  }","parent":null,"children":[{"krate":0,"index":1976}],"decl_id":null,"docs":" ECDSA/secp256k1 signing key\n","sig":null,"attributes":[{"value":"/ ECDSA/secp256k1 signing key","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":132295,"byte_end":132326,"line_start":36,"line_end":36,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1202},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":132566,"byte_end":132572,"line_start":46,"line_end":46,"column_start":12,"column_end":18},"name":"random","qualname":"<SigningKey>::random","value":"fn random<impl CryptoRng + RngCore>(impl CryptoRng + RngCore) -> Self where\nimpl CryptoRng + RngCore: CryptoRng + RngCore","parent":null,"children":[],"decl_id":null,"docs":" Generate a cryptographically random [`SigningKey`].\n","sig":null,"attributes":[{"value":"/ Generate a cryptographically random [`SigningKey`].","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":132499,"byte_end":132554,"line_start":45,"line_end":45,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1204},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":132776,"byte_end":132786,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<SigningKey>::from_bytes","value":"fn from_bytes(&[u8]) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Initialize [`SigningKey`] from a raw scalar value (big endian).\n","sig":null,"attributes":[{"value":"/ Initialize [`SigningKey`] from a raw scalar value (big endian).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":132697,"byte_end":132764,"line_start":52,"line_end":52,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1207},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":133086,"byte_end":133099,"line_start":62,"line_end":62,"column_start":12,"column_end":25},"name":"verifying_key","qualname":"<SigningKey>::verifying_key","value":"fn verifying_key(&Self) -> VerifyingKey","parent":null,"children":[],"decl_id":null,"docs":" Get the [`VerifyingKey`] which corresponds to this [`SigningKey`].\n","sig":null,"attributes":[{"value":"/ Get the [`VerifyingKey`] which corresponds to this [`SigningKey`].","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":133004,"byte_end":133074,"line_start":61,"line_end":61,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1208},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":133293,"byte_end":133301,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<SigningKey>::to_bytes","value":"fn to_bytes(&Self) -> FieldBytes","parent":null,"children":[],"decl_id":null,"docs":" Serialize this [`SigningKey`] as bytes\n","sig":null,"attributes":[{"value":"/ Serialize this [`SigningKey`] as bytes","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":133239,"byte_end":133281,"line_start":68,"line_end":68,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1211},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":133541,"byte_end":133549,"line_start":80,"line_end":80,"column_start":8,"column_end":16},"name":"try_sign","qualname":"<SigningKey as ecdsa::signature::Signer>::try_sign","value":"fn try_sign(&Self, &[u8]) -> Result<S, Error>","parent":{"krate":42,"index":85},"children":[],"decl_id":{"krate":42,"index":88},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1214},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":133848,"byte_end":133865,"line_start":91,"line_end":91,"column_start":8,"column_end":25},"name":"try_sign_with_rng","qualname":"<SigningKey as ecdsa::signature::RandomizedSigner>::try_sign_with_rng","value":"fn try_sign_with_rng<impl CryptoRng + RngCore>(&Self,\nimpl CryptoRng + RngCore, &[u8]) -> Result<S, Error> where\nimpl CryptoRng + RngCore: CryptoRng + RngCore","parent":{"krate":42,"index":102},"children":[],"decl_id":{"krate":42,"index":106},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1218},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":134135,"byte_end":134150,"line_start":100,"line_end":100,"column_start":8,"column_end":23},"name":"try_sign_digest","qualname":"<SigningKey as ecdsa::signature::DigestSigner>::try_sign_digest","value":"fn try_sign_digest(&Self, D) -> Result<Signature, Error>","parent":{"krate":42,"index":97},"children":[],"decl_id":{"krate":42,"index":101},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1221},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":134429,"byte_end":134444,"line_start":110,"line_end":110,"column_start":8,"column_end":23},"name":"try_sign_digest","qualname":"<SigningKey as ecdsa::signature::DigestSigner>::try_sign_digest","value":"fn try_sign_digest(&Self, D) -> Result<recoverable::Signature, Error>","parent":{"krate":42,"index":97},"children":[],"decl_id":{"krate":42,"index":101},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1224},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":135069,"byte_end":135093,"line_start":128,"line_end":128,"column_start":8,"column_end":32},"name":"try_sign_digest_with_rng","qualname":"<SigningKey as ecdsa::signature::RandomizedDigestSigner>::try_sign_digest_with_rng","value":"fn try_sign_digest_with_rng<impl CryptoRng + RngCore>(&Self,\nimpl CryptoRng + RngCore, D) -> Result<Signature, Error> where\nimpl CryptoRng + RngCore: CryptoRng + RngCore","parent":{"krate":42,"index":108},"children":[],"decl_id":{"krate":42,"index":113},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1228},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":135458,"byte_end":135482,"line_start":142,"line_end":142,"column_start":8,"column_end":32},"name":"try_sign_digest_with_rng","qualname":"<SigningKey as ecdsa::signature::RandomizedDigestSigner>::try_sign_digest_with_rng","value":"fn try_sign_digest_with_rng<impl CryptoRng + RngCore>(&Self,\nimpl CryptoRng + RngCore, D) -> Result<recoverable::Signature, Error> where\nimpl CryptoRng + RngCore: CryptoRng + RngCore","parent":{"krate":42,"index":108},"children":[],"decl_id":{"krate":42,"index":113},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1231},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":136240,"byte_end":136258,"line_start":165,"line_end":165,"column_start":8,"column_end":26},"name":"try_sign_prehashed","qualname":"<Scalar as ecdsa::hazmat::SignPrimitive>::try_sign_prehashed","value":"fn try_sign_prehashed<K>(&Self, K, FieldBytes)\n-> Result<(Signature, Option<ecdsa_core::RecoveryId>), Error> where\nK: Borrow<Scalar> + Invert<Output = CtOption<Scalar>>","parent":{"krate":41,"index":221},"children":[],"decl_id":{"krate":41,"index":223},"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case, clippy :: many_single_char_names)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":136176,"byte_end":136232,"line_start":164,"line_end":164,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1234},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":137753,"byte_end":137758,"line_start":208,"line_end":208,"column_start":8,"column_end":13},"name":"ct_eq","qualname":"<SigningKey as elliptic_curve::subtle::ConstantTimeEq>::ct_eq","value":"fn ct_eq(&Self, &Self) -> Choice","parent":{"krate":24,"index":58},"children":[],"decl_id":{"krate":24,"index":59},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":137875,"byte_end":137878,"line_start":214,"line_end":214,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SigningKey as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9902},"children":[],"decl_id":{"krate":1,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1239},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":138067,"byte_end":138069,"line_start":222,"line_end":222,"column_start":8,"column_end":10},"name":"eq","qualname":"<SigningKey as core::cmp::PartialEq>::eq","value":"fn eq(&Self, &SigningKey) -> bool","parent":{"krate":1,"index":2802},"children":[],"decl_id":{"krate":1,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1241},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":138194,"byte_end":138198,"line_start":228,"line_end":228,"column_start":8,"column_end":12},"name":"from","qualname":"<SigningKey as core::convert::From>::from","value":"fn from(SecretKey) -> SigningKey","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1243},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":138325,"byte_end":138329,"line_start":234,"line_end":234,"column_start":8,"column_end":12},"name":"from","qualname":"<SigningKey as core::convert::From>::from","value":"fn from(&SecretKey) -> SigningKey","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1245},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":138500,"byte_end":138504,"line_start":242,"line_end":242,"column_start":8,"column_end":12},"name":"from","qualname":"<SecretKey as core::convert::From>::from","value":"fn from(SigningKey) -> SecretKey","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1247},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":138633,"byte_end":138637,"line_start":248,"line_end":248,"column_start":8,"column_end":12},"name":"from","qualname":"<SecretKey as core::convert::From>::from","value":"fn from(&SigningKey) -> SecretKey","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1249},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":138769,"byte_end":138773,"line_start":254,"line_end":254,"column_start":8,"column_end":12},"name":"from","qualname":"<VerifyingKey as core::convert::From>::from","value":"fn from(SigningKey) -> VerifyingKey","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1251},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":138911,"byte_end":138915,"line_start":260,"line_end":260,"column_start":8,"column_end":12},"name":"from","qualname":"<VerifyingKey as core::convert::From>::from","value":"fn from(&SigningKey) -> VerifyingKey","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1253},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":139054,"byte_end":139058,"line_start":266,"line_end":266,"column_start":8,"column_end":12},"name":"from","qualname":"<SigningKey as core::convert::From>::from","value":"fn from(NonZeroScalar) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1255},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":139217,"byte_end":139221,"line_start":274,"line_end":274,"column_start":8,"column_end":12},"name":"from","qualname":"<SigningKey as core::convert::From>::from","value":"fn from(&NonZeroScalar) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1257},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":139366,"byte_end":139370,"line_start":282,"line_end":282,"column_start":8,"column_end":12},"name":"drop","qualname":"<SigningKey as core::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":1,"index":3393},"children":[],"decl_id":{"krate":1,"index":3394},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1260},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":139594,"byte_end":139602,"line_start":292,"line_end":292,"column_start":8,"column_end":16},"name":"try_from","qualname":"<SigningKey as core::convert::TryFrom>::try_from","value":"fn try_from(pkcs8::PrivateKeyInfo) -> pkcs8::Result<Self>","parent":{"krate":1,"index":3063},"children":[],"decl_id":{"krate":1,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1979},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":141677,"byte_end":141689,"line_start":46,"line_end":46,"column_start":12,"column_end":24},"name":"VerifyingKey","qualname":"::ecdsa::verify::VerifyingKey","value":"VerifyingKey {  }","parent":null,"children":[{"krate":0,"index":1980}],"decl_id":null,"docs":" ECDSA/secp256k1 verification key (i.e. public key)","sig":null,"attributes":[{"value":"/ ECDSA/secp256k1 verification key (i.e. public key)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":141099,"byte_end":141153,"line_start":32,"line_end":32,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":141154,"byte_end":141157,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # `serde` support","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":141158,"byte_end":141179,"line_start":34,"line_end":34,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":141180,"byte_end":141183,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ When the `serde` feature of this crate is enabled, the `Serialize` and","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":141184,"byte_end":141258,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/ `Deserialize` traits are impl'd for this type.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":141259,"byte_end":141309,"line_start":37,"line_end":37,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":141310,"byte_end":141313,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The serialization is binary-oriented and supports ASN.1 DER-encoded","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":141314,"byte_end":141385,"line_start":39,"line_end":39,"column_start":1,"column_end":72}},{"value":"/ X.509 Subject Public Key Info (SPKI) as the encoding format.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":141386,"byte_end":141450,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":141451,"byte_end":141454,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ For a more text-friendly encoding of public keys, use","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":141455,"byte_end":141512,"line_start":42,"line_end":42,"column_start":1,"column_end":58}},{"value":"/ [`elliptic_curve::JwkEcKey`] instead.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":141513,"byte_end":141554,"line_start":43,"line_end":43,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1349},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":141883,"byte_end":141898,"line_start":53,"line_end":53,"column_start":12,"column_end":27},"name":"from_sec1_bytes","qualname":"<VerifyingKey>::from_sec1_bytes","value":"fn from_sec1_bytes(&[u8]) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Initialize [`VerifyingKey`] from a SEC1-encoded public key.\n","sig":null,"attributes":[{"value":"/ Initialize [`VerifyingKey`] from a SEC1-encoded public key.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":141808,"byte_end":141871,"line_start":52,"line_end":52,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1351},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":142183,"byte_end":142201,"line_start":59,"line_end":59,"column_start":12,"column_end":30},"name":"from_encoded_point","qualname":"<VerifyingKey>::from_encoded_point","value":"fn from_encoded_point(&EncodedPoint) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Initialize [`VerifyingKey`] from a SEC1 [`EncodedPoint`].\n","sig":null,"attributes":[{"value":"/ Initialize [`VerifyingKey`] from a SEC1 [`EncodedPoint`].","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":142045,"byte_end":142106,"line_start":57,"line_end":57,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1353},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":142499,"byte_end":142507,"line_start":66,"line_end":66,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<VerifyingKey>::to_bytes","value":"fn to_bytes(&Self) -> CompressedPoint","parent":null,"children":[],"decl_id":null,"docs":" Serialize this [`VerifyingKey`] as a SEC1-encoded bytestring\n (with point compression applied)\n","sig":null,"attributes":[{"value":"/ Serialize this [`VerifyingKey`] as a SEC1-encoded bytestring","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":142382,"byte_end":142446,"line_start":64,"line_end":64,"column_start":5,"column_end":69}},{"value":"/ (with point compression applied)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":142451,"byte_end":142487,"line_start":65,"line_end":65,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1356},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":142779,"byte_end":142785,"line_start":77,"line_end":77,"column_start":8,"column_end":14},"name":"verify","qualname":"<VerifyingKey as ecdsa::signature::Verifier>::verify","value":"fn verify(&Self, &[u8], &S) -> Result<(), Error>","parent":{"krate":42,"index":126},"children":[],"decl_id":{"krate":42,"index":128},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1359},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":143039,"byte_end":143052,"line_start":86,"line_end":86,"column_start":8,"column_end":21},"name":"verify_digest","qualname":"<VerifyingKey as ecdsa::signature::DigestVerifier>::verify_digest","value":"fn verify_digest(&Self, D, &Signature) -> Result<(), Error>","parent":{"krate":42,"index":129},"children":[],"decl_id":{"krate":42,"index":132},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1362},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":143307,"byte_end":143320,"line_start":95,"line_end":95,"column_start":8,"column_end":21},"name":"verify_digest","qualname":"<VerifyingKey as ecdsa::signature::DigestVerifier>::verify_digest","value":"fn verify_digest(&Self, D, &recoverable::Signature) -> Result<(), Error>","parent":{"krate":42,"index":129},"children":[],"decl_id":{"krate":42,"index":132},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1364},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":143548,"byte_end":143564,"line_start":102,"line_end":102,"column_start":8,"column_end":24},"name":"verify_prehashed","qualname":"<AffinePoint as ecdsa::hazmat::VerifyPrimitive>::verify_prehashed","value":"fn verify_prehashed(&Self, FieldBytes, &Signature) -> Result<(), Error>","parent":{"krate":41,"index":231},"children":[],"decl_id":{"krate":41,"index":233},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1366},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":144416,"byte_end":144420,"line_start":134,"line_end":134,"column_start":8,"column_end":12},"name":"from","qualname":"<VerifyingKey as core::convert::From>::from","value":"fn from(PublicKey) -> VerifyingKey","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1368},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":144582,"byte_end":144586,"line_start":142,"line_end":142,"column_start":8,"column_end":12},"name":"from","qualname":"<VerifyingKey as core::convert::From>::from","value":"fn from(&PublicKey) -> VerifyingKey","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1370},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":144725,"byte_end":144729,"line_start":148,"line_end":148,"column_start":8,"column_end":12},"name":"from","qualname":"<PublicKey as core::convert::From>::from","value":"fn from(VerifyingKey) -> PublicKey","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1372},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":144866,"byte_end":144870,"line_start":154,"line_end":154,"column_start":8,"column_end":12},"name":"from","qualname":"<PublicKey as core::convert::From>::from","value":"fn from(&VerifyingKey) -> PublicKey","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1374},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":145033,"byte_end":145037,"line_start":160,"line_end":160,"column_start":8,"column_end":12},"name":"from","qualname":"<VerifyingKey as core::convert::From>::from","value":"fn from(ecdsa_core::VerifyingKey<Secp256k1>) -> VerifyingKey","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1376},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":145235,"byte_end":145239,"line_start":168,"line_end":168,"column_start":8,"column_end":12},"name":"from","qualname":"<EncodedPoint as core::convert::From>::from","value":"fn from(&VerifyingKey) -> EncodedPoint","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1378},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":145399,"byte_end":145415,"line_start":174,"line_end":174,"column_start":8,"column_end":24},"name":"to_encoded_point","qualname":"<VerifyingKey as elliptic_curve::sec1::ToEncodedPoint>::to_encoded_point","value":"fn to_encoded_point(&Self, bool) -> EncodedPoint","parent":{"krate":4,"index":123},"children":[],"decl_id":{"krate":4,"index":125},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1381},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":145589,"byte_end":145597,"line_start":182,"line_end":182,"column_start":8,"column_end":16},"name":"try_from","qualname":"<VerifyingKey as core::convert::TryFrom>::try_from","value":"fn try_from(AffinePoint) -> Result<VerifyingKey, Error>","parent":{"krate":1,"index":3063},"children":[],"decl_id":{"krate":1,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1385},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":145896,"byte_end":145904,"line_start":194,"line_end":194,"column_start":8,"column_end":16},"name":"try_from","qualname":"<VerifyingKey as core::convert::TryFrom>::try_from","value":"fn try_from(&AffinePoint) -> Result<VerifyingKey, Error>","parent":{"krate":1,"index":3063},"children":[],"decl_id":{"krate":1,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1388},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":146100,"byte_end":146108,"line_start":202,"line_end":202,"column_start":8,"column_end":16},"name":"try_from","qualname":"<VerifyingKey as core::convert::TryFrom>::try_from","value":"fn try_from(&EncodedPoint) -> Result<Self, Error>","parent":{"krate":1,"index":3063},"children":[],"decl_id":{"krate":1,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1390},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":146274,"byte_end":146278,"line_start":208,"line_end":208,"column_start":8,"column_end":12},"name":"from","qualname":"<ProjectivePoint as core::convert::From>::from","value":"fn from(VerifyingKey) -> ProjectivePoint","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1392},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":146444,"byte_end":146448,"line_start":214,"line_end":214,"column_start":8,"column_end":12},"name":"from","qualname":"<ProjectivePoint as core::convert::From>::from","value":"fn from(&VerifyingKey) -> ProjectivePoint","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1395},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":146642,"byte_end":146650,"line_start":222,"line_end":222,"column_start":8,"column_end":16},"name":"try_from","qualname":"<VerifyingKey as core::convert::TryFrom>::try_from","value":"fn try_from(ProjectivePoint) -> Result<VerifyingKey, Error>","parent":{"krate":1,"index":3063},"children":[],"decl_id":{"krate":1,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1398},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":146843,"byte_end":146851,"line_start":230,"line_end":230,"column_start":8,"column_end":16},"name":"try_from","qualname":"<VerifyingKey as core::convert::TryFrom>::try_from","value":"fn try_from(&ProjectivePoint) -> Result<VerifyingKey, Error>","parent":{"krate":1,"index":3063},"children":[],"decl_id":{"krate":1,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1401},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":147148,"byte_end":147156,"line_start":240,"line_end":240,"column_start":8,"column_end":16},"name":"try_from","qualname":"<VerifyingKey as core::convert::TryFrom>::try_from","value":"fn try_from(pkcs8::SubjectPublicKeyInfo) -> pkcs8::spki::Result<Self>","parent":{"krate":1,"index":3063},"children":[],"decl_id":{"krate":1,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1424},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":113660,"byte_end":113669,"line_start":87,"line_end":87,"column_start":10,"column_end":19},"name":"Signature","qualname":"::ecdsa::Signature","value":"ecdsa_core::Signature<Secp256k1>","parent":null,"children":[],"decl_id":null,"docs":" ECDSA/secp256k1 signature (fixed-size)\n","sig":null,"attributes":[{"value":"/ ECDSA/secp256k1 signature (fixed-size)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":113608,"byte_end":113650,"line_start":86,"line_end":86,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":1425},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":113766,"byte_end":113778,"line_start":90,"line_end":90,"column_start":10,"column_end":22},"name":"DerSignature","qualname":"::ecdsa::DerSignature","value":"ecdsa_core::der::Signature<Secp256k1>","parent":null,"children":[],"decl_id":null,"docs":" ECDSA/secp256k1 signature (ASN.1 DER encoded)\n","sig":null,"attributes":[{"value":"/ ECDSA/secp256k1 signature (ASN.1 DER encoded)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":113707,"byte_end":113756,"line_start":89,"line_end":89,"column_start":1,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":1428},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"schnorr","qualname":"::schnorr","value":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","parent":null,"children":[{"krate":0,"index":1429},{"krate":0,"index":1544},{"krate":0,"index":1638},{"krate":0,"index":1639},{"krate":0,"index":1642},{"krate":0,"index":1645},{"krate":0,"index":1646},{"krate":0,"index":1649},{"krate":0,"index":1652},{"krate":0,"index":1653},{"krate":0,"index":1656},{"krate":0,"index":1659},{"krate":0,"index":1660},{"krate":0,"index":1663},{"krate":0,"index":1666},{"krate":0,"index":1669},{"krate":0,"index":1670},{"krate":0,"index":1673},{"krate":0,"index":1676},{"krate":0,"index":1677},{"krate":0,"index":1678},{"krate":0,"index":2016},{"krate":0,"index":2021},{"krate":0,"index":2022},{"krate":0,"index":1679},{"krate":0,"index":1686},{"krate":0,"index":1688},{"krate":0,"index":1689},{"krate":0,"index":1691},{"krate":0,"index":1693},{"krate":0,"index":1695},{"krate":0,"index":1701},{"krate":0,"index":1703},{"krate":0,"index":1705},{"krate":0,"index":1707}],"decl_id":null,"docs":" Taproot Schnorr signatures as defined in [BIP340].","sig":null,"attributes":[{"value":"cfg(feature = \"schnorr\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":901,"byte_end":928,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/ Taproot Schnorr signatures as defined in [BIP340].","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":149369,"byte_end":149423,"line_start":1,"line_end":1,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":149424,"byte_end":149427,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # About","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":149428,"byte_end":149439,"line_start":3,"line_end":3,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":149440,"byte_end":149443,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [Schnorr signatures] are a simple group-based digital signature scheme with","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":149444,"byte_end":149523,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"/ a number of desirable properties relating to security and composability:","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":149524,"byte_end":149600,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":149601,"byte_end":149604,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ - Provably secure: strongly unforgable under chosen message attack (SUF-CMA).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":149605,"byte_end":149686,"line_start":8,"line_end":8,"column_start":1,"column_end":82}},{"value":"/ - Non-malleable: signatures cannot be altered by an attacker and still verify.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":149687,"byte_end":149769,"line_start":9,"line_end":9,"column_start":1,"column_end":83}},{"value":"/ - Linear: multiple parties can collaborate to produce a valid signature","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":149770,"byte_end":149845,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/   a.k.a. multisignatures.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":149846,"byte_end":149875,"line_start":11,"line_end":11,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":149876,"byte_end":149879,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Originally described in the late 1980s by their eponymous creator Claus","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":149880,"byte_end":149955,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ Schnorr, they were patent-encumbered and thus lingered in obscurity until","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":149956,"byte_end":150033,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ the [relevant patents] expired in 2010.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":150034,"byte_end":150077,"line_start":15,"line_end":15,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":150078,"byte_end":150081,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Since then, Schnorr signatures have seen something of a resurgence, with","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":150082,"byte_end":150158,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ [EdDSA] and its concrete instantiation Ed25519 over the Curve25519 elliptic","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":150159,"byte_end":150238,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ curve becoming the first Schnorr variant to see mainstream standardization.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":150239,"byte_end":150318,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":150319,"byte_end":150322,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The Taproot upgrade to Bitcoin includes a variant of Schnorr which operates","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":150323,"byte_end":150402,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ over the secp256k1 elliptic curve, and is specified in [BIP340].","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":150403,"byte_end":150471,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/ That is the variant which is implemented by this crate.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":150472,"byte_end":150531,"line_start":23,"line_end":23,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":150532,"byte_end":150535,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Because Taproot Schnorr is intended for use in consensus-critical","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":150536,"byte_end":150605,"line_start":25,"line_end":25,"column_start":1,"column_end":70}},{"value":"/ applications (e.g. Bitcoin), it is fully specified such that no two","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":150606,"byte_end":150677,"line_start":26,"line_end":26,"column_start":1,"column_end":72}},{"value":"/ implementations should disagree on the validity of a signature.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":150678,"byte_end":150745,"line_start":27,"line_end":27,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":150746,"byte_end":150749,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":150750,"byte_end":150761,"line_start":29,"line_end":29,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":150762,"byte_end":150765,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":150863,"byte_end":150922,"line_start":33,"line_end":33,"column_start":1,"column_end":60}},{"value":"/ use k256::schnorr::{","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":150923,"byte_end":150947,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"/     signature::{Signer, Verifier},","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":150948,"byte_end":150986,"line_start":35,"line_end":35,"column_start":1,"column_end":39}},{"value":"/     SigningKey, VerifyingKey","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":150987,"byte_end":151019,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/ };","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":151020,"byte_end":151026,"line_start":37,"line_end":37,"column_start":1,"column_end":7}},{"value":"/ use rand_core::OsRng; // requires 'getrandom' feature","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":151027,"byte_end":151084,"line_start":38,"line_end":38,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":151085,"byte_end":151088,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ //","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":151089,"byte_end":151095,"line_start":40,"line_end":40,"column_start":1,"column_end":7}},{"value":"/ // Signing","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":151096,"byte_end":151110,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/ //","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":151111,"byte_end":151117,"line_start":42,"line_end":42,"column_start":1,"column_end":7}},{"value":"/ let signing_key = SigningKey::random(&mut OsRng); // serialize with `.to_bytes()`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":151118,"byte_end":151203,"line_start":43,"line_end":43,"column_start":1,"column_end":86}},{"value":"/ let verifying_key_bytes = signing_key.verifying_key().to_bytes(); // 32-bytes","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":151204,"byte_end":151285,"line_start":44,"line_end":44,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":151286,"byte_end":151289,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ let message = b\"Schnorr signatures prove knowledge of a secret in the random oracle model\";","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":151290,"byte_end":151385,"line_start":46,"line_end":46,"column_start":1,"column_end":96}},{"value":"/ let signature = signing_key.sign(message); // returns `k256::schnorr::Signature`","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":151386,"byte_end":151470,"line_start":47,"line_end":47,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":151471,"byte_end":151474,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ //","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":151475,"byte_end":151481,"line_start":49,"line_end":49,"column_start":1,"column_end":7}},{"value":"/ // Verification","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":151482,"byte_end":151501,"line_start":50,"line_end":50,"column_start":1,"column_end":20}},{"value":"/ //","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":151502,"byte_end":151508,"line_start":51,"line_end":51,"column_start":1,"column_end":7}},{"value":"/ let verifying_key = VerifyingKey::from_bytes(&verifying_key_bytes)?;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":151509,"byte_end":151581,"line_start":52,"line_end":52,"column_start":1,"column_end":73}},{"value":"/ verifying_key.verify(message, &signature)?;","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":151582,"byte_end":151629,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/ # Ok(())","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":151630,"byte_end":151642,"line_start":54,"line_end":54,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":151643,"byte_end":151650,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":151651,"byte_end":151658,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":151659,"byte_end":151662,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ [Schnorr signatures]: https://en.wikipedia.org/wiki/Schnorr_signature","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":151663,"byte_end":151736,"line_start":58,"line_end":58,"column_start":1,"column_end":74}},{"value":"/ [BIP340]: https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":151737,"byte_end":151813,"line_start":59,"line_end":59,"column_start":1,"column_end":77}},{"value":"/ [relevant patents]: https://patents.google.com/patent/US4995082","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":151814,"byte_end":151881,"line_start":60,"line_end":60,"column_start":1,"column_end":68}},{"value":"/ [EdDSA]: https://en.wikipedia.org/wiki/EdDSA","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":151882,"byte_end":151930,"line_start":61,"line_end":61,"column_start":1,"column_end":49}},{"value":"allow(non_snake_case, clippy :: many_single_char_names)","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":151932,"byte_end":151989,"line_start":63,"line_end":63,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1997},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/sign.rs","byte_start":166693,"byte_end":166703,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"SigningKey","qualname":"::schnorr::sign::SigningKey","value":"SigningKey {  }","parent":null,"children":[{"krate":0,"index":1998},{"krate":0,"index":1999}],"decl_id":null,"docs":" Taproot Schnorr signing key.\n","sig":null,"attributes":[{"value":"/ Taproot Schnorr signing key.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/sign.rs","byte_start":166632,"byte_end":166664,"line_start":17,"line_end":17,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1519},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/sign.rs","byte_start":166913,"byte_end":166919,"line_start":29,"line_end":29,"column_start":12,"column_end":18},"name":"random","qualname":"<SigningKey>::random","value":"fn random<impl CryptoRng + RngCore>(impl CryptoRng + RngCore) -> Self where\nimpl CryptoRng + RngCore: CryptoRng + RngCore","parent":null,"children":[],"decl_id":null,"docs":" Generate a cryptographically random [`SigningKey`].\n","sig":null,"attributes":[{"value":"/ Generate a cryptographically random [`SigningKey`].","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/sign.rs","byte_start":166846,"byte_end":166901,"line_start":28,"line_end":28,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1521},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/sign.rs","byte_start":167137,"byte_end":167147,"line_start":35,"line_end":35,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<SigningKey>::from_bytes","value":"fn from_bytes(&[u8]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parse signing key from big endian-encoded bytes.\n","sig":null,"attributes":[{"value":"/ Parse signing key from big endian-encoded bytes.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/sign.rs","byte_start":167073,"byte_end":167125,"line_start":34,"line_end":34,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1525},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/sign.rs","byte_start":168165,"byte_end":168173,"line_start":64,"line_end":64,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<SigningKey>::to_bytes","value":"fn to_bytes(&Self) -> FieldBytes","parent":null,"children":[],"decl_id":null,"docs":" Serialize as bytes.\n","sig":null,"attributes":[{"value":"/ Serialize as bytes.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/sign.rs","byte_start":168130,"byte_end":168153,"line_start":63,"line_end":63,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1526},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/sign.rs","byte_start":168321,"byte_end":168334,"line_start":69,"line_end":69,"column_start":12,"column_end":25},"name":"verifying_key","qualname":"<SigningKey>::verifying_key","value":"fn verifying_key(&Self) -> &VerifyingKey","parent":null,"children":[],"decl_id":null,"docs":" Get the [`VerifyingKey`] that corresponds to this signing key.\n","sig":null,"attributes":[{"value":"/ Get the [`VerifyingKey`] that corresponds to this signing key.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/sign.rs","byte_start":168243,"byte_end":168309,"line_start":68,"line_end":68,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1527},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/sign.rs","byte_start":168696,"byte_end":168714,"line_start":81,"line_end":81,"column_start":12,"column_end":30},"name":"try_sign_prehashed","qualname":"<SigningKey>::try_sign_prehashed","value":"fn try_sign_prehashed(&Self, &[u8; ], &[u8; ]) -> Result<Signature>","parent":null,"children":[],"decl_id":null,"docs":" Compute Schnorr signature.","sig":null,"attributes":[{"value":"/ Compute Schnorr signature.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/sign.rs","byte_start":168400,"byte_end":168430,"line_start":73,"line_end":73,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/sign.rs","byte_start":168435,"byte_end":168438,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ # ⚠️ Warning","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/sign.rs","byte_start":168443,"byte_end":168463,"line_start":75,"line_end":75,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/sign.rs","byte_start":168468,"byte_end":168471,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ This is a low-level interface intended only for unusual use cases","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/sign.rs","byte_start":168476,"byte_end":168545,"line_start":77,"line_end":77,"column_start":5,"column_end":74}},{"value":"/ involving signing pre-hashed messages.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/sign.rs","byte_start":168550,"byte_end":168592,"line_start":78,"line_end":78,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/sign.rs","byte_start":168597,"byte_end":168600,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ The preferred interfaces are the [`Signer`] or [`RandomizedSigner`] traits.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/sign.rs","byte_start":168605,"byte_end":168684,"line_start":80,"line_end":80,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1533},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/sign.rs","byte_start":170323,"byte_end":170338,"line_start":132,"line_end":132,"column_start":8,"column_end":23},"name":"try_sign_digest","qualname":"<SigningKey as ecdsa::signature::DigestSigner>::try_sign_digest","value":"fn try_sign_digest(&Self, D) -> Result<Signature>","parent":{"krate":42,"index":97},"children":[],"decl_id":{"krate":42,"index":101},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1536},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/sign.rs","byte_start":170597,"byte_end":170621,"line_start":141,"line_end":141,"column_start":8,"column_end":32},"name":"try_sign_digest_with_rng","qualname":"<SigningKey as ecdsa::signature::RandomizedDigestSigner>::try_sign_digest_with_rng","value":"fn try_sign_digest_with_rng<impl CryptoRng + RngCore>(&Self,\nimpl CryptoRng + RngCore, D) -> Result<Signature> where\nimpl CryptoRng + RngCore: CryptoRng + RngCore","parent":{"krate":42,"index":108},"children":[],"decl_id":{"krate":42,"index":113},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1540},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/sign.rs","byte_start":170948,"byte_end":170965,"line_start":153,"line_end":153,"column_start":8,"column_end":25},"name":"try_sign_with_rng","qualname":"<SigningKey as ecdsa::signature::RandomizedSigner>::try_sign_with_rng","value":"fn try_sign_with_rng<impl CryptoRng + RngCore>(&Self,\nimpl CryptoRng + RngCore, &[u8]) -> Result<Signature> where\nimpl CryptoRng + RngCore: CryptoRng + RngCore","parent":{"krate":42,"index":102},"children":[],"decl_id":{"krate":42,"index":106},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1543},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/sign.rs","byte_start":171168,"byte_end":171176,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"try_sign","qualname":"<SigningKey as ecdsa::signature::Signer>::try_sign","value":"fn try_sign(&Self, &[u8]) -> Result<Signature>","parent":{"krate":42,"index":85},"children":[],"decl_id":{"krate":42,"index":88},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2002},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":171787,"byte_end":171799,"line_start":18,"line_end":18,"column_start":12,"column_end":24},"name":"VerifyingKey","qualname":"::schnorr::verify::VerifyingKey","value":"VerifyingKey {  }","parent":null,"children":[{"krate":0,"index":2003}],"decl_id":null,"docs":" Taproot Schnorr verifying key.\n","sig":null,"attributes":[{"value":"/ Taproot Schnorr verifying key.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":171696,"byte_end":171730,"line_start":16,"line_end":16,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1613},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":172148,"byte_end":172164,"line_start":32,"line_end":32,"column_start":12,"column_end":28},"name":"verify_prehashed","qualname":"<VerifyingKey>::verify_prehashed","value":"fn verify_prehashed(&Self, &[u8; ], &Signature) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Verify Schnorr signature.","sig":null,"attributes":[{"value":"/ Verify Schnorr signature.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":171876,"byte_end":171905,"line_start":24,"line_end":24,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":171910,"byte_end":171913,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ # ⚠️ Warning","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":171918,"byte_end":171938,"line_start":26,"line_end":26,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":171943,"byte_end":171946,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ This is a low-level interface intended only for unusual use cases","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":171951,"byte_end":172020,"line_start":28,"line_end":28,"column_start":5,"column_end":74}},{"value":"/ involving verifying pre-hashed messages.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":172025,"byte_end":172069,"line_start":29,"line_end":29,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":172074,"byte_end":172077,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ The preferred interface is the [`Verifier`] trait.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":172082,"byte_end":172136,"line_start":31,"line_end":31,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1615},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":172946,"byte_end":172955,"line_start":59,"line_end":59,"column_start":12,"column_end":21},"name":"as_affine","qualname":"<VerifyingKey>::as_affine","value":"fn as_affine(&Self) -> &AffinePoint","parent":null,"children":[],"decl_id":null,"docs":" Borrow the inner [`AffinePoint`] this type wraps.\n","sig":null,"attributes":[{"value":"/ Borrow the inner [`AffinePoint`] this type wraps.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":172881,"byte_end":172934,"line_start":58,"line_end":58,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1616},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":173058,"byte_end":173066,"line_start":64,"line_end":64,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<VerifyingKey>::to_bytes","value":"fn to_bytes(&Self) -> FieldBytes","parent":null,"children":[],"decl_id":null,"docs":" Serialize as bytes.\n","sig":null,"attributes":[{"value":"/ Serialize as bytes.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":173023,"byte_end":173046,"line_start":63,"line_end":63,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1617},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":173212,"byte_end":173222,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<VerifyingKey>::from_bytes","value":"fn from_bytes(&[u8]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parse verifying key from big endian-encoded x-coordinate.\n","sig":null,"attributes":[{"value":"/ Parse verifying key from big endian-encoded x-coordinate.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":173139,"byte_end":173200,"line_start":68,"line_end":68,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1621},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":173662,"byte_end":173675,"line_start":82,"line_end":82,"column_start":8,"column_end":21},"name":"verify_digest","qualname":"<VerifyingKey as ecdsa::signature::DigestVerifier>::verify_digest","value":"fn verify_digest(&Self, D, &Signature) -> Result<()>","parent":{"krate":42,"index":129},"children":[],"decl_id":{"krate":42,"index":132},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1623},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":173867,"byte_end":173873,"line_start":88,"line_end":88,"column_start":8,"column_end":14},"name":"verify","qualname":"<VerifyingKey as ecdsa::signature::Verifier>::verify","value":"fn verify(&Self, &[u8], &Signature) -> Result<()>","parent":{"krate":42,"index":126},"children":[],"decl_id":{"krate":42,"index":128},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1625},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":174058,"byte_end":174062,"line_start":94,"line_end":94,"column_start":8,"column_end":12},"name":"from","qualname":"<AffinePoint as core::convert::From>::from","value":"fn from(VerifyingKey) -> AffinePoint","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1627},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":174181,"byte_end":174185,"line_start":100,"line_end":100,"column_start":8,"column_end":12},"name":"from","qualname":"<AffinePoint as core::convert::From>::from","value":"fn from(&VerifyingKey) -> AffinePoint","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1629},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":174302,"byte_end":174306,"line_start":106,"line_end":106,"column_start":8,"column_end":12},"name":"from","qualname":"<PublicKey as core::convert::From>::from","value":"fn from(VerifyingKey) -> PublicKey","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1631},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":174414,"byte_end":174418,"line_start":112,"line_end":112,"column_start":8,"column_end":12},"name":"from","qualname":"<PublicKey as core::convert::From>::from","value":"fn from(&VerifyingKey) -> PublicKey","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1634},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":174554,"byte_end":174562,"line_start":120,"line_end":120,"column_start":8,"column_end":16},"name":"try_from","qualname":"<VerifyingKey as core::convert::TryFrom>::try_from","value":"fn try_from(PublicKey) -> Result<VerifyingKey>","parent":{"krate":1,"index":3063},"children":[],"decl_id":{"krate":1,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1637},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":174864,"byte_end":174872,"line_start":132,"line_end":132,"column_start":8,"column_end":16},"name":"try_from","qualname":"<VerifyingKey as core::convert::TryFrom>::try_from","value":"fn try_from(&PublicKey) -> Result<VerifyingKey>","parent":{"krate":1,"index":3063},"children":[],"decl_id":{"krate":1,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2016},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":152560,"byte_end":152569,"line_start":84,"line_end":84,"column_start":12,"column_end":21},"name":"Signature","qualname":"::schnorr::Signature","value":"Signature {  }","parent":null,"children":[{"krate":0,"index":2017},{"krate":0,"index":2019},{"krate":0,"index":2020}],"decl_id":null,"docs":" Taproot Schnorr signature as defined in [BIP340].","sig":null,"attributes":[{"value":"/ Taproot Schnorr signature as defined in [BIP340].","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":152391,"byte_end":152444,"line_start":80,"line_end":80,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":152445,"byte_end":152448,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ [BIP340]: https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":152449,"byte_end":152525,"line_start":82,"line_end":82,"column_start":1,"column_end":77}}]},{"kind":"Const","id":{"krate":0,"index":1680},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":152760,"byte_end":152769,"line_start":94,"line_end":94,"column_start":15,"column_end":24},"name":"BYTE_SIZE","qualname":"::schnorr::Signature::BYTE_SIZE","value":"usize","parent":{"krate":0,"index":1679},"children":[],"decl_id":null,"docs":" Size of a Taproot Schnorr signature in bytes.\n","sig":null,"attributes":[{"value":"/ Size of a Taproot Schnorr signature in bytes.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":152696,"byte_end":152745,"line_start":93,"line_end":93,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1681},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":152845,"byte_end":152853,"line_start":97,"line_end":97,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Signature>::as_bytes","value":"fn as_bytes(&Self) -> &[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Borrow the serialized signature as bytes.\n","sig":null,"attributes":[{"value":"/ Borrow the serialized signature as bytes.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":152788,"byte_end":152833,"line_start":96,"line_end":96,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1687},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":153328,"byte_end":153334,"line_start":118,"line_end":118,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Signature as core::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &[u8]","parent":{"krate":1,"index":3047},"children":[],"decl_id":{"krate":1,"index":3049},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1690},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":153450,"byte_end":153452,"line_start":126,"line_end":126,"column_start":8,"column_end":10},"name":"eq","qualname":"<Signature as core::cmp::PartialEq>::eq","value":"fn eq(&Self, &Self) -> bool","parent":{"krate":1,"index":2802},"children":[],"decl_id":{"krate":1,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1692},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":153566,"byte_end":153577,"line_start":132,"line_end":132,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<Signature as core::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &Self) -> Option<cmp::Ordering>","parent":{"krate":1,"index":2848},"children":[],"decl_id":{"krate":1,"index":2850},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1694},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":153726,"byte_end":153729,"line_start":139,"line_end":139,"column_start":8,"column_end":11},"name":"cmp","qualname":"<Signature as core::cmp::Ord>::cmp","value":"fn cmp(&Self, &Self) -> cmp::Ordering","parent":{"krate":1,"index":2838},"children":[],"decl_id":{"krate":1,"index":2839},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1697},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":153884,"byte_end":153892,"line_start":147,"line_end":147,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Signature as core::convert::TryFrom>::try_from","value":"fn try_from(&[u8]) -> Result<Signature>","parent":{"krate":1,"index":3063},"children":[],"decl_id":{"krate":1,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1702},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":154519,"byte_end":154522,"line_start":166,"line_end":166,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Signature as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9902},"children":[],"decl_id":{"krate":1,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1704},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":154659,"byte_end":154669,"line_start":172,"line_end":172,"column_start":8,"column_end":18},"name":"from_bytes","qualname":"<Signature as ecdsa::signature::Signature>::from_bytes","value":"fn from_bytes(&[u8]) -> Result<Self>","parent":{"krate":42,"index":62},"children":[],"decl_id":{"krate":42,"index":63},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2025},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":2282,"byte_end":2291,"line_start":75,"line_end":75,"column_start":12,"column_end":21},"name":"Secp256k1","qualname":"::Secp256k1","value":"","parent":null,"children":[],"decl_id":null,"docs":" secp256k1 (K-256) elliptic curve.","sig":null,"attributes":[{"value":"/ secp256k1 (K-256) elliptic curve.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":1770,"byte_end":1807,"line_start":63,"line_end":63,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":1808,"byte_end":1811,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Specified in Certicom's SECG in \"SEC 2: Recommended Elliptic Curve Domain Parameters\":","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":1812,"byte_end":1902,"line_start":65,"line_end":65,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":1903,"byte_end":1906,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ <https://www.secg.org/sec2-v2.pdf>","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":1907,"byte_end":1945,"line_start":67,"line_end":67,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":1946,"byte_end":1949,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ The curve's equation is `y² = x³ + 7` over a ~256-bit prime field.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":1950,"byte_end":2022,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":2023,"byte_end":2026,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ It's primarily notable for usage in Bitcoin and other cryptocurrencies,","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":2027,"byte_end":2102,"line_start":71,"line_end":71,"column_start":1,"column_end":76}},{"value":"/ particularly in conjunction with the Elliptic Curve Digital Signature","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":2103,"byte_end":2176,"line_start":72,"line_end":72,"column_start":1,"column_end":74}},{"value":"/ Algorithm (ECDSA).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":2177,"byte_end":2199,"line_start":73,"line_end":73,"column_start":1,"column_end":23}}]},{"kind":"Const","id":{"krate":0,"index":1741},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":2420,"byte_end":2425,"line_start":82,"line_end":82,"column_start":11,"column_end":16},"name":"ORDER","qualname":"::<Secp256k1 as elliptic_curve::Curve>::ORDER","value":"U256","parent":{"krate":0,"index":1739},"children":[],"decl_id":null,"docs":" Curve order\n","sig":null,"attributes":[{"value":"/ Curve order","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":2394,"byte_end":2409,"line_start":81,"line_end":81,"column_start":5,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":1744},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":2609,"byte_end":2624,"line_start":89,"line_end":89,"column_start":11,"column_end":26},"name":"COMPRESS_POINTS","qualname":"::<Secp256k1 as elliptic_curve::PointCompression>::COMPRESS_POINTS","value":"bool","parent":{"krate":0,"index":1743},"children":[],"decl_id":null,"docs":" secp256k1 points are typically compressed.\n","sig":null,"attributes":[{"value":"/ secp256k1 points are typically compressed.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":2552,"byte_end":2598,"line_start":88,"line_end":88,"column_start":5,"column_end":51}}]},{"kind":"Const","id":{"krate":0,"index":1746},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":2888,"byte_end":2891,"line_start":100,"line_end":100,"column_start":11,"column_end":14},"name":"OID","qualname":"::<Secp256k1 as elliptic_curve::pkcs8::AssociatedOid>::OID","value":"pkcs8::ObjectIdentifier","parent":{"krate":0,"index":1745},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1747},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":3043,"byte_end":3058,"line_start":104,"line_end":104,"column_start":10,"column_end":25},"name":"CompressedPoint","qualname":"::CompressedPoint","value":"GenericArray<u8, U33>","parent":null,"children":[],"decl_id":null,"docs":" Compressed SEC1-encoded secp256k1 (K-256) curve point.\n","sig":null,"attributes":[{"value":"/ Compressed SEC1-encoded secp256k1 (K-256) curve point.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":2975,"byte_end":3033,"line_start":103,"line_end":103,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":1748},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":3238,"byte_end":3248,"line_start":109,"line_end":109,"column_start":10,"column_end":20},"name":"FieldBytes","qualname":"::FieldBytes","value":"elliptic_curve::FieldBytes<Secp256k1>","parent":null,"children":[],"decl_id":null,"docs":" secp256k1 (K-256) field element serialized as bytes.","sig":null,"attributes":[{"value":"/ secp256k1 (K-256) field element serialized as bytes.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":3085,"byte_end":3141,"line_start":106,"line_end":106,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":3142,"byte_end":3145,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ Byte array containing a serialized field element value (base field or scalar).","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":3146,"byte_end":3228,"line_start":108,"line_end":108,"column_start":1,"column_end":83}}]},{"kind":"Type","id":{"krate":0,"index":1749},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":3348,"byte_end":3360,"line_start":112,"line_end":112,"column_start":10,"column_end":22},"name":"EncodedPoint","qualname":"::EncodedPoint","value":"elliptic_curve::sec1::EncodedPoint<Secp256k1>","parent":null,"children":[],"decl_id":null,"docs":" SEC1-encoded secp256k1 (K-256) curve point.\n","sig":null,"attributes":[{"value":"/ SEC1-encoded secp256k1 (K-256) curve point.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":3291,"byte_end":3338,"line_start":111,"line_end":111,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":1750},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":3504,"byte_end":3517,"line_start":116,"line_end":116,"column_start":10,"column_end":23},"name":"NonZeroScalar","qualname":"::NonZeroScalar","value":"elliptic_curve::NonZeroScalar<Secp256k1>","parent":null,"children":[],"decl_id":null,"docs":" Non-zero secp256k1 (K-256) scalar field element.\n","sig":null,"attributes":[{"value":"/ Non-zero secp256k1 (K-256) scalar field element.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":3411,"byte_end":3463,"line_start":114,"line_end":114,"column_start":1,"column_end":53}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":3464,"byte_end":3494,"line_start":115,"line_end":115,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":1751},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":3637,"byte_end":3646,"line_start":120,"line_end":120,"column_start":10,"column_end":19},"name":"PublicKey","qualname":"::PublicKey","value":"elliptic_curve::PublicKey<Secp256k1>","parent":null,"children":[],"decl_id":null,"docs":" secp256k1 (K-256) public key.\n","sig":null,"attributes":[{"value":"/ secp256k1 (K-256) public key.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":3563,"byte_end":3596,"line_start":118,"line_end":118,"column_start":1,"column_end":34}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":3597,"byte_end":3627,"line_start":119,"line_end":119,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":1752},"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":3731,"byte_end":3740,"line_start":123,"line_end":123,"column_start":10,"column_end":19},"name":"SecretKey","qualname":"::SecretKey","value":"elliptic_curve::SecretKey<Secp256k1>","parent":null,"children":[],"decl_id":null,"docs":" secp256k1 (K-256) secret key.\n","sig":null,"attributes":[{"value":"/ secp256k1 (K-256) secret key.","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":3688,"byte_end":3721,"line_start":122,"line_end":122,"column_start":1,"column_end":34}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":5889,"byte_end":5898,"line_start":16,"line_end":16,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":6966,"byte_end":6977,"line_start":53,"line_end":53,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":8068,"byte_end":8079,"line_start":82,"line_end":82,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":8289,"byte_end":8300,"line_start":89,"line_end":89,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":8885,"byte_end":8896,"line_start":114,"line_end":114,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":8999,"byte_end":9010,"line_start":120,"line_end":120,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":9389,"byte_end":9400,"line_start":130,"line_end":130,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":9657,"byte_end":9668,"line_start":138,"line_end":138,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":9755,"byte_end":9766,"line_start":144,"line_end":144,"column_start":26,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":9790,"byte_end":9801,"line_start":146,"line_end":146,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":9906,"byte_end":9917,"line_start":152,"line_end":152,"column_start":13,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":9943,"byte_end":9954,"line_start":154,"line_end":154,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":10123,"byte_end":10134,"line_start":162,"line_end":162,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":10295,"byte_end":10306,"line_start":170,"line_end":170,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":10563,"byte_end":10574,"line_start":182,"line_end":182,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":11395,"byte_end":11406,"line_start":205,"line_end":205,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":11551,"byte_end":11562,"line_start":211,"line_end":211,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":141},{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":12614,"byte_end":12625,"line_start":239,"line_end":239,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":13907,"byte_end":13918,"line_start":270,"line_end":270,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":14314,"byte_end":14325,"line_start":284,"line_end":284,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":14494,"byte_end":14505,"line_start":292,"line_end":292,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":14706,"byte_end":14718,"line_start":300,"line_end":300,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":14857,"byte_end":14869,"line_start":306,"line_end":306,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":15008,"byte_end":15019,"line_start":312,"line_end":312,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":15141,"byte_end":15152,"line_start":318,"line_end":318,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":15286,"byte_end":15295,"line_start":324,"line_end":324,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":15474,"byte_end":15483,"line_start":332,"line_end":332,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field/field_5x52.rs","byte_start":14934264,"byte_end":14934280,"line_start":18,"line_end":18,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1784},{"krate":0,"index":1785},{"krate":0,"index":1786},{"krate":0,"index":1788},{"krate":0,"index":1789},{"krate":0,"index":1790},{"krate":0,"index":1791},{"krate":0,"index":1792},{"krate":0,"index":1793},{"krate":0,"index":1794},{"krate":0,"index":1795},{"krate":0,"index":1796},{"krate":0,"index":1797},{"krate":0,"index":1798},{"krate":0,"index":1799},{"krate":0,"index":1800},{"krate":0,"index":1801},{"krate":0,"index":1802},{"krate":0,"index":1803},{"krate":0,"index":1804}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field/field_5x52.rs","byte_start":14950694,"byte_end":14950710,"line_start":455,"line_end":455,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1806}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field/field_5x52.rs","byte_start":14950803,"byte_end":14950819,"line_start":461,"line_end":461,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1808}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field/field_5x52.rs","byte_start":14951347,"byte_end":14951363,"line_start":477,"line_end":477,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1810}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field/field_5x52.rs","byte_start":14951647,"byte_end":14951663,"line_start":487,"line_end":487,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1812}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field/field_impl.rs","byte_start":14954085,"byte_end":14954101,"line_start":24,"line_end":24,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1848},{"krate":0,"index":1849},{"krate":0,"index":1850},{"krate":0,"index":1851},{"krate":0,"index":1852},{"krate":0,"index":1853},{"krate":0,"index":1855},{"krate":0,"index":1857},{"krate":0,"index":1858},{"krate":0,"index":1859},{"krate":0,"index":1860},{"krate":0,"index":1861},{"krate":0,"index":1862},{"krate":0,"index":1863},{"krate":0,"index":1864},{"krate":0,"index":1865},{"krate":0,"index":1866},{"krate":0,"index":1867}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field/field_impl.rs","byte_start":14957267,"byte_end":14957283,"line_start":129,"line_end":129,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1869}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field/field_impl.rs","byte_start":14957376,"byte_end":14957392,"line_start":135,"line_end":135,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1871}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field/field_impl.rs","byte_start":14958085,"byte_end":14958101,"line_start":153,"line_end":153,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1873}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field/field_impl.rs","byte_start":14958401,"byte_end":14958417,"line_start":162,"line_end":162,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1875}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":20063,"byte_end":20075,"line_start":50,"line_end":50,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":20743,"byte_end":20755,"line_start":89,"line_end":89,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":27398,"byte_end":27410,"line_start":279,"line_end":279,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":27593,"byte_end":27605,"line_start":285,"line_end":285,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":27713,"byte_end":27725,"line_start":291,"line_end":291,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":27810,"byte_end":27822,"line_start":297,"line_end":297,"column_start":26,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":27839,"byte_end":27851,"line_start":299,"line_end":299,"column_start":13,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":27875,"byte_end":27887,"line_start":301,"line_end":301,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":28007,"byte_end":28019,"line_start":307,"line_end":307,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":28193,"byte_end":28205,"line_start":315,"line_end":315,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":265},{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":28573,"byte_end":28585,"line_start":331,"line_end":331,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":28715,"byte_end":28727,"line_start":337,"line_end":337,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":28850,"byte_end":28862,"line_start":343,"line_end":343,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":275},{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":29013,"byte_end":29025,"line_start":351,"line_end":351,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":29182,"byte_end":29194,"line_start":359,"line_end":359,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":29324,"byte_end":29336,"line_start":365,"line_end":365,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":29460,"byte_end":29472,"line_start":371,"line_end":371,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":29646,"byte_end":29658,"line_start":379,"line_end":379,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":30026,"byte_end":30038,"line_start":395,"line_end":395,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":30164,"byte_end":30176,"line_start":401,"line_end":401,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":30281,"byte_end":30293,"line_start":407,"line_end":407,"column_start":14,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/mul.rs","byte_start":42981,"byte_end":42992,"line_start":83,"line_end":83,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/mul.rs","byte_start":43192,"byte_end":43203,"line_start":93,"line_end":93,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/mul.rs","byte_start":45858,"byte_end":45878,"line_start":161,"line_end":161,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/mul.rs","byte_start":46925,"byte_end":46945,"line_start":192,"line_end":192,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/mul.rs","byte_start":50189,"byte_end":50204,"line_start":305,"line_end":305,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/mul.rs","byte_start":50424,"byte_end":50439,"line_start":316,"line_end":316,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/mul.rs","byte_start":50754,"byte_end":50769,"line_start":332,"line_end":332,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/mul.rs","byte_start":50924,"byte_end":50939,"line_start":340,"line_end":340,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/mul.rs","byte_start":51056,"byte_end":51071,"line_start":346,"line_end":346,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":52705,"byte_end":52714,"line_start":32,"line_end":32,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":52794,"byte_end":52803,"line_start":36,"line_end":36,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":53094,"byte_end":53109,"line_start":49,"line_end":49,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":59275,"byte_end":59290,"line_start":229,"line_end":229,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":59578,"byte_end":59593,"line_start":240,"line_end":240,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":59698,"byte_end":59709,"line_start":246,"line_end":246,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":59824,"byte_end":59835,"line_start":252,"line_end":252,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":59956,"byte_end":59971,"line_start":258,"line_end":258,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":60152,"byte_end":60167,"line_start":264,"line_end":264,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":60329,"byte_end":60344,"line_start":270,"line_end":270,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":60695,"byte_end":60710,"line_start":280,"line_end":280,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":60838,"byte_end":60853,"line_start":286,"line_end":286,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":60951,"byte_end":60966,"line_start":292,"line_end":292,"column_start":13,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":60986,"byte_end":61001,"line_start":294,"line_end":294,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":61441,"byte_end":61456,"line_start":319,"line_end":319,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":61909,"byte_end":61924,"line_start":336,"line_end":336,"column_start":21,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":61944,"byte_end":61959,"line_start":338,"line_end":338,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":568},{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":62109,"byte_end":62124,"line_start":346,"line_end":346,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":62178,"byte_end":62193,"line_start":350,"line_end":350,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":62280,"byte_end":62295,"line_start":356,"line_end":356,"column_start":26,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":62530,"byte_end":62545,"line_start":366,"line_end":366,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":579},{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":62730,"byte_end":62745,"line_start":374,"line_end":374,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":582},{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":62935,"byte_end":62950,"line_start":382,"line_end":382,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":63102,"byte_end":63117,"line_start":388,"line_end":388,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":63258,"byte_end":63273,"line_start":394,"line_end":394,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":589},{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":63654,"byte_end":63669,"line_start":410,"line_end":410,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":63857,"byte_end":63872,"line_start":418,"line_end":418,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":64022,"byte_end":64037,"line_start":424,"line_end":424,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":64167,"byte_end":64182,"line_start":430,"line_end":430,"column_start":14,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":64347,"byte_end":64362,"line_start":436,"line_end":436,"column_start":39,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":64503,"byte_end":64518,"line_start":442,"line_end":442,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":610},{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":64903,"byte_end":64918,"line_start":458,"line_end":458,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":65108,"byte_end":65123,"line_start":466,"line_end":466,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":65275,"byte_end":65290,"line_start":472,"line_end":472,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":65431,"byte_end":65446,"line_start":478,"line_end":478,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":623},{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":65827,"byte_end":65842,"line_start":494,"line_end":494,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":629},{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":66030,"byte_end":66045,"line_start":502,"line_end":502,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":66195,"byte_end":66210,"line_start":508,"line_end":508,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":66340,"byte_end":66355,"line_start":514,"line_end":514,"column_start":14,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":636},{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":66659,"byte_end":66674,"line_start":530,"line_end":530,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":66813,"byte_end":66828,"line_start":536,"line_end":536,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":66976,"byte_end":66985,"line_start":542,"line_end":542,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":647},{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":67164,"byte_end":67173,"line_start":550,"line_end":550,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":650},{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar/wide64.rs","byte_start":100225,"byte_end":100235,"line_start":16,"line_end":16,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":685},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":73127,"byte_end":73136,"line_start":34,"line_end":34,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":813}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":75120,"byte_end":75126,"line_start":80,"line_end":80,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":832},{"krate":0,"index":834},{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":79710,"byte_end":79716,"line_start":225,"line_end":225,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":838},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":82175,"byte_end":82181,"line_start":304,"line_end":304,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":83626,"byte_end":83632,"line_start":360,"line_end":360,"column_start":26,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":83656,"byte_end":83662,"line_start":362,"line_end":362,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":83752,"byte_end":83758,"line_start":368,"line_end":368,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":83860,"byte_end":83866,"line_start":374,"line_end":374,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":862}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":84005,"byte_end":84011,"line_start":380,"line_end":380,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":84135,"byte_end":84145,"line_start":386,"line_end":386,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":866}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":84280,"byte_end":84290,"line_start":392,"line_end":392,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":84428,"byte_end":84434,"line_start":398,"line_end":398,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":870}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":84538,"byte_end":84544,"line_start":404,"line_end":404,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":872},{"krate":0,"index":873}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":84834,"byte_end":84840,"line_start":420,"line_end":420,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":85007,"byte_end":85013,"line_start":426,"line_end":426,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":880}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":85123,"byte_end":85129,"line_start":432,"line_end":432,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":85227,"byte_end":85233,"line_start":438,"line_end":438,"column_start":13,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":85251,"byte_end":85257,"line_start":440,"line_end":440,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":885},{"krate":0,"index":886}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":85478,"byte_end":85484,"line_start":456,"line_end":456,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":891},{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":85915,"byte_end":85921,"line_start":480,"line_end":480,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":900},{"krate":0,"index":901}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":86066,"byte_end":86072,"line_start":488,"line_end":488,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":86197,"byte_end":86203,"line_start":494,"line_end":494,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":905}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":86321,"byte_end":86327,"line_start":500,"line_end":500,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":907},{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":86613,"byte_end":86619,"line_start":516,"line_end":516,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":913},{"krate":0,"index":914}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":86764,"byte_end":86770,"line_start":524,"line_end":524,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":916}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":86895,"byte_end":86901,"line_start":530,"line_end":530,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":918}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":87019,"byte_end":87025,"line_start":536,"line_end":536,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":920},{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":87311,"byte_end":87317,"line_start":552,"line_end":552,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":926},{"krate":0,"index":927}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":87462,"byte_end":87468,"line_start":560,"line_end":560,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":929}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":87593,"byte_end":87599,"line_start":566,"line_end":566,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":931}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":87718,"byte_end":87724,"line_start":572,"line_end":572,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":933}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":88000,"byte_end":88006,"line_start":580,"line_end":580,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":935}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":88122,"byte_end":88128,"line_start":586,"line_end":586,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":937}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":88524,"byte_end":88530,"line_start":595,"line_end":595,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":88853,"byte_end":88863,"line_start":609,"line_end":609,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":88962,"byte_end":88972,"line_start":615,"line_end":615,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":89071,"byte_end":89075,"line_start":621,"line_end":621,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":89165,"byte_end":89169,"line_start":627,"line_end":627,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":948}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":120023,"byte_end":120032,"line_start":80,"line_end":80,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1040},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":125205,"byte_end":125214,"line_start":213,"line_end":213,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":125322,"byte_end":125331,"line_start":219,"line_end":219,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1055}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":125414,"byte_end":125423,"line_start":225,"line_end":225,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1057}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":125598,"byte_end":125607,"line_start":231,"line_end":231,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1059},{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":125968,"byte_end":125977,"line_start":245,"line_end":245,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1062}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":126158,"byte_end":126167,"line_start":252,"line_end":252,"column_start":50,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1064}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":126857,"byte_end":126859,"line_start":270,"line_end":270,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":1066},{"krate":0,"index":1067}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":127176,"byte_end":127178,"line_start":285,"line_end":285,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1069},{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":127415,"byte_end":127417,"line_start":299,"line_end":299,"column_start":42,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1074},{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":127710,"byte_end":127720,"line_start":313,"line_end":313,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1077}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":132482,"byte_end":132492,"line_start":44,"line_end":44,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1202},{"krate":0,"index":1204},{"krate":0,"index":1207},{"krate":0,"index":1208}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":133452,"byte_end":133462,"line_start":75,"line_end":75,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1211}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":133749,"byte_end":133759,"line_start":86,"line_end":86,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1214}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":134062,"byte_end":134072,"line_start":96,"line_end":96,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1218}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":134356,"byte_end":134366,"line_start":106,"line_end":106,"column_start":53,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1221}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":134996,"byte_end":135006,"line_start":124,"line_end":124,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1224}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":135385,"byte_end":135395,"line_start":138,"line_end":138,"column_start":63,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":1228}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":136163,"byte_end":136169,"line_start":163,"line_end":163,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1231}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":137733,"byte_end":137743,"line_start":207,"line_end":207,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1234}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":137855,"byte_end":137865,"line_start":213,"line_end":213,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1236}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":138013,"byte_end":138023,"line_start":219,"line_end":219,"column_start":13,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":138047,"byte_end":138057,"line_start":221,"line_end":221,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1239}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":138174,"byte_end":138184,"line_start":227,"line_end":227,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1241}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":138305,"byte_end":138315,"line_start":233,"line_end":233,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1243}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":138481,"byte_end":138490,"line_start":241,"line_end":241,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1245}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":138614,"byte_end":138623,"line_start":247,"line_end":247,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1247}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":138747,"byte_end":138759,"line_start":253,"line_end":253,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1249}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":138889,"byte_end":138901,"line_start":259,"line_end":259,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1251}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":139034,"byte_end":139044,"line_start":265,"line_end":265,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1253}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":139197,"byte_end":139207,"line_start":273,"line_end":273,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1255}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":139346,"byte_end":139356,"line_start":281,"line_end":281,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1257}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":139542,"byte_end":139552,"line_start":289,"line_end":289,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1259},{"krate":0,"index":1260}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":139845,"byte_end":139855,"line_start":299,"line_end":299,"column_start":27,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":141789,"byte_end":141801,"line_start":51,"line_end":51,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1349},{"krate":0,"index":1351},{"krate":0,"index":1353}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":142686,"byte_end":142698,"line_start":72,"line_end":72,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1356}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":142964,"byte_end":142976,"line_start":82,"line_end":82,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1359}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":143232,"byte_end":143244,"line_start":91,"line_end":91,"column_start":55,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1362}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":143527,"byte_end":143538,"line_start":101,"line_end":101,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1364}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":144394,"byte_end":144406,"line_start":133,"line_end":133,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1366}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":144560,"byte_end":144572,"line_start":141,"line_end":141,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1368}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":144706,"byte_end":144715,"line_start":147,"line_end":147,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1370}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":144847,"byte_end":144856,"line_start":153,"line_end":153,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1372}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":145011,"byte_end":145023,"line_start":159,"line_end":159,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1374}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":145213,"byte_end":145225,"line_start":167,"line_end":167,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1376}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":145377,"byte_end":145389,"line_start":173,"line_end":173,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1378}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":145542,"byte_end":145554,"line_start":179,"line_end":179,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1380},{"krate":0,"index":1381}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":145849,"byte_end":145861,"line_start":191,"line_end":191,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1384},{"krate":0,"index":1385}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":146053,"byte_end":146065,"line_start":199,"line_end":199,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1387},{"krate":0,"index":1388}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":146249,"byte_end":146264,"line_start":207,"line_end":207,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1390}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":146419,"byte_end":146434,"line_start":213,"line_end":213,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1392}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":146595,"byte_end":146607,"line_start":219,"line_end":219,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1394},{"krate":0,"index":1395}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":146796,"byte_end":146808,"line_start":227,"line_end":227,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1397},{"krate":0,"index":1398}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":147088,"byte_end":147100,"line_start":237,"line_end":237,"column_start":51,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1400},{"krate":0,"index":1401}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":147406,"byte_end":147418,"line_start":247,"line_end":247,"column_start":26,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":113943,"byte_end":113952,"line_start":94,"line_end":94,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1427}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/sign.rs","byte_start":166829,"byte_end":166839,"line_start":27,"line_end":27,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1519},{"krate":0,"index":1521},{"krate":0,"index":1523},{"krate":0,"index":1525},{"krate":0,"index":1526},{"krate":0,"index":1527}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/sign.rs","byte_start":170250,"byte_end":170260,"line_start":128,"line_end":128,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1533}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/sign.rs","byte_start":170524,"byte_end":170534,"line_start":137,"line_end":137,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1536}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/sign.rs","byte_start":170928,"byte_end":170938,"line_start":152,"line_end":152,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1540}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/sign.rs","byte_start":171148,"byte_end":171158,"line_start":158,"line_end":158,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1543}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":171857,"byte_end":171869,"line_start":23,"line_end":23,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1613},{"krate":0,"index":1615},{"krate":0,"index":1616},{"krate":0,"index":1617}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":173587,"byte_end":173599,"line_start":78,"line_end":78,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1621}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":173845,"byte_end":173857,"line_start":87,"line_end":87,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1623}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":174037,"byte_end":174048,"line_start":93,"line_end":93,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1625}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":174160,"byte_end":174171,"line_start":99,"line_end":99,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1627}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":174283,"byte_end":174292,"line_start":105,"line_end":105,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1629}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":174395,"byte_end":174404,"line_start":111,"line_end":111,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1631}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":174507,"byte_end":174519,"line_start":117,"line_end":117,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1633},{"krate":0,"index":1634}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":174817,"byte_end":174829,"line_start":129,"line_end":129,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1636},{"krate":0,"index":1637}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":152680,"byte_end":152689,"line_start":92,"line_end":92,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1680},{"krate":0,"index":1681},{"krate":0,"index":1683},{"krate":0,"index":1684},{"krate":0,"index":1685}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":153309,"byte_end":153318,"line_start":117,"line_end":117,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1687}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":153398,"byte_end":153407,"line_start":123,"line_end":123,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":153431,"byte_end":153440,"line_start":125,"line_end":125,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1690}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":153547,"byte_end":153556,"line_start":131,"line_end":131,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1692}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":153707,"byte_end":153716,"line_start":138,"line_end":138,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1694}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":153840,"byte_end":153849,"line_start":144,"line_end":144,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1696},{"krate":0,"index":1697}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":154500,"byte_end":154509,"line_start":165,"line_end":165,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1702}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":154640,"byte_end":154649,"line_start":171,"line_end":171,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1704}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":154773,"byte_end":154782,"line_start":177,"line_end":177,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1706}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":2325,"byte_end":2334,"line_start":77,"line_end":77,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1740},{"krate":0,"index":1741}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":2480,"byte_end":2489,"line_start":85,"line_end":85,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":2536,"byte_end":2545,"line_start":87,"line_end":87,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1744}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":2866,"byte_end":2875,"line_start":99,"line_end":99,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1746}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":893,"byte_end":898,"line_start":31,"line_end":31,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":962}},{"kind":"Mod","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":113258,"byte_end":113269,"line_start":67,"line_end":67,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":963}},{"kind":"Mod","span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":988,"byte_end":995,"line_start":35,"line_end":35,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1428}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":5889,"byte_end":5898,"line_start":16,"line_end":16,"column_start":27,"column_end":36},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":2025},"to":{"krate":4,"index":820}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":6966,"byte_end":6977,"line_start":53,"line_end":53,"column_start":6,"column_end":17},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1753},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":8068,"byte_end":8079,"line_start":82,"line_end":82,"column_start":6,"column_end":17},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1753},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":8289,"byte_end":8300,"line_start":89,"line_end":89,"column_start":27,"column_end":38},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1753},"to":{"krate":30,"index":136}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":8885,"byte_end":8896,"line_start":114,"line_end":114,"column_start":39,"column_end":50},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1753},"to":{"krate":4,"index":185}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":8999,"byte_end":9010,"line_start":120,"line_end":120,"column_start":34,"column_end":45},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1753},"to":{"krate":24,"index":66}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":9389,"byte_end":9400,"line_start":130,"line_end":130,"column_start":25,"column_end":36},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1753},"to":{"krate":24,"index":58}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":9657,"byte_end":9668,"line_start":138,"line_end":138,"column_start":18,"column_end":29},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1753},"to":{"krate":1,"index":3128}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":9755,"byte_end":9766,"line_start":144,"line_end":144,"column_start":26,"column_end":37},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1753},"to":{"krate":29,"index":99}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":9790,"byte_end":9801,"line_start":146,"line_end":146,"column_start":20,"column_end":31},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1753},"to":{"krate":1,"index":2802}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":9906,"byte_end":9917,"line_start":152,"line_end":152,"column_start":13,"column_end":24},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1753},"to":{"krate":1,"index":2807}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":9943,"byte_end":9954,"line_start":154,"line_end":154,"column_start":22,"column_end":33},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1753},"to":{"krate":1,"index":3228}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":10123,"byte_end":10134,"line_start":162,"line_end":162,"column_start":23,"column_end":34},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1753},"to":{"krate":1,"index":3228}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":10295,"byte_end":10306,"line_start":170,"line_end":170,"column_start":14,"column_end":25},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1753},"to":{"krate":1,"index":3245}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":10563,"byte_end":10574,"line_start":182,"line_end":182,"column_start":37,"column_end":48},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1753},"to":{"krate":4,"index":188}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":11395,"byte_end":11406,"line_start":205,"line_end":205,"column_start":36,"column_end":47},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1753},"to":{"krate":4,"index":191}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":11551,"byte_end":11562,"line_start":211,"line_end":211,"column_start":24,"column_end":35},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1753},"to":{"krate":30,"index":189}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":12614,"byte_end":12625,"line_start":239,"line_end":239,"column_start":38,"column_end":49},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1753},"to":{"krate":4,"index":120}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":13907,"byte_end":13918,"line_start":270,"line_end":270,"column_start":36,"column_end":47},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1753},"to":{"krate":4,"index":123}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":14314,"byte_end":14325,"line_start":284,"line_end":284,"column_start":32,"column_end":43},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1753},"to":{"krate":1,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":14494,"byte_end":14505,"line_start":292,"line_end":292,"column_start":33,"column_end":44},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1753},"to":{"krate":1,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":14706,"byte_end":14718,"line_start":300,"line_end":300,"column_start":28,"column_end":40},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1749},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":14857,"byte_end":14869,"line_start":306,"line_end":306,"column_start":29,"column_end":41},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1749},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":15008,"byte_end":15019,"line_start":312,"line_end":312,"column_start":26,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1753},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":15141,"byte_end":15152,"line_start":318,"line_end":318,"column_start":27,"column_end":38},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1753},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":15286,"byte_end":15295,"line_start":324,"line_end":324,"column_start":31,"column_end":40},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1751},"to":{"krate":1,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/affine.rs","byte_start":15474,"byte_end":15483,"line_start":332,"line_end":332,"column_start":32,"column_end":41},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1751},"to":{"krate":1,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field/field_5x52.rs","byte_start":14934264,"byte_end":14934280,"line_start":18,"line_end":18,"column_start":6,"column_end":22},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field/field_5x52.rs","byte_start":14950694,"byte_end":14950710,"line_start":455,"line_end":455,"column_start":18,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1813},"to":{"krate":1,"index":3128}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field/field_5x52.rs","byte_start":14950803,"byte_end":14950819,"line_start":461,"line_end":461,"column_start":34,"column_end":50},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1813},"to":{"krate":24,"index":66}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field/field_5x52.rs","byte_start":14951347,"byte_end":14951363,"line_start":477,"line_end":477,"column_start":25,"column_end":41},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1813},"to":{"krate":24,"index":58}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field/field_5x52.rs","byte_start":14951647,"byte_end":14951663,"line_start":487,"line_end":487,"column_start":18,"column_end":34},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1813},"to":{"krate":29,"index":96}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field/field_impl.rs","byte_start":14954085,"byte_end":14954101,"line_start":24,"line_end":24,"column_start":6,"column_end":22},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1879},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field/field_impl.rs","byte_start":14957267,"byte_end":14957283,"line_start":129,"line_end":129,"column_start":18,"column_end":34},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1879},"to":{"krate":1,"index":3128}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field/field_impl.rs","byte_start":14957376,"byte_end":14957392,"line_start":135,"line_end":135,"column_start":34,"column_end":50},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1879},"to":{"krate":24,"index":66}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field/field_impl.rs","byte_start":14958085,"byte_end":14958101,"line_start":153,"line_end":153,"column_start":25,"column_end":41},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1879},"to":{"krate":24,"index":58}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field/field_impl.rs","byte_start":14958401,"byte_end":14958417,"line_start":162,"line_end":162,"column_start":18,"column_end":34},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1879},"to":{"krate":29,"index":96}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":20063,"byte_end":20075,"line_start":50,"line_end":50,"column_start":16,"column_end":28},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1888},"to":{"krate":31,"index":62}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":20743,"byte_end":20755,"line_start":89,"line_end":89,"column_start":6,"column_end":18},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1888},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":27398,"byte_end":27410,"line_start":279,"line_end":279,"column_start":34,"column_end":46},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1888},"to":{"krate":24,"index":66}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":27593,"byte_end":27605,"line_start":285,"line_end":285,"column_start":25,"column_end":37},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1888},"to":{"krate":24,"index":58}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":27713,"byte_end":27725,"line_start":291,"line_end":291,"column_start":18,"column_end":30},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1888},"to":{"krate":1,"index":3128}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":27810,"byte_end":27822,"line_start":297,"line_end":297,"column_start":26,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1888},"to":{"krate":29,"index":99}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":27839,"byte_end":27851,"line_start":299,"line_end":299,"column_start":13,"column_end":25},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1888},"to":{"krate":1,"index":2807}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":27875,"byte_end":27887,"line_start":301,"line_end":301,"column_start":20,"column_end":32},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1888},"to":{"krate":1,"index":2802}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":28007,"byte_end":28019,"line_start":307,"line_end":307,"column_start":28,"column_end":40},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1888},"to":{"krate":1,"index":3218}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":28193,"byte_end":28205,"line_start":315,"line_end":315,"column_start":29,"column_end":41},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1888},"to":{"krate":1,"index":3218}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":28573,"byte_end":28585,"line_start":331,"line_end":331,"column_start":34,"column_end":46},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1888},"to":{"krate":1,"index":3249}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":28715,"byte_end":28727,"line_start":337,"line_end":337,"column_start":35,"column_end":47},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1888},"to":{"krate":1,"index":3249}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":28850,"byte_end":28862,"line_start":343,"line_end":343,"column_start":28,"column_end":40},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1888},"to":{"krate":1,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":29013,"byte_end":29025,"line_start":351,"line_end":351,"column_start":29,"column_end":41},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1888},"to":{"krate":1,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":29182,"byte_end":29194,"line_start":359,"line_end":359,"column_start":34,"column_end":46},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1888},"to":{"krate":1,"index":3253}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":29324,"byte_end":29336,"line_start":365,"line_end":365,"column_start":35,"column_end":47},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1888},"to":{"krate":1,"index":3253}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":29460,"byte_end":29472,"line_start":371,"line_end":371,"column_start":28,"column_end":40},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1888},"to":{"krate":1,"index":3228}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":29646,"byte_end":29658,"line_start":379,"line_end":379,"column_start":29,"column_end":41},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1888},"to":{"krate":1,"index":3228}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":30026,"byte_end":30038,"line_start":395,"line_end":395,"column_start":34,"column_end":46},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1888},"to":{"krate":1,"index":3257}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":30164,"byte_end":30176,"line_start":401,"line_end":401,"column_start":35,"column_end":47},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1888},"to":{"krate":1,"index":3257}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/field.rs","byte_start":30281,"byte_end":30293,"line_start":407,"line_end":407,"column_start":14,"column_end":26},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1888},"to":{"krate":1,"index":3245}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/mul.rs","byte_start":42981,"byte_end":42992,"line_start":83,"line_end":83,"column_start":33,"column_end":44},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1896},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/mul.rs","byte_start":43192,"byte_end":43203,"line_start":93,"line_end":93,"column_start":6,"column_end":17},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1896},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/mul.rs","byte_start":45858,"byte_end":45878,"line_start":161,"line_end":161,"column_start":6,"column_end":26},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1906},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/mul.rs","byte_start":46925,"byte_end":46945,"line_start":192,"line_end":192,"column_start":18,"column_end":38},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1906},"to":{"krate":1,"index":3128}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/mul.rs","byte_start":50189,"byte_end":50204,"line_start":305,"line_end":305,"column_start":28,"column_end":43},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1915},"to":{"krate":4,"index":56}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/mul.rs","byte_start":50424,"byte_end":50439,"line_start":316,"line_end":316,"column_start":22,"column_end":37},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1915},"to":{"krate":1,"index":3228}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/mul.rs","byte_start":50754,"byte_end":50769,"line_start":332,"line_end":332,"column_start":23,"column_end":38},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1915},"to":{"krate":1,"index":3228}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/mul.rs","byte_start":50924,"byte_end":50939,"line_start":340,"line_end":340,"column_start":28,"column_end":43},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1915},"to":{"krate":1,"index":3257}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/mul.rs","byte_start":51056,"byte_end":51071,"line_start":346,"line_end":346,"column_start":29,"column_end":44},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1915},"to":{"krate":1,"index":3257}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":52705,"byte_end":52714,"line_start":32,"line_end":32,"column_start":31,"column_end":40},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":2025},"to":{"krate":4,"index":824}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":52794,"byte_end":52803,"line_start":36,"line_end":36,"column_start":31,"column_end":40},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":2025},"to":{"krate":4,"index":822}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":53094,"byte_end":53109,"line_start":49,"line_end":49,"column_start":6,"column_end":21},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1915},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":59275,"byte_end":59290,"line_start":229,"line_end":229,"column_start":28,"column_end":43},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1915},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":59578,"byte_end":59593,"line_start":240,"line_end":240,"column_start":29,"column_end":44},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1915},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":59698,"byte_end":59709,"line_start":246,"line_end":246,"column_start":32,"column_end":43},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1753},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":59824,"byte_end":59835,"line_start":252,"line_end":252,"column_start":33,"column_end":44},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1753},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":59956,"byte_end":59971,"line_start":258,"line_end":258,"column_start":38,"column_end":53},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1915},"to":{"krate":4,"index":120}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":60152,"byte_end":60167,"line_start":264,"line_end":264,"column_start":36,"column_end":51},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1915},"to":{"krate":4,"index":123}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":60329,"byte_end":60344,"line_start":270,"line_end":270,"column_start":34,"column_end":49},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1915},"to":{"krate":24,"index":66}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":60695,"byte_end":60710,"line_start":280,"line_end":280,"column_start":25,"column_end":40},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1915},"to":{"krate":24,"index":58}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":60838,"byte_end":60853,"line_start":286,"line_end":286,"column_start":20,"column_end":35},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1915},"to":{"krate":1,"index":2802}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":60951,"byte_end":60966,"line_start":292,"line_end":292,"column_start":13,"column_end":28},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1915},"to":{"krate":1,"index":2807}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":60986,"byte_end":61001,"line_start":294,"line_end":294,"column_start":16,"column_end":31},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1915},"to":{"krate":30,"index":176}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":61441,"byte_end":61456,"line_start":319,"line_end":319,"column_start":24,"column_end":39},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1915},"to":{"krate":30,"index":189}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":61909,"byte_end":61924,"line_start":336,"line_end":336,"column_start":21,"column_end":36},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1915},"to":{"krate":30,"index":132}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":61944,"byte_end":61959,"line_start":338,"line_end":338,"column_start":16,"column_end":31},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1915},"to":{"krate":30,"index":185}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":62109,"byte_end":62124,"line_start":346,"line_end":346,"column_start":21,"column_end":36},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1915},"to":{"krate":30,"index":133}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":62178,"byte_end":62193,"line_start":350,"line_end":350,"column_start":18,"column_end":33},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1915},"to":{"krate":1,"index":3128}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":62280,"byte_end":62295,"line_start":356,"line_end":356,"column_start":26,"column_end":41},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1915},"to":{"krate":29,"index":99}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":62530,"byte_end":62545,"line_start":366,"line_end":366,"column_start":31,"column_end":46},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1915},"to":{"krate":1,"index":3218}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":62730,"byte_end":62745,"line_start":374,"line_end":374,"column_start":32,"column_end":47},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1915},"to":{"krate":1,"index":3218}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":62935,"byte_end":62950,"line_start":382,"line_end":382,"column_start":37,"column_end":52},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1915},"to":{"krate":1,"index":3249}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":63102,"byte_end":63117,"line_start":388,"line_end":388,"column_start":38,"column_end":53},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1915},"to":{"krate":1,"index":3249}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":63258,"byte_end":63273,"line_start":394,"line_end":394,"column_start":27,"column_end":42},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1915},"to":{"krate":1,"index":3218}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":63654,"byte_end":63669,"line_start":410,"line_end":410,"column_start":28,"column_end":43},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1915},"to":{"krate":1,"index":3218}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":63857,"byte_end":63872,"line_start":418,"line_end":418,"column_start":33,"column_end":48},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1915},"to":{"krate":1,"index":3249}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":64022,"byte_end":64037,"line_start":424,"line_end":424,"column_start":34,"column_end":49},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1915},"to":{"krate":1,"index":3249}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":64167,"byte_end":64182,"line_start":430,"line_end":430,"column_start":14,"column_end":29},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1915},"to":{"krate":1,"index":7950}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":64347,"byte_end":64362,"line_start":436,"line_end":436,"column_start":39,"column_end":54},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1915},"to":{"krate":1,"index":7950}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":64503,"byte_end":64518,"line_start":442,"line_end":442,"column_start":31,"column_end":46},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1915},"to":{"krate":1,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":64903,"byte_end":64918,"line_start":458,"line_end":458,"column_start":32,"column_end":47},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1915},"to":{"krate":1,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":65108,"byte_end":65123,"line_start":466,"line_end":466,"column_start":37,"column_end":52},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1915},"to":{"krate":1,"index":3253}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":65275,"byte_end":65290,"line_start":472,"line_end":472,"column_start":38,"column_end":53},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1915},"to":{"krate":1,"index":3253}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":65431,"byte_end":65446,"line_start":478,"line_end":478,"column_start":27,"column_end":42},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1915},"to":{"krate":1,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":65827,"byte_end":65842,"line_start":494,"line_end":494,"column_start":28,"column_end":43},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1915},"to":{"krate":1,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":66030,"byte_end":66045,"line_start":502,"line_end":502,"column_start":33,"column_end":48},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1915},"to":{"krate":1,"index":3253}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":66195,"byte_end":66210,"line_start":508,"line_end":508,"column_start":34,"column_end":49},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1915},"to":{"krate":1,"index":3253}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":66340,"byte_end":66355,"line_start":514,"line_end":514,"column_start":14,"column_end":29},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1915},"to":{"krate":1,"index":3245}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":66659,"byte_end":66674,"line_start":530,"line_end":530,"column_start":26,"column_end":41},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1915},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":66813,"byte_end":66828,"line_start":536,"line_end":536,"column_start":27,"column_end":42},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1915},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":66976,"byte_end":66985,"line_start":542,"line_end":542,"column_start":35,"column_end":44},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1751},"to":{"krate":1,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/projective.rs","byte_start":67164,"byte_end":67173,"line_start":550,"line_end":550,"column_start":36,"column_end":45},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1751},"to":{"krate":1,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar/wide64.rs","byte_start":100225,"byte_end":100235,"line_start":16,"line_end":16,"column_start":6,"column_end":16},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":73127,"byte_end":73136,"line_start":34,"line_end":34,"column_start":27,"column_end":36},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2025},"to":{"krate":4,"index":826}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":75120,"byte_end":75126,"line_start":80,"line_end":80,"column_start":6,"column_end":12},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1934},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":79710,"byte_end":79716,"line_start":225,"line_end":225,"column_start":16,"column_end":22},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1934},"to":{"krate":31,"index":62}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":82175,"byte_end":82181,"line_start":304,"line_end":304,"column_start":21,"column_end":27},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1934},"to":{"krate":31,"index":82}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":83626,"byte_end":83632,"line_start":360,"line_end":360,"column_start":26,"column_end":32},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1934},"to":{"krate":29,"index":99}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":83656,"byte_end":83662,"line_start":362,"line_end":362,"column_start":20,"column_end":26},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1934},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":83752,"byte_end":83758,"line_start":368,"line_end":368,"column_start":20,"column_end":26},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1934},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":83860,"byte_end":83866,"line_start":374,"line_end":374,"column_start":38,"column_end":44},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1934},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":84005,"byte_end":84011,"line_start":380,"line_end":380,"column_start":39,"column_end":45},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1934},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":84135,"byte_end":84145,"line_start":386,"line_end":386,"column_start":23,"column_end":33},"kind":{"Impl":{"id":120}},"from":{"krate":4,"index":1077},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":84280,"byte_end":84290,"line_start":392,"line_end":392,"column_start":24,"column_end":34},"kind":{"Impl":{"id":121}},"from":{"krate":4,"index":1077},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":84428,"byte_end":84434,"line_start":398,"line_end":398,"column_start":17,"column_end":23},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1934},"to":{"krate":4,"index":602}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":84538,"byte_end":84544,"line_start":404,"line_end":404,"column_start":21,"column_end":27},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1934},"to":{"krate":1,"index":3298}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":84834,"byte_end":84840,"line_start":420,"line_end":420,"column_start":34,"column_end":40},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1934},"to":{"krate":24,"index":66}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":85007,"byte_end":85013,"line_start":426,"line_end":426,"column_start":25,"column_end":31},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1934},"to":{"krate":24,"index":58}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":85123,"byte_end":85129,"line_start":432,"line_end":432,"column_start":20,"column_end":26},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1934},"to":{"krate":1,"index":2802}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":85227,"byte_end":85233,"line_start":438,"line_end":438,"column_start":13,"column_end":19},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1934},"to":{"krate":1,"index":2807}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":85251,"byte_end":85257,"line_start":440,"line_end":440,"column_start":14,"column_end":20},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1934},"to":{"krate":1,"index":3245}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":85478,"byte_end":85484,"line_start":456,"line_end":456,"column_start":22,"column_end":28},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1934},"to":{"krate":1,"index":3218}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":85915,"byte_end":85921,"line_start":480,"line_end":480,"column_start":23,"column_end":29},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1934},"to":{"krate":1,"index":3218}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":86066,"byte_end":86072,"line_start":488,"line_end":488,"column_start":28,"column_end":34},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1934},"to":{"krate":1,"index":3249}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":86197,"byte_end":86203,"line_start":494,"line_end":494,"column_start":29,"column_end":35},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1934},"to":{"krate":1,"index":3249}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":86321,"byte_end":86327,"line_start":500,"line_end":500,"column_start":22,"column_end":28},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1934},"to":{"krate":1,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":86613,"byte_end":86619,"line_start":516,"line_end":516,"column_start":23,"column_end":29},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1934},"to":{"krate":1,"index":3223}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":86764,"byte_end":86770,"line_start":524,"line_end":524,"column_start":28,"column_end":34},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1934},"to":{"krate":1,"index":3253}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":86895,"byte_end":86901,"line_start":530,"line_end":530,"column_start":29,"column_end":35},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1934},"to":{"krate":1,"index":3253}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":87019,"byte_end":87025,"line_start":536,"line_end":536,"column_start":22,"column_end":28},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1934},"to":{"krate":1,"index":3228}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":87311,"byte_end":87317,"line_start":552,"line_end":552,"column_start":23,"column_end":29},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1934},"to":{"krate":1,"index":3228}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":87462,"byte_end":87468,"line_start":560,"line_end":560,"column_start":28,"column_end":34},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1934},"to":{"krate":1,"index":3257}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":87593,"byte_end":87599,"line_start":566,"line_end":566,"column_start":29,"column_end":35},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1934},"to":{"krate":1,"index":3257}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":87718,"byte_end":87724,"line_start":572,"line_end":572,"column_start":23,"column_end":29},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1934},"to":{"krate":4,"index":58}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":88000,"byte_end":88006,"line_start":580,"line_end":580,"column_start":23,"column_end":29},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1934},"to":{"krate":4,"index":58}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":88122,"byte_end":88128,"line_start":586,"line_end":586,"column_start":30,"column_end":36},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1934},"to":{"krate":4,"index":67}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":88524,"byte_end":88530,"line_start":595,"line_end":595,"column_start":30,"column_end":36},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1934},"to":{"krate":4,"index":67}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":88853,"byte_end":88863,"line_start":609,"line_end":609,"column_start":23,"column_end":33},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1748},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":88962,"byte_end":88972,"line_start":615,"line_end":615,"column_start":24,"column_end":34},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1748},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":89071,"byte_end":89075,"line_start":621,"line_end":621,"column_start":23,"column_end":27},"kind":{"Impl":{"id":147}},"from":{"krate":21,"index":2448},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/arithmetic/scalar.rs","byte_start":89165,"byte_end":89169,"line_start":627,"line_end":627,"column_start":24,"column_end":28},"kind":{"Impl":{"id":148}},"from":{"krate":21,"index":2448},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":120023,"byte_end":120032,"line_start":80,"line_end":80,"column_start":6,"column_end":15},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1952},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":125205,"byte_end":125214,"line_start":213,"line_end":213,"column_start":43,"column_end":52},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1952},"to":{"krate":42,"index":62}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":125322,"byte_end":125331,"line_start":219,"line_end":219,"column_start":22,"column_end":31},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1952},"to":{"krate":1,"index":3047}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":125414,"byte_end":125423,"line_start":225,"line_end":225,"column_start":16,"column_end":25},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1952},"to":{"krate":1,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":125598,"byte_end":125607,"line_start":231,"line_end":231,"column_start":25,"column_end":34},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1952},"to":{"krate":1,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":125968,"byte_end":125977,"line_start":245,"line_end":245,"column_start":33,"column_end":42},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1424},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":126158,"byte_end":126167,"line_start":252,"line_end":252,"column_start":50,"column_end":59},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1952},"to":{"krate":42,"index":65}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":126857,"byte_end":126859,"line_start":270,"line_end":270,"column_start":6,"column_end":8},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1967},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":127176,"byte_end":127178,"line_start":285,"line_end":285,"column_start":22,"column_end":24},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1967},"to":{"krate":1,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":127415,"byte_end":127417,"line_start":299,"line_end":299,"column_start":42,"column_end":44},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1967},"to":{"krate":1,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/recoverable.rs","byte_start":127710,"byte_end":127720,"line_start":313,"line_end":313,"column_start":31,"column_end":41},"kind":{"Impl":{"id":160}},"from":{"krate":41,"index":727},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":132482,"byte_end":132492,"line_start":44,"line_end":44,"column_start":6,"column_end":16},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1975},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":133452,"byte_end":133462,"line_start":75,"line_end":75,"column_start":34,"column_end":44},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1975},"to":{"krate":42,"index":85}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":133749,"byte_end":133759,"line_start":86,"line_end":86,"column_start":33,"column_end":43},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1975},"to":{"krate":42,"index":102}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":134062,"byte_end":134072,"line_start":96,"line_end":96,"column_start":40,"column_end":50},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1975},"to":{"krate":42,"index":97}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":134356,"byte_end":134366,"line_start":106,"line_end":106,"column_start":53,"column_end":63},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1975},"to":{"krate":42,"index":97}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":134996,"byte_end":135006,"line_start":124,"line_end":124,"column_start":50,"column_end":60},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":1975},"to":{"krate":42,"index":108}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":135385,"byte_end":135395,"line_start":138,"line_end":138,"column_start":63,"column_end":73},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1975},"to":{"krate":42,"index":108}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":136163,"byte_end":136169,"line_start":163,"line_end":163,"column_start":35,"column_end":41},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":1934},"to":{"krate":41,"index":221}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":137733,"byte_end":137743,"line_start":207,"line_end":207,"column_start":25,"column_end":35},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":1975},"to":{"krate":24,"index":58}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":137855,"byte_end":137865,"line_start":213,"line_end":213,"column_start":16,"column_end":26},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":1975},"to":{"krate":1,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":138013,"byte_end":138023,"line_start":219,"line_end":219,"column_start":13,"column_end":23},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":1975},"to":{"krate":1,"index":2807}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":138047,"byte_end":138057,"line_start":221,"line_end":221,"column_start":20,"column_end":30},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":1975},"to":{"krate":1,"index":2802}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":138174,"byte_end":138184,"line_start":227,"line_end":227,"column_start":26,"column_end":36},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":1975},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":138305,"byte_end":138315,"line_start":233,"line_end":233,"column_start":27,"column_end":37},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":1975},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":138481,"byte_end":138490,"line_start":241,"line_end":241,"column_start":27,"column_end":36},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":1752},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":138614,"byte_end":138623,"line_start":247,"line_end":247,"column_start":28,"column_end":37},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":1752},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":138747,"byte_end":138759,"line_start":253,"line_end":253,"column_start":27,"column_end":39},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":1979},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":138889,"byte_end":138901,"line_start":259,"line_end":259,"column_start":28,"column_end":40},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":1979},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":139034,"byte_end":139044,"line_start":265,"line_end":265,"column_start":30,"column_end":40},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":1975},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":139197,"byte_end":139207,"line_start":273,"line_end":273,"column_start":31,"column_end":41},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":1975},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":139346,"byte_end":139356,"line_start":281,"line_end":281,"column_start":15,"column_end":25},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":1975},"to":{"krate":1,"index":3393}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":139542,"byte_end":139552,"line_start":289,"line_end":289,"column_start":45,"column_end":55},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":1975},"to":{"krate":1,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/sign.rs","byte_start":139845,"byte_end":139855,"line_start":299,"line_end":299,"column_start":27,"column_end":37},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":1975},"to":{"krate":39,"index":124}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":141789,"byte_end":141801,"line_start":51,"line_end":51,"column_start":6,"column_end":18},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":1979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":142686,"byte_end":142698,"line_start":72,"line_end":72,"column_start":36,"column_end":48},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":1979},"to":{"krate":42,"index":126}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":142964,"byte_end":142976,"line_start":82,"line_end":82,"column_start":42,"column_end":54},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":1979},"to":{"krate":42,"index":129}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":143232,"byte_end":143244,"line_start":91,"line_end":91,"column_start":55,"column_end":67},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":1979},"to":{"krate":42,"index":129}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":143527,"byte_end":143538,"line_start":101,"line_end":101,"column_start":37,"column_end":48},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":1753},"to":{"krate":41,"index":231}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":144394,"byte_end":144406,"line_start":133,"line_end":133,"column_start":26,"column_end":38},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":1979},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":144560,"byte_end":144572,"line_start":141,"line_end":141,"column_start":27,"column_end":39},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":1979},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":144706,"byte_end":144715,"line_start":147,"line_end":147,"column_start":29,"column_end":38},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":1751},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":144847,"byte_end":144856,"line_start":153,"line_end":153,"column_start":30,"column_end":39},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":1751},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":145011,"byte_end":145023,"line_start":159,"line_end":159,"column_start":52,"column_end":64},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":1979},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":145213,"byte_end":145225,"line_start":167,"line_end":167,"column_start":30,"column_end":42},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":1749},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":145377,"byte_end":145389,"line_start":173,"line_end":173,"column_start":36,"column_end":48},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":1979},"to":{"krate":4,"index":123}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":145542,"byte_end":145554,"line_start":179,"line_end":179,"column_start":31,"column_end":43},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":1979},"to":{"krate":1,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":145849,"byte_end":145861,"line_start":191,"line_end":191,"column_start":32,"column_end":44},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":1979},"to":{"krate":1,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":146053,"byte_end":146065,"line_start":199,"line_end":199,"column_start":33,"column_end":45},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":1979},"to":{"krate":1,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":146249,"byte_end":146264,"line_start":207,"line_end":207,"column_start":29,"column_end":44},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":1915},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":146419,"byte_end":146434,"line_start":213,"line_end":213,"column_start":30,"column_end":45},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":1915},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":146595,"byte_end":146607,"line_start":219,"line_end":219,"column_start":35,"column_end":47},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":1979},"to":{"krate":1,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":146796,"byte_end":146808,"line_start":227,"line_end":227,"column_start":36,"column_end":48},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":1979},"to":{"krate":1,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":147088,"byte_end":147100,"line_start":237,"line_end":237,"column_start":51,"column_end":63},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":1979},"to":{"krate":1,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa/verify.rs","byte_start":147406,"byte_end":147418,"line_start":247,"line_end":247,"column_start":26,"column_end":38},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":1979},"to":{"krate":40,"index":170}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/ecdsa.rs","byte_start":113943,"byte_end":113952,"line_start":94,"line_end":94,"column_start":46,"column_end":55},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":2025},"to":{"krate":41,"index":236}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/sign.rs","byte_start":166829,"byte_end":166839,"line_start":27,"line_end":27,"column_start":6,"column_end":16},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":1997},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/sign.rs","byte_start":170250,"byte_end":170260,"line_start":128,"line_end":128,"column_start":40,"column_end":50},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":1997},"to":{"krate":42,"index":97}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/sign.rs","byte_start":170524,"byte_end":170534,"line_start":137,"line_end":137,"column_start":50,"column_end":60},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":1997},"to":{"krate":42,"index":108}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/sign.rs","byte_start":170928,"byte_end":170938,"line_start":152,"line_end":152,"column_start":38,"column_end":48},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":1997},"to":{"krate":42,"index":102}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/sign.rs","byte_start":171148,"byte_end":171158,"line_start":158,"line_end":158,"column_start":28,"column_end":38},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":1997},"to":{"krate":42,"index":85}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":171857,"byte_end":171869,"line_start":23,"line_end":23,"column_start":6,"column_end":18},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":2002},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":173587,"byte_end":173599,"line_start":78,"line_end":78,"column_start":42,"column_end":54},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":2002},"to":{"krate":42,"index":129}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":173845,"byte_end":173857,"line_start":87,"line_end":87,"column_start":30,"column_end":42},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":2002},"to":{"krate":42,"index":126}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":174037,"byte_end":174048,"line_start":93,"line_end":93,"column_start":29,"column_end":40},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":1753},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":174160,"byte_end":174171,"line_start":99,"line_end":99,"column_start":30,"column_end":41},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":1753},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":174283,"byte_end":174292,"line_start":105,"line_end":105,"column_start":29,"column_end":38},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":1751},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":174395,"byte_end":174404,"line_start":111,"line_end":111,"column_start":30,"column_end":39},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":1751},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":174507,"byte_end":174519,"line_start":117,"line_end":117,"column_start":29,"column_end":41},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":2002},"to":{"krate":1,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr/verify.rs","byte_start":174817,"byte_end":174829,"line_start":129,"line_end":129,"column_start":30,"column_end":42},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":2002},"to":{"krate":1,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":152680,"byte_end":152689,"line_start":92,"line_end":92,"column_start":6,"column_end":15},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":2016},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":153309,"byte_end":153318,"line_start":117,"line_end":117,"column_start":22,"column_end":31},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":2016},"to":{"krate":1,"index":3047}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":153398,"byte_end":153407,"line_start":123,"line_end":123,"column_start":13,"column_end":22},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":2016},"to":{"krate":1,"index":2807}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":153431,"byte_end":153440,"line_start":125,"line_end":125,"column_start":20,"column_end":29},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":2016},"to":{"krate":1,"index":2802}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":153547,"byte_end":153556,"line_start":131,"line_end":131,"column_start":21,"column_end":30},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":2016},"to":{"krate":1,"index":2848}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":153707,"byte_end":153716,"line_start":138,"line_end":138,"column_start":14,"column_end":23},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":2016},"to":{"krate":1,"index":2838}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":153840,"byte_end":153849,"line_start":144,"line_end":144,"column_start":25,"column_end":34},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":2016},"to":{"krate":1,"index":3063}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":154500,"byte_end":154509,"line_start":165,"line_end":165,"column_start":21,"column_end":30},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":2016},"to":{"krate":1,"index":9902}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":154640,"byte_end":154649,"line_start":171,"line_end":171,"column_start":31,"column_end":40},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":2016},"to":{"krate":42,"index":62}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/schnorr.rs","byte_start":154773,"byte_end":154782,"line_start":177,"line_end":177,"column_start":38,"column_end":47},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":2016},"to":{"krate":42,"index":65}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":2325,"byte_end":2334,"line_start":77,"line_end":77,"column_start":32,"column_end":41},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":2025},"to":{"krate":4,"index":1052}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":2480,"byte_end":2489,"line_start":85,"line_end":85,"column_start":37,"column_end":46},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":2025},"to":{"krate":4,"index":1055}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":2536,"byte_end":2545,"line_start":87,"line_end":87,"column_start":43,"column_end":52},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":2025},"to":{"krate":4,"index":194}},{"span":{"file_name":"/Users/zevkent/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.11.3/src/lib.rs","byte_start":2866,"byte_end":2875,"line_start":99,"line_end":99,"column_start":31,"column_end":40},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":2025},"to":{"krate":38,"index":130}}]}